{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 13.64,
      "Text": "This text was transcribed using whisper model: large-v2\n\n OK, so that was my hometown."
    },
    {
      "Time_Start": 13.64,
      "Time_End": 15.64,
      "Text": " So you guys are welcome."
    },
    {
      "Time_Start": 15.64,
      "Time_End": 17.080000000000002,
      "Text": " If you are around, drop me a note."
    },
    {
      "Time_Start": 17.080000000000002,
      "Time_End": 18.72,
      "Text": " I would love to show you around."
    },
    {
      "Time_Start": 18.72,
      "Time_End": 23.0,
      "Text": " Now, oh, yeah, we have a security conference there."
    },
    {
      "Time_Start": 23.0,
      "Time_End": 28.96,
      "Text": " So actually, the CSPs are just open."
    },
    {
      "Time_Start": 28.96,
      "Time_End": 33.28,
      "Text": " So you could just type C0C0N."
    },
    {
      "Time_Start": 33.28,
      "Time_End": 37.44,
      "Text": " Yeah, so OK, I could give you more info"
    },
    {
      "Time_Start": 37.44,
      "Time_End": 39.96,
      "Text": " if you hit me up later after the talk."
    },
    {
      "Time_Start": 39.96,
      "Time_End": 43.08,
      "Text": " All right, so now let's get started."
    },
    {
      "Time_Start": 43.08,
      "Time_End": 48.0,
      "Text": " All right, my name is Andrew Joseph."
    },
    {
      "Time_Start": 48.0,
      "Time_End": 50.760000000000005,
      "Text": " I am a security engineer at Intel."
    },
    {
      "Time_Start": 50.760000000000005,
      "Time_End": 55.24,
      "Text": " And I have been a speaker and trainer at these conferences."
    },
    {
      "Time_Start": 55.24,
      "Time_End": 58.040000000000006,
      "Text": " My current interests include machine learning, program"
    },
    {
      "Time_Start": 58.12,
      "Time_End": 60.92,
      "Text": " analysis, and mobile security."
    },
    {
      "Time_Start": 60.92,
      "Time_End": 66.56,
      "Text": " So today, we are talking about symbolic execution."
    },
    {
      "Time_Start": 66.56,
      "Time_End": 69.6,
      "Text": " Have any of you tried doing anything"
    },
    {
      "Time_Start": 69.6,
      "Time_End": 71.0,
      "Text": " related to symbolic execution?"
    },
    {
      "Time_Start": 71.0,
      "Time_End": 72.64,
      "Text": " Yeah, I see a hand."
    },
    {
      "Time_Start": 72.64,
      "Time_End": 75.0,
      "Text": " OK, that's it."
    },
    {
      "Time_Start": 75.0,
      "Time_End": 76.0,
      "Text": " Two people."
    },
    {
      "Time_Start": 76.0,
      "Time_End": 80.0,
      "Text": " All right, I'm sure you guys have"
    },
    {
      "Time_Start": 80.0,
      "Time_End": 82.56,
      "Text": " heard about the Cyber Grand Challenge, right?"
    },
    {
      "Time_Start": 82.56,
      "Time_End": 84.88,
      "Text": " More people here, I guess."
    },
    {
      "Time_Start": 84.88,
      "Time_End": 85.64,
      "Text": " Oh, yes."
    },
    {
      "Time_Start": 85.88,
      "Time_End": 90.32,
      "Text": " So it's the world's first all-machine hacking tournament."
    },
    {
      "Time_Start": 90.32,
      "Time_End": 96.88,
      "Text": " So exploitation mainly used to be a manual task,"
    },
    {
      "Time_Start": 96.88,
      "Time_End": 100.72,
      "Text": " like finding a rope chain, exploiting a binary,"
    },
    {
      "Time_Start": 100.72,
      "Time_End": 102.28,
      "Text": " the way you do a CTF."
    },
    {
      "Time_Start": 102.28,
      "Time_End": 105.28,
      "Text": " It's mostly done by humans."
    },
    {
      "Time_Start": 105.28,
      "Time_End": 108.16,
      "Text": " The Cyber Grand Challenge proposed this idea"
    },
    {
      "Time_Start": 108.16,
      "Time_End": 110.16,
      "Text": " of machines doing this."
    },
    {
      "Time_Start": 110.16,
      "Time_End": 112.96000000000001,
      "Text": " And this happened at DEF CON last year."
    },
    {
      "Time_Start": 112.96000000000001,
      "Time_End": 115.68,
      "Text": " I was there, and I was really happy to see that happening."
    },
    {
      "Time_Start": 115.68,
      "Time_End": 120.88000000000001,
      "Text": " And one of the teams in the competition, the SELFISH team,"
    },
    {
      "Time_Start": 120.88000000000001,
      "Time_End": 123.24000000000001,
      "Text": " open-sourced one of their tools."
    },
    {
      "Time_Start": 123.24000000000001,
      "Time_End": 124.84,
      "Text": " It's called ANGER."
    },
    {
      "Time_Start": 124.84,
      "Time_End": 130.96,
      "Text": " And one of the main components of ANGER is symbolic execution."
    },
    {
      "Time_Start": 130.96,
      "Time_End": 133.08,
      "Text": " It's not the only component, but it"
    },
    {
      "Time_Start": 133.08,
      "Time_End": 134.72,
      "Text": " is one of the main components."
    },
    {
      "Time_Start": 134.72,
      "Time_End": 139.36,
      "Text": " And I want to discuss what symbolic execution can"
    },
    {
      "Time_Start": 139.36,
      "Time_End": 142.36,
      "Text": " do in vulnerability research."
    },
    {
      "Time_Start": 142.36,
      "Time_End": 146.48000000000002,
      "Text": " How can it better help us to do good stuff?"
    },
    {
      "Time_Start": 146.48000000000002,
      "Time_End": 147.56,
      "Text": " Find bugs."
    },
    {
      "Time_Start": 147.56,
      "Time_End": 150.64000000000001,
      "Text": " That's what I meant by good stuff."
    },
    {
      "Time_Start": 150.64000000000001,
      "Time_End": 154.96,
      "Text": " So this is a very simple program."
    },
    {
      "Time_Start": 154.96,
      "Time_End": 159.52,
      "Text": " How many of you have used a fuzzer before?"
    },
    {
      "Time_Start": 159.52,
      "Time_End": 162.92000000000002,
      "Text": " How much long do you think a fuzzer would take"
    },
    {
      "Time_Start": 162.92000000000002,
      "Time_End": 165.5,
      "Text": " to hit the vulnerability over there?"
    },
    {
      "Time_Start": 165.5,
      "Time_End": 167.60000000000002,
      "Text": " If this is the code that has been compiled,"
    },
    {
      "Time_Start": 168.12,
      "Time_End": 175.88,
      "Text": " and I'm just fuzzing it, give it average of, I don't know."
    },
    {
      "Time_Start": 175.88,
      "Time_End": 178.64,
      "Text": " Would a fuzzer figure out that the first condition has"
    },
    {
      "Time_Start": 178.64,
      "Time_End": 183.56,
      "Text": " to be 1, 2, 3, 4 for it to bypass the first check"
    },
    {
      "Time_Start": 183.56,
      "Time_End": 187.51999999999998,
      "Text": " and then get to the vulnerable endpoint?"
    },
    {
      "Time_Start": 187.51999999999998,
      "Time_End": 191.0,
      "Text": " So today's softwares are really complex, right?"
    },
    {
      "Time_Start": 191.0,
      "Time_End": 192.6,
      "Text": " We can fuzz all we want."
    },
    {
      "Time_Start": 192.6,
      "Time_End": 196.68,
      "Text": " But if we have a simple check, you"
    },
    {
      "Time_Start": 196.72,
      "Time_End": 199.52,
      "Text": " might not be hitting the right endpoints."
    },
    {
      "Time_Start": 199.52,
      "Time_End": 208.4,
      "Text": " So symbolic execution is a way of solving formulas."
    },
    {
      "Time_Start": 208.4,
      "Time_End": 217.28,
      "Text": " Let me explain it with an example like this."
    },
    {
      "Time_Start": 217.28,
      "Time_End": 222.24,
      "Text": " So let's consider that this is a C program."
    },
    {
      "Time_Start": 222.24,
      "Time_End": 228.28,
      "Text": " And you can see that we are modeling small equations"
    },
    {
      "Time_Start": 228.28,
      "Time_End": 233.20000000000002,
      "Text": " and getting answers towards the end."
    },
    {
      "Time_Start": 233.20000000000002,
      "Time_End": 238.08,
      "Text": " We are not concretely inputting any numbers in there."
    },
    {
      "Time_Start": 238.08,
      "Time_End": 245.8,
      "Text": " So let's look at this section, this particular section."
    },
    {
      "Time_Start": 245.8,
      "Time_End": 252.32000000000002,
      "Text": " So it says if x is greater than 0,"
    },
    {
      "Time_Start": 252.32000000000002,
      "Time_End": 255.48000000000002,
      "Text": " x has been confirmed as a plus y."
    },
    {
      "Time_Start": 255.48000000000002,
      "Time_End": 258.92,
      "Text": " Consider a as a symbolic variable."
    },
    {
      "Time_Start": 258.92,
      "Time_End": 262.2,
      "Text": " And now it adds another constraint,"
    },
    {
      "Time_Start": 262.2,
      "Time_End": 264.44,
      "Text": " which is x should be greater than 0."
    },
    {
      "Time_Start": 264.44,
      "Time_End": 267.8,
      "Text": " So they just say that a plus y is greater than 0."
    },
    {
      "Time_Start": 267.8,
      "Time_End": 269.08000000000004,
      "Text": " And we traverse."
    },
    {
      "Time_Start": 269.08000000000004,
      "Time_End": 270.64,
      "Text": " We traverse all the way."
    },
    {
      "Time_Start": 270.64,
      "Time_End": 277.03999999999996,
      "Text": " And we can explore all the parts of a program this way."
    },
    {
      "Time_Start": 277.03999999999996,
      "Time_End": 279.15999999999997,
      "Text": " Does it make sense?"
    },
    {
      "Time_Start": 279.15999999999997,
      "Time_End": 283.2,
      "Text": " So instead of just randomly fuzzing,"
    },
    {
      "Time_Start": 283.2,
      "Time_End": 287.88,
      "Text": " fuzzing might get you somewhere, like maybe here."
    },
    {
      "Time_Start": 287.88,
      "Time_End": 291.52,
      "Text": " It's just arbitrary where you get while fuzzing."
    },
    {
      "Time_Start": 291.52,
      "Time_End": 294.28,
      "Text": " But with symbolic execution, you can trace"
    },
    {
      "Time_Start": 294.28,
      "Time_End": 297.47999999999996,
      "Text": " all the branches of a program."
    },
    {
      "Time_Start": 297.48,
      "Time_End": 302.72,
      "Text": " So here we can specify which end point we want to reach."
    },
    {
      "Time_Start": 302.72,
      "Time_End": 305.12,
      "Text": " And the symbolic execution engine"
    },
    {
      "Time_Start": 305.12,
      "Time_End": 310.64000000000004,
      "Text": " can craft a formula, something like this, and solve it for us."
    },
    {
      "Time_Start": 310.64000000000004,
      "Time_End": 313.76,
      "Text": " So what does that mean?"
    },
    {
      "Time_Start": 313.76,
      "Time_End": 317.96000000000004,
      "Text": " So we have symbolic execution tools."
    },
    {
      "Time_Start": 317.96000000000004,
      "Time_End": 322.04,
      "Text": " And these rely on something called as SMT solvers."
    },
    {
      "Time_Start": 322.04,
      "Time_End": 328.88,
      "Text": " Z3 is a very famous symbolic execution tool"
    },
    {
      "Time_Start": 328.88,
      "Time_End": 334.96000000000004,
      "Text": " that you could use to solve symbolic equations."
    },
    {
      "Time_Start": 334.96000000000004,
      "Time_End": 338.72,
      "Text": " So let me just show you the demo."
    },
    {
      "Time_Start": 352.04,
      "Time_End": 370.20000000000005,
      "Text": " OK, I didn't realize it was not there."
    },
    {
      "Time_Start": 383.0,
      "Time_End": 396.48,
      "Text": " Is this visible?"
    },
    {
      "Time_Start": 396.48,
      "Time_End": 398.40000000000003,
      "Text": " Yeah, all right."
    },
    {
      "Time_Start": 398.40000000000003,
      "Time_End": 402.8,
      "Text": " So Z3, as I said, is from Microsoft."
    },
    {
      "Time_Start": 402.8,
      "Time_End": 404.0,
      "Text": " It's free."
    },
    {
      "Time_Start": 404.0,
      "Time_End": 407.12,
      "Text": " And it's an SMT solver."
    },
    {
      "Time_Start": 407.12,
      "Time_End": 411.20000000000005,
      "Text": " So what I have written right over here"
    },
    {
      "Time_Start": 411.2,
      "Time_End": 414.56,
      "Text": " is the SMT language."
    },
    {
      "Time_Start": 414.56,
      "Time_End": 415.8,
      "Text": " It's very readable."
    },
    {
      "Time_Start": 415.8,
      "Time_End": 419.08,
      "Text": " And it has Python bindings, of course."
    },
    {
      "Time_Start": 419.08,
      "Time_End": 420.76,
      "Text": " Here you can see that I am trying"
    },
    {
      "Time_Start": 420.76,
      "Time_End": 422.59999999999997,
      "Text": " to solve a simple equation."
    },
    {
      "Time_Start": 422.59999999999997,
      "Time_End": 425.36,
      "Text": " The x plus y has to be greater than 5."
    },
    {
      "Time_Start": 425.36,
      "Time_End": 427.15999999999997,
      "Text": " And x has to be greater than 1."
    },
    {
      "Time_Start": 427.15999999999997,
      "Time_End": 428.88,
      "Text": " And y has to be greater than 1."
    },
    {
      "Time_Start": 428.88,
      "Time_End": 432.64,
      "Text": " So from the earlier diagram, you could get an idea"
    },
    {
      "Time_Start": 432.64,
      "Time_End": 436.32,
      "Text": " that something like this would be"
    },
    {
      "Time_Start": 436.32,
      "Time_End": 440.88,
      "Text": " the result of one of the parts of a program execution,"
    },
    {
      "Time_Start": 440.88,
      "Time_End": 447.04,
      "Text": " like if you consider one part, one part"
    },
    {
      "Time_Start": 447.04,
      "Time_End": 455.84,
      "Text": " would have such a constraint."
    },
    {
      "Time_Start": 455.84,
      "Time_End": 458.2,
      "Text": " And this needs to be solved."
    },
    {
      "Time_Start": 458.2,
      "Time_End": 461.84,
      "Text": " So this is like a problem that should be solved."
    },
    {
      "Time_Start": 461.84,
      "Time_End": 467.68,
      "Text": " And the solution will be your input"
    },
    {
      "Time_Start": 467.68,
      "Time_End": 470.08,
      "Text": " so that you can reach that particular endpoint."
    },
    {
      "Time_Start": 470.08,
      "Time_End": 471.44,
      "Text": " So let's run this."
    },
    {
      "Time_Start": 483.08,
      "Time_End": 486.44,
      "Text": " So they just figured out a solution"
    },
    {
      "Time_Start": 486.44,
      "Time_End": 489.88,
      "Text": " which says y can be 4 and x is equal to 2."
    },
    {
      "Time_Start": 489.88,
      "Time_End": 492.36,
      "Text": " And it works out."
    },
    {
      "Time_Start": 492.36,
      "Time_End": 493.91999999999996,
      "Text": " So this is very simple."
    },
    {
      "Time_Start": 493.91999999999996,
      "Time_End": 496.88,
      "Text": " And it works with toy programs like this."
    },
    {
      "Time_Start": 496.88,
      "Time_End": 499.36,
      "Text": " So how do you implement something"
    },
    {
      "Time_Start": 499.36,
      "Time_End": 502.56,
      "Text": " like this in real world programs?"
    },
    {
      "Time_Start": 502.56,
      "Time_End": 508.48,
      "Text": " So we have mainly two popular symbolic execution frameworks."
    },
    {
      "Time_Start": 508.48,
      "Time_End": 511.2,
      "Text": " One is Anger, of course, from the Shell system."
    },
    {
      "Time_Start": 511.2,
      "Time_End": 513.8,
      "Text": " And then we have Klee."
    },
    {
      "Time_Start": 513.8,
      "Time_End": 517.08,
      "Text": " I personally have done some work with Klee"
    },
    {
      "Time_Start": 517.08,
      "Time_End": 520.12,
      "Text": " because I use it for some of my projects."
    },
    {
      "Time_Start": 520.12,
      "Time_End": 522.68,
      "Text": " So I'll give you some ideas on how"
    },
    {
      "Time_Start": 522.6800000000001,
      "Time_End": 525.36,
      "Text": " to use Klee symbolic virtual machine"
    },
    {
      "Time_Start": 525.36,
      "Time_End": 530.1600000000001,
      "Text": " to find vulnerabilities in functions, simple programs,"
    },
    {
      "Time_Start": 530.1600000000001,
      "Time_End": 536.36,
      "Text": " CTFs, and even world GNU programs."
    },
    {
      "Time_Start": 536.36,
      "Time_End": 538.0400000000001,
      "Text": " So it's going to be a lot of demos."
    },
    {
      "Time_Start": 538.0400000000001,
      "Time_End": 542.2,
      "Text": " And this stage didn't have much love towards demos today."
    },
    {
      "Time_Start": 542.2,
      "Time_End": 545.44,
      "Text": " I'm just going to try it out."
    },
    {
      "Time_Start": 545.44,
      "Time_End": 551.8800000000001,
      "Text": " So OK, so this is a sample program."
    },
    {
      "Time_Start": 556.5600000000001,
      "Time_End": 559.44,
      "Text": " How many possible outputs does this program have?"
    },
    {
      "Time_Start": 565.32,
      "Time_End": 566.72,
      "Text": " Anyone?"
    },
    {
      "Time_Start": 566.72,
      "Time_End": 569.5200000000001,
      "Text": " I mean, it's C. It's the kind of oldest language."
    },
    {
      "Time_Start": 569.5200000000001,
      "Time_End": 572.72,
      "Text": " Can you explain the form?"
    },
    {
      "Time_Start": 572.72,
      "Time_End": 573.5600000000001,
      "Text": " Yeah, sure, please."
    },
    {
      "Time_Start": 576.44,
      "Time_End": 576.9200000000001,
      "Text": " Better?"
    },
    {
      "Time_Start": 580.44,
      "Time_End": 581.24,
      "Text": " Oh, fuck."
    },
    {
      "Time_Start": 581.24,
      "Time_End": 584.0,
      "Text": " It just keeps on fucking."
    },
    {
      "Time_Start": 584.0,
      "Time_End": 584.6800000000001,
      "Text": " That's fucked up."
    },
    {
      "Time_Start": 587.8000000000001,
      "Time_End": 590.44,
      "Text": " What?"
    },
    {
      "Time_Start": 590.44,
      "Time_End": 594.72,
      "Text": " OK, it went out the directory."
    },
    {
      "Time_Start": 594.72,
      "Time_End": 595.2,
      "Text": " Get sign."
    },
    {
      "Time_Start": 600.12,
      "Time_End": 601.12,
      "Text": " Should be good, right?"
    },
    {
      "Time_Start": 606.44,
      "Time_End": 611.0400000000001,
      "Text": " What are the possible outcomes of this program?"
    },
    {
      "Time_Start": 611.0400000000001,
      "Time_End": 613.4000000000001,
      "Text": " How many outputs does this program have, as in?"
    },
    {
      "Time_Start": 617.0400000000001,
      "Time_End": 617.5400000000001,
      "Text": " Sorry?"
    },
    {
      "Time_Start": 622.32,
      "Time_End": 624.0,
      "Text": " So three outputs, right?"
    },
    {
      "Time_Start": 624.0,
      "Time_End": 624.6400000000001,
      "Text": " Yeah."
    },
    {
      "Time_Start": 624.6400000000001,
      "Time_End": 630.8800000000001,
      "Text": " So let's do this the Klee way and see if we can, you know,"
    },
    {
      "Time_Start": 630.8800000000001,
      "Time_End": 634.9200000000001,
      "Text": " let's see how to do it with Klee."
    },
    {
      "Time_Start": 634.92,
      "Time_End": 639.24,
      "Text": " So the first part of doing symbolic execution using Klee"
    },
    {
      "Time_Start": 639.24,
      "Time_End": 644.1999999999999,
      "Text": " is to get the LLVM bit code."
    },
    {
      "Time_Start": 644.1999999999999,
      "Time_End": 647.04,
      "Text": " How many people are familiar with LLVM here?"
    },
    {
      "Time_Start": 647.04,
      "Time_End": 647.7199999999999,
      "Text": " All right."
    },
    {
      "Time_Start": 647.7199999999999,
      "Time_End": 649.56,
      "Text": " So it's a compiler tool chain, and it's"
    },
    {
      "Time_Start": 649.56,
      "Time_End": 652.1999999999999,
      "Text": " pretty good at what it does."
    },
    {
      "Time_Start": 652.1999999999999,
      "Time_End": 655.3199999999999,
      "Text": " It has very security-centric tools"
    },
    {
      "Time_Start": 655.3199999999999,
      "Time_End": 657.3199999999999,
      "Text": " like libfuzzer and all that."
    },
    {
      "Time_Start": 657.3199999999999,
      "Time_End": 659.8,
      "Text": " I suggest you guys explore it."
    },
    {
      "Time_Start": 659.8,
      "Time_End": 661.52,
      "Text": " It's a very good fuzzer."
    },
    {
      "Time_Start": 661.52,
      "Time_End": 663.4399999999999,
      "Text": " And I'm using LLVM."
    },
    {
      "Time_Start": 663.48,
      "Time_End": 667.96,
      "Text": " So the LLVM front end for C compilation is called CLang."
    },
    {
      "Time_Start": 667.96,
      "Time_End": 672.6400000000001,
      "Text": " So I'll use CLang to compile this particular C file"
    },
    {
      "Time_Start": 672.6400000000001,
      "Time_End": 674.24,
      "Text": " and get the bit code."
    },
    {
      "Time_Start": 674.24,
      "Time_End": 677.2,
      "Text": " So this is the bit code file, get sign under .bc."
    },
    {
      "Time_Start": 677.2,
      "Time_End": 683.0400000000001,
      "Text": " So it's LLVM IR bit code."
    },
    {
      "Time_Start": 685.84,
      "Time_End": 686.72,
      "Text": " It's not readable."
    },
    {
      "Time_Start": 686.72,
      "Time_End": 691.1600000000001,
      "Text": " There is a .ll version that is readable if you want to."
    },
    {
      "Time_Start": 691.16,
      "Time_End": 697.0,
      "Text": " And I'll just delete these folders from the last run."
    },
    {
      "Time_Start": 711.76,
      "Time_End": 715.52,
      "Text": " So this is how you would compile the program."
    },
    {
      "Time_Start": 715.52,
      "Time_End": 719.0,
      "Text": " So all this happens inside the Docker container that I have."
    },
    {
      "Time_Start": 719.0,
      "Time_End": 721.0,
      "Text": " So if you guys want to try this out later,"
    },
    {
      "Time_Start": 721.0,
      "Time_End": 723.88,
      "Text": " I can upload the Docker containers somewhere,"
    },
    {
      "Time_Start": 723.88,
      "Time_End": 727.4,
      "Text": " and then you can just have all the examples to yourself."
    },
    {
      "Time_Start": 727.4,
      "Time_End": 729.8,
      "Text": " So you can just do a history on the terminal,"
    },
    {
      "Time_Start": 729.8,
      "Time_End": 732.04,
      "Text": " and you can get all the commands that I have typed in."
    },
    {
      "Time_Start": 737.04,
      "Time_End": 740.04,
      "Text": " So that generates the bit code file."
    },
    {
      "Time_Start": 740.04,
      "Time_End": 748.32,
      "Text": " Now you use CLI to iterate over it."
    },
    {
      "Time_Start": 748.32,
      "Time_End": 755.5600000000001,
      "Text": " And the symbolic execution solver that CLI internally"
    },
    {
      "Time_Start": 755.5600000000001,
      "Time_End": 757.1600000000001,
      "Text": " uses is called STP."
    },
    {
      "Time_Start": 757.1600000000001,
      "Time_End": 760.84,
      "Text": " It's different from Z3, but that's something that CLI uses."
    },
    {
      "Time_Start": 760.84,
      "Time_End": 764.1600000000001,
      "Text": " And we can see that there are 31 instructions that"
    },
    {
      "Time_Start": 764.1600000000001,
      "Time_End": 768.48,
      "Text": " were executed, and the program had three parts."
    },
    {
      "Time_Start": 768.48,
      "Time_End": 771.48,
      "Text": " So it figured that the program has three parts."
    },
    {
      "Time_Start": 771.48,
      "Time_End": 775.0,
      "Text": " And the best part is it generates test cases"
    },
    {
      "Time_Start": 775.0,
      "Time_End": 776.4000000000001,
      "Text": " for those three parts."
    },
    {
      "Time_Start": 779.32,
      "Time_End": 784.32,
      "Text": " So if you see this, these three files"
    },
    {
      "Time_Start": 784.32,
      "Time_End": 786.4000000000001,
      "Text": " are the test cases that it generated"
    },
    {
      "Time_Start": 786.4000000000001,
      "Time_End": 788.88,
      "Text": " for those three parts."
    },
    {
      "Time_Start": 788.88,
      "Time_End": 790.6,
      "Text": " Now let's see what's inside there."
    },
    {
      "Time_Start": 805.0,
      "Time_End": 805.9200000000001,
      "Text": " So that's a zero."
    },
    {
      "Time_Start": 808.32,
      "Time_End": 811.48,
      "Text": " That's a one."
    },
    {
      "Time_Start": 815.6400000000001,
      "Time_End": 816.4000000000001,
      "Text": " What is this?"
    },
    {
      "Time_Start": 821.08,
      "Time_End": 826.32,
      "Text": " Let's just run the program and see what's the exit status."
    },
    {
      "Time_Start": 826.32,
      "Time_End": 826.82,
      "Text": " Status."
    },
    {
      "Time_Start": 836.44,
      "Time_End": 837.32,
      "Text": " So you can specify."
    },
    {
      "Time_Start": 846.2800000000001,
      "Time_End": 852.2,
      "Text": " So the first one is a zero, as we said."
    },
    {
      "Time_Start": 852.2,
      "Time_End": 855.6400000000001,
      "Text": " The second one is a higher number."
    },
    {
      "Time_Start": 857.32,
      "Time_End": 861.12,
      "Text": " The third number is a negative number."
    },
    {
      "Time_Start": 861.12,
      "Time_End": 866.2800000000001,
      "Text": " So it generated test cases for all three possible parts"
    },
    {
      "Time_Start": 866.2800000000001,
      "Time_End": 867.6800000000001,
      "Text": " of that program."
    },
    {
      "Time_Start": 867.6800000000001,
      "Time_End": 872.0,
      "Text": " Now this is a very simple function."
    },
    {
      "Time_Start": 872.0,
      "Time_End": 874.6,
      "Text": " It's not really that scalable, and you"
    },
    {
      "Time_Start": 874.6,
      "Time_End": 876.12,
      "Text": " need the source code for it."
    },
    {
      "Time_Start": 876.12,
      "Time_End": 877.36,
      "Text": " So let's do something better."
    },
    {
      "Time_Start": 881.48,
      "Time_End": 883.6,
      "Text": " If at any point that you have a doubt,"
    },
    {
      "Time_Start": 883.6,
      "Time_End": 885.32,
      "Text": " please feel free to stop me."
    },
    {
      "Time_Start": 887.32,
      "Time_End": 901.0400000000001,
      "Text": " A maze is a much more complex program."
    },
    {
      "Time_Start": 901.0400000000001,
      "Time_End": 902.96,
      "Text": " I'll just show you what it is."
    },
    {
      "Time_Start": 902.96,
      "Time_End": 905.5200000000001,
      "Text": " So this is how the maze program looks like."
    },
    {
      "Time_Start": 905.5200000000001,
      "Time_End": 908.6400000000001,
      "Text": " And you can use the characters W-A-S-D."
    },
    {
      "Time_Start": 908.6400000000001,
      "Time_End": 910.1600000000001,
      "Text": " If you have played Counter-Strike,"
    },
    {
      "Time_Start": 910.1600000000001,
      "Time_End": 912.5600000000001,
      "Text": " you would know all the games, right?"
    },
    {
      "Time_Start": 912.5600000000001,
      "Time_End": 914.5200000000001,
      "Text": " W-A-S-D to move around the maze."
    },
    {
      "Time_Start": 914.56,
      "Time_End": 917.3199999999999,
      "Text": " And you should figure out what is"
    },
    {
      "Time_Start": 917.3199999999999,
      "Time_End": 920.16,
      "Text": " the right combination of the keys"
    },
    {
      "Time_Start": 920.16,
      "Time_End": 923.0,
      "Text": " that you have to use to get to the end point, which"
    },
    {
      "Time_Start": 923.0,
      "Time_End": 924.12,
      "Text": " is a pound sign."
    },
    {
      "Time_Start": 924.12,
      "Time_End": 932.4,
      "Text": " So I would try some random keys and see how it works."
    },
    {
      "Time_Start": 936.3199999999999,
      "Time_End": 939.28,
      "Text": " All right, I went ahead and I got blocked."
    },
    {
      "Time_Start": 939.28,
      "Time_End": 940.88,
      "Text": " So it was a fail."
    },
    {
      "Time_Start": 940.88,
      "Time_End": 945.76,
      "Text": " So can we try to implement KLEE here"
    },
    {
      "Time_Start": 945.76,
      "Time_End": 949.04,
      "Text": " so that it kind of finds the solution for us?"
    },
    {
      "Time_Start": 949.04,
      "Time_End": 952.08,
      "Text": " That's what we are trying to do."
    },
    {
      "Time_Start": 952.08,
      "Time_End": 954.4,
      "Text": " Before that, I'll just show you the source code"
    },
    {
      "Time_Start": 954.4,
      "Time_End": 955.92,
      "Text": " of this program."
    },
    {
      "Time_Start": 960.96,
      "Time_End": 965.44,
      "Text": " So it's a small C program, which just"
    },
    {
      "Time_Start": 965.44,
      "Time_End": 971.1600000000001,
      "Text": " uses read statements to read input from the keyboard"
    },
    {
      "Time_Start": 971.1600000000001,
      "Time_End": 973.2800000000001,
      "Text": " and then just move it accordingly."
    },
    {
      "Time_Start": 973.2800000000001,
      "Time_End": 977.0400000000001,
      "Text": " And this is the maze that's being drawn."
    },
    {
      "Time_Start": 977.04,
      "Time_End": 996.12,
      "Text": " Now, OK, so what's our goal here?"
    },
    {
      "Time_Start": 996.12,
      "Time_End": 998.88,
      "Text": " The goal is to reach the success state."
    },
    {
      "Time_Start": 998.88,
      "Time_End": 1002.64,
      "Text": " How do we tell our symbolic execution program"
    },
    {
      "Time_Start": 1002.64,
      "Time_End": 1007.04,
      "Text": " to figure out a path that can get us there?"
    },
    {
      "Time_Start": 1007.04,
      "Time_End": 1010.8,
      "Text": " So in the code, obviously, we will add something."
    },
    {
      "Time_Start": 1010.8,
      "Time_End": 1014.88,
      "Text": " This is the section where you basically win."
    },
    {
      "Time_Start": 1014.88,
      "Time_End": 1017.24,
      "Text": " So I just add an assert statement."
    },
    {
      "Time_Start": 1017.24,
      "Time_End": 1022.48,
      "Text": " An assert statement just works like regular C,"
    },
    {
      "Time_Start": 1022.48,
      "Time_End": 1023.64,
      "Text": " assert statement."
    },
    {
      "Time_Start": 1023.64,
      "Time_End": 1025.68,
      "Text": " So I added an assert statement here"
    },
    {
      "Time_Start": 1025.68,
      "Time_End": 1029.2,
      "Text": " to indicate that this is the section of the code"
    },
    {
      "Time_Start": 1029.2,
      "Time_End": 1031.36,
      "Text": " that I have to reach."
    },
    {
      "Time_Start": 1031.3600000000001,
      "Time_End": 1040.16,
      "Text": " And I just added the header file for KLEE."
    },
    {
      "Time_Start": 1040.16,
      "Time_End": 1042.8000000000002,
      "Text": " And then you just compile it to the bitcode."
    },
    {
      "Time_Start": 1042.8000000000002,
      "Time_End": 1046.8000000000002,
      "Text": " And you can see the bitcode file here,"
    },
    {
      "Time_Start": 1046.8000000000002,
      "Time_End": 1053.0800000000002,
      "Text": " again using the CLang program and execute it."
    },
    {
      "Time_Start": 1053.6799999999998,
      "Time_End": 1056.1599999999999,
      "Text": " Now, KLEE."
    },
    {
      "Time_Start": 1060.4399999999998,
      "Time_End": 1063.56,
      "Text": " So it tries out lots of variations"
    },
    {
      "Time_Start": 1063.56,
      "Time_End": 1068.28,
      "Text": " by solving the constraints that this particular LLVM bitcode"
    },
    {
      "Time_Start": 1068.28,
      "Time_End": 1069.12,
      "Text": " had."
    },
    {
      "Time_Start": 1069.12,
      "Time_End": 1074.6799999999998,
      "Text": " And it has figured out 309 paths."
    },
    {
      "Time_Start": 1074.6799999999998,
      "Time_End": 1079.36,
      "Text": " And it generated around 306 test cases."
    },
    {
      "Time_Start": 1079.36,
      "Time_End": 1082.56,
      "Text": " Now, let's see if we have a winning condition."
    },
    {
      "Time_Start": 1082.56,
      "Time_End": 1088.6,
      "Text": " So the assert statement makes the program to cause an error."
    },
    {
      "Time_Start": 1088.6,
      "Time_End": 1089.8,
      "Text": " I will explain what that is."
    },
    {
      "Time_Start": 1109.2,
      "Time_End": 1111.08,
      "Text": " So it seems like we have an error."
    },
    {
      "Time_Start": 1111.08,
      "Time_End": 1114.4399999999998,
      "Text": " And let's just look at the number of test cases"
    },
    {
      "Time_Start": 1114.4399999999998,
      "Time_End": 1116.3999999999999,
      "Text": " that KLEE generated."
    },
    {
      "Time_Start": 1116.3999999999999,
      "Time_End": 1116.96,
      "Text": " It's a lot."
    },
    {
      "Time_Start": 1116.96,
      "Time_End": 1121.32,
      "Text": " So that's why I did the program."
    },
    {
      "Time_Start": 1121.32,
      "Time_End": 1125.84,
      "Text": " Now, let's see what is the input that's causing the error."
    },
    {
      "Time_Start": 1141.08,
      "Time_End": 1154.12,
      "Text": " So it seems like this is the input"
    },
    {
      "Time_Start": 1154.12,
      "Time_End": 1156.48,
      "Text": " that's causing the error, means this"
    },
    {
      "Time_Start": 1156.48,
      "Time_End": 1162.48,
      "Text": " is the input that gets us to the assert statement."
    },
    {
      "Time_Start": 1162.48,
      "Time_End": 1170.1999999999998,
      "Text": " Now, let's just try it out and see if it's OK."
    },
    {
      "Time_Start": 1170.2,
      "Time_End": 1175.1200000000001,
      "Text": " Executed the program, pasted in the solution."
    },
    {
      "Time_Start": 1175.1200000000001,
      "Time_End": 1175.6200000000001,
      "Text": " Oh, wow."
    },
    {
      "Time_Start": 1183.16,
      "Time_End": 1185.76,
      "Text": " Exactly."
    },
    {
      "Time_Start": 1185.76,
      "Time_End": 1188.68,
      "Text": " Now, after this, do you really want"
    },
    {
      "Time_Start": 1188.68,
      "Time_End": 1191.76,
      "Text": " to test the programs with hand?"
    },
    {
      "Time_Start": 1191.76,
      "Time_End": 1195.1200000000001,
      "Text": " Do you want to do code reviews, or you just want to do this?"
    },
    {
      "Time_Start": 1195.1200000000001,
      "Time_End": 1198.56,
      "Text": " Is this the only possible solution?"
    },
    {
      "Time_Start": 1198.56,
      "Time_End": 1202.96,
      "Text": " The thing with KLEE is it kind of halts at the first attempt"
    },
    {
      "Time_Start": 1202.96,
      "Time_End": 1204.52,
      "Text": " where it is successful."
    },
    {
      "Time_Start": 1204.52,
      "Time_End": 1207.04,
      "Text": " So we're going to tell it to give us other test"
    },
    {
      "Time_Start": 1207.04,
      "Time_End": 1208.12,
      "Text": " cases where it is not."
    },
    {
      "Time_Start": 1208.1200000000001,
      "Time_End": 1208.6200000000001,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1225.0400000000002,
      "Time_End": 1225.5400000000002,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1229.0400000000002,
      "Time_End": 1233.68,
      "Text": " So I just gave it an argument which says emit all errors,"
    },
    {
      "Time_Start": 1233.68,
      "Time_End": 1237.0400000000002,
      "Text": " which makes it try all the possibilities that"
    },
    {
      "Time_Start": 1237.04,
      "Time_End": 1239.2,
      "Text": " causes an error condition."
    },
    {
      "Time_Start": 1239.2,
      "Time_End": 1243.6,
      "Text": " And now you can see that it generated 3.09 test cases."
    },
    {
      "Time_Start": 1243.6,
      "Time_End": 1246.56,
      "Text": " Later, earlier it was 3.06."
    },
    {
      "Time_Start": 1246.56,
      "Time_End": 1250.96,
      "Text": " So we have three more bugs here, I think."
    },
    {
      "Time_Start": 1250.96,
      "Time_End": 1251.48,
      "Text": " Let's see."
    },
    {
      "Time_Start": 1263.32,
      "Time_End": 1266.08,
      "Text": " So I was right."
    },
    {
      "Time_Start": 1266.08,
      "Time_End": 1269.6399999999999,
      "Text": " We have three additional inputs that would get us"
    },
    {
      "Time_Start": 1269.6399999999999,
      "Time_End": 1270.96,
      "Text": " to the winning condition."
    },
    {
      "Time_Start": 1270.96,
      "Time_End": 1272.1599999999999,
      "Text": " So let's test them out."
    },
    {
      "Time_Start": 1285.3999999999999,
      "Time_End": 1287.04,
      "Text": " Let's test this one."
    },
    {
      "Time_Start": 1287.04,
      "Time_End": 1287.54,
      "Text": " OK."
    },
    {
      "Time_Start": 1295.0,
      "Time_End": 1301.24,
      "Text": " This is long, and I think this is the right solution."
    },
    {
      "Time_Start": 1306.24,
      "Time_End": 1307.72,
      "Text": " Let's see how this works out."
    },
    {
      "Time_Start": 1307.72,
      "Time_End": 1308.22,
      "Text": " OK."
    },
    {
      "Time_Start": 1315.6000000000001,
      "Time_End": 1317.64,
      "Text": " Yeah, I guess this is the right one."
    },
    {
      "Time_Start": 1327.08,
      "Time_End": 1328.1200000000001,
      "Text": " Oh, wow."
    },
    {
      "Time_Start": 1328.1200000000001,
      "Time_End": 1329.2,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1329.2,
      "Time_End": 1330.24,
      "Text": " I always guess wrong."
    },
    {
      "Time_Start": 1331.24,
      "Time_End": 1333.6,
      "Text": " OK."
    },
    {
      "Time_Start": 1333.6,
      "Time_End": 1356.16,
      "Text": " Now, let's, OK, I guess this must be it."
    },
    {
      "Time_Start": 1360.24,
      "Time_End": 1360.74,
      "Text": " What?"
    },
    {
      "Time_Start": 1365.24,
      "Time_End": 1365.74,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1370.6,
      "Time_End": 1371.68,
      "Text": " I think this should be it."
    },
    {
      "Time_Start": 1371.68,
      "Time_End": 1372.6,
      "Text": " This is really long."
    },
    {
      "Time_Start": 1379.08,
      "Time_End": 1379.58,
      "Text": " OK."
    },
    {
      "Time_Start": 1391.24,
      "Time_End": 1391.74,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1398.72,
      "Time_End": 1400.8,
      "Text": " Yeah, I guess this is the one."
    },
    {
      "Time_Start": 1405.0,
      "Time_End": 1407.92,
      "Text": " So and there is also one more solution."
    },
    {
      "Time_Start": 1407.92,
      "Time_End": 1410.1200000000001,
      "Text": " So this is all in your Docker container,"
    },
    {
      "Time_Start": 1410.1200000000001,
      "Time_End": 1411.76,
      "Text": " so you can just try it out."
    },
    {
      "Time_Start": 1411.76,
      "Time_End": 1416.24,
      "Text": " And it's very simple how that I just"
    },
    {
      "Time_Start": 1416.24,
      "Time_End": 1418.4,
      "Text": " modified two lines in this program,"
    },
    {
      "Time_Start": 1418.4,
      "Time_End": 1421.8400000000001,
      "Text": " and then I could figure out three additional conditions"
    },
    {
      "Time_Start": 1421.8400000000001,
      "Time_End": 1424.68,
      "Text": " that the programmer didn't intend."
    },
    {
      "Time_Start": 1424.68,
      "Time_End": 1426.88,
      "Text": " And this is, again, a toy program."
    },
    {
      "Time_Start": 1426.88,
      "Time_End": 1428.8000000000002,
      "Text": " Let's do something CTF level."
    },
    {
      "Time_Start": 1435.3200000000002,
      "Time_End": 1437.96,
      "Text": " Which one do I choose?"
    },
    {
      "Time_Start": 1437.96,
      "Time_End": 1438.96,
      "Text": " Let's go with this."
    },
    {
      "Time_Start": 1442.8000000000002,
      "Time_End": 1447.2,
      "Text": " This is a Nuiddu hack CTF, and there's a write about there."
    },
    {
      "Time_Start": 1447.2,
      "Time_End": 1451.52,
      "Text": " I'm just going to write out."
    },
    {
      "Time_Start": 1451.52,
      "Time_End": 1455.28,
      "Text": " So it's an 64-bit ELF executable,"
    },
    {
      "Time_Start": 1455.28,
      "Time_End": 1460.56,
      "Text": " and I guess it asks for a password."
    },
    {
      "Time_Start": 1460.56,
      "Time_End": 1462.16,
      "Text": " Let's try something."
    },
    {
      "Time_Start": 1462.16,
      "Time_End": 1463.76,
      "Text": " OK, that's not it."
    },
    {
      "Time_Start": 1463.76,
      "Time_End": 1470.04,
      "Text": " Now, we don't have the source code for this particular file."
    },
    {
      "Time_Start": 1470.04,
      "Time_End": 1471.16,
      "Text": " So what do we do?"
    },
    {
      "Time_Start": 1471.16,
      "Time_End": 1473.32,
      "Text": " I mean, how do we approach programs"
    },
    {
      "Time_Start": 1473.32,
      "Time_End": 1476.72,
      "Text": " that doesn't have source code, and we still"
    },
    {
      "Time_Start": 1476.72,
      "Time_End": 1478.84,
      "Text": " want to do CLE with it?"
    },
    {
      "Time_Start": 1478.84,
      "Time_End": 1481.6000000000001,
      "Text": " Any ideas?"
    },
    {
      "Time_Start": 1481.6000000000001,
      "Time_End": 1487.4,
      "Text": " You can set the output of the program, right?"
    },
    {
      "Time_Start": 1487.4,
      "Time_End": 1490.68,
      "Text": " I mean, how do we get the source code?"
    },
    {
      "Time_Start": 1490.68,
      "Time_End": 1492.6000000000001,
      "Text": " Because, yeah, exactly."
    },
    {
      "Time_Start": 1492.6000000000001,
      "Time_End": 1493.68,
      "Text": " So what do we use?"
    },
    {
      "Time_Start": 1498.04,
      "Time_End": 1500.3600000000001,
      "Text": " Does this look familiar?"
    },
    {
      "Time_Start": 1500.3600000000001,
      "Time_End": 1505.24,
      "Text": " So we just loaded the program in IDA Pro,"
    },
    {
      "Time_Start": 1505.24,
      "Time_End": 1508.56,
      "Text": " which is the decompiler."
    },
    {
      "Time_Start": 1508.56,
      "Time_End": 1515.48,
      "Text": " And here, we just translated the assembly code"
    },
    {
      "Time_Start": 1515.48,
      "Time_End": 1517.96,
      "Text": " to C code using the hex arrays."
    },
    {
      "Time_Start": 1517.96,
      "Time_End": 1521.8,
      "Text": " So it just gives you very readable code."
    },
    {
      "Time_Start": 1521.8,
      "Time_End": 1525.2,
      "Text": " So here, you can see that something happens,"
    },
    {
      "Time_Start": 1525.2,
      "Time_End": 1527.16,
      "Text": " else try again."
    },
    {
      "Time_Start": 1527.16,
      "Time_End": 1530.88,
      "Text": " So we want this to happen, right?"
    },
    {
      "Time_Start": 1530.88,
      "Time_End": 1532.92,
      "Text": " So where do we put the assert statement now?"
    },
    {
      "Time_Start": 1532.92,
      "Time_End": 1535.16,
      "Text": " We just put it over there."
    },
    {
      "Time_Start": 1535.16,
      "Time_End": 1537.6000000000001,
      "Text": " This is compilable C code."
    },
    {
      "Time_Start": 1537.6000000000001,
      "Time_End": 1539.4,
      "Text": " So that's what you can see here."
    },
    {
      "Time_Start": 1546.5600000000002,
      "Time_End": 1549.4,
      "Text": " No changes, I just put the CLE assert statement here,"
    },
    {
      "Time_Start": 1549.4,
      "Time_End": 1553.28,
      "Text": " because this is where good stuff happens."
    },
    {
      "Time_Start": 1553.28,
      "Time_End": 1556.92,
      "Text": " And we don't want to go anywhere here."
    },
    {
      "Time_Start": 1556.92,
      "Time_End": 1561.72,
      "Text": " I just add the CLE.h file here and put in the function body."
    },
    {
      "Time_Start": 1561.72,
      "Time_End": 1566.4,
      "Text": " Copy-paste it over here and compile with CLang."
    },
    {
      "Time_Start": 1566.4,
      "Time_End": 1570.68,
      "Text": " Obviously, you'll get the bitcode file."
    },
    {
      "Time_Start": 1570.68,
      "Time_End": 1573.68,
      "Text": " Now I'll run it with CLE."
    },
    {
      "Time_Start": 1577.1200000000001,
      "Time_End": 1579.3600000000001,
      "Text": " Now it warns me about something."
    },
    {
      "Time_Start": 1579.3600000000001,
      "Time_End": 1583.2,
      "Text": " It's saying, calling external printf."
    },
    {
      "Time_Start": 1583.2,
      "Time_End": 1587.68,
      "Text": " So CLE works on LLVM bitcode, right?"
    },
    {
      "Time_Start": 1587.68,
      "Time_End": 1590.2,
      "Text": " Can it understand what printf is?"
    },
    {
      "Time_Start": 1590.2,
      "Time_End": 1593.32,
      "Text": " Because where does printf come from?"
    },
    {
      "Time_Start": 1593.32,
      "Time_End": 1595.0800000000002,
      "Text": " Anyone?"
    },
    {
      "Time_Start": 1595.0800000000002,
      "Time_End": 1596.0800000000002,
      "Text": " Libc, exactly."
    },
    {
      "Time_Start": 1596.0800000000002,
      "Time_End": 1599.72,
      "Text": " So we need to have a version of Libc"
    },
    {
      "Time_Start": 1599.72,
      "Time_End": 1602.04,
      "Text": " that the CLE can instrument."
    },
    {
      "Time_Start": 1602.04,
      "Time_End": 1604.32,
      "Text": " So CLE actually provides you that."
    },
    {
      "Time_Start": 1604.32,
      "Time_End": 1610.04,
      "Text": " It's called uLibc, and you can just specify it."
    },
    {
      "Time_Start": 1610.04,
      "Time_End": 1610.68,
      "Text": " Let's do that."
    },
    {
      "Time_Start": 1620.2,
      "Time_End": 1620.7,
      "Text": " OK."
    },
    {
      "Time_Start": 1646.1200000000001,
      "Time_End": 1649.56,
      "Text": " So now that's sorted."
    },
    {
      "Time_Start": 1649.56,
      "Time_End": 1651.3999999999999,
      "Text": " Now it has a warning."
    },
    {
      "Time_Start": 1651.3999999999999,
      "Time_End": 1655.8799999999999,
      "Text": " And it says the usage is main.bc and then the pass."
    },
    {
      "Time_Start": 1655.8799999999999,
      "Time_End": 1660.2,
      "Text": " So it's an argument that you had to give this program."
    },
    {
      "Time_Start": 1660.2,
      "Time_End": 1663.12,
      "Text": " It's a command-line argument that you have to provide."
    },
    {
      "Time_Start": 1663.12,
      "Time_End": 1668.84,
      "Text": " So how do we make the command-line argument symbolic"
    },
    {
      "Time_Start": 1668.84,
      "Time_End": 1672.8,
      "Text": " so that the CLE tries to figure out what"
    },
    {
      "Time_Start": 1672.8,
      "Time_End": 1676.44,
      "Text": " exactly needs to be the input?"
    },
    {
      "Time_Start": 1676.44,
      "Time_End": 1685.64,
      "Text": " So this, so we just add hyphen hyphen sym arg 100."
    },
    {
      "Time_Start": 1685.64,
      "Time_End": 1688.04,
      "Text": " So 100 is just the character size."
    },
    {
      "Time_Start": 1688.04,
      "Time_End": 1691.04,
      "Text": " I don't know what's the number of characters"
    },
    {
      "Time_Start": 1691.04,
      "Time_End": 1692.92,
      "Text": " that it takes to get the key."
    },
    {
      "Time_Start": 1692.92,
      "Time_End": 1695.64,
      "Text": " So I just provide an arbitrary number, which is 100."
    },
    {
      "Time_Start": 1695.64,
      "Time_End": 1699.1200000000001,
      "Text": " It can be 80, whatever that you think it is."
    },
    {
      "Time_Start": 1699.1200000000001,
      "Time_End": 1702.24,
      "Text": " So this should be clear now."
    },
    {
      "Time_Start": 1702.24,
      "Time_End": 1706.56,
      "Text": " We provide libc here, and we provide the POSIX environment."
    },
    {
      "Time_Start": 1706.56,
      "Time_End": 1710.64,
      "Text": " So some functions like write are implemented"
    },
    {
      "Time_Start": 1710.64,
      "Time_End": 1712.16,
      "Text": " by the operating system."
    },
    {
      "Time_Start": 1712.16,
      "Time_End": 1715.76,
      "Text": " So CLE gives you functionality to execute code,"
    },
    {
      "Time_Start": 1715.76,
      "Time_End": 1719.32,
      "Text": " which has system calls as well."
    },
    {
      "Time_Start": 1719.32,
      "Time_End": 1721.88,
      "Text": " And then you provide the bitcode."
    },
    {
      "Time_Start": 1721.88,
      "Time_End": 1730.36,
      "Text": " And since this bitcode takes argument from the command-line,"
    },
    {
      "Time_Start": 1730.3600000000001,
      "Time_End": 1735.96,
      "Text": " I am providing it as a symbolic argument, which"
    },
    {
      "Time_Start": 1735.96,
      "Time_End": 1740.4,
      "Text": " can be 100 characters."
    },
    {
      "Time_Start": 1740.4,
      "Time_End": 1743.3600000000001,
      "Text": " So I just give it a go."
    },
    {
      "Time_Start": 1743.3600000000001,
      "Time_End": 1746.1200000000001,
      "Text": " And oh, I just saw something blink."
    },
    {
      "Time_Start": 1749.3600000000001,
      "Time_End": 1753.64,
      "Text": " So this is, I think, was for 200 points."
    },
    {
      "Time_Start": 1753.64,
      "Time_End": 1758.0000000000002,
      "Text": " So it's pretty cool that I can solve it on the stage."
    },
    {
      "Time_Start": 1758.0,
      "Time_End": 1761.92,
      "Text": " So we have an assertion fail right here."
    },
    {
      "Time_Start": 1761.92,
      "Time_End": 1764.32,
      "Text": " Let's figure out what this is."
    },
    {
      "Time_Start": 1773.84,
      "Time_End": 1778.2,
      "Text": " So we have a test case that kind of gets us to that point."
    },
    {
      "Time_Start": 1778.2,
      "Time_End": 1778.7,
      "Text": " OK, test."
    },
    {
      "Time_Start": 1788.88,
      "Time_End": 1794.0,
      "Text": " OK, it's a Pandi Panda."
    },
    {
      "Time_Start": 1794.0,
      "Time_End": 1796.56,
      "Text": " I don't know if it's a French thing, but yeah."
    },
    {
      "Time_Start": 1802.0,
      "Time_End": 1806.8,
      "Text": " OK, so let's try it out and verify if we are right."
    },
    {
      "Time_Start": 1806.8,
      "Time_End": 1821.44,
      "Text": " OK, I should, oh, yes."
    },
    {
      "Time_Start": 1821.44,
      "Time_End": 1827.52,
      "Text": " So yeah, we just solved a CTF challenge, no biggie."
    },
    {
      "Time_Start": 1827.52,
      "Time_End": 1831.56,
      "Text": " Now, yeah, this is pretty easy, right?"
    },
    {
      "Time_Start": 1831.56,
      "Time_End": 1835.1599999999999,
      "Text": " Now, let's do some slides now."
    },
    {
      "Time_Start": 1835.16,
      "Time_End": 1836.64,
      "Text": " I've been doing demos for a while."
    },
    {
      "Time_Start": 1847.92,
      "Time_End": 1849.76,
      "Text": " All right, we covered this."
    },
    {
      "Time_Start": 1849.76,
      "Time_End": 1853.72,
      "Text": " And these are the other symbolic arguments"
    },
    {
      "Time_Start": 1853.72,
      "Time_End": 1855.72,
      "Text": " that you could provide."
    },
    {
      "Time_Start": 1855.72,
      "Time_End": 1860.24,
      "Text": " And it can not just be arguments."
    },
    {
      "Time_Start": 1860.24,
      "Time_End": 1861.8400000000001,
      "Text": " It can be files, too."
    },
    {
      "Time_Start": 1861.8400000000001,
      "Time_End": 1867.7600000000002,
      "Text": " And KLEE also supports sockets, IPC, et cetera."
    },
    {
      "Time_Start": 1867.7600000000002,
      "Time_End": 1869.8400000000001,
      "Text": " So it's pretty good."
    },
    {
      "Time_Start": 1869.8400000000001,
      "Time_End": 1872.3600000000001,
      "Text": " And yeah, this is the list."
    },
    {
      "Time_Start": 1877.0400000000002,
      "Time_End": 1879.92,
      "Text": " So UC libc is a modified version of libc,"
    },
    {
      "Time_Start": 1879.92,
      "Time_End": 1882.2400000000002,
      "Text": " which KLEE can instrument."
    },
    {
      "Time_Start": 1882.2400000000002,
      "Time_End": 1888.0800000000002,
      "Text": " So when the control flow transfers from the bitcode"
    },
    {
      "Time_Start": 1888.0800000000002,
      "Time_End": 1891.4800000000002,
      "Text": " to something that is a system library,"
    },
    {
      "Time_Start": 1891.64,
      "Time_End": 1894.16,
      "Text": " KLEE can't really understand what's going on there."
    },
    {
      "Time_Start": 1894.16,
      "Time_End": 1898.3600000000001,
      "Text": " So that's why we have to have something like UC libc in there."
    },
    {
      "Time_Start": 1898.3600000000001,
      "Time_End": 1901.0,
      "Text": " And the same applies for the POSIX runtime as well."
    },
    {
      "Time_Start": 1903.8,
      "Time_End": 1908.76,
      "Text": " Now, I think GNU core utils and bin utils"
    },
    {
      "Time_Start": 1908.76,
      "Time_End": 1912.52,
      "Text": " has been the tested softest suite ever,"
    },
    {
      "Time_Start": 1912.52,
      "Time_End": 1914.28,
      "Text": " because it's easy to compile."
    },
    {
      "Time_Start": 1914.28,
      "Time_End": 1917.28,
      "Text": " You can run all the fuzzes."
    },
    {
      "Time_Start": 1917.28,
      "Time_End": 1919.0,
      "Text": " Tutorials comes with it."
    },
    {
      "Time_Start": 1919.0,
      "Time_End": 1920.58,
      "Text": " So it has been pretty tested."
    },
    {
      "Time_Start": 1920.58,
      "Time_End": 1924.26,
      "Text": " And surprisingly, the developers of KLEE"
    },
    {
      "Time_Start": 1924.26,
      "Time_End": 1929.46,
      "Text": " were able to find around two to three high-severity bugs"
    },
    {
      "Time_Start": 1929.46,
      "Time_End": 1932.1799999999998,
      "Text": " in these tools."
    },
    {
      "Time_Start": 1932.1799999999998,
      "Time_End": 1934.4199999999998,
      "Text": " And this is kind of an indication"
    },
    {
      "Time_Start": 1934.4199999999998,
      "Time_End": 1939.1399999999999,
      "Text": " that this project is mature enough to actually find"
    },
    {
      "Time_Start": 1939.1399999999999,
      "Time_End": 1940.8999999999999,
      "Text": " production-quality bugs."
    },
    {
      "Time_Start": 1940.8999999999999,
      "Time_End": 1944.74,
      "Text": " So let's figure out how to do that."
    },
    {
      "Time_Start": 1944.74,
      "Time_End": 1948.06,
      "Text": " The first part of doing something like that"
    },
    {
      "Time_Start": 1948.06,
      "Time_End": 1955.3799999999999,
      "Text": " is, how do we compile all these programs with LLVM?"
    },
    {
      "Time_Start": 1955.3799999999999,
      "Time_End": 1957.46,
      "Text": " Some of them have their own build systems,"
    },
    {
      "Time_Start": 1957.46,
      "Time_End": 1960.06,
      "Text": " and that might not work together, et cetera."
    },
    {
      "Time_Start": 1960.06,
      "Time_End": 1962.86,
      "Text": " So we use something called as WLLVM."
    },
    {
      "Time_Start": 1962.86,
      "Time_End": 1965.1,
      "Text": " So it's a bold program LLVM, which"
    },
    {
      "Time_Start": 1965.1,
      "Time_End": 1970.06,
      "Text": " lets you compile entire source packages with LLVM."
    },
    {
      "Time_Start": 1970.06,
      "Time_End": 1972.5,
      "Text": " It's not a magic sword."
    },
    {
      "Time_Start": 1972.5,
      "Time_End": 1974.22,
      "Text": " It works most of the time."
    },
    {
      "Time_Start": 1974.22,
      "Time_End": 1978.14,
      "Text": " And it kind of puts in the LLVM bitcode"
    },
    {
      "Time_Start": 1978.14,
      "Time_End": 1979.74,
      "Text": " in the binary that it compiles, which"
    },
    {
      "Time_Start": 1979.74,
      "Time_End": 1981.6200000000001,
      "Text": " you can later extract with a tool"
    },
    {
      "Time_Start": 1981.6200000000001,
      "Time_End": 1984.02,
      "Text": " that they give called ExtractBC."
    },
    {
      "Time_Start": 1984.02,
      "Time_End": 1987.38,
      "Text": " So once you do that, you will have the bitcode of the files"
    },
    {
      "Time_Start": 1987.38,
      "Time_End": 1989.46,
      "Text": " that you have compiled with LLVM."
    },
    {
      "Time_Start": 1989.46,
      "Time_End": 1991.06,
      "Text": " And then you follow the same steps"
    },
    {
      "Time_Start": 1991.06,
      "Time_End": 1992.14,
      "Text": " that you have done before."
    },
    {
      "Time_Start": 2004.22,
      "Time_End": 2011.78,
      "Text": " So before we go into the GNU one, it's a bit complex."
    },
    {
      "Time_Start": 2011.78,
      "Time_End": 2017.18,
      "Text": " Let's do a little better one, which is the AIS3 Crack Me."
    },
    {
      "Time_Start": 2022.8600000000001,
      "Time_End": 2028.6200000000001,
      "Text": " So again, this program doesn't have any source code to it."
    },
    {
      "Time_Start": 2028.6200000000001,
      "Time_End": 2030.7,
      "Text": " As in, we don't have the source code to it."
    },
    {
      "Time_Start": 2030.7,
      "Time_End": 2033.82,
      "Text": " How do we plan on hacking this?"
    },
    {
      "Time_Start": 2033.82,
      "Time_End": 2036.4199999999998,
      "Text": " Because this has been kind of obfuscated,"
    },
    {
      "Time_Start": 2036.4199999999998,
      "Time_End": 2039.1799999999998,
      "Text": " and the code is a little tricky."
    },
    {
      "Time_Start": 2039.1799999999998,
      "Time_End": 2041.6599999999999,
      "Text": " So we can't really copy from hex arrays"
    },
    {
      "Time_Start": 2041.6599999999999,
      "Time_End": 2043.86,
      "Text": " and then do whatever we did with Glee."
    },
    {
      "Time_Start": 2043.86,
      "Time_End": 2046.34,
      "Text": " So we'll try to use a different tool."
    },
    {
      "Time_Start": 2046.34,
      "Time_End": 2048.18,
      "Text": " It's called Anger."
    },
    {
      "Time_Start": 2048.18,
      "Time_End": 2051.58,
      "Text": " And I have Anger in another Docker container."
    },
    {
      "Time_Start": 2051.58,
      "Time_End": 2053.54,
      "Text": " So let's try that."
    },
    {
      "Time_Start": 2056.8199999999997,
      "Time_End": 2059.22,
      "Text": " Before we try Anger, let's understand"
    },
    {
      "Time_Start": 2059.22,
      "Time_End": 2062.14,
      "Text": " what this program does."
    },
    {
      "Time_Start": 2062.14,
      "Time_End": 2063.7,
      "Text": " So have you heard of Radar?"
    },
    {
      "Time_Start": 2064.58,
      "Time_End": 2066.06,
      "Text": " It's a pre-installed."
    },
    {
      "Time_Start": 2066.06,
      "Time_End": 2068.06,
      "Text": " You can do similar things with IDA,"
    },
    {
      "Time_Start": 2068.06,
      "Time_End": 2069.46,
      "Text": " but then this is totally free."
    },
    {
      "Time_Start": 2077.8599999999997,
      "Time_End": 2082.74,
      "Text": " So I just loaded it up, did some basic analysis with it."
    },
    {
      "Time_Start": 2082.74,
      "Time_End": 2086.62,
      "Text": " So AAA does lots of analysis on the binary."
    },
    {
      "Time_Start": 2086.62,
      "Time_End": 2093.2599999999998,
      "Text": " And then AFL prints all the functions"
    },
    {
      "Time_Start": 2093.3,
      "Time_End": 2094.98,
      "Text": " in this particular binary."
    },
    {
      "Time_Start": 2094.98,
      "Time_End": 2099.3,
      "Text": " And main is always a good starting point, right?"
    },
    {
      "Time_Start": 2099.3,
      "Time_End": 2102.2200000000003,
      "Text": " So we would go to main."
    },
    {
      "Time_Start": 2107.5400000000004,
      "Time_End": 2110.5800000000004,
      "Text": " And we have the control flow."
    },
    {
      "Time_Start": 2110.5800000000004,
      "Time_End": 2115.0200000000004,
      "Text": " So this is like a very nice representation."
    },
    {
      "Time_Start": 2115.0200000000004,
      "Time_End": 2117.46,
      "Text": " We know that this is the control flow."
    },
    {
      "Time_Start": 2117.46,
      "Time_End": 2120.1800000000003,
      "Text": " We can take the false branch, and then it would go here."
    },
    {
      "Time_Start": 2120.1800000000003,
      "Time_End": 2122.34,
      "Text": " And then the true branch goes here."
    },
    {
      "Time_Start": 2122.34,
      "Time_End": 2128.82,
      "Text": " And end of the day, this is where you want to land, right?"
    },
    {
      "Time_Start": 2128.82,
      "Time_End": 2130.46,
      "Text": " This is where you want to land."
    },
    {
      "Time_Start": 2130.46,
      "Time_End": 2134.1000000000004,
      "Text": " And this is the false condition."
    },
    {
      "Time_Start": 2134.1000000000004,
      "Time_End": 2136.7000000000003,
      "Text": " So take a good note of this."
    },
    {
      "Time_Start": 2136.7000000000003,
      "Time_End": 2140.9,
      "Text": " And I'll just show you how complex it is to solve this."
    },
    {
      "Time_Start": 2152.34,
      "Time_End": 2152.84,
      "Text": " Yeah."
    },
    {
      "Time_Start": 2166.06,
      "Time_End": 2168.1000000000004,
      "Text": " So we just load."
    },
    {
      "Time_Start": 2168.1000000000004,
      "Time_End": 2171.1400000000003,
      "Text": " This is a Python script that uses anger."
    },
    {
      "Time_Start": 2171.1400000000003,
      "Time_End": 2175.34,
      "Text": " And it's another symbolic execution engine."
    },
    {
      "Time_Start": 2175.34,
      "Time_End": 2177.46,
      "Text": " And this is where you just create a project."
    },
    {
      "Time_Start": 2177.46,
      "Time_End": 2181.9,
      "Text": " It has been heavily commented, so you can get an idea."
    },
    {
      "Time_Start": 2181.9,
      "Time_End": 2188.1800000000003,
      "Text": " And this is the one line that matters."
    },
    {
      "Time_Start": 2188.1800000000003,
      "Time_End": 2193.26,
      "Text": " Path group dot explore find 4,602."
    },
    {
      "Time_Start": 2193.26,
      "Time_End": 2195.46,
      "Text": " So that's where the key is."
    },
    {
      "Time_Start": 2195.46,
      "Time_End": 2198.06,
      "Text": " We just tell anger to figure out how to get"
    },
    {
      "Time_Start": 2198.06,
      "Time_End": 2199.86,
      "Text": " to this particular offset."
    },
    {
      "Time_Start": 2203.62,
      "Time_End": 2205.7400000000002,
      "Text": " We have no idea about this binary."
    },
    {
      "Time_Start": 2205.7400000000002,
      "Time_End": 2207.5,
      "Text": " We don't know what it does."
    },
    {
      "Time_Start": 2207.5,
      "Time_End": 2211.34,
      "Text": " All we saw was a string in the control flow"
    },
    {
      "Time_Start": 2211.34,
      "Time_End": 2213.1400000000003,
      "Text": " that this is where it is."
    },
    {
      "Time_Start": 2213.1400000000003,
      "Time_End": 2214.86,
      "Text": " So let's run that."
    },
    {
      "Time_Start": 2217.7000000000003,
      "Time_End": 2229.46,
      "Text": " And see, fingers crossed."
    },
    {
      "Time_Start": 2229.46,
      "Time_End": 2230.06,
      "Text": " Oh, yes."
    },
    {
      "Time_Start": 2234.98,
      "Time_End": 2237.9,
      "Text": " That seems like this is the key."
    },
    {
      "Time_Start": 2237.9,
      "Time_End": 2258.7000000000003,
      "Text": " Let's, yeah, I need to paste it with the other one."
    },
    {
      "Time_Start": 2267.9,
      "Time_End": 2274.94,
      "Text": " Oh, yes."
    },
    {
      "Time_Start": 2274.94,
      "Time_End": 2276.82,
      "Text": " So we didn't have any source code."
    },
    {
      "Time_Start": 2276.82,
      "Time_End": 2278.38,
      "Text": " We didn't do any decompilation."
    },
    {
      "Time_Start": 2278.38,
      "Time_End": 2280.62,
      "Text": " All we did was just do a strings."
    },
    {
      "Time_Start": 2280.62,
      "Time_End": 2283.7400000000002,
      "Text": " And then we figured that this is where we want to reach."
    },
    {
      "Time_Start": 2283.7400000000002,
      "Time_End": 2287.1800000000003,
      "Text": " We politely tell anger that, please figure out a way."
    },
    {
      "Time_Start": 2287.1800000000003,
      "Time_End": 2288.46,
      "Text": " Anger did it for us."
    },
    {
      "Time_Start": 2288.46,
      "Time_End": 2294.42,
      "Text": " And we just paste the CTF key in there and, yeah, get on going."
    },
    {
      "Time_Start": 2294.42,
      "Time_End": 2296.2200000000003,
      "Text": " So do you find this really interesting"
    },
    {
      "Time_Start": 2296.2200000000003,
      "Time_End": 2300.42,
      "Text": " that I can solve CTF challenges just like that?"
    },
    {
      "Time_Start": 2300.42,
      "Time_End": 2303.1800000000003,
      "Text": " Isn't that cool?"
    },
    {
      "Time_Start": 2303.1800000000003,
      "Time_End": 2304.5000000000005,
      "Text": " If this isn't cool, what is?"
    },
    {
      "Time_Start": 2307.38,
      "Time_End": 2309.38,
      "Text": " And surprisingly, all the demos work."
    },
    {
      "Time_Start": 2312.5400000000004,
      "Time_End": 2315.5000000000005,
      "Text": " I am surprised."
    },
    {
      "Time_Start": 2315.5000000000005,
      "Time_End": 2317.0600000000004,
      "Text": " All right."
    },
    {
      "Time_Start": 2317.0600000000004,
      "Time_End": 2319.6200000000003,
      "Text": " So I'm going to push my luck and do this again."
    },
    {
      "Time_Start": 2326.82,
      "Time_End": 2329.78,
      "Text": " OK."
    },
    {
      "Time_Start": 2329.78,
      "Time_End": 2331.38,
      "Text": " Let's do the example one."
    },
    {
      "Time_Start": 2331.38,
      "Time_End": 2334.38,
      "Text": " This, I don't have good successes with it."
    },
    {
      "Time_Start": 2334.38,
      "Time_End": 2337.5400000000004,
      "Text": " But then let's give it a try."
    },
    {
      "Time_Start": 2337.5400000000004,
      "Time_End": 2341.5400000000004,
      "Text": " So again, this, we have source code for it."
    },
    {
      "Time_Start": 2341.5400000000004,
      "Time_End": 2343.7000000000003,
      "Text": " But right now, let's try to solve it"
    },
    {
      "Time_Start": 2343.7000000000003,
      "Time_End": 2345.2200000000003,
      "Text": " without using the source code."
    },
    {
      "Time_Start": 2345.2200000000003,
      "Time_End": 2347.9800000000005,
      "Text": " And we will try in CLE with using the source code"
    },
    {
      "Time_Start": 2347.9800000000005,
      "Time_End": 2349.9800000000005,
      "Text": " so we can see both the versions."
    },
    {
      "Time_Start": 2349.9800000000005,
      "Time_End": 2352.38,
      "Text": " So this is, again, another CTF."
    },
    {
      "Time_Start": 2352.38,
      "Time_End": 2356.86,
      "Text": " I just took all the CTFs from the anger examples directory"
    },
    {
      "Time_Start": 2356.86,
      "Time_End": 2359.42,
      "Text": " and just used it for CLE as well."
    },
    {
      "Time_Start": 2359.42,
      "Time_End": 2363.34,
      "Text": " And let's see."
    },
    {
      "Time_Start": 2363.34,
      "Time_End": 2365.86,
      "Text": " OK, it asked me to go away."
    },
    {
      "Time_Start": 2365.86,
      "Time_End": 2367.26,
      "Text": " It's pretty rude."
    },
    {
      "Time_Start": 2367.26,
      "Time_End": 2372.82,
      "Text": " Now, let's see what's inside solve.py."
    },
    {
      "Time_Start": 2377.82,
      "Time_End": 2382.1400000000003,
      "Text": " This is, all these lines are by their by default."
    },
    {
      "Time_Start": 2382.14,
      "Time_End": 2385.5,
      "Text": " You don't have to bother, because this is the anger setup."
    },
    {
      "Time_Start": 2385.5,
      "Time_End": 2389.74,
      "Text": " And if you decompile, let's decompile this."
    },
    {
      "Time_Start": 2395.46,
      "Time_End": 2397.2599999999998,
      "Text": " Oh, yeah."
    },
    {
      "Time_Start": 2397.2599999999998,
      "Time_End": 2398.7799999999997,
      "Text": " Radar is installed in this thing."
    },
    {
      "Time_Start": 2413.14,
      "Time_End": 2413.62,
      "Text": " OK."
    },
    {
      "Time_Start": 2413.62,
      "Time_End": 2414.62,
      "Text": " Oh, data."
    },
    {
      "Time_Start": 2414.62,
      "Time_End": 2415.12,
      "Text": " OK."
    },
    {
      "Time_Start": 2427.02,
      "Time_End": 2427.54,
      "Text": " OK."
    },
    {
      "Time_Start": 2427.54,
      "Time_End": 2428.62,
      "Text": " There is a main function."
    },
    {
      "Time_Start": 2428.62,
      "Time_End": 2429.12,
      "Text": " Nice."
    },
    {
      "Time_Start": 2440.58,
      "Time_End": 2441.08,
      "Text": " Yeah."
    },
    {
      "Time_Start": 2443.14,
      "Time_End": 2443.64,
      "Text": " OK."
    },
    {
      "Time_Start": 2446.42,
      "Time_End": 2448.7,
      "Text": " So there is something that's happening"
    },
    {
      "Time_Start": 2448.7,
      "Time_End": 2449.7799999999997,
      "Text": " with the passwords here."
    },
    {
      "Time_Start": 2458.8599999999997,
      "Time_End": 2461.42,
      "Text": " And then it has a false and a true condition."
    },
    {
      "Time_Start": 2461.42,
      "Time_End": 2464.8599999999997,
      "Text": " And then it just gets, you know, it just prints out stuff."
    },
    {
      "Time_Start": 2464.8599999999997,
      "Time_End": 2467.98,
      "Text": " So this program just has one false and one true condition,"
    },
    {
      "Time_Start": 2467.98,
      "Time_End": 2468.9,
      "Text": " right?"
    },
    {
      "Time_Start": 2468.9,
      "Time_End": 2471.9,
      "Text": " So how many path groups does this program can have?"
    },
    {
      "Time_Start": 2475.26,
      "Time_End": 2478.7000000000003,
      "Text": " It just has two branches."
    },
    {
      "Time_Start": 2478.7000000000003,
      "Time_End": 2480.5,
      "Text": " It can have two path groups."
    },
    {
      "Time_Start": 2480.5,
      "Time_End": 2486.42,
      "Text": " So in anger way of speaking, it has two path groups."
    },
    {
      "Time_Start": 2486.42,
      "Time_End": 2488.26,
      "Text": " So that's what you can see here."
    },
    {
      "Time_Start": 2491.9,
      "Time_End": 2495.3,
      "Text": " There is one path group that is the active of 0."
    },
    {
      "Time_Start": 2495.3,
      "Time_End": 2498.26,
      "Text": " And then the other path group, which is the active of 1,"
    },
    {
      "Time_Start": 2498.26,
      "Time_End": 2501.2400000000002,
      "Text": " because this program can only have two path groups."
    },
    {
      "Time_Start": 2501.2400000000002,
      "Time_End": 2505.0200000000004,
      "Text": " Now, we just save both the input,"
    },
    {
      "Time_Start": 2505.0200000000004,
      "Time_End": 2507.46,
      "Text": " I mean, the result of these path groups"
    },
    {
      "Time_Start": 2507.46,
      "Time_End": 2510.2200000000003,
      "Text": " to a variable, which is input undergoes 0."
    },
    {
      "Time_Start": 2510.2200000000003,
      "Time_End": 2515.26,
      "Text": " And then here we are just testing if it"
    },
    {
      "Time_Start": 2515.26,
      "Time_End": 2517.5800000000004,
      "Text": " is the correct one or not."
    },
    {
      "Time_Start": 2517.5800000000004,
      "Time_End": 2526.0600000000004,
      "Text": " We'll just execute Python solve.py."
    },
    {
      "Time_Start": 2526.06,
      "Time_End": 2528.54,
      "Text": " I don't even know what's the operation that they are doing."
    },
    {
      "Time_Start": 2528.54,
      "Time_End": 2531.2999999999997,
      "Text": " But then I know that this is the key."
    },
    {
      "Time_Start": 2531.2999999999997,
      "Time_End": 2534.5,
      "Text": " So sneaky, right?"
    },
    {
      "Time_Start": 2534.5,
      "Time_End": 2536.7799999999997,
      "Text": " So I didn't know what they are doing."
    },
    {
      "Time_Start": 2536.7799999999997,
      "Time_End": 2539.02,
      "Text": " I just know that there are two path groups."
    },
    {
      "Time_Start": 2539.02,
      "Time_End": 2540.9,
      "Text": " I just printed out what's in the path groups."
    },
    {
      "Time_Start": 2540.9,
      "Time_End": 2543.98,
      "Text": " And this happens to be the key."
    },
    {
      "Time_Start": 2543.98,
      "Time_End": 2547.14,
      "Text": " Let's just make sure that, OK, I don't"
    },
    {
      "Time_Start": 2547.14,
      "Time_End": 2548.2599999999998,
      "Text": " know what's the user name."
    },
    {
      "Time_Start": 2548.26,
      "Time_End": 2553.94,
      "Text": " But then I'll just give the password."
    },
    {
      "Time_Start": 2557.7400000000002,
      "Time_End": 2559.42,
      "Text": " So there is no user name."
    },
    {
      "Time_Start": 2559.42,
      "Time_End": 2561.26,
      "Text": " It was the reverse of Mubix talk."
    },
    {
      "Time_Start": 2564.86,
      "Time_End": 2568.94,
      "Text": " Now, let's solve it while we have the source code."
    },
    {
      "Time_Start": 2568.94,
      "Time_End": 2583.26,
      "Text": " So this is how the source code looks."
    },
    {
      "Time_Start": 2583.26,
      "Time_End": 2590.2200000000003,
      "Text": " And apparently, it's just a string comparison."
    },
    {
      "Time_Start": 2590.2200000000003,
      "Time_End": 2592.86,
      "Text": " And it does a string comparison."
    },
    {
      "Time_Start": 2592.86,
      "Time_End": 2595.7400000000002,
      "Text": " And if accepted, it prints something like,"
    },
    {
      "Time_Start": 2595.7400000000002,
      "Time_End": 2597.62,
      "Text": " welcome to the admin console."
    },
    {
      "Time_Start": 2597.66,
      "Time_End": 2599.42,
      "Text": " So if you have the source code, what"
    },
    {
      "Time_Start": 2599.42,
      "Time_End": 2601.74,
      "Text": " is the first thing that you do?"
    },
    {
      "Time_Start": 2601.74,
      "Time_End": 2604.14,
      "Text": " Where do you want to reach?"
    },
    {
      "Time_Start": 2604.14,
      "Time_End": 2605.2599999999998,
      "Text": " Where do you want to reach?"
    },
    {
      "Time_Start": 2605.2599999999998,
      "Time_End": 2606.94,
      "Text": " Put an assert statement over there."
    },
    {
      "Time_Start": 2606.94,
      "Time_End": 2608.1,
      "Text": " Include the header file."
    },
    {
      "Time_Start": 2608.1,
      "Time_End": 2608.94,
      "Text": " Then you compile it."
    },
    {
      "Time_Start": 2608.94,
      "Time_End": 2611.3399999999997,
      "Text": " It's pretty standard."
    },
    {
      "Time_Start": 2611.3399999999997,
      "Time_End": 2613.7,
      "Text": " And here, we have inputs."
    },
    {
      "Time_Start": 2613.7,
      "Time_End": 2616.38,
      "Text": " The input is the user name and the password."
    },
    {
      "Time_Start": 2616.38,
      "Time_End": 2621.06,
      "Text": " So we have to make, if it was a CTF program that"
    },
    {
      "Time_Start": 2621.06,
      "Time_End": 2625.7,
      "Text": " would take input from the terminal,"
    },
    {
      "Time_Start": 2625.7000000000003,
      "Time_End": 2629.82,
      "Text": " you can either give it as symbolic arguments"
    },
    {
      "Time_Start": 2629.82,
      "Time_End": 2632.3,
      "Text": " with the hyphen, hyphen, same that we did earlier."
    },
    {
      "Time_Start": 2632.3,
      "Time_End": 2634.9,
      "Text": " Or we can just modify it right over here."
    },
    {
      "Time_Start": 2634.9,
      "Time_End": 2637.9800000000005,
      "Text": " So I'll just modify the program."
    },
    {
      "Time_Start": 2645.78,
      "Time_End": 2647.0600000000004,
      "Text": " I haven't done my slides yet."
    },
    {
      "Time_Start": 2647.06,
      "Time_End": 2657.34,
      "Text": " So here, this code, clea.c."
    },
    {
      "Time_Start": 2657.34,
      "Time_End": 2662.5,
      "Text": " So as I said, I just modify the read statements"
    },
    {
      "Time_Start": 2662.5,
      "Time_End": 2664.06,
      "Text": " to symbolic arguments."
    },
    {
      "Time_Start": 2664.06,
      "Time_End": 2666.66,
      "Text": " So the user name, I made it as symbolic."
    },
    {
      "Time_Start": 2666.66,
      "Time_End": 2668.42,
      "Text": " And the password, I made it as symbolic."
    },
    {
      "Time_Start": 2668.42,
      "Time_End": 2670.42,
      "Text": " Because these are the things that I don't know."
    },
    {
      "Time_Start": 2670.42,
      "Time_End": 2672.42,
      "Text": " And it's a good idea to make the things that you"
    },
    {
      "Time_Start": 2672.42,
      "Time_End": 2675.94,
      "Text": " don't know as symbolic so that Clea does the hard work."
    },
    {
      "Time_Start": 2678.06,
      "Time_End": 2679.22,
      "Text": " OK."
    },
    {
      "Time_Start": 2679.22,
      "Time_End": 2680.94,
      "Text": " And I don't want to go away."
    },
    {
      "Time_Start": 2680.94,
      "Time_End": 2684.02,
      "Text": " So I just don't put the assert statement over there."
    },
    {
      "Time_Start": 2684.02,
      "Time_End": 2685.58,
      "Text": " I want to get the admin console."
    },
    {
      "Time_Start": 2685.58,
      "Time_End": 2688.82,
      "Text": " So that's where I go."
    },
    {
      "Time_Start": 2688.82,
      "Time_End": 2692.2999999999997,
      "Text": " I compile it just like you would."
    },
    {
      "Time_Start": 2692.3,
      "Time_End": 2712.34,
      "Text": " And instead of doing the symbolic arguments,"
    },
    {
      "Time_Start": 2712.34,
      "Time_End": 2716.6200000000003,
      "Text": " I'll just run the bit code."
    },
    {
      "Time_Start": 2716.6200000000003,
      "Time_End": 2721.94,
      "Text": " Because we have already made those arguments symbolic."
    },
    {
      "Time_Start": 2722.54,
      "Time_End": 2728.42,
      "Text": " So it would be something like Foxware underscore Clea dot bc."
    },
    {
      "Time_Start": 2731.02,
      "Time_End": 2732.78,
      "Text": " So we have lots of go-aways."
    },
    {
      "Time_Start": 2732.78,
      "Time_End": 2734.5,
      "Text": " It's really angry at us."
    },
    {
      "Time_Start": 2734.5,
      "Time_End": 2737.14,
      "Text": " But let me see."
    },
    {
      "Time_Start": 2737.14,
      "Time_End": 2740.06,
      "Text": " Do I see something here?"
    },
    {
      "Time_Start": 2740.06,
      "Time_End": 2741.7000000000003,
      "Text": " Welcome to the admin console."
    },
    {
      "Time_Start": 2741.7000000000003,
      "Time_End": 2751.42,
      "Text": " So obviously, I would just go K test tool,"
    },
    {
      "Time_Start": 2751.42,
      "Time_End": 2756.1800000000003,
      "Text": " Clea-latest, star.err, what?"
    },
    {
      "Time_Start": 2771.7000000000003,
      "Time_End": 2785.1000000000004,
      "Text": " Oh, yes, OK."
    },
    {
      "Time_Start": 2785.1000000000004,
      "Time_End": 2793.6200000000003,
      "Text": " So Clea figured out that key in just three tries."
    },
    {
      "Time_Start": 2793.6200000000003,
      "Time_End": 2796.94,
      "Text": " So the first one was something we can look it up."
    },
    {
      "Time_Start": 2796.94,
      "Time_End": 2799.5800000000004,
      "Text": " But then on the third try, it kind of"
    },
    {
      "Time_Start": 2799.5800000000004,
      "Time_End": 2800.9800000000005,
      "Text": " figured out what is the key."
    },
    {
      "Time_Start": 2800.98,
      "Time_End": 2803.7400000000002,
      "Text": " So that's the best thing about Clea."
    },
    {
      "Time_Start": 2803.7400000000002,
      "Time_End": 2805.58,
      "Text": " It's not a brute force solution."
    },
    {
      "Time_Start": 2805.58,
      "Time_End": 2807.22,
      "Text": " It knows what it is doing."
    },
    {
      "Time_Start": 2807.22,
      "Time_End": 2810.38,
      "Text": " And since it was a simple string comparison,"
    },
    {
      "Time_Start": 2810.38,
      "Time_End": 2813.62,
      "Text": " it knows that mango equals mango."
    },
    {
      "Time_Start": 2813.62,
      "Time_End": 2815.9,
      "Text": " There is nothing that equals to mango."
    },
    {
      "Time_Start": 2815.9,
      "Time_End": 2818.26,
      "Text": " I really like mangoes, so I don't know why I said that."
    },
    {
      "Time_Start": 2822.5,
      "Time_End": 2825.62,
      "Text": " So let's look up what this is, K test tool."
    },
    {
      "Time_Start": 2831.5,
      "Time_End": 2836.7,
      "Text": " OK, so sneaky again."
    },
    {
      "Time_Start": 2836.7,
      "Time_End": 2839.02,
      "Text": " So we solved it with anger."
    },
    {
      "Time_Start": 2839.02,
      "Time_End": 2840.54,
      "Text": " We solved it with Clea."
    },
    {
      "Time_Start": 2840.54,
      "Time_End": 2843.34,
      "Text": " And you found that this is pretty easy to do."
    },
    {
      "Time_Start": 2843.34,
      "Time_End": 2846.14,
      "Text": " This is black magic."
    },
    {
      "Time_Start": 2846.14,
      "Time_End": 2849.9,
      "Text": " So I guess that's all the time I have."
    },
    {
      "Time_Start": 2849.9,
      "Time_End": 2852.02,
      "Text": " OK, I'll just do some slides."
    },
    {
      "Time_Start": 2856.82,
      "Time_End": 2859.78,
      "Text": " So what are the limitations of Clea?"
    },
    {
      "Time_Start": 2859.78,
      "Time_End": 2861.5800000000004,
      "Text": " Path explosion."
    },
    {
      "Time_Start": 2861.5800000000004,
      "Time_End": 2864.5,
      "Text": " If we have n number of paths, and if you"
    },
    {
      "Time_Start": 2864.5,
      "Time_End": 2867.3,
      "Text": " have obfuscation in the binary, the Clea would,"
    },
    {
      "Time_Start": 2867.3,
      "Time_End": 2869.02,
      "Text": " it's not a limitation."
    },
    {
      "Time_Start": 2869.02,
      "Time_End": 2871.82,
      "Text": " It's just a restriction that the hardware"
    },
    {
      "Time_Start": 2871.82,
      "Time_End": 2876.02,
      "Text": " is imposed because it just takes so much time for Clea"
    },
    {
      "Time_Start": 2876.02,
      "Time_End": 2877.34,
      "Text": " to solve everything."
    },
    {
      "Time_Start": 2877.34,
      "Time_End": 2882.34,
      "Text": " So when you are trying this out in CTF or in your products,"
    },
    {
      "Time_Start": 2882.34,
      "Time_End": 2885.5800000000004,
      "Text": " if you have the source code, try to do it with your source code."
    },
    {
      "Time_Start": 2885.5800000000004,
      "Time_End": 2887.3,
      "Text": " Or if you don't have the source code,"
    },
    {
      "Time_Start": 2887.3,
      "Time_End": 2891.1800000000003,
      "Text": " try to single out that particular function which"
    },
    {
      "Time_Start": 2891.1800000000003,
      "Time_End": 2893.5800000000004,
      "Text": " is critical and just try to solve it."
    },
    {
      "Time_Start": 2893.5800000000004,
      "Time_End": 2896.86,
      "Text": " Don't try to symbolically execute the whole program."
    },
    {
      "Time_Start": 2896.86,
      "Time_End": 2899.5,
      "Text": " So that's something that we should take care of because"
    },
    {
      "Time_Start": 2899.5,
      "Time_End": 2901.5800000000004,
      "Text": " that just adds so much time."
    },
    {
      "Time_Start": 2901.5800000000004,
      "Time_End": 2906.1000000000004,
      "Text": " Try to minimize the function as much as possible."
    },
    {
      "Time_Start": 2906.1000000000004,
      "Time_End": 2908.02,
      "Text": " And don't try to figure out what's"
    },
    {
      "Time_Start": 2908.02,
      "Time_End": 2911.0600000000004,
      "Text": " the SHA1 hash of whatever using symbolic execution"
    },
    {
      "Time_Start": 2911.0600000000004,
      "Time_End": 2914.6600000000003,
      "Text": " because that will take forever."
    },
    {
      "Time_Start": 2914.7,
      "Time_End": 2919.3799999999997,
      "Text": " And program depend efficiency because if the program happens"
    },
    {
      "Time_Start": 2919.3799999999997,
      "Time_End": 2922.18,
      "Text": " to take just a single path, the whole point"
    },
    {
      "Time_Start": 2922.18,
      "Time_End": 2924.02,
      "Text": " of doing symbolic execution is lost"
    },
    {
      "Time_Start": 2924.02,
      "Time_End": 2926.5,
      "Text": " because it's about taking multiple paths"
    },
    {
      "Time_Start": 2926.5,
      "Time_End": 2929.3799999999997,
      "Text": " and figuring out the different solutions."
    },
    {
      "Time_Start": 2929.3799999999997,
      "Time_End": 2931.46,
      "Text": " The environmental interactions are right now"
    },
    {
      "Time_Start": 2931.46,
      "Time_End": 2934.8999999999996,
      "Text": " limited to file operations, sockets, IPC, et cetera."
    },
    {
      "Time_Start": 2934.8999999999996,
      "Time_End": 2938.1,
      "Text": " So if you have a program that does something else,"
    },
    {
      "Time_Start": 2938.1,
      "Time_End": 2941.1,
      "Text": " that part of the program might not be symbolically executed."
    },
    {
      "Time_Start": 2941.1,
      "Time_End": 2944.06,
      "Text": " So that's something that we have to take care of."
    },
    {
      "Time_Start": 2944.06,
      "Time_End": 2948.66,
      "Text": " And countermeasures, this is something"
    },
    {
      "Time_Start": 2948.66,
      "Time_End": 2951.2599999999998,
      "Text": " that people keep asking me."
    },
    {
      "Time_Start": 2951.2599999999998,
      "Time_End": 2953.02,
      "Text": " So it's not really an attack."
    },
    {
      "Time_Start": 2953.02,
      "Time_End": 2955.38,
      "Text": " It's just a way of doing things."
    },
    {
      "Time_Start": 2955.38,
      "Time_End": 2959.86,
      "Text": " And if you happen to have a license validation"
    },
    {
      "Time_Start": 2959.86,
      "Time_End": 2962.46,
      "Text": " in your program, symbolic execution"
    },
    {
      "Time_Start": 2962.46,
      "Time_End": 2965.1,
      "Text": " might be something that you should care about."
    },
    {
      "Time_Start": 2965.1,
      "Time_End": 2969.14,
      "Text": " So code obfuscation and not just jargon,"
    },
    {
      "Time_Start": 2969.14,
      "Time_End": 2971.46,
      "Text": " as in you just don't put in jargon code, which"
    },
    {
      "Time_Start": 2971.46,
      "Time_End": 2976.86,
      "Text": " is dead code, because CLE has this dead code elimination"
    },
    {
      "Time_Start": 2976.86,
      "Time_End": 2977.58,
      "Text": " thing."
    },
    {
      "Time_Start": 2977.58,
      "Time_End": 2981.18,
      "Text": " So they'll just skip ahead that dead code."
    },
    {
      "Time_Start": 2981.18,
      "Time_End": 2983.86,
      "Text": " So if you have code that depends upon the input"
    },
    {
      "Time_Start": 2983.86,
      "Time_End": 2986.38,
      "Text": " and does some transformations, then"
    },
    {
      "Time_Start": 2986.38,
      "Time_End": 2989.18,
      "Text": " you can make it to use something like a path explosion"
    },
    {
      "Time_Start": 2989.18,
      "Time_End": 2993.02,
      "Text": " and make it really difficult for a symbolic execution engine"
    },
    {
      "Time_Start": 2993.02,
      "Time_End": 2995.42,
      "Text": " to pass it in limited time."
    },
    {
      "Time_Start": 2995.42,
      "Time_End": 2996.86,
      "Text": " So that's the best you can do."
    },
    {
      "Time_Start": 2996.86,
      "Time_End": 3001.9,
      "Text": " And this is a research paper that talks in much more detail."
    },
    {
      "Time_Start": 3001.9,
      "Time_End": 3006.3,
      "Text": " I don't really have the time to go in detail about that."
    },
    {
      "Time_Start": 3006.3,
      "Time_End": 3017.54,
      "Text": " And yeah, I guess, yep."
    },
    {
      "Time_Start": 3017.54,
      "Time_End": 3019.1800000000003,
      "Text": " Thank you."
    },
    {
      "Time_Start": 3020.02,
      "Time_End": 3021.02,
      "Text": " Thank you."
    },
    {
      "Time_Start": 3027.4199999999996,
      "Time_End": 3031.2599999999998,
      "Text": " So if you have, I think I am running out of time."
    },
    {
      "Time_Start": 3031.2599999999998,
      "Time_End": 3034.2599999999998,
      "Text": " So if you have any questions, I'll be."
    }
  ]
}