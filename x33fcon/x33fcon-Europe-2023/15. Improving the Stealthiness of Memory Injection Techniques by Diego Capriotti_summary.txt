**Improving the Stealthiness of Memory Injection Techniques**

- Speaker: Diego Capriotti, Offensive Cybersecurity Team Leader at AXIOS Italy
- Focuses on improving stealth and reducing indicators of compromise (IOCs) for memory injection techniques
- Memory injection: inserting/altering code in a running process's memory, used for bypassing security, achieving stealth/persistence, or exfiltrating data
- Common injection techniques grouped into 3 categories: code injection, PE injection, and process manipulation
- Goal: choose techniques/loaders/payloads to minimize IOCs and blend into the environment
- Uses Python ctypes for dynamic memory loading, avoiding static indicators
- Memory scanners (e.g., PEC, Moneta) help identify false positives and IOCs to target for improvement
- Introduces "module shifting," combining module overloading and stomping to reduce IOCs and improve stealth
- Emphasizes the importance of choosing the right payload for functional independence and evasiveness
- Demonstrates the module shifting technique with an ASLOADER payload, resulting in zero suspicious IOCs detected by Moneta and PEC
- Detection opportunities exist, such as scanning for modified DLL behavior or runtime inspection