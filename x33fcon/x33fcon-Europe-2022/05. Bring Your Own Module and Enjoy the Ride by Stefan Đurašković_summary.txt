Stefan Đurašković presents a talk on DLL hijacking and proxying, a technique used by threat actors for over 20 years. He explains the basics of dynamic link libraries and how they work, including import and export address tables. Đurašković demonstrates how to hijack and proxy DLLs, and the requirements needed for the loader. He also discusses the advantages of proxying, such as not having to implement every function and maintaining backwards compatibility. The speaker then explores the possibilities of DLL proxying by loading modules from different directories or shares and forcing an application to hold multiple modules. A comparison is made between DLL proxying and classic injection, highlighting the differences in memory allocation, thread creation, and legitimacy. The presentation concludes with a discussion on detections, including file writing and export address table analysis, and a trick called "disappearing proxy" using DLL main.