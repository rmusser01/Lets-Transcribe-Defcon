**The Code Signing Certificate You Never Knew You Had**: Exploring Legacy Excel Features for Phishing

- Presenter identifies a vulnerability in Microsoft Excel allowing injection of code into signed documents without invalidating the signature, creating a potential phishing vector.
- A journey into uncharted legacy features of Excel, resulting in a vulnerability that enables attackers to craft signed phishing payloads.
- Starting point: desire to create a better phishing payload with user convenience and exploring various Office file types.
- Discovery of signed Excel add-ins in the Office installation directory that can be moved and modified without signature invalidation.
- Analysis of the complex trust flow in Office and Excel security dialogues, file types, and their impact on phishing.
- Deep dive into the Analysis ToolPak add-in, its functionality, and potential vulnerabilities, including the ability to load unsigned XLL files.
- Creation of a proof-of-concept exploit by modifying file names, extensions, and using formulas to determine the target system's bitness.
- Full weaponization by loading the XLL file from a remote location using WebDAV and bypassing security measures through command injection and dir traversal techniques.
- Discovery of additional exploitation methods, such as loading macro-enabled sheets and the absence of AMSI support in XL4 macros.
- Microsoft's mitigation and patching process, including hardcoding values, quote escaping, blocking old add-ins, and adding registry settings to prevent signing downgrade.
- Key takeaways: exploring legacy features can lead to significant vulnerabilities, and signed documents may exist with similar issues, emphasizing the need for proactive security measures.