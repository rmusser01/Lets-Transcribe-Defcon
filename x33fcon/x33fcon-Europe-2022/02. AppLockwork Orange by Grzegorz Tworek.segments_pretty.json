{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 10.36,
      "Text": "This text was transcribed using whisper model: large-v2\n\n So, again, I'm Grzegorz, or if you prefer, just Greg, and at some point I had to protect"
    },
    {
      "Time_Start": 10.36,
      "Time_End": 15.32,
      "Text": " some assets using AppLocker, so I decided to dig a bit deeper, scratch the surface,"
    },
    {
      "Time_Start": 15.32,
      "Time_End": 21.88,
      "Text": " to identify if AppLocker is good enough for our things."
    },
    {
      "Time_Start": 21.88,
      "Time_End": 29.44,
      "Text": " And what I would like to cover today, two AppLocker internal mechanisms giving you somehow"
    },
    {
      "Time_Start": 29.44,
      "Time_End": 32.4,
      "Text": " unexpected results."
    },
    {
      "Time_Start": 32.4,
      "Time_End": 35.760000000000005,
      "Text": " So let's go for the first one."
    },
    {
      "Time_Start": 35.760000000000005,
      "Time_End": 39.92,
      "Text": " When it comes to the AppLocker itself, AppLocker consists of a couple of components."
    },
    {
      "Time_Start": 39.92,
      "Time_End": 42.04,
      "Text": " Of course, we have some management."
    },
    {
      "Time_Start": 42.04,
      "Time_End": 46.92,
      "Text": " It is a kernel-based mechanism, but it stores its own database."
    },
    {
      "Time_Start": 46.92,
      "Time_End": 48.84,
      "Text": " It is managed from user mode."
    },
    {
      "Time_Start": 48.84,
      "Time_End": 54.120000000000005,
      "Text": " There is a special service translating the database from the user mode to the kernel"
    },
    {
      "Time_Start": 54.120000000000005,
      "Time_End": 55.120000000000005,
      "Text": " mode."
    },
    {
      "Time_Start": 55.36000000000001,
      "Time_End": 60.2,
      "Text": " The AppID SVC, which must be running to have AppLocker running, but the full thing within"
    },
    {
      "Time_Start": 60.2,
      "Time_End": 65.16000000000001,
      "Text": " AppLocker protection is done by the driver running within the kernel."
    },
    {
      "Time_Start": 65.16000000000001,
      "Time_End": 73.32000000000001,
      "Text": " AppLocker can work in enforcement mode, meaning non-listed apps, non-whitelisted apps are"
    },
    {
      "Time_Start": 73.32000000000001,
      "Time_End": 80.4,
      "Text": " not allowed to be run, and in the audit mode, meaning any single application will run, but"
    },
    {
      "Time_Start": 80.56,
      "Time_End": 86.48,
      "Text": " there will be a warning within the log telling me it would be blocked if I play seriously."
    },
    {
      "Time_Start": 86.48,
      "Time_End": 92.56,
      "Text": " When it comes to rules AppLocker can use, first very big thing about AppLocker comparing,"
    },
    {
      "Time_Start": 92.56,
      "Time_End": 101.12,
      "Text": " for example, to WDAC is it can rely on user identity, but generally saying rules can be"
    },
    {
      "Time_Start": 101.12,
      "Time_End": 106.56,
      "Text": " made for a path, so if the path matches the application is allowed or not."
    },
    {
      "Time_Start": 106.72,
      "Time_End": 113.28,
      "Text": " A rule can be made based on a hash, so the hash of the file is being calculated, and"
    },
    {
      "Time_Start": 113.28,
      "Time_End": 118.4,
      "Text": " if the hash matches the application is being allowed, and on the digital signature."
    },
    {
      "Time_Start": 118.4,
      "Time_End": 125.36,
      "Text": " I will focus on hash rules as those are the simplest ones to show you today what I want"
    },
    {
      "Time_Start": 125.36,
      "Time_End": 126.36,
      "Text": " to show you."
    },
    {
      "Time_Start": 126.36,
      "Time_End": 134.24,
      "Text": " Okay, let's go to the imperfection number one, because generally saying I have my AppLocker"
    },
    {
      "Time_Start": 134.24,
      "Time_End": 138.48000000000002,
      "Text": " up and running, it is working in the audit mode, I can quickly verify it here, going"
    },
    {
      "Time_Start": 138.48000000000002,
      "Time_End": 145.88,
      "Text": " to properties, I can see it is for executable only, configured within the audit only mode,"
    },
    {
      "Time_Start": 145.88,
      "Time_End": 152.84,
      "Text": " and I have kind of a typical configuration, meaning if something is within the program"
    },
    {
      "Time_Start": 152.84,
      "Time_End": 159.72,
      "Text": " files it is allowed to be run, as regular user cannot drop software there, and if something"
    },
    {
      "Time_Start": 159.72,
      "Time_End": 163.14000000000001,
      "Text": " is within Windows folder it's also allowed to be run."
    },
    {
      "Time_Start": 163.14000000000001,
      "Time_End": 172.82000000000002,
      "Text": " If I run anything, let's do this with CharMap, my favorite, it's even better than calculator,"
    },
    {
      "Time_Start": 172.82000000000002,
      "Time_End": 179.70000000000002,
      "Text": " CharMap is up and running, if I go to the event log, F5, I can see CharMap was allowed"
    },
    {
      "Time_Start": 179.70000000000002,
      "Time_End": 186.42000000000002,
      "Text": " to run, which is quite obvious as it stays within the Windows folder."
    },
    {
      "Time_Start": 186.42000000000002,
      "Time_End": 193.06,
      "Text": " Generally, for the simplicity, when AppLocker is being deployed, at least at the initial"
    },
    {
      "Time_Start": 193.06,
      "Time_End": 198.78000000000003,
      "Text": " stage, we are not deploying rules for DLL files, we are focusing on executable files"
    },
    {
      "Time_Start": 198.78000000000003,
      "Time_End": 202.70000000000002,
      "Text": " on exists only, because it is simpler."
    },
    {
      "Time_Start": 202.70000000000002,
      "Time_End": 207.70000000000002,
      "Text": " When we go deeper into the AppLocker, we can realize one thing."
    },
    {
      "Time_Start": 207.70000000000002,
      "Time_End": 216.06,
      "Text": " If within the token of the process there is a seed present, S156, AppLocker totally"
    },
    {
      "Time_Start": 216.06,
      "Time_End": 219.74,
      "Text": " ignores such executable file."
    },
    {
      "Time_Start": 219.74,
      "Time_End": 227.86,
      "Text": " So I can steal such token or I can use a trick allowing me to have such token without being"
    },
    {
      "Time_Start": 227.86,
      "Time_End": 228.86,
      "Text": " blocked."
    },
    {
      "Time_Start": 229.02,
      "Time_End": 237.70000000000002,
      "Text": " I will elevate to my process using this token, using a DLL."
    },
    {
      "Time_Start": 237.70000000000002,
      "Time_End": 244.54000000000002,
      "Text": " So it will be basically run DLL 32, as this one is allowed as it's in the Windows folder,"
    },
    {
      "Time_Start": 244.54000000000002,
      "Time_End": 249.3,
      "Text": " and I rarely can find environments where it can be actually blocked."
    },
    {
      "Time_Start": 249.3,
      "Time_End": 258.74,
      "Text": " And then there is a DLL, ignoreAppLocker.dll, there is a function, do it, and then C, Windows"
    },
    {
      "Time_Start": 258.74,
      "Time_End": 265.78000000000003,
      "Text": " system 32, and then CMD, and the CMD is being launched."
    },
    {
      "Time_Start": 265.78000000000003,
      "Time_End": 276.3,
      "Text": " If I try to investigate what is inside, who am I, slash all, I can find the seed I mentioned"
    },
    {
      "Time_Start": 276.3,
      "Time_End": 277.3,
      "Text": " S156."
    },
    {
      "Time_Start": 277.3,
      "Time_End": 280.7,
      "Text": " Here, it is a special seed for a service."
    },
    {
      "Time_Start": 280.7,
      "Time_End": 285.54,
      "Text": " So I have launched first process right now, I can say, the second one, the CMD itself,"
    },
    {
      "Time_Start": 285.54,
      "Time_End": 292.7,
      "Text": " the who am I process, I can launch whatever, notepad, it is allowed."
    },
    {
      "Time_Start": 292.7,
      "Time_End": 300.58000000000004,
      "Text": " On my desktop, I have yet another special application, writeAAA, a special application"
    },
    {
      "Time_Start": 300.58000000000004,
      "Time_End": 305.22,
      "Text": " writing 100 A letters, which is perfectly well working."
    },
    {
      "Time_Start": 305.22,
      "Time_End": 311.92,
      "Text": " If I refresh the log, absolutely nothing about this is appearing within the log."
    },
    {
      "Time_Start": 311.92,
      "Time_End": 317.26000000000005,
      "Text": " The last thing that appeared was run DLL, which is allowed absolutely everywhere."
    },
    {
      "Time_Start": 317.26000000000005,
      "Time_End": 326.70000000000005,
      "Text": " So if you are able to launch a process, having S156 within the token, it will be just ignored"
    },
    {
      "Time_Start": 326.70000000000005,
      "Time_End": 333.58000000000004,
      "Text": " by the AppLocker, not enforced, not logged, not audited, not blocked, whatever."
    },
    {
      "Time_Start": 333.58,
      "Time_End": 339.09999999999997,
      "Text": " It will just totally ignore, and it is for this single particular seed."
    },
    {
      "Time_Start": 339.09999999999997,
      "Time_End": 346.26,
      "Text": " So it is good to monitor somehow if you have a process running with the seed."
    },
    {
      "Time_Start": 346.26,
      "Time_End": 349.78,
      "Text": " Under normal conditions, it is only about services."
    },
    {
      "Time_Start": 349.78,
      "Time_End": 356.74,
      "Text": " It is a legal seed for services, but not for interactive applications, so you have to find"
    },
    {
      "Time_Start": 356.74,
      "Time_End": 358.62,
      "Text": " your way to monitor somehow."
    },
    {
      "Time_Start": 358.62,
      "Time_End": 359.62,
      "Text": " Okay."
    },
    {
      "Time_Start": 359.66,
      "Time_End": 363.38,
      "Text": " Let's go to the second AppLocker nice thing."
    },
    {
      "Time_Start": 363.38,
      "Time_End": 368.82,
      "Text": " It is about the speed, because I mentioned hashes."
    },
    {
      "Time_Start": 368.82,
      "Time_End": 373.9,
      "Text": " Calculating a hash is somehow, I would say, time consuming."
    },
    {
      "Time_Start": 373.9,
      "Time_End": 374.9,
      "Text": " Why?"
    },
    {
      "Time_Start": 374.9,
      "Time_End": 380.26,
      "Text": " Not only because of the calculation itself, but about the need of reading entire file"
    },
    {
      "Time_Start": 380.26,
      "Time_End": 382.62,
      "Text": " from the disk."
    },
    {
      "Time_Start": 382.62,
      "Time_End": 387.26,
      "Text": " Windows introduces prefetch, et cetera, all for the speed."
    },
    {
      "Time_Start": 387.26,
      "Time_End": 394.9,
      "Text": " At the same time, using AppLocker with hashing every single executable file or DLL file being"
    },
    {
      "Time_Start": 394.9,
      "Time_End": 399.46,
      "Text": " launched would slow down the computer significantly."
    },
    {
      "Time_Start": 399.46,
      "Time_End": 406.38,
      "Text": " So I will create a rule based on hash for the file I already have run."
    },
    {
      "Time_Start": 406.38,
      "Time_End": 416.02,
      "Text": " So create new rule, next, allow for everyone, file hash, next, browse files, I will go to"
    },
    {
      "Time_Start": 416.06,
      "Time_End": 424.06,
      "Text": " my file, I have it on the desktop, this is the one, write AAA, open, next, create, I"
    },
    {
      "Time_Start": 424.06,
      "Time_End": 425.53999999999996,
      "Text": " have a rule for it."
    },
    {
      "Time_Start": 425.53999999999996,
      "Time_End": 432.94,
      "Text": " If I will close this one as this one is ignored anyway, I will go here, I will run this piece"
    },
    {
      "Time_Start": 432.94,
      "Time_End": 442.02,
      "Text": " of code, write AAA, 100 letter A appears on the screen, F5, it was allowed to run right"
    },
    {
      "Time_Start": 442.02,
      "Time_End": 447.21999999999997,
      "Text": " now, which is perfectly according to our expectations."
    },
    {
      "Time_Start": 447.21999999999997,
      "Time_End": 448.21999999999997,
      "Text": " What I will do now?"
    },
    {
      "Time_Start": 448.21999999999997,
      "Time_End": 456.78,
      "Text": " I will do a virtual way of unplugging my hard disk, manipulating it on another computer,"
    },
    {
      "Time_Start": 456.78,
      "Time_End": 459.06,
      "Text": " and then plugging it back to my laptop."
    },
    {
      "Time_Start": 459.06,
      "Time_End": 462.7,
      "Text": " So how I will achieve this?"
    },
    {
      "Time_Start": 462.7,
      "Time_End": 477.42,
      "Text": " I will go here, attach VHD, and then the name is xvhdx, and new x drive appears within"
    },
    {
      "Time_Start": 477.42,
      "Time_End": 478.7,
      "Text": " my system."
    },
    {
      "Time_Start": 478.7,
      "Time_End": 488.78,
      "Text": " I will go here, I will copy, write AAA into the x drive, it was copied, if I run it from"
    },
    {
      "Time_Start": 488.78000000000003,
      "Time_End": 497.06,
      "Text": " the x drive, obviously it will run, and it will be allowed to be run, x write AAA, because"
    },
    {
      "Time_Start": 497.06,
      "Time_End": 499.98,
      "Text": " the hash clearly matches."
    },
    {
      "Time_Start": 499.98,
      "Time_End": 511.54,
      "Text": " I will manipulate this disk offline right now by detaching the VHD, yes, going to hex"
    },
    {
      "Time_Start": 511.54,
      "Time_End": 522.86,
      "Text": " editor, loading the VHD, finding the pattern, it is here, and I will replace the pattern"
    },
    {
      "Time_Start": 522.86,
      "Time_End": 531.1,
      "Text": " within the executable file, a couple of my A letters with an X letter, close, reattach"
    },
    {
      "Time_Start": 531.1,
      "Time_End": 552.22,
      "Text": " it, sorry, it is c temp xvhdx, okay, it appeared again, and I will run the same x write AAA"
    },
    {
      "Time_Start": 552.22,
      "Time_End": 557.5400000000001,
      "Text": " with the image being manipulated offline, and not a big surprise, I have a couple of"
    },
    {
      "Time_Start": 557.54,
      "Time_End": 561.0999999999999,
      "Text": " X letter over here."
    },
    {
      "Time_Start": 561.0999999999999,
      "Time_End": 565.3399999999999,
      "Text": " Do the hash of the executable file match the previous one?"
    },
    {
      "Time_Start": 565.3399999999999,
      "Time_End": 567.14,
      "Text": " Not really."
    },
    {
      "Time_Start": 567.14,
      "Time_End": 575.9399999999999,
      "Text": " If I take a look into the log, over here, F5, here, hex editor was not allowed to be"
    },
    {
      "Time_Start": 575.9399999999999,
      "Time_End": 582.5,
      "Text": " run, not a big surprise, but the write AAA, the manipulated one, was perfectly well allowed"
    },
    {
      "Time_Start": 582.5,
      "Time_End": 584.98,
      "Text": " to be run."
    },
    {
      "Time_Start": 584.98,
      "Time_End": 591.74,
      "Text": " It means the hash of the file is being cached somewhere."
    },
    {
      "Time_Start": 591.74,
      "Time_End": 601.86,
      "Text": " I will try to find it, okay, let's go for the hashes first, CLS, and I will go PowerShell,"
    },
    {
      "Time_Start": 601.86,
      "Time_End": 610.62,
      "Text": " and get file hash for write AAA, the original one still staying on my desktop has a hash"
    },
    {
      "Time_Start": 610.62,
      "Time_End": 621.82,
      "Text": " d35 and so on, the manipulated one, get file hash x write AAA has a totally different one,"
    },
    {
      "Time_Start": 621.82,
      "Time_End": 627.18,
      "Text": " which is not a big surprise, it is just a different executable file."
    },
    {
      "Time_Start": 627.18,
      "Time_End": 632.98,
      "Text": " Let's take a look on the PowerShell rule, on the uploader rules right now."
    },
    {
      "Time_Start": 632.98,
      "Time_End": 649.1,
      "Text": " So, it would be get uploader policy local, and then to XML, and here I can find the hash"
    },
    {
      "Time_Start": 649.1,
      "Time_End": 651.34,
      "Text": " being allowed."
    },
    {
      "Time_Start": 651.34,
      "Time_End": 653.9,
      "Text": " Does it match any of those?"
    },
    {
      "Time_Start": 653.9,
      "Time_End": 656.9,
      "Text": " It is schwa256, obviously."
    },
    {
      "Time_Start": 656.9,
      "Time_End": 661.74,
      "Text": " It is something else, not the first one, not the second one."
    },
    {
      "Time_Start": 661.74,
      "Time_End": 666.78,
      "Text": " It is because, the beauty of the uploader, it lies about the hashing algorithm."
    },
    {
      "Time_Start": 666.78,
      "Time_End": 669.22,
      "Text": " It is not schwa256."
    },
    {
      "Time_Start": 669.22,
      "Time_End": 678.22,
      "Text": " It is so-called, it is not officially stated, but it is so-called executable hash, or authentic"
    },
    {
      "Time_Start": 678.22,
      "Time_End": 679.74,
      "Text": " code hash, and so on."
    },
    {
      "Time_Start": 679.74,
      "Time_End": 685.34,
      "Text": " The algorithm is documented, but no one is clearly saying uploader is using it."
    },
    {
      "Time_Start": 685.34,
      "Time_End": 688.54,
      "Text": " So it is yet totally different hash."
    },
    {
      "Time_Start": 688.54,
      "Time_End": 694.0999999999999,
      "Text": " By the way, if you have hashes of your files, and you want to create uploader rules based"
    },
    {
      "Time_Start": 694.0999999999999,
      "Time_End": 699.6999999999999,
      "Text": " on your hashes, you will fail, because uploader will not use real schwa256."
    },
    {
      "Time_Start": 699.6999999999999,
      "Time_End": 706.14,
      "Text": " There is undocumented XML parameter called schwa256 flat, being actually schwa256."
    },
    {
      "Time_Start": 706.14,
      "Time_End": 713.0999999999999,
      "Text": " At the same time, I would not rely on this too much, as it is undocumented."
    },
    {
      "Time_Start": 713.0999999999999,
      "Time_End": 717.9399999999999,
      "Text": " So, how to calculate this hash if you have a file?"
    },
    {
      "Time_Start": 717.94,
      "Time_End": 729.46,
      "Text": " Get uplocker file information, and then you can specify a file, and the hash, you can"
    },
    {
      "Time_Start": 729.46,
      "Time_End": 730.46,
      "Text": " see only the beginning."
    },
    {
      "Time_Start": 730.46,
      "Time_End": 736.0600000000001,
      "Text": " I will not format it nicely over here, but you can see it is exactly the hash over here."
    },
    {
      "Time_Start": 736.0600000000001,
      "Time_End": 742.0200000000001,
      "Text": " Not being schwa256 at all, despite what Microsoft is telling us."
    },
    {
      "Time_Start": 742.0200000000001,
      "Time_End": 743.0200000000001,
      "Text": " Okay."
    },
    {
      "Time_Start": 743.0200000000001,
      "Time_End": 745.5400000000001,
      "Text": " So, this is about hashing algorithm."
    },
    {
      "Time_Start": 745.54,
      "Time_End": 753.86,
      "Text": " Now about how the hash is being stored, where is the hash, and how it was manipulated."
    },
    {
      "Time_Start": 753.86,
      "Time_End": 762.74,
      "Text": " The hash for uplocker is being stored within so-called NTFS extended attributes."
    },
    {
      "Time_Start": 762.74,
      "Time_End": 769.0999999999999,
      "Text": " You can think about NTFS extended attributes somehow like you think about alternate data"
    },
    {
      "Time_Start": 769.0999999999999,
      "Time_End": 770.0999999999999,
      "Text": " stream."
    },
    {
      "Time_Start": 770.0999999999999,
      "Time_End": 773.02,
      "Text": " It's not the same, but it is somehow comparable."
    },
    {
      "Time_Start": 773.02,
      "Time_End": 777.14,
      "Text": " It is kind of alternate data stream on steroids, and so on."
    },
    {
      "Time_Start": 777.14,
      "Time_End": 782.74,
      "Text": " So, if you want to display, I will exit my PowerShell."
    },
    {
      "Time_Start": 782.74,
      "Time_End": 787.78,
      "Text": " If you want to display extended attributes, I will launch one console more."
    },
    {
      "Time_Start": 787.78,
      "Time_End": 794.02,
      "Text": " It will be useful in a moment."
    },
    {
      "Time_Start": 794.02,
      "Time_End": 807.42,
      "Text": " So, fsutil file extended attribute, fsutil file, and there is a query AA parameter for"
    },
    {
      "Time_Start": 807.42,
      "Time_End": 810.62,
      "Text": " querying extended attributes."
    },
    {
      "Time_Start": 810.62,
      "Time_End": 817.14,
      "Text": " If you specify a file, let's say write AA, you will see extended attributes displayed"
    },
    {
      "Time_Start": 817.14,
      "Time_End": 818.14,
      "Text": " over here."
    },
    {
      "Time_Start": 818.14,
      "Time_End": 826.38,
      "Text": " You can see the attribute hash info containing a cache of the hash."
    },
    {
      "Time_Start": 826.38,
      "Time_End": 835.42,
      "Text": " And if you remember the hash, the one visible over here, 6E3 and so on, you can clearly"
    },
    {
      "Time_Start": 835.42,
      "Time_End": 837.9399999999999,
      "Text": " find it over here as well."
    },
    {
      "Time_Start": 837.9399999999999,
      "Time_End": 842.02,
      "Text": " This is the uplocker hash of the file being stored within the extended attribute."
    },
    {
      "Time_Start": 842.26,
      "Time_End": 848.62,
      "Text": " So, if you manipulate the file offline, the extended attribute is not updated."
    },
    {
      "Time_Start": 848.62,
      "Time_End": 850.78,
      "Text": " There is no reason of doing it."
    },
    {
      "Time_Start": 850.78,
      "Time_End": 857.3,
      "Text": " And it means that the extended attribute contains the old hash, which is perfectly well trusted"
    },
    {
      "Time_Start": 857.3,
      "Time_End": 859.42,
      "Text": " by the uplocker driver."
    },
    {
      "Time_Start": 859.42,
      "Time_End": 864.9,
      "Text": " So, how we can manipulate the hash slightly better way?"
    },
    {
      "Time_Start": 864.9,
      "Time_End": 865.9,
      "Text": " It's not that easy."
    },
    {
      "Time_Start": 865.9,
      "Time_End": 870.8199999999999,
      "Text": " The idea of extended attribute is, I would say, well documented."
    },
    {
      "Time_Start": 870.82,
      "Time_End": 877.1800000000001,
      "Text": " And there are two things over here within the name of the extended attribute."
    },
    {
      "Time_Start": 877.1800000000001,
      "Time_End": 881.38,
      "Text": " The first thing within the name is the $kernel."
    },
    {
      "Time_Start": 881.38,
      "Time_End": 888.6600000000001,
      "Text": " The attribute, if the attribute name starts with the $kernel, it is allowed to be manipulated"
    },
    {
      "Time_Start": 888.6600000000001,
      "Time_End": 890.5,
      "Text": " only by the kernel modules."
    },
    {
      "Time_Start": 890.5,
      "Time_End": 896.34,
      "Text": " So, you cannot create, manipulate, change, delete, whatever, such attribute from the"
    },
    {
      "Time_Start": 896.34,
      "Time_End": 897.34,
      "Text": " user mode."
    },
    {
      "Time_Start": 897.82,
      "Time_End": 902.7,
      "Text": " It is why it may be easier to manipulate the drive offline, or if you want to plant your"
    },
    {
      "Time_Start": 902.7,
      "Time_End": 905.86,
      "Text": " own driver into a kernel, up to you."
    },
    {
      "Time_Start": 905.86,
      "Time_End": 912.86,
      "Text": " Another thing within the extended attribute is the part, part of the name."
    },
    {
      "Time_Start": 912.86,
      "Time_End": 921.58,
      "Text": " When you can see the part within the name after $kernel, it is a signal for the NTFS.sys"
    },
    {
      "Time_Start": 921.58,
      "Time_End": 929.74,
      "Text": " driver, telling NTFS.sys driver, if the file content is being manipulated anyway, the extended"
    },
    {
      "Time_Start": 929.74,
      "Time_End": 932.82,
      "Text": " attribute must be removed totally."
    },
    {
      "Time_Start": 932.82,
      "Time_End": 937.38,
      "Text": " It is why I cannot change the file online."
    },
    {
      "Time_Start": 937.38,
      "Time_End": 939.7,
      "Text": " I have to go under NTFS driver."
    },
    {
      "Time_Start": 939.7,
      "Time_End": 946.1800000000001,
      "Text": " If I can do this online, under the NTFS driver, it will be perfectly legit for my purposes."
    },
    {
      "Time_Start": 946.1800000000001,
      "Time_End": 952.98,
      "Text": " Doing it on the VHDX drive is just simpler and easier to demonstrate."
    },
    {
      "Time_Start": 952.98,
      "Time_End": 958.0200000000001,
      "Text": " So, if I manipulate the file, the extended attribute will disappear, and if I run the"
    },
    {
      "Time_Start": 958.0200000000001,
      "Time_End": 963.34,
      "Text": " file again, the hash will be calculated, the new extended attribute will be established,"
    },
    {
      "Time_Start": 963.34,
      "Time_End": 968.7800000000001,
      "Text": " and a blocker will start relying on this extended attribute."
    },
    {
      "Time_Start": 968.7800000000001,
      "Time_End": 974.2600000000001,
      "Text": " I know manipulating the string within the file, it is not that complex, but sometimes it may"
    },
    {
      "Time_Start": 974.26,
      "Time_End": 979.86,
      "Text": " be, sometimes maybe something more sophisticated is needed."
    },
    {
      "Time_Start": 979.86,
      "Time_End": 987.98,
      "Text": " For this purpose, I can plant this particular hash within the extended attribute."
    },
    {
      "Time_Start": 987.98,
      "Time_End": 998.8199999999999,
      "Text": " So, I will copy my hacking application to the X drive, and I will use setup blocker"
    },
    {
      "Time_Start": 998.82,
      "Time_End": 1008.74,
      "Text": " a hash cache file I have created for the X, my hacking application, and I will place"
    },
    {
      "Time_Start": 1008.74,
      "Time_End": 1010.2600000000001,
      "Text": " the hash over here."
    },
    {
      "Time_Start": 1010.2600000000001,
      "Time_End": 1012.0600000000001,
      "Text": " I'm doing a simple trick here."
    },
    {
      "Time_Start": 1012.0600000000001,
      "Time_End": 1017.5400000000001,
      "Text": " As I said, I cannot create a dollar kernel extended attribute, it is not allowed for"
    },
    {
      "Time_Start": 1017.5400000000001,
      "Time_End": 1018.5400000000001,
      "Text": " mere mortals."
    },
    {
      "Time_Start": 1018.5400000000001,
      "Time_End": 1025.3400000000001,
      "Text": " At the same time, I can create a hash kernel and so on extended attribute, and this is"
    },
    {
      "Time_Start": 1025.34,
      "Time_End": 1029.82,
      "Text": " what I did, and I'm displaying a nice message."
    },
    {
      "Time_Start": 1029.82,
      "Time_End": 1035.4599999999998,
      "Text": " Now it is your job to rename it somehow from the hash kernel into the dollar kernel."
    },
    {
      "Time_Start": 1035.4599999999998,
      "Time_End": 1049.8999999999999,
      "Text": " So, to do this, I will again detach VHD, okay, I will again run a hex editor, reopen the"
    },
    {
      "Time_Start": 1049.9,
      "Time_End": 1062.5400000000002,
      "Text": " same file, and use control R for replace, and I will replace hash kernel dot into the"
    },
    {
      "Time_Start": 1062.5400000000002,
      "Time_End": 1074.5,
      "Text": " dollar kernel dot, replace all, and it was replaced, you can see it was this occurrence,"
    },
    {
      "Time_Start": 1074.5,
      "Time_End": 1077.38,
      "Text": " so it is probably the right one, it was the hash."
    },
    {
      "Time_Start": 1077.38,
      "Time_End": 1087.22,
      "Text": " Something would be dollar something, I will close it, I will reattach my virtual drive,"
    },
    {
      "Time_Start": 1087.22,
      "Time_End": 1103.22,
      "Text": " attach C temp XVHDX, again, attach, once I have edited one file and attach another one,"
    },
    {
      "Time_Start": 1103.22,
      "Time_End": 1106.0200000000002,
      "Text": " it is even worse than misspelling the path."
    },
    {
      "Time_Start": 1106.02,
      "Time_End": 1123.42,
      "Text": " So, VHD temp XVHDX, it appeared, I have my hacking application, xpwn.exe, it ran, if"
    },
    {
      "Time_Start": 1123.42,
      "Time_End": 1132.3,
      "Text": " you take a look into the log, it was perfectly well allowed to be run, even if it is obviously,"
    },
    {
      "Time_Start": 1132.3,
      "Time_End": 1138.74,
      "Text": " or it should be obviously being blocked by a blocker, this warning is about the hex editor,"
    },
    {
      "Time_Start": 1138.74,
      "Time_End": 1144.3,
      "Text": " which for reason is being displayed here, as it is not covered by any rule, so it is"
    },
    {
      "Time_Start": 1144.3,
      "Time_End": 1148.3,
      "Text": " not effectively allowed."
    },
    {
      "Time_Start": 1148.3,
      "Time_End": 1151.78,
      "Text": " So, what does it mean?"
    },
    {
      "Time_Start": 1151.78,
      "Time_End": 1154.3,
      "Text": " We can manipulate the stuff."
    },
    {
      "Time_Start": 1154.3,
      "Time_End": 1164.5,
      "Text": " A blocker is using some undocumented internals, the first one I would mention is it is ignoring"
    },
    {
      "Time_Start": 1164.5,
      "Time_End": 1173.5,
      "Text": " S156 processes when the token has S156 on the list, on the group, being very precise."
    },
    {
      "Time_Start": 1173.5,
      "Time_End": 1182.58,
      "Text": " The second thing is it relies on hashes, and the hash does not really match SWA256, even"
    },
    {
      "Time_Start": 1182.58,
      "Time_End": 1184.58,
      "Text": " if a blocker tries to tell you so."
    },
    {
      "Time_Start": 1184.58,
      "Time_End": 1191.78,
      "Text": " The second thing, it relies on the cache of the hashes, and on the cache of the digital"
    },
    {
      "Time_Start": 1191.78,
      "Time_End": 1193.3,
      "Text": " signature as well."
    },
    {
      "Time_Start": 1193.3,
      "Time_End": 1197.9399999999998,
      "Text": " Because for the hashes, it does not look like very practical, but we can use exactly the"
    },
    {
      "Time_Start": 1197.9399999999998,
      "Time_End": 1208.1,
      "Text": " same technique, and it will work, to falsify the digital signature for Microsoft, for example."
    },
    {
      "Time_Start": 1208.1000000000001,
      "Time_End": 1218.7800000000002,
      "Text": " Suppose if the file is being digitally signed, here you can see, where is my F7, ok, I will"
    },
    {
      "Time_Start": 1218.7800000000002,
      "Time_End": 1230.22,
      "Text": " type the very complex command again, fsutil filequeryaa x writeaa."
    },
    {
      "Time_Start": 1230.22,
      "Time_End": 1235.5400000000002,
      "Text": " If the file is being digitally signed, I have digitally signed my application, the digital"
    },
    {
      "Time_Start": 1235.54,
      "Time_End": 1242.26,
      "Text": " signature will be stored within the AID3 stream, and the external attribute will be"
    },
    {
      "Time_Start": 1242.26,
      "Time_End": 1248.54,
      "Text": " called kernel purge, not very surprising, app ID for a blocker, and then signer info."
    },
    {
      "Time_Start": 1248.54,
      "Time_End": 1255.7,
      "Text": " You can manipulate this particular piece of information as well, effectively meaning that"
    },
    {
      "Time_Start": 1255.7,
      "Time_End": 1260.86,
      "Text": " if you are using a blocker, probably you whitelist some applications on the digital signature,"
    },
    {
      "Time_Start": 1260.8600000000001,
      "Time_End": 1266.66,
      "Text": " a very common practice is to whitelist Microsoft things, because Microsoft tries to store stuff"
    },
    {
      "Time_Start": 1266.66,
      "Time_End": 1272.5400000000002,
      "Text": " within the user profile, app data, and so on, so it is safe to whitelist anything from"
    },
    {
      "Time_Start": 1272.5400000000002,
      "Time_End": 1273.5400000000002,
      "Text": " Microsoft."
    },
    {
      "Time_Start": 1273.5400000000002,
      "Time_End": 1280.7800000000002,
      "Text": " Effectively, if you are able to offline put such cache information about Microsoft signature"
    },
    {
      "Time_Start": 1280.7800000000002,
      "Time_End": 1289.18,
      "Text": " onto a file on the offline media, if you plug the media in back, and if you run the executable"
    },
    {
      "Time_Start": 1289.18,
      "Time_End": 1296.46,
      "Text": " file, a blocker will believe it is perfectly legit, because it is digitally signed by"
    },
    {
      "Time_Start": 1296.46,
      "Time_End": 1297.78,
      "Text": " Microsoft."
    },
    {
      "Time_Start": 1297.78,
      "Time_End": 1301.98,
      "Text": " By the way, yet another beautiful thing within a blocker."
    },
    {
      "Time_Start": 1301.98,
      "Time_End": 1306.8200000000002,
      "Text": " We have a PowerShell commandlet about testing a blocker policy."
    },
    {
      "Time_Start": 1306.8200000000002,
      "Time_End": 1311.5800000000002,
      "Text": " Test a blocker policy, you have to specify XML file, and then executable file name, and"
    },
    {
      "Time_Start": 1311.5800000000002,
      "Time_End": 1316.46,
      "Text": " you will see if this file will be allowed to be run, or not really."
    },
    {
      "Time_Start": 1316.46,
      "Time_End": 1328.3,
      "Text": " The test a blocker policy commandlet is using a real calculated on-demand hash of the file,"
    },
    {
      "Time_Start": 1328.3,
      "Time_End": 1329.78,
      "Text": " and not the stored one."
    },
    {
      "Time_Start": 1329.78,
      "Time_End": 1336.1000000000001,
      "Text": " So it is perfectly possible to see, I will not export XML policy and so on, but it is"
    },
    {
      "Time_Start": 1336.1000000000001,
      "Time_End": 1337.46,
      "Text": " very easy."
    },
    {
      "Time_Start": 1337.46,
      "Time_End": 1343.82,
      "Text": " My file with the manipulated hash will run as a blocker will trust it."
    },
    {
      "Time_Start": 1343.82,
      "Time_End": 1349.22,
      "Text": " If I test it through PowerShell, I will see information it will be not allowed to be run."
    },
    {
      "Time_Start": 1349.22,
      "Time_End": 1353.98,
      "Text": " Because the test command relies on the real content of the file, and the blocker itself"
    },
    {
      "Time_Start": 1353.98,
      "Time_End": 1356.22,
      "Text": " relies on its hash."
    },
    {
      "Time_Start": 1356.22,
      "Time_End": 1358.6599999999999,
      "Text": " They went too fast a bit, I would say."
    },
    {
      "Time_Start": 1358.6599999999999,
      "Time_End": 1365.1799999999998,
      "Text": " When it comes to resources, there is a short write-up somewhere, there is a file for copying"
    },
    {
      "Time_Start": 1365.1799999999998,
      "Time_End": 1371.54,
      "Text": " extended attributes from one file to another one, something I didn't present but also working."
    },
    {
      "Time_Start": 1371.54,
      "Time_End": 1376.54,
      "Text": " There is also a short demonstration on YouTube I have recorded, if you are quick enough you"
    },
    {
      "Time_Start": 1376.54,
      "Time_End": 1382.98,
      "Text": " can type it in, if you prefer go to the list of those things, you can go by the code."
    },
    {
      "Time_Start": 1382.98,
      "Time_End": 1383.98,
      "Text": " And that's basically it."
    },
    {
      "Time_Start": 1383.98,
      "Time_End": 1384.98,
      "Text": " Thank you very much."
    }
  ]
}