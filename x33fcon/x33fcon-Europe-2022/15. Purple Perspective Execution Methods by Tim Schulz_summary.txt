The talk focuses on execution methods, which are needed for various adversary behaviors in MITRE ATT&CK but remain a challenge for defenders. Execution methods offer flexibility and expertise, with operating systems designed to cater to a wide range of users and use cases. The challenge lies in the vast attack surface, as operating systems provide numerous ways to execute code, and new methods are constantly being developed. The speaker provides a roadmap for the discussion, covering the cycle of execution methods, testing methods and tools, an in-depth look at Windows PowerShell, and the Lullabass project. They emphasize the importance of focusing on specific questions during testing, such as breaking down the technique of process discovery (T1057) and analyzing the artifacts generated. The speaker also highlights the need to understand the data sources, collection methods, and analysis techniques for effective detection. PowerShell is used as a case study, demonstrating various variations that can impact detections, such as downgrading to version 2, truncating logging, obfuscation techniques, and unmanaged PowerShell. Additionally, the speaker introduces the concept of "bring your own" execution methods, where adversaries can rename or modify signed binaries to evade detections. Finally, the discussion turns to the Lullabass project, which explores Living off the Land Binaries (LoLBins) and unexpected functionalities that can be exploited. The project provides examples of how to execute payloads using MSBuild, highlighting the importance of understanding the complexities of different execution methods.