{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 16.4,
      "Text": "This text was transcribed using whisper model: large-v2\n\n So, welcome again, and this is the last presentation on this awesome event."
    },
    {
      "Time_Start": 16.4,
      "Time_End": 22.72,
      "Text": " And today I'm going to talk about attacking AWS, and the kill chain I'm going to present"
    },
    {
      "Time_Start": 22.72,
      "Time_End": 28.52,
      "Text": " is a little bit interactive, and if you want to decide which steps should be taken, please"
    },
    {
      "Time_Start": 28.52,
      "Time_End": 30.24,
      "Text": " follow this link."
    },
    {
      "Time_Start": 30.24,
      "Time_End": 35.28,
      "Text": " Slides should be changed automatically."
    },
    {
      "Time_Start": 35.28,
      "Time_End": 41.4,
      "Text": " Should be, because this is the first, this is my experiment with this presentation, so"
    },
    {
      "Time_Start": 41.4,
      "Time_End": 45.0,
      "Text": " we'll see how it works with you."
    },
    {
      "Time_Start": 45.0,
      "Time_End": 52.44,
      "Text": " So I'm working in a securing company, and I'm doing on my daily basis, I'm doing penetration"
    },
    {
      "Time_Start": 52.44,
      "Time_End": 61.0,
      "Text": " tests and also cloud security assessment, and regarding this cloud security assessment,"
    },
    {
      "Time_Start": 61.0,
      "Time_End": 64.6,
      "Text": " today I will share my experience."
    },
    {
      "Time_Start": 64.6,
      "Time_End": 71.6,
      "Text": " So the link to the interactive part, you can see here, it is still the same on every question,"
    },
    {
      "Time_Start": 71.6,
      "Time_End": 80.8,
      "Text": " so it is not changed, but my first question to you is how comfortable do you feel in AWS?"
    },
    {
      "Time_Start": 80.8,
      "Time_End": 87.92,
      "Text": " So we'll give you a little moment for making a decision on your smartphones or laptops."
    },
    {
      "Time_Start": 87.92,
      "Time_End": 90.92,
      "Text": " So let's see the results."
    },
    {
      "Time_Start": 90.92,
      "Time_End": 94.24,
      "Text": " Whoops, sorry."
    },
    {
      "Time_Start": 94.24,
      "Time_End": 98.44,
      "Text": " Here's the question."
    },
    {
      "Time_Start": 98.44,
      "Time_End": 108.32,
      "Text": " So yeah, make a decision, and, yeah, let's see the results."
    },
    {
      "Time_Start": 109.32000000000001,
      "Time_End": 112.32000000000001,
      "Text": " Sorry."
    },
    {
      "Time_Start": 112.32000000000001,
      "Time_End": 115.32000000000001,
      "Text": " Yeah."
    },
    {
      "Time_Start": 115.32000000000001,
      "Time_End": 130.60000000000002,
      "Text": " So, my impression is that a lot of security folks, well, while they are cool in any other"
    },
    {
      "Time_Start": 130.60000000000002,
      "Time_End": 136.16,
      "Text": " security field, in cloud, there is a big gap."
    },
    {
      "Time_Start": 136.16,
      "Time_End": 141.07999999999998,
      "Text": " So let's see how it works for you."
    },
    {
      "Time_Start": 141.07999999999998,
      "Time_End": 148.24,
      "Text": " Now we can see the, we should see the results."
    },
    {
      "Time_Start": 148.24,
      "Time_End": 159.32,
      "Text": " So yeah, most of you vote for I use it from time to time, and basically that's the same"
    },
    {
      "Time_Start": 159.32,
      "Time_End": 162.0,
      "Text": " impression I have."
    },
    {
      "Time_Start": 162.0,
      "Time_End": 169.84,
      "Text": " However, more and more companies are going into cloud, and we can see on the global market"
    },
    {
      "Time_Start": 169.84,
      "Time_End": 175.92,
      "Text": " of cloud computing, so every year more and more companies are putting their services"
    },
    {
      "Time_Start": 175.92,
      "Time_End": 177.24,
      "Text": " into cloud."
    },
    {
      "Time_Start": 177.24,
      "Time_End": 184.51999999999998,
      "Text": " However, they don't realize about the security risks related with cloud."
    },
    {
      "Time_Start": 184.52,
      "Time_End": 187.76000000000002,
      "Text": " So the first example is from Tesla."
    },
    {
      "Time_Start": 187.76000000000002,
      "Time_End": 196.08,
      "Text": " So they basically, they put the Kubernetes console, and this console was publicly available"
    },
    {
      "Time_Start": 196.08,
      "Time_End": 198.60000000000002,
      "Text": " without any authentication."
    },
    {
      "Time_Start": 198.60000000000002,
      "Time_End": 206.88,
      "Text": " This console was for managing their applications, which were hosted in cloud, but so for managing"
    },
    {
      "Time_Start": 206.88,
      "Time_End": 211.82000000000002,
      "Text": " those applications, they had to give the proper permissions."
    },
    {
      "Time_Start": 211.82,
      "Time_End": 219.54,
      "Text": " Those permissions, so the AWS access keys were taken by the attackers, and they put"
    },
    {
      "Time_Start": 219.54,
      "Time_End": 229.18,
      "Text": " the cryptocurrency miner for what it was paid by Tesla, so Tesla paid for this, and attackers"
    },
    {
      "Time_Start": 229.18,
      "Time_End": 232.74,
      "Text": " get money."
    },
    {
      "Time_Start": 232.74,
      "Time_End": 239.82,
      "Text": " Another example is from Uber, so the attackers gained access to their private repository"
    },
    {
      "Time_Start": 239.82,
      "Time_End": 249.57999999999998,
      "Text": " in GitHub, and they saw that in their code, there are hard-coded AWS secrets, so using"
    },
    {
      "Time_Start": 249.57999999999998,
      "Time_End": 258.56,
      "Text": " those AWS secrets, they were able to leak data about the Uber's customers."
    },
    {
      "Time_Start": 258.56,
      "Time_End": 265.74,
      "Text": " But it can be worse, and here's the example how such situation hypothetically may look"
    },
    {
      "Time_Start": 265.74,
      "Time_End": 266.74,
      "Text": " like."
    },
    {
      "Time_Start": 266.74,
      "Time_End": 273.98,
      "Text": " So, manager want to, you know, want to sell everything, want to have as much money as"
    },
    {
      "Time_Start": 273.98,
      "Time_End": 281.1,
      "Text": " possible, so the customer asked about AWS expertise, but the developers didn't have"
    },
    {
      "Time_Start": 281.1,
      "Time_End": 293.7,
      "Text": " it, so the manager found a great idea to put their testing environment into cloud, so developers"
    },
    {
      "Time_Start": 293.7,
      "Time_End": 300.14,
      "Text": " can learn AWS on the live organism."
    },
    {
      "Time_Start": 300.14,
      "Time_End": 307.21999999999997,
      "Text": " But in the other end of the internet, there's a hacker man who in this presentation will"
    },
    {
      "Time_Start": 307.21999999999997,
      "Time_End": 315.53999999999996,
      "Text": " be you, so the application looks like this."
    },
    {
      "Time_Start": 315.53999999999996,
      "Time_End": 321.06,
      "Text": " So this is the application on the testing environment, and basically, you are putting"
    },
    {
      "Time_Start": 321.06,
      "Time_End": 330.26,
      "Text": " a domain name, and then in the output, like Google PL, and in the output, the application"
    },
    {
      "Time_Start": 330.26,
      "Time_End": 338.18,
      "Text": " gives you all the threat artefacts related with the certain domain."
    },
    {
      "Time_Start": 338.18,
      "Time_End": 347.02,
      "Text": " This output, if you know the web page, this example is written in HackerOne, so I took"
    },
    {
      "Time_Start": 347.02,
      "Time_End": 351.7,
      "Text": " it to show you what may go wrong."
    },
    {
      "Time_Start": 351.7,
      "Time_End": 358.41999999999996,
      "Text": " So if you put instead of domain name, the IP address, you can see that it is reflected."
    },
    {
      "Time_Start": 358.41999999999996,
      "Time_End": 366.78,
      "Text": " So this is the first hint, and what is more?"
    },
    {
      "Time_Start": 366.78,
      "Time_End": 375.18,
      "Text": " There are publicly available AWS IP ranges, so based on the IP address, you can know what"
    },
    {
      "Time_Start": 375.42,
      "Time_End": 384.22,
      "Text": " AWS service is actually used by this IP address, and you can see that our domain analytics.online"
    },
    {
      "Time_Start": 384.22,
      "Time_End": 394.42,
      "Text": " uses this range, so it's the region, and the Elastic Cloud Computing Service."
    },
    {
      "Time_Start": 394.42,
      "Time_End": 401.74,
      "Text": " If you want to find it, it's in JSON format, and the tool to reachability test, here are"
    },
    {
      "Time_Start": 401.74,
      "Time_End": 404.54,
      "Text": " the links."
    },
    {
      "Time_Start": 404.54,
      "Time_End": 405.82,
      "Text": " So what do we have?"
    },
    {
      "Time_Start": 405.82,
      "Time_End": 413.46000000000004,
      "Text": " The hacker man just drew the picture, so we have the web application, which is publicly"
    },
    {
      "Time_Start": 413.46000000000004,
      "Time_End": 422.42,
      "Text": " available, so the security group is like the firewall in AWS, in Azure also, and you have"
    },
    {
      "Time_Start": 422.42,
      "Time_End": 430.58000000000004,
      "Text": " to explicitly define that this port will be open, so it is hosted in Elastic Cloud Computing."
    },
    {
      "Time_Start": 430.62,
      "Time_End": 433.97999999999996,
      "Text": " So now, question to you."
    },
    {
      "Time_Start": 433.97999999999996,
      "Time_End": 435.41999999999996,
      "Text": " What would you do?"
    },
    {
      "Time_Start": 435.41999999999996,
      "Time_End": 441.18,
      "Text": " Find vulnerability in the web application, or rather find vulnerability in other services?"
    },
    {
      "Time_Start": 441.18,
      "Time_End": 442.5,
      "Text": " Please vote."
    },
    {
      "Time_Start": 442.5,
      "Time_End": 448.26,
      "Text": " I will give you a moment."
    },
    {
      "Time_Start": 448.26,
      "Time_End": 451.46,
      "Text": " And let's see the results."
    },
    {
      "Time_Start": 451.46000000000004,
      "Time_End": 478.02000000000004,
      "Text": " So, I can see, well, you can see on your smartphones the results, so most of you find"
    },
    {
      "Time_Start": 478.02000000000004,
      "Time_End": 480.22,
      "Text": " vulnerability in the web application."
    },
    {
      "Time_Start": 480.22,
      "Time_End": 483.38000000000005,
      "Text": " So let's see."
    },
    {
      "Time_Start": 483.38000000000005,
      "Time_End": 493.78000000000003,
      "Text": " So which vulnerability you think that is more beneficial from the attacker perspective?"
    },
    {
      "Time_Start": 493.78000000000003,
      "Time_End": 501.58000000000004,
      "Text": " Cross-site scripting, or rather server-side request forgery?"
    },
    {
      "Time_Start": 501.58000000000004,
      "Time_End": 504.70000000000005,
      "Text": " Please vote, and let's see the results."
    },
    {
      "Time_Start": 504.7,
      "Time_End": 510.58,
      "Text": " So most of you, yeah, that's the correct answer."
    },
    {
      "Time_Start": 510.58,
      "Time_End": 513.9399999999999,
      "Text": " Most of you choose the server-side request forgery."
    },
    {
      "Time_Start": 513.9399999999999,
      "Time_End": 519.66,
      "Text": " Cross-site scripting is the client-side attack, so nothing fancy with attacking cloud infrastructure."
    },
    {
      "Time_Start": 519.66,
      "Time_End": 526.42,
      "Text": " So let's see."
    },
    {
      "Time_Start": 526.42,
      "Time_End": 531.22,
      "Text": " So we have here the web application."
    },
    {
      "Time_Start": 531.22,
      "Time_End": 539.0600000000001,
      "Text": " So we can change the address to the address 169.254, 169.254."
    },
    {
      "Time_Start": 539.0600000000001,
      "Time_End": 542.26,
      "Text": " What is special about this address?"
    },
    {
      "Time_Start": 542.26,
      "Time_End": 548.62,
      "Text": " This is actually link local address, which is actually accessible only from the Elastic"
    },
    {
      "Time_Start": 548.62,
      "Time_End": 551.02,
      "Text": " Cloud Computing instance."
    },
    {
      "Time_Start": 551.02,
      "Time_End": 560.76,
      "Text": " So it's not routable, and it's the same for all Elastic Cloud Computing instances and"
    },
    {
      "Time_Start": 560.8,
      "Time_End": 562.96,
      "Text": " other AWS services."
    },
    {
      "Time_Start": 562.96,
      "Time_End": 568.88,
      "Text": " Using it, you can refer to the identity and access management, which actually means that"
    },
    {
      "Time_Start": 568.88,
      "Time_End": 573.64,
      "Text": " you can access the instance profile and get permissions."
    },
    {
      "Time_Start": 573.64,
      "Time_End": 581.4399999999999,
      "Text": " So using the vulnerabilities like server-side request forgery and XML external entity or"
    },
    {
      "Time_Start": 581.4399999999999,
      "Time_End": 588.72,
      "Text": " remote code execution, you can find that there is a web server role, and when you go there,"
    },
    {
      "Time_Start": 588.72,
      "Time_End": 593.1600000000001,
      "Text": " you will see the holy grail."
    },
    {
      "Time_Start": 593.1600000000001,
      "Time_End": 601.1600000000001,
      "Text": " So there are the AWS keys, which are generally used by the instance to allow them for some"
    },
    {
      "Time_Start": 601.1600000000001,
      "Time_End": 602.1600000000001,
      "Text": " actions."
    },
    {
      "Time_Start": 602.1600000000001,
      "Time_End": 604.6,
      "Text": " That's cool."
    },
    {
      "Time_Start": 604.6,
      "Time_End": 611.1600000000001,
      "Text": " But what is actually metadata?"
    },
    {
      "Time_Start": 611.1600000000001,
      "Time_End": 618.6,
      "Text": " Metadata is the information about the instance, so any internal information about the instance"
    },
    {
      "Time_Start": 618.6,
      "Time_End": 627.72,
      "Text": " like internal IP addresses, like host name, and it's link local address, which means"
    },
    {
      "Time_Start": 627.72,
      "Time_End": 635.66,
      "Text": " it is accessible only from the one which works only in the one network segment."
    },
    {
      "Time_Start": 635.66,
      "Time_End": 643.84,
      "Text": " From the security perspective, the most valuable part is going into identity and access management,"
    },
    {
      "Time_Start": 644.84,
      "Time_End": 651.08,
      "Text": " and there is stored the AWS access keys."
    },
    {
      "Time_Start": 651.08,
      "Time_End": 653.4,
      "Text": " So let's sum up."
    },
    {
      "Time_Start": 653.4,
      "Time_End": 661.88,
      "Text": " Actually, if you choose other path, there is actually all ports are open, so security"
    },
    {
      "Time_Start": 661.88,
      "Time_End": 669.1600000000001,
      "Text": " group is set to be publicly available, but using this, you can access the instance profile."
    },
    {
      "Time_Start": 669.16,
      "Time_End": 674.88,
      "Text": " So let's say the web application gives you the functionality of uploading files, then"
    },
    {
      "Time_Start": 674.88,
      "Time_End": 684.4399999999999,
      "Text": " you have to give the EC2 permission to write objects to, for example, S3 bucket."
    },
    {
      "Time_Start": 684.4399999999999,
      "Time_End": 689.14,
      "Text": " Let's see, but we don't know what we are allowed to do with that."
    },
    {
      "Time_Start": 689.14,
      "Time_End": 697.3199999999999,
      "Text": " So here's the Paku, and the Paku is like the Metasploit for cloud, so it's very similar,"
    },
    {
      "Time_Start": 697.32,
      "Time_End": 704.44,
      "Text": " and guys from Rhino Security Labs, they are inspired by Metasploit, and we will be using"
    },
    {
      "Time_Start": 704.44,
      "Time_End": 708.08,
      "Text": " it a lot today."
    },
    {
      "Time_Start": 708.08,
      "Time_End": 713.4000000000001,
      "Text": " So let me show you how the Paku looks like."
    },
    {
      "Time_Start": 713.4000000000001,
      "Time_End": 716.5600000000001,
      "Text": " It's written in Python 3."
    },
    {
      "Time_Start": 716.5600000000001,
      "Time_End": 723.12,
      "Text": " You can set your, you can choose the name for each session, so what is cool, because"
    },
    {
      "Time_Start": 723.12,
      "Time_End": 730.76,
      "Text": " if you are doing, like me, parallelly a few projects, then all the findings are separate"
    },
    {
      "Time_Start": 730.76,
      "Time_End": 732.68,
      "Text": " from each other."
    },
    {
      "Time_Start": 732.68,
      "Time_End": 736.0,
      "Text": " So what do we have here?"
    },
    {
      "Time_Start": 736.0,
      "Time_End": 741.52,
      "Text": " You can list all the modules by simply comment LS."
    },
    {
      "Time_Start": 741.52,
      "Time_End": 745.04,
      "Text": " If you don't know what the module means, then use help."
    },
    {
      "Time_Start": 745.04,
      "Time_End": 753.04,
      "Text": " All the output from enumeration is accessible using data."
    },
    {
      "Time_Start": 753.04,
      "Time_End": 759.4399999999999,
      "Text": " So you can take the keys you found and import it to the Paku."
    },
    {
      "Time_Start": 759.4399999999999,
      "Time_End": 761.28,
      "Text": " So let's do it here."
    },
    {
      "Time_Start": 761.28,
      "Time_End": 769.5999999999999,
      "Text": " I will call our victim the EC2 pivot."
    },
    {
      "Time_Start": 769.5999999999999,
      "Time_End": 777.36,
      "Text": " Then you are just putting the access key ID, secret access key, and the security token,"
    },
    {
      "Time_Start": 777.36,
      "Time_End": 785.36,
      "Text": " because instance profiles also use STS token, which is required, which expires, so from"
    },
    {
      "Time_Start": 785.36,
      "Time_End": 789.44,
      "Text": " time to time, you have to use it."
    },
    {
      "Time_Start": 789.44,
      "Time_End": 797.76,
      "Text": " Then you can set region, and we know that our application, our target is based in European"
    },
    {
      "Time_Start": 797.76,
      "Time_End": 798.76,
      "Text": " region."
    },
    {
      "Time_Start": 798.76,
      "Time_End": 803.72,
      "Text": " Here are just quickly what modules you can find."
    },
    {
      "Time_Start": 803.72,
      "Time_End": 813.8000000000001,
      "Text": " So a lot of modules for enumeration, for privilege escalation, for lateral movement,"
    },
    {
      "Time_Start": 813.8000000000001,
      "Time_End": 814.96,
      "Text": " and to exploit."
    },
    {
      "Time_Start": 814.96,
      "Time_End": 819.72,
      "Text": " We will use a couple of them, so you will see them in action."
    },
    {
      "Time_Start": 819.72,
      "Time_End": 822.48,
      "Text": " All right."
    },
    {
      "Time_Start": 822.48,
      "Time_End": 824.84,
      "Text": " So how to enumerate permissions?"
    },
    {
      "Time_Start": 824.84,
      "Time_End": 830.76,
      "Text": " In Paku, there is a module called identity and access management enum permissions, and"
    },
    {
      "Time_Start": 830.76,
      "Time_End": 838.64,
      "Text": " using it, you can display the permissions which you are allowed to do, but to be able"
    },
    {
      "Time_Start": 838.64,
      "Time_End": 846.04,
      "Text": " to display all your permissions, you have to have assigned those two permissions for"
    },
    {
      "Time_Start": 846.04,
      "Time_End": 852.04,
      "Text": " these two actions, which is actually, at least from my experience, it seems that it is very"
    },
    {
      "Time_Start": 852.04,
      "Time_End": 853.64,
      "Text": " easy."
    },
    {
      "Time_Start": 853.64,
      "Time_End": 863.26,
      "Text": " There is a little possibility to find it in the instance profile, but."
    },
    {
      "Time_Start": 863.26,
      "Time_End": 866.8399999999999,
      "Text": " So here's another question."
    },
    {
      "Time_Start": 866.8399999999999,
      "Time_End": 868.68,
      "Text": " What we can do?"
    },
    {
      "Time_Start": 868.68,
      "Time_End": 874.9599999999999,
      "Text": " If we don't have any identity and access management permissions, what can we do?"
    },
    {
      "Time_Start": 874.9599999999999,
      "Time_End": 877.4,
      "Text": " We found keys."
    },
    {
      "Time_Start": 877.4,
      "Time_End": 885.1999999999999,
      "Text": " What is the next step?"
    },
    {
      "Time_Start": 885.1999999999999,
      "Time_End": 887.0,
      "Text": " There's a known exploit."
    },
    {
      "Time_Start": 887.0,
      "Time_End": 894.68,
      "Text": " Well, the sad thing is there is not any known exploit, and the only thing you can do is"
    },
    {
      "Time_Start": 894.68,
      "Time_End": 901.3199999999999,
      "Text": " actually brute-forcing permissions, which is super loud, but if the configuration is"
    },
    {
      "Time_Start": 901.32,
      "Time_End": 911.32,
      "Text": " bad, then you can run the identity and access management brute-force permissions and simply"
    },
    {
      "Time_Start": 911.32,
      "Time_End": 912.9200000000001,
      "Text": " brute-force all permissions."
    },
    {
      "Time_Start": 912.9200000000001,
      "Time_End": 920.1600000000001,
      "Text": " In Paku, only supported services is the Elastic Cloud Computing and simple storage service,"
    },
    {
      "Time_Start": 920.1600000000001,
      "Time_End": 928.48,
      "Text": " and to enumerate permissions for other services, you can use just a simple script to try every"
    },
    {
      "Time_Start": 928.48,
      "Time_End": 929.48,
      "Text": " action."
    },
    {
      "Time_Start": 929.64,
      "Time_End": 938.76,
      "Text": " And, in fact, it seems that, for our web server role, there is a policy which allows for any"
    },
    {
      "Time_Start": 938.76,
      "Time_End": 946.6800000000001,
      "Text": " action in Elastic Cloud Computing, and this wildcard is super common."
    },
    {
      "Time_Start": 946.6800000000001,
      "Time_End": 952.48,
      "Text": " Developers prefer to put a wildcard because then it always works."
    },
    {
      "Time_Start": 952.48,
      "Time_End": 959.22,
      "Text": " So you don't have to, you know, specify each action, just a wildcard, and it just works."
    },
    {
      "Time_Start": 959.22,
      "Time_End": 960.86,
      "Text": " It's a testing environment, right?"
    },
    {
      "Time_Start": 960.86,
      "Time_End": 965.4200000000001,
      "Text": " So what's the risk?"
    },
    {
      "Time_Start": 965.4200000000001,
      "Time_End": 973.98,
      "Text": " In Paku, again, we are using the Elastic Cloud Computing module which is actually taking"
    },
    {
      "Time_Start": 973.98,
      "Time_End": 983.84,
      "Text": " all the information using your keys about any other services, about the EC2 service."
    },
    {
      "Time_Start": 983.84,
      "Time_End": 987.02,
      "Text": " Then we can access it using data EC2."
    },
    {
      "Time_Start": 987.02,
      "Time_End": 990.5799999999999,
      "Text": " So what did we find?"
    },
    {
      "Time_Start": 990.5799999999999,
      "Time_End": 997.5799999999999,
      "Text": " There's a stopped instance with the ID like this, but this time, the stopped instance"
    },
    {
      "Time_Start": 997.5799999999999,
      "Time_End": 1006.9399999999999,
      "Text": " has a signed admin profile, and, actually, this example is taken from one of our customers."
    },
    {
      "Time_Start": 1006.9399999999999,
      "Time_End": 1010.72,
      "Text": " So let's see on this great picture."
    },
    {
      "Time_Start": 1010.72,
      "Time_End": 1013.26,
      "Text": " So we found the web server role."
    },
    {
      "Time_Start": 1013.26,
      "Time_End": 1016.62,
      "Text": " There is stopped instance."
    },
    {
      "Time_Start": 1016.62,
      "Time_End": 1024.14,
      "Text": " We know that there is a stopped instance, but what can we do?"
    },
    {
      "Time_Start": 1024.14,
      "Time_End": 1026.02,
      "Text": " Question to you."
    },
    {
      "Time_Start": 1026.02,
      "Time_End": 1027.02,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1027.02,
      "Time_End": 1030.18,
      "Text": " Please vote."
    },
    {
      "Time_Start": 1030.18,
      "Time_End": 1033.82,
      "Text": " What would you do in such scenario?"
    },
    {
      "Time_Start": 1033.82,
      "Time_End": 1041.34,
      "Text": " Either you will run the EC2 instance completely new with the SSH keys, or you will update"
    },
    {
      "Time_Start": 1041.34,
      "Time_End": 1045.98,
      "Text": " the user data of the stopped instance."
    },
    {
      "Time_Start": 1045.98,
      "Time_End": 1051.78,
      "Text": " Let's see."
    },
    {
      "Time_Start": 1051.78,
      "Time_End": 1053.34,
      "Text": " Update user data."
    },
    {
      "Time_Start": 1053.34,
      "Time_End": 1054.34,
      "Text": " Exactly."
    },
    {
      "Time_Start": 1054.34,
      "Time_End": 1058.82,
      "Text": " First of all, what is user data?"
    },
    {
      "Time_Start": 1058.82,
      "Time_End": 1070.22,
      "Text": " It's the list of bash comments which will be executed once the instance is started."
    },
    {
      "Time_Start": 1070.22,
      "Time_End": 1073.02,
      "Text": " But it will be run only once."
    },
    {
      "Time_Start": 1073.02,
      "Time_End": 1078.34,
      "Text": " There's a special trick how to do that this user data will be run every time the instance"
    },
    {
      "Time_Start": 1078.34,
      "Time_End": 1080.7,
      "Text": " is restarted."
    },
    {
      "Time_Start": 1080.7,
      "Time_End": 1083.62,
      "Text": " So let's do it."
    },
    {
      "Time_Start": 1083.62,
      "Time_End": 1085.1,
      "Text": " Sorry."
    },
    {
      "Time_Start": 1085.1,
      "Time_End": 1090.58,
      "Text": " Not this one."
    },
    {
      "Time_Start": 1090.58,
      "Time_End": 1100.3799999999999,
      "Text": " So in Paku, there's a module called EC2 start-up shell script which will basically update user"
    },
    {
      "Time_Start": 1100.3799999999999,
      "Time_End": 1102.3799999999999,
      "Text": " data for you."
    },
    {
      "Time_Start": 1103.0200000000002,
      "Time_End": 1105.66,
      "Text": " What can we do?"
    },
    {
      "Time_Start": 1105.66,
      "Time_End": 1107.38,
      "Text": " Let's see the help of this module."
    },
    {
      "Time_Start": 1107.38,
      "Time_End": 1113.14,
      "Text": " You are given a script, so what actions, what bash comments should be executed once the"
    },
    {
      "Time_Start": 1113.14,
      "Time_End": 1120.38,
      "Text": " instance is restarted, and the instance ID, instance of our stopped ID."
    },
    {
      "Time_Start": 1120.38,
      "Time_End": 1130.14,
      "Text": " Here I'm verifying my external IP address, and knowing that, I created the ref shell"
    },
    {
      "Time_Start": 1130.14,
      "Time_End": 1135.38,
      "Text": " which is basically the bash one-liner which gives me the reverse shell."
    },
    {
      "Time_Start": 1135.38,
      "Time_End": 1143.3400000000001,
      "Text": " So I'm starting the Netcat listener, and I'm listening on lead port."
    },
    {
      "Time_Start": 1143.3400000000001,
      "Time_End": 1150.94,
      "Text": " Then I'm starting the module EC2 start-up shell script to update user data with the"
    },
    {
      "Time_Start": 1150.94,
      "Time_End": 1157.46,
      "Text": " ref shell, and, yes, we got the output that instance is modified."
    },
    {
      "Time_Start": 1157.46,
      "Time_End": 1165.82,
      "Text": " So if we are lucky, this ref shell should be given to our hacker man."
    },
    {
      "Time_Start": 1165.82,
      "Time_End": 1167.54,
      "Text": " It takes a little."
    },
    {
      "Time_Start": 1167.54,
      "Time_End": 1173.78,
      "Text": " If you are familiar with starting EC2 instances, you know that it is not work."
    },
    {
      "Time_Start": 1173.78,
      "Time_End": 1181.26,
      "Text": " It doesn't work like very quickly, but you have to give it a time."
    },
    {
      "Time_Start": 1181.26,
      "Time_End": 1183.66,
      "Text": " And now, what is the trick?"
    },
    {
      "Time_Start": 1183.66,
      "Time_End": 1186.38,
      "Text": " Okay, let's wait with this."
    },
    {
      "Time_Start": 1186.38,
      "Time_End": 1190.94,
      "Text": " So a little pause."
    },
    {
      "Time_Start": 1190.94,
      "Time_End": 1203.8600000000001,
      "Text": " Yes, as I said, it's starting quite, but, yes, we finally got the shell, so, again,"
    },
    {
      "Time_Start": 1203.8600000000001,
      "Time_End": 1210.94,
      "Text": " using the same trick, we can access the metadata but this time gain the credentials of instance"
    },
    {
      "Time_Start": 1210.94,
      "Time_End": 1213.8600000000001,
      "Text": " profile which is called admin."
    },
    {
      "Time_Start": 1213.8600000000001,
      "Time_End": 1222.7400000000002,
      "Text": " So the trick I told you that it will allow for running the instance, running the user"
    },
    {
      "Time_Start": 1222.7400000000002,
      "Time_End": 1229.6200000000001,
      "Text": " data every time you restart the machine is to add the directive cloud boot hook."
    },
    {
      "Time_Start": 1229.6200000000001,
      "Time_End": 1234.9,
      "Text": " Once you add it in the beginning of user data, it will be every time executed once you restart"
    },
    {
      "Time_Start": 1234.9,
      "Time_End": 1236.7,
      "Text": " the machine."
    },
    {
      "Time_Start": 1236.7,
      "Time_End": 1238.98,
      "Text": " So let's summary."
    },
    {
      "Time_Start": 1238.98,
      "Time_End": 1243.8600000000001,
      "Text": " So using the web server role which we gained using the server side request forgery, we"
    },
    {
      "Time_Start": 1243.8600000000001,
      "Time_End": 1250.98,
      "Text": " started EC2, stopped EC2, we changed the user data which gave us the reverse shell and finally"
    },
    {
      "Time_Start": 1250.98,
      "Time_End": 1253.94,
      "Text": " we got the admin permissions."
    },
    {
      "Time_Start": 1253.94,
      "Time_End": 1261.5,
      "Text": " Now, we got admin permissions, but that's not the end of the story."
    },
    {
      "Time_Start": 1261.5,
      "Time_End": 1269.82,
      "Text": " By default, the AWS cloud trail service is responsible for logging all the actions and"
    },
    {
      "Time_Start": 1269.82,
      "Time_End": 1277.94,
      "Text": " by default it monitors all AWS regions and the logs is going into S3 bucket."
    },
    {
      "Time_Start": 1277.94,
      "Time_End": 1284.26,
      "Text": " So what the attacker can do, there is a special flag which I will show you in a moment that"
    },
    {
      "Time_Start": 1284.26,
      "Time_End": 1288.92,
      "Text": " you can set the cloud trail to observe only one region."
    },
    {
      "Time_Start": 1288.92,
      "Time_End": 1299.04,
      "Text": " So if the administrators work in only one region, they will not see any changes."
    },
    {
      "Time_Start": 1299.04,
      "Time_End": 1306.54,
      "Text": " So the logs will be still given, but you can do whatever you want in absolutely every region"
    },
    {
      "Time_Start": 1306.54,
      "Time_End": 1313.1200000000001,
      "Text": " and it is not detected by the administrators."
    },
    {
      "Time_Start": 1313.1200000000001,
      "Time_End": 1314.1200000000001,
      "Text": " What else?"
    },
    {
      "Time_Start": 1314.1200000000001,
      "Time_End": 1321.24,
      "Text": " You can remove the S3 bucket, but it is pretty loud or you can disable cloud trail service"
    },
    {
      "Time_Start": 1321.24,
      "Time_End": 1324.24,
      "Text": " which is also quite loud."
    },
    {
      "Time_Start": 1324.24,
      "Time_End": 1331.16,
      "Text": " So again, with Paku, there is a module which is called the detection services."
    },
    {
      "Time_Start": 1331.16,
      "Time_End": 1339.24,
      "Text": " So using the admin account, I'm running the detection services to get all the information"
    },
    {
      "Time_Start": 1339.24,
      "Time_End": 1346.28,
      "Text": " about the cloud trail settings and cloud watch settings."
    },
    {
      "Time_Start": 1346.28,
      "Time_End": 1355.32,
      "Text": " In a moment, you can see that the Paku discovered that there is one cloud trail service set"
    },
    {
      "Time_Start": 1355.32,
      "Time_End": 1360.02,
      "Text": " and there is the cloud watch alarm also found."
    },
    {
      "Time_Start": 1360.02,
      "Time_End": 1365.08,
      "Text": " So using the data cloud trail, you can get the configuration."
    },
    {
      "Time_Start": 1365.08,
      "Time_End": 1373.76,
      "Text": " So include global service events, it is set to true, which means it monitors all the regions."
    },
    {
      "Time_Start": 1373.76,
      "Time_End": 1381.3,
      "Text": " So then we are running the module detection disruption, thanks to which you can not only"
    },
    {
      "Time_Start": 1381.3,
      "Time_End": 1385.8799999999999,
      "Text": " disable or delete cloud trail, but you can minimize."
    },
    {
      "Time_Start": 1385.88,
      "Time_End": 1395.8200000000002,
      "Text": " So set those flags to only monitor only one region."
    },
    {
      "Time_Start": 1395.8200000000002,
      "Time_End": 1401.6200000000001,
      "Text": " What is more, the service also discovered the billing alarm."
    },
    {
      "Time_Start": 1401.6200000000001,
      "Time_End": 1409.1000000000001,
      "Text": " So billing alarm is something that if you are, for example, used to get $5 for all your"
    },
    {
      "Time_Start": 1409.4800000000002,
      "Time_End": 1419.6000000000001,
      "Text": " AWS usage, then if someone will run the cryptocurrency miner, you will quickly be notified that there"
    },
    {
      "Time_Start": 1419.6000000000001,
      "Time_End": 1420.92,
      "Text": " is something bad."
    },
    {
      "Time_Start": 1420.92,
      "Time_End": 1426.3200000000002,
      "Text": " But you can simply, using the admin permissions, you can of course simply just remove it and"
    },
    {
      "Time_Start": 1426.3200000000002,
      "Time_End": 1429.1000000000001,
      "Text": " Paku allows for it."
    },
    {
      "Time_Start": 1429.1200000000001,
      "Time_End": 1439.3200000000002,
      "Text": " So after running the minimize, I again enumerate the monitoring services and then you can see"
    },
    {
      "Time_Start": 1439.3200000000002,
      "Time_End": 1447.3600000000001,
      "Text": " that include global service events flag is set to false and the others also."
    },
    {
      "Time_Start": 1447.3600000000001,
      "Time_End": 1456.2800000000002,
      "Text": " So now once we disabled all the monitoring services, it's time for persisting access."
    },
    {
      "Time_Start": 1456.3,
      "Time_End": 1464.1,
      "Text": " There are a few ways to do it, but in my opinion, the most interesting ones is the add extra"
    },
    {
      "Time_Start": 1464.1,
      "Time_End": 1467.2,
      "Text": " keys to existing users."
    },
    {
      "Time_Start": 1467.2,
      "Time_End": 1468.62,
      "Text": " How does it look like?"
    },
    {
      "Time_Start": 1468.62,
      "Time_End": 1477.06,
      "Text": " You are running the IAM backdoor users keys and then another keepers is assigned to each"
    },
    {
      "Time_Start": 1477.06,
      "Time_End": 1480.46,
      "Text": " of the user."
    },
    {
      "Time_Start": 1480.46,
      "Time_End": 1485.18,
      "Text": " What is actually not a bug, but it is an Amazon feature."
    },
    {
      "Time_Start": 1485.18,
      "Time_End": 1492.72,
      "Text": " So you can use, it's a feature that you can use to separate keepers under one account"
    },
    {
      "Time_Start": 1492.72,
      "Time_End": 1504.48,
      "Text": " and Amazon says that it's cool because thanks to it, they don't share the keys well."
    },
    {
      "Time_Start": 1504.48,
      "Time_End": 1509.18,
      "Text": " I also want to show you how does it look like from the administrator perspective."
    },
    {
      "Time_Start": 1509.18,
      "Time_End": 1516.94,
      "Text": " If you are using services like GuardDuty, which are the intelligent threat detection"
    },
    {
      "Time_Start": 1516.94,
      "Time_End": 1527.0600000000002,
      "Text": " service, it will tell you nothing because creating additional keeper is nothing suspicious"
    },
    {
      "Time_Start": 1527.0600000000002,
      "Time_End": 1528.94,
      "Text": " from the GuardDuty perspective."
    },
    {
      "Time_Start": 1528.94,
      "Time_End": 1531.18,
      "Text": " How does it look like from the administrator perspective?"
    },
    {
      "Time_Start": 1531.18,
      "Time_End": 1536.1000000000001,
      "Text": " You can see that access key age is five days, right?"
    },
    {
      "Time_Start": 1536.14,
      "Time_End": 1540.7800000000002,
      "Text": " There is also assigned multi-factor authentication, however, multi-factor authentication is only"
    },
    {
      "Time_Start": 1540.7800000000002,
      "Time_End": 1550.14,
      "Text": " assigned for the console, so using the web, but using the key keepers, then MFA is not"
    },
    {
      "Time_Start": 1550.14,
      "Time_End": 1552.7400000000002,
      "Text": " supported yet, but Amazon."
    },
    {
      "Time_Start": 1552.7400000000002,
      "Time_End": 1560.5000000000002,
      "Text": " So you can see that the access key age, five days, is actually referring to the older keeper."
    },
    {
      "Time_Start": 1560.5,
      "Time_End": 1570.1,
      "Text": " So the administrator really has to do a big work to see that current user is using actually"
    },
    {
      "Time_Start": 1570.1,
      "Time_End": 1573.38,
      "Text": " two keepers."
    },
    {
      "Time_Start": 1573.38,
      "Time_End": 1579.54,
      "Text": " So let's analyse what went wrong."
    },
    {
      "Time_Start": 1579.54,
      "Time_End": 1585.14,
      "Text": " First of all, there was for sure the publicly available vulnerable application, but there"
    },
    {
      "Time_Start": 1585.22,
      "Time_End": 1592.74,
      "Text": " was also the test instance with admin permissions, no matter if it is stopped or not, missing"
    },
    {
      "Time_Start": 1592.74,
      "Time_End": 1603.66,
      "Text": " monitoring services, and improperly configured services like CloudTrail or security groups."
    },
    {
      "Time_Start": 1603.66,
      "Time_End": 1614.7800000000002,
      "Text": " So I want to present you the method I'm using to make the complete cloud security assessment."
    },
    {
      "Time_Start": 1614.78,
      "Time_End": 1621.42,
      "Text": " It is not only verifying the configuration, but also, first of all, doing the architecture"
    },
    {
      "Time_Start": 1621.42,
      "Time_End": 1629.18,
      "Text": " review to verify if there are no special extra resources, and from my experience, we found"
    },
    {
      "Time_Start": 1629.18,
      "Time_End": 1637.1399999999999,
      "Text": " once the extra cryptocurrency miner that the customer wasn't aware of."
    },
    {
      "Time_Start": 1637.1399999999999,
      "Time_End": 1643.5,
      "Text": " Then the configuration review, there is the AWS SysFoundation benchmark, so it's a list"
    },
    {
      "Time_Start": 1643.5,
      "Time_End": 1652.78,
      "Text": " of steps which you can basically, you can verify if your configuration is set up correctly."
    },
    {
      "Time_Start": 1652.78,
      "Time_End": 1662.06,
      "Text": " Finally, pen test sensitive services like the web applications or the serverless code."
    },
    {
      "Time_Start": 1662.06,
      "Time_End": 1670.7,
      "Text": " Serverless security is a huge topic which could be for the whole presentation."
    },
    {
      "Time_Start": 1670.7,
      "Time_End": 1678.3,
      "Text": " And finally, the cloud security assessment should also include the verifying monitoring"
    },
    {
      "Time_Start": 1678.3,
      "Time_End": 1687.66,
      "Text": " processes, so is it, is the sensitive actions, are the sensitive actions are really monitored,"
    },
    {
      "Time_Start": 1687.66,
      "Time_End": 1694.22,
      "Text": " and if so, will you be notified if something, if your, for example, employee is trying to"
    },
    {
      "Time_Start": 1694.22,
      "Time_End": 1697.1000000000001,
      "Text": " do something malicious."
    },
    {
      "Time_Start": 1697.1000000000001,
      "Time_End": 1703.9800000000002,
      "Text": " So in practice, if we do the configuration review, for example, using Prowler, it will"
    },
    {
      "Time_Start": 1703.9800000000002,
      "Time_End": 1711.42,
      "Text": " quickly detect that there are misconfigurations in CloudTrail service, because actually it"
    },
    {
      "Time_Start": 1711.42,
      "Time_End": 1718.3400000000001,
      "Text": " should be, the bucket should be managed by other AWS accounts."
    },
    {
      "Time_Start": 1718.3400000000001,
      "Time_End": 1725.46,
      "Text": " So even if someone will escalate his privilege to administrator, he still cannot do anything"
    },
    {
      "Time_Start": 1725.46,
      "Time_End": 1727.5,
      "Text": " wrong with the logs."
    },
    {
      "Time_Start": 1727.5,
      "Time_End": 1732.46,
      "Text": " Of course, the logs should be also signed and encrypted."
    },
    {
      "Time_Start": 1732.46,
      "Time_End": 1741.3400000000001,
      "Text": " Then, pen testing sensitive service, it would be pretty easy to detect this vulnerable web"
    },
    {
      "Time_Start": 1741.3400000000001,
      "Time_End": 1751.46,
      "Text": " application, and if you remember at the beginning, the application, this example came from fret"
    },
    {
      "Time_Start": 1751.46,
      "Time_End": 1753.22,
      "Text": " crowd.org."
    },
    {
      "Time_Start": 1753.22,
      "Time_End": 1755.58,
      "Text": " You can find the report on HackerOne."
    },
    {
      "Time_Start": 1755.58,
      "Time_End": 1766.7,
      "Text": " But guess how the administrators of fret crowd, how they blocked, how they fixed this vulnerability."
    },
    {
      "Time_Start": 1766.7,
      "Time_End": 1770.82,
      "Text": " Any ideas?"
    },
    {
      "Time_Start": 1770.82,
      "Time_End": 1778.1000000000001,
      "Text": " Basically they blacklisted the address 169254, 169254."
    },
    {
      "Time_Start": 1778.1000000000001,
      "Time_End": 1783.9,
      "Text": " So any ideas how to bypass?"
    },
    {
      "Time_Start": 1783.9,
      "Time_End": 1791.22,
      "Text": " We are used to use the decimal representation of the IP address, but always remember that"
    },
    {
      "Time_Start": 1791.22,
      "Time_End": 1798.38,
      "Text": " we can, the same address, we can represent using the hexadecimal, using binary, so a"
    },
    {
      "Time_Start": 1798.38,
      "Time_End": 1806.7,
      "Text": " guy who reported it, then after reporting that this fix can be very easily bypassed,"
    },
    {
      "Time_Start": 1806.7,
      "Time_End": 1810.3,
      "Text": " and they fix it correctly."
    },
    {
      "Time_Start": 1810.3,
      "Time_End": 1820.22,
      "Text": " Then monitoring sensitive processes would also notify, it should also be a finding from"
    },
    {
      "Time_Start": 1820.22,
      "Time_End": 1822.78,
      "Text": " the cloud security assessment perspective."
    },
    {
      "Time_Start": 1822.78,
      "Time_End": 1830.22,
      "Text": " And then there shouldn't be any test instance with admin permissions, and really trust me,"
    },
    {
      "Time_Start": 1830.22,
      "Time_End": 1838.54,
      "Text": " it was running on the production application, so there were production application with"
    },
    {
      "Time_Start": 1838.54,
      "Time_End": 1846.22,
      "Text": " the limited permissions, but there was one test instance which was stopped, so such kill"
    },
    {
      "Time_Start": 1846.22,
      "Time_End": 1849.34,
      "Text": " chain was possible."
    },
    {
      "Time_Start": 1849.3400000000001,
      "Time_End": 1860.5000000000002,
      "Text": " And at the end, this is the Gartner report, and through 2022, at least 95% of cloud security"
    },
    {
      "Time_Start": 1860.5000000000002,
      "Time_End": 1863.3600000000001,
      "Text": " failures will be the customer's fault."
    },
    {
      "Time_Start": 1863.3600000000001,
      "Time_End": 1874.14,
      "Text": " So Amazon will say, hey, we are doing a good job, the failure is, they will blame you."
    },
    {
      "Time_Start": 1874.14,
      "Time_End": 1882.1000000000001,
      "Text": " In the end, if you are interested in attacking AWS, here are a few extras, so Cloud Goat"
    },
    {
      "Time_Start": 1882.1000000000001,
      "Time_End": 1892.7800000000002,
      "Text": " is the platform which you are deploying under your AWS account, some vulnerable AWS services,"
    },
    {
      "Time_Start": 1892.7800000000002,
      "Time_End": 1897.66,
      "Text": " and your goal is to exploit all those vulnerabilities."
    },
    {
      "Time_Start": 1897.66,
      "Time_End": 1906.38,
      "Text": " If you don't know how to start, I also created the five articles to how to work with it,"
    },
    {
      "Time_Start": 1906.38,
      "Time_End": 1908.98,
      "Text": " how to find vulnerabilities."
    },
    {
      "Time_Start": 1908.98,
      "Time_End": 1912.8600000000001,
      "Text": " Of course, Baku, try it."
    },
    {
      "Time_Start": 1912.8600000000001,
      "Time_End": 1919.6200000000001,
      "Text": " I also created the Capture the Flag game, which is called Carca Analytica, and if you"
    },
    {
      "Time_Start": 1919.6200000000001,
      "Time_End": 1927.9,
      "Text": " want to play, just see it, and there are vulnerabilities related with simple storage service."
    },
    {
      "Time_Start": 1927.9,
      "Time_End": 1934.5800000000002,
      "Text": " Also to do the cloud security assessment, a very helpful can be Cloud Mapper, which"
    },
    {
      "Time_Start": 1934.5800000000002,
      "Time_End": 1944.66,
      "Text": " will display you all resources, and also if there are any possible paths to escalate your"
    },
    {
      "Time_Start": 1944.66,
      "Time_End": 1946.14,
      "Text": " privileges."
    },
    {
      "Time_Start": 1946.14,
      "Time_End": 1955.38,
      "Text": " And the Prowler will do automatically, will detect automatically any misconfigurations"
    },
    {
      "Time_Start": 1955.38,
      "Time_End": 1959.66,
      "Text": " in your AWS services."
    },
    {
      "Time_Start": 1959.66,
      "Time_End": 1963.7800000000002,
      "Text": " So that's all from my side."
    },
    {
      "Time_Start": 1963.7800000000002,
      "Time_End": 1968.3000000000002,
      "Text": " If you have any questions, I'm open."
    },
    {
      "Time_Start": 1969.3,
      "Time_End": 1972.3,
      "Text": " Yep."
    },
    {
      "Time_Start": 1977.3,
      "Time_End": 1981.3,
      "Text": " Hello, thank you for the presentation, it was quite interesting."
    },
    {
      "Time_Start": 1981.3,
      "Time_End": 1988.74,
      "Text": " If we're talking about like full kill chain of the attacking AWS, I'm wondering how difficult"
    },
    {
      "Time_Start": 1988.74,
      "Time_End": 1994.4199999999998,
      "Text": " or easy are actions on objective in terms of cloud environment, for example, if attacker"
    },
    {
      "Time_Start": 1994.42,
      "Time_End": 2000.38,
      "Text": " would start to exfiltrate data, or started using resources, is it easier or harder to"
    },
    {
      "Time_Start": 2000.38,
      "Time_End": 2004.8600000000001,
      "Text": " detect for the owner of the instance compared to bare metal?"
    },
    {
      "Time_Start": 2004.8600000000001,
      "Time_End": 2015.14,
      "Text": " Well, it is harder, because, for example, there is something like virtual private cloud,"
    },
    {
      "Time_Start": 2015.14,
      "Time_End": 2020.66,
      "Text": " which generally makes you a private cloud, and it should be separated, but there are"
    },
    {
      "Time_Start": 2020.94,
      "Time_End": 2026.98,
      "Text": " features like, for example, even if you are using the VPC flow logs, it is still possible,"
    },
    {
      "Time_Start": 2026.98,
      "Time_End": 2032.74,
      "Text": " the VPC flow logs are not monitoring any DNS records by default."
    },
    {
      "Time_Start": 2032.74,
      "Time_End": 2040.3400000000001,
      "Text": " You can exfiltrate all the data using DNS, and there are not, and by default, if you"
    },
    {
      "Time_Start": 2040.3400000000001,
      "Time_End": 2047.7,
      "Text": " don't change some things, you will be not notified."
    },
    {
      "Time_Start": 2047.74,
      "Time_End": 2054.9,
      "Text": " If you are using exfiltrating data, it is pretty difficult, because, you know, normally"
    },
    {
      "Time_Start": 2054.9,
      "Time_End": 2060.58,
      "Text": " you are using like you are accessing some simple storage service, and from my experience,"
    },
    {
      "Time_Start": 2060.58,
      "Time_End": 2068.66,
      "Text": " it seems that all the users can display all the content of the buckets."
    },
    {
      "Time_Start": 2068.66,
      "Time_End": 2077.94,
      "Text": " If you treat it as a normal behaviour, then you will not see any abnormality in this that"
    },
    {
      "Time_Start": 2077.94,
      "Time_End": 2085.7,
      "Text": " some objects were accessed, and then exfiltrated."
    },
    {
      "Time_Start": 2085.7,
      "Time_End": 2086.7,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2086.7,
      "Time_End": 2087.7,
      "Text": " Anyone else?"
    },
    {
      "Time_Start": 2087.7,
      "Time_End": 2088.7,
      "Text": " All right."
    },
    {
      "Time_Start": 2088.7,
      "Time_End": 2089.7,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2089.7,
      "Time_End": 2090.7,
      "Text": " Thank you very much."
    },
    {
      "Time_Start": 2090.74,
      "Time_End": 2091.74,
      "Text": " ..."
    },
    {
      "Time_Start": 2091.74,
      "Time_End": 2092.74,
      "Text": " ..."
    },
    {
      "Time_Start": 2092.74,
      "Time_End": 2093.74,
      "Text": " ..."
    },
    {
      "Time_Start": 2093.74,
      "Time_End": 2094.74,
      "Text": " ..."
    },
    {
      "Time_Start": 2094.74,
      "Time_End": 2095.74,
      "Text": " ..."
    },
    {
      "Time_Start": 2095.74,
      "Time_End": 2096.74,
      "Text": " ..."
    },
    {
      "Time_Start": 2096.74,
      "Time_End": 2097.74,
      "Text": " ..."
    }
  ]
}