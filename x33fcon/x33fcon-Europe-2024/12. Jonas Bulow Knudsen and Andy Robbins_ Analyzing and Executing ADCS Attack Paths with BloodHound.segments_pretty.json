{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 17.080000000000002,
      "Text": "This text was transcribed using whisper model: large-v2\n\n This is us, Jonas Budlokudzin, or Jonas as I call him, you can find him on Twitter at"
    },
    {
      "Time_Start": 17.080000000000002,
      "Time_End": 18.42,
      "Text": " that link there."
    },
    {
      "Time_Start": 18.42,
      "Time_End": 23.32,
      "Text": " So that's at Jonas underscore B underscore K. Jonas is a product architect at Spector"
    },
    {
      "Time_Start": 23.32,
      "Time_End": 25.32,
      "Text": " Ops with me."
    },
    {
      "Time_Start": 25.32,
      "Time_End": 26.32,
      "Text": " That's me."
    },
    {
      "Time_Start": 27.32,
      "Time_End": 35.24,
      "Text": " I'm also a product architect at Spector Ops, and I'm one of the co-creators of the Bloodhound"
    },
    {
      "Time_Start": 35.24,
      "Time_End": 38.36,
      "Text": " software."
    },
    {
      "Time_Start": 38.36,
      "Time_End": 41.96,
      "Text": " Before we get into the meat of the presentation, we want to say a very big thank you and acknowledge"
    },
    {
      "Time_Start": 41.96,
      "Time_End": 42.96,
      "Text": " some people."
    },
    {
      "Time_Start": 42.96,
      "Time_End": 48.519999999999996,
      "Text": " So Will Schroeder and Lee Chigola-Christensen for their seminal work and their white paper"
    },
    {
      "Time_Start": 48.519999999999996,
      "Time_End": 52.36,
      "Text": " on ADCS attack paths called Certified Pre-Owned."
    },
    {
      "Time_Start": 52.36,
      "Time_End": 58.32,
      "Text": " And then also Oliver Luak for his continuing research into ADCS abuse primitives, his work"
    },
    {
      "Time_Start": 58.32,
      "Time_End": 64.03999999999999,
      "Text": " on the Certify tool, and for his contributions to the legacy version of Bloodhound."
    },
    {
      "Time_Start": 64.03999999999999,
      "Time_End": 67.48,
      "Text": " So thank you to these folks here."
    },
    {
      "Time_Start": 67.48,
      "Time_End": 68.48,
      "Text": " Here's our agenda."
    },
    {
      "Time_Start": 68.48,
      "Time_End": 73.44,
      "Text": " So how do we model ADCS attack paths in Bloodhound?"
    },
    {
      "Time_Start": 73.44,
      "Time_End": 78.56,
      "Text": " As a user, how can you discover, analyze, and execute those attack paths?"
    },
    {
      "Time_Start": 78.56,
      "Time_End": 82.12,
      "Text": " Jonas will then talk about some remediation strategies and go through some practical examples"
    },
    {
      "Time_Start": 82.88000000000001,
      "Time_End": 87.52000000000001,
      "Text": " of how real-world defenders can shut down these attack paths, and then a conclusion"
    },
    {
      "Time_Start": 87.52000000000001,
      "Time_End": 89.5,
      "Text": " at the end."
    },
    {
      "Time_Start": 89.5,
      "Time_End": 96.96000000000001,
      "Text": " So first, regarding how we model ADCS in Bloodhound, we'll talk about the data model, its place,"
    },
    {
      "Time_Start": 96.96000000000001,
      "Time_End": 101.24000000000001,
      "Text": " its primitives, and its purpose."
    },
    {
      "Time_Start": 101.24000000000001,
      "Time_End": 107.44,
      "Text": " So Active Directory, Windows, ADCS, Intra, these are all systems."
    },
    {
      "Time_Start": 107.44,
      "Time_End": 111.96000000000001,
      "Text": " There are attack paths that can emerge out of these systems."
    },
    {
      "Time_Start": 111.96000000000001,
      "Time_End": 114.2,
      "Text": " Where do those attack paths come from?"
    },
    {
      "Time_Start": 114.2,
      "Time_End": 122.04,
      "Text": " They come from the combination of the mechanics of the system, so think like RBAC, DACLs,"
    },
    {
      "Time_Start": 122.04,
      "Time_End": 126.84,
      "Text": " the security reference monitor, things like that, group nestings, the configurations that"
    },
    {
      "Time_Start": 126.84,
      "Time_End": 130.36,
      "Text": " have been put in place in the system, and also user behavior."
    },
    {
      "Time_Start": 130.36,
      "Time_End": 135.12,
      "Text": " So for example, the mechanics of the system could be credential management, RBAC, et cetera."
    },
    {
      "Time_Start": 135.12,
      "Time_End": 139.8,
      "Text": " The configurations can be DACLs, security group memberships, et cetera, user behavior,"
    },
    {
      "Time_Start": 139.8,
      "Time_End": 144.8,
      "Text": " user logons, credential reuse and storage, things that users do that contribute to the"
    },
    {
      "Time_Start": 144.8,
      "Time_End": 148.08,
      "Text": " emergence of these attack paths."
    },
    {
      "Time_Start": 148.08,
      "Time_End": 151.88000000000002,
      "Text": " Attack path management is what Bloodhound does."
    },
    {
      "Time_Start": 151.88000000000002,
      "Time_End": 156.88000000000002,
      "Text": " On the pentest Red Team side, mostly what you're focused on is attack path discovery,"
    },
    {
      "Time_Start": 156.88000000000002,
      "Time_End": 163.88000000000002,
      "Text": " that first box there, but then what attack path management also encompasses is risk assessment"
    },
    {
      "Time_Start": 163.88000000000002,
      "Time_End": 169.24,
      "Text": " and prescriptive remediation guidance for shutting down those attack paths and measuring"
    },
    {
      "Time_Start": 169.24,
      "Time_End": 172.82000000000002,
      "Text": " progress over time and all that kind of stuff."
    },
    {
      "Time_Start": 172.82000000000002,
      "Time_End": 179.4,
      "Text": " How do we go from the real life system to attack path management?"
    },
    {
      "Time_Start": 179.4,
      "Time_End": 180.92000000000002,
      "Text": " That is with the data model."
    },
    {
      "Time_Start": 180.92000000000002,
      "Time_End": 185.56,
      "Text": " The data model is one of the things that is not that well understood outside of our team,"
    },
    {
      "Time_Start": 185.56,
      "Time_End": 192.60000000000002,
      "Text": " so this is one of the first times we're talking publicly about the data model, and so the"
    },
    {
      "Time_Start": 192.60000000000002,
      "Time_End": 197.04000000000002,
      "Text": " system mechanics, configurations, and user behaviors inform the data model, and the data"
    },
    {
      "Time_Start": 197.12,
      "Time_End": 201.35999999999999,
      "Text": " model is what enables Bloodhound to do what it does."
    },
    {
      "Time_Start": 201.35999999999999,
      "Time_End": 205.64,
      "Text": " So that's why we'll be talking about the data model today."
    },
    {
      "Time_Start": 205.64,
      "Time_End": 209.64,
      "Text": " There are two primitive building blocks in a graph database."
    },
    {
      "Time_Start": 209.64,
      "Time_End": 216.04,
      "Text": " Nodes, which are also called vertices, and edges, which are also called relationships."
    },
    {
      "Time_Start": 216.04,
      "Time_End": 217.04,
      "Text": " That's it."
    },
    {
      "Time_Start": 217.04,
      "Time_End": 218.04,
      "Text": " Just those two things."
    },
    {
      "Time_Start": 218.04,
      "Time_End": 223.48,
      "Text": " This is where everything is built on top of this foundation."
    },
    {
      "Time_Start": 223.48000000000002,
      "Time_End": 228.20000000000002,
      "Text": " For example, you may have a user that is added to the local administrators group on"
    },
    {
      "Time_Start": 228.20000000000002,
      "Time_End": 234.52,
      "Text": " a Windows endpoint, and the way that we model that is with two nodes, user node, computer"
    },
    {
      "Time_Start": 234.52,
      "Time_End": 239.32000000000002,
      "Text": " node, and a relationship called admin two."
    },
    {
      "Time_Start": 239.32000000000002,
      "Time_End": 243.60000000000002,
      "Text": " By a quick show of hands, who has used Bloodhound before?"
    },
    {
      "Time_Start": 243.60000000000002,
      "Time_End": 245.28000000000003,
      "Text": " Okay."
    },
    {
      "Time_Start": 245.28000000000003,
      "Time_End": 246.84000000000003,
      "Text": " You don't count."
    },
    {
      "Time_Start": 246.84000000000003,
      "Time_End": 248.96,
      "Text": " And who has never used Bloodhound?"
    },
    {
      "Time_Start": 248.96,
      "Time_End": 250.16000000000003,
      "Text": " Okay."
    },
    {
      "Time_Start": 250.16,
      "Time_End": 254.28,
      "Text": " So for people who have not used Bloodhound, you can think of it as essentially Google"
    },
    {
      "Time_Start": 254.28,
      "Time_End": 256.71999999999997,
      "Text": " Maps for Active Directory."
    },
    {
      "Time_Start": 256.71999999999997,
      "Time_End": 261.08,
      "Text": " So I want to start from domain users, and I want to go to domain admins."
    },
    {
      "Time_Start": 261.08,
      "Time_End": 265.84,
      "Text": " It'll show you the path, right?"
    },
    {
      "Time_Start": 265.84,
      "Time_End": 268.4,
      "Text": " So here's a question."
    },
    {
      "Time_Start": 268.4,
      "Time_End": 276.32,
      "Text": " How can we encode escalation one into the graph using these two basic primitives and"
    },
    {
      "Time_Start": 276.32,
      "Time_End": 282.68,
      "Text": " enable users to identify and analyze those attack paths without having to become an expert"
    },
    {
      "Time_Start": 282.68,
      "Time_End": 288.8,
      "Text": " in ADCS and without having to go through the tedium of finding these attack paths by hand?"
    },
    {
      "Time_Start": 288.8,
      "Time_End": 290.68,
      "Text": " I'm glad you asked."
    },
    {
      "Time_Start": 290.68,
      "Time_End": 298.8,
      "Text": " So what we also have to keep in mind is we want to enable simple discovery of attack"
    },
    {
      "Time_Start": 298.8,
      "Time_End": 299.8,
      "Text": " paths."
    },
    {
      "Time_Start": 299.8,
      "Time_End": 305.32,
      "Text": " We also want to enable per-object auditing and analysis, comply with the existing data"
    },
    {
      "Time_Start": 305.32,
      "Time_End": 312.71999999999997,
      "Text": " model and UX of the product, and maintain the product's accuracy and performance."
    },
    {
      "Time_Start": 312.71999999999997,
      "Time_End": 314.64,
      "Text": " So how do we do that?"
    },
    {
      "Time_Start": 314.64,
      "Time_End": 319.8,
      "Text": " Or put simply, how do we make the product answer a very simple question?"
    },
    {
      "Time_Start": 319.8,
      "Time_End": 326.08,
      "Text": " And that very simple question is of all the users, of all the computers in my enormous"
    },
    {
      "Time_Start": 326.08,
      "Time_End": 329.6,
      "Text": " Active Directory environment, which ones can do escalation one?"
    },
    {
      "Time_Start": 329.6,
      "Time_End": 332.36,
      "Text": " It is a simple question."
    },
    {
      "Time_Start": 332.36,
      "Time_End": 334.24,
      "Text": " There's a simple answer."
    },
    {
      "Time_Start": 334.24,
      "Time_End": 341.84000000000003,
      "Text": " But getting to that simple answer is extremely difficult to do by hand."
    },
    {
      "Time_Start": 341.84000000000003,
      "Time_End": 346.92,
      "Text": " That's where the data model comes into place."
    },
    {
      "Time_Start": 346.92,
      "Time_End": 349.56,
      "Text": " So where does the data come from?"
    },
    {
      "Time_Start": 349.56,
      "Time_End": 354.32,
      "Text": " And how do we build the initial model?"
    },
    {
      "Time_Start": 354.32,
      "Time_End": 359.2,
      "Text": " Everything in Active Directory descends down from the domain head object."
    },
    {
      "Time_Start": 359.2,
      "Time_End": 362.92,
      "Text": " And historically, everything in the Bloodhound database has come from the default naming"
    },
    {
      "Time_Start": 362.92,
      "Time_End": 364.42,
      "Text": " context."
    },
    {
      "Time_Start": 364.42,
      "Time_End": 370.0,
      "Text": " The relevant LDAP objects for modeling ADCS attack paths are in the configuration naming"
    },
    {
      "Time_Start": 370.0,
      "Time_End": 371.0,
      "Text": " context."
    },
    {
      "Time_Start": 371.0,
      "Time_End": 374.71999999999997,
      "Text": " So this is the first time that we're expanding the scope of what Bloodhound covers outside"
    },
    {
      "Time_Start": 374.71999999999997,
      "Time_End": 377.28,
      "Text": " the default naming context."
    },
    {
      "Time_Start": 377.28,
      "Time_End": 384.28,
      "Text": " And what I want you to do is I want you to follow me through, like, the MMC view of that"
    },
    {
      "Time_Start": 384.28000000000003,
      "Time_End": 389.36,
      "Text": " tree structure as we build the model step by step."
    },
    {
      "Time_Start": 389.36,
      "Time_End": 392.06,
      "Text": " So at the top is the domain head."
    },
    {
      "Time_Start": 392.06,
      "Time_End": 395.92,
      "Text": " Below that is the configuration naming context."
    },
    {
      "Time_Start": 395.92,
      "Time_End": 398.32000000000005,
      "Text": " We assign that a type of container."
    },
    {
      "Time_Start": 398.32000000000005,
      "Time_End": 403.52000000000004,
      "Text": " And we store the universally unique identifier of that object."
    },
    {
      "Time_Start": 403.52000000000004,
      "Time_End": 408.28000000000003,
      "Text": " That container contains, among other things, a container called services."
    },
    {
      "Time_Start": 408.28000000000003,
      "Time_End": 410.28000000000003,
      "Text": " What's up?"
    },
    {
      "Time_Start": 411.28000000000003,
      "Time_End": 414.28000000000003,
      "Text": " Oh, yeah."
    },
    {
      "Time_Start": 414.28000000000003,
      "Time_End": 417.28000000000003,
      "Text": " There it is."
    },
    {
      "Time_Start": 417.28000000000003,
      "Time_End": 418.28000000000003,
      "Text": " Okay."
    },
    {
      "Time_Start": 418.28000000000003,
      "Time_End": 426.40000000000003,
      "Text": " So the services container then contains the public key services container."
    },
    {
      "Time_Start": 426.40000000000003,
      "Time_End": 433.20000000000005,
      "Text": " Which contains, among other things, the certificate templates container."
    },
    {
      "Time_Start": 433.20000000000005,
      "Time_End": 438.44000000000005,
      "Text": " The certification authorities container."
    },
    {
      "Time_Start": 438.44,
      "Time_End": 442.36,
      "Text": " The enrollment services container."
    },
    {
      "Time_Start": 442.36,
      "Time_End": 447.64,
      "Text": " And the NT auth store object."
    },
    {
      "Time_Start": 447.64,
      "Time_End": 449.64,
      "Text": " Continuing on."
    },
    {
      "Time_Start": 449.64,
      "Time_End": 455.64,
      "Text": " The NT auth store object has a property on it called CA certificate."
    },
    {
      "Time_Start": 455.64,
      "Time_End": 462.2,
      "Text": " This is a list of ASN 1 formatted certificates that are trusted to do NT authentication in"
    },
    {
      "Time_Start": 462.2,
      "Time_End": 463.42,
      "Text": " the domain."
    },
    {
      "Time_Start": 463.42,
      "Time_End": 469.54,
      "Text": " And so you'll see how that plays in as we expand the model in the next step."
    },
    {
      "Time_Start": 469.54,
      "Time_End": 476.34000000000003,
      "Text": " But we do the work for you of parsing that ASN 1 certificate and storing in that property"
    },
    {
      "Time_Start": 476.34000000000003,
      "Time_End": 481.90000000000003,
      "Text": " just the thumbprint of that certificate."
    },
    {
      "Time_Start": 481.90000000000003,
      "Time_End": 492.22,
      "Text": " The certification authorities container contains certification authority type objects."
    },
    {
      "Time_Start": 492.22,
      "Time_End": 499.18,
      "Text": " And we model those as root CA objects because any certificate authority that is listed in"
    },
    {
      "Time_Start": 499.18,
      "Time_End": 503.70000000000005,
      "Text": " that container will be pushed out by group policy to every endpoint in the forest and"
    },
    {
      "Time_Start": 503.70000000000005,
      "Time_End": 509.82000000000005,
      "Text": " added to the trusted root certificates container on every endpoint."
    },
    {
      "Time_Start": 509.82000000000005,
      "Time_End": 520.4200000000001,
      "Text": " Again, we parse the certificate for you and store the thumbprint of that certificate in"
    },
    {
      "Time_Start": 520.42,
      "Time_End": 522.3399999999999,
      "Text": " the database."
    },
    {
      "Time_Start": 522.3399999999999,
      "Time_End": 524.5799999999999,
      "Text": " Okay?"
    },
    {
      "Time_Start": 524.5799999999999,
      "Time_End": 529.0,
      "Text": " Continuing on, under the enrollment services container, we have the PKI enrollment services"
    },
    {
      "Time_Start": 529.0,
      "Time_End": 530.0,
      "Text": " objects."
    },
    {
      "Time_Start": 530.0,
      "Time_End": 535.62,
      "Text": " These are the objects that store, for example, what is the host name of where the CA service"
    },
    {
      "Time_Start": 535.62,
      "Time_End": 536.62,
      "Text": " is actually running."
    },
    {
      "Time_Start": 536.62,
      "Time_End": 541.3,
      "Text": " So that as a client, you go to enroll in a template, you actually know what host to reach"
    },
    {
      "Time_Start": 541.3,
      "Time_End": 546.5799999999999,
      "Text": " out to and do that request against."
    },
    {
      "Time_Start": 547.5400000000001,
      "Time_End": 554.5400000000001,
      "Text": " Next, we, again, store certain information regarding these enterprise CAs, including"
    },
    {
      "Time_Start": 554.5400000000001,
      "Time_End": 562.82,
      "Text": " the object ID, the cert thumbprint, and also the PKI cert chain."
    },
    {
      "Time_Start": 562.82,
      "Time_End": 567.34,
      "Text": " If that chain is not just itself."
    },
    {
      "Time_Start": 567.34,
      "Time_End": 569.14,
      "Text": " Okay?"
    },
    {
      "Time_Start": 569.14,
      "Time_End": 574.5200000000001,
      "Text": " Next, under the certificate templates container, you will never guess what's there."
    },
    {
      "Time_Start": 574.52,
      "Time_End": 576.72,
      "Text": " They are certificate templates."
    },
    {
      "Time_Start": 576.72,
      "Time_End": 581.48,
      "Text": " And so we collect those and store certain information about those."
    },
    {
      "Time_Start": 581.48,
      "Time_End": 589.56,
      "Text": " We store more than what you see here, but this is what's relevant for escalation one."
    },
    {
      "Time_Start": 589.56,
      "Time_End": 595.4399999999999,
      "Text": " On each of these objects as well, we collect the security descriptor and we collect the"
    },
    {
      "Time_Start": 595.4399999999999,
      "Time_End": 601.16,
      "Text": " relevant aces on the DACL of each security descriptor."
    },
    {
      "Time_Start": 601.16,
      "Time_End": 606.68,
      "Text": " So for example, on an enterprise CA object is where the enrollment rights are replicated"
    },
    {
      "Time_Start": 606.68,
      "Time_End": 610.56,
      "Text": " from the host up into the LDAP object."
    },
    {
      "Time_Start": 610.56,
      "Time_End": 614.76,
      "Text": " And so from that object, we can see which principles are allowed to enroll, which ones"
    },
    {
      "Time_Start": 614.76,
      "Time_End": 620.8399999999999,
      "Text": " have full control of the CA and things like that."
    },
    {
      "Time_Start": 620.8399999999999,
      "Time_End": 625.68,
      "Text": " Also we have security groups that we model and the memberships of those groups, that's"
    },
    {
      "Time_Start": 625.68,
      "Time_End": 630.28,
      "Text": " nothing new that's been there since the beginning."
    },
    {
      "Time_Start": 630.28,
      "Time_End": 642.0799999999999,
      "Text": " In this example, on a cert template, we have a user called Jones which has the enroll ace"
    },
    {
      "Time_Start": 642.0799999999999,
      "Time_End": 644.18,
      "Text": " against that particular template."
    },
    {
      "Time_Start": 644.18,
      "Time_End": 649.4,
      "Text": " So we collect all of those plus the other abusable ace types that can also allow for"
    },
    {
      "Time_Start": 649.4,
      "Time_End": 656.12,
      "Text": " enrollment or for other abuse possibilities."
    },
    {
      "Time_Start": 656.12,
      "Time_End": 660.1999999999999,
      "Text": " That is the initial model for escalation one."
    },
    {
      "Time_Start": 660.2,
      "Time_End": 663.88,
      "Text": " There is more to this model, but this is what's relevant for talking about escalation"
    },
    {
      "Time_Start": 663.88,
      "Time_End": 667.48,
      "Text": " one."
    },
    {
      "Time_Start": 667.48,
      "Time_End": 674.0400000000001,
      "Text": " After that information is put into the database, we do a process called post processing to"
    },
    {
      "Time_Start": 674.0400000000001,
      "Time_End": 683.2800000000001,
      "Text": " enrich the model and prepare it for automatic identification of these escalation primitives."
    },
    {
      "Time_Start": 683.2800000000001,
      "Time_End": 685.8000000000001,
      "Text": " Here's the initial model again."
    },
    {
      "Time_Start": 685.8000000000001,
      "Time_End": 696.2400000000001,
      "Text": " So any object within the NT object, we make this kind of helper edge from the NT object"
    },
    {
      "Time_Start": 696.2400000000001,
      "Time_End": 697.8800000000001,
      "Text": " to the domain head."
    },
    {
      "Time_Start": 697.8800000000001,
      "Time_End": 703.6,
      "Text": " That makes it easier for us in later steps to identify which CAs are actually going to"
    },
    {
      "Time_Start": 703.6,
      "Time_End": 707.9200000000001,
      "Text": " be valid for doing NT authentication."
    },
    {
      "Time_Start": 707.9200000000001,
      "Time_End": 712.1200000000001,
      "Text": " Otherwise the escalation primitives won't work if you actually want to get a Kerberos"
    },
    {
      "Time_Start": 712.1200000000001,
      "Time_End": 714.72,
      "Text": " ticket."
    },
    {
      "Time_Start": 714.72,
      "Time_End": 721.5600000000001,
      "Text": " On the NT auth store object, it contains a list of CA certs that are trusted for NT authentication."
    },
    {
      "Time_Start": 721.5600000000001,
      "Time_End": 726.88,
      "Text": " So we compare that to the enterprise CA objects that are in the database, and if we find a"
    },
    {
      "Time_Start": 726.88,
      "Time_End": 733.64,
      "Text": " match where the thumbprint of this CA matches what's in this list, we create an edge called"
    },
    {
      "Time_Start": 733.64,
      "Time_End": 735.76,
      "Text": " trusted for NT auth."
    },
    {
      "Time_Start": 735.76,
      "Time_End": 738.24,
      "Text": " There we go."
    },
    {
      "Time_Start": 738.24,
      "Time_End": 742.08,
      "Text": " So we create that edge right there."
    },
    {
      "Time_Start": 743.0400000000001,
      "Time_End": 745.0400000000001,
      "Text": " Okay."
    },
    {
      "Time_Start": 747.9200000000001,
      "Time_End": 756.0,
      "Text": " Any object that is in the certification authorities container will be a root CA, and so we create"
    },
    {
      "Time_Start": 756.0,
      "Time_End": 763.2800000000001,
      "Text": " another helper edge called root CA4, and we have that edge go from the root CA to the"
    },
    {
      "Time_Start": 763.2800000000001,
      "Time_End": 766.5200000000001,
      "Text": " domain head."
    },
    {
      "Time_Start": 766.52,
      "Time_End": 775.0799999999999,
      "Text": " Then the root CA can have an associated enrollment CA, and the way that that is stored is the"
    },
    {
      "Time_Start": 775.0799999999999,
      "Time_End": 780.6,
      "Text": " cert thumbprint will be the same between the two different objects."
    },
    {
      "Time_Start": 780.6,
      "Time_End": 788.16,
      "Text": " So when we find that match, we create another post-processed edge called enterprise CA4."
    },
    {
      "Time_Start": 788.16,
      "Time_End": 793.96,
      "Text": " So this is an enterprise CA, and it is the enterprise CA for this root CA."
    },
    {
      "Time_Start": 794.52,
      "Time_End": 796.52,
      "Text": " Okay?"
    },
    {
      "Time_Start": 797.64,
      "Time_End": 798.9200000000001,
      "Text": " Sorry, I keep going back and forth."
    },
    {
      "Time_Start": 798.9200000000001,
      "Time_End": 803.64,
      "Text": " It's like for some reason the images aren't showing up unless I go back and forth."
    },
    {
      "Time_Start": 803.64,
      "Time_End": 805.8000000000001,
      "Text": " Okay."
    },
    {
      "Time_Start": 805.8000000000001,
      "Time_End": 813.1600000000001,
      "Text": " What we also model is the PKI trust chain, and so, for example, this enterprise CA, its"
    },
    {
      "Time_Start": 813.1600000000001,
      "Time_End": 820.4000000000001,
      "Text": " thumbprint is here, and then this enterprise CA is actually a subordinate CA that was issued"
    },
    {
      "Time_Start": 820.4,
      "Time_End": 824.24,
      "Text": " and signed by this CA here."
    },
    {
      "Time_Start": 824.24,
      "Time_End": 830.24,
      "Text": " So we compare the cert thumbprints to what is in the cert chain, we find a match, and"
    },
    {
      "Time_Start": 830.24,
      "Time_End": 836.9599999999999,
      "Text": " then when we find that match, we create this issued signed by edge, and that lets us see"
    },
    {
      "Time_Start": 836.9599999999999,
      "Time_End": 841.76,
      "Text": " the trust chain, the PKI trust chain from CA to CA."
    },
    {
      "Time_Start": 841.76,
      "Time_End": 843.76,
      "Text": " Okay?"
    },
    {
      "Time_Start": 844.64,
      "Time_End": 853.56,
      "Text": " So a template can be enabled or otherwise published to none or more CAs."
    },
    {
      "Time_Start": 853.56,
      "Time_End": 860.0,
      "Text": " That is stored in the Active Directory database with display names, not with GUIDs."
    },
    {
      "Time_Start": 860.0,
      "Time_End": 867.36,
      "Text": " We store it in our database with GUIDs because we're not stupid, or try not to be stupid."
    },
    {
      "Time_Start": 867.36,
      "Time_End": 869.04,
      "Text": " I'm stupid."
    },
    {
      "Time_Start": 869.04,
      "Time_End": 876.7199999999999,
      "Text": " So if we find a match where the cert template display name or GUID is listed by the CA in"
    },
    {
      "Time_Start": 876.7199999999999,
      "Time_End": 882.4399999999999,
      "Text": " the published certs list, then we create an edge called published to."
    },
    {
      "Time_Start": 882.4399999999999,
      "Time_End": 887.4,
      "Text": " So this template is published to the CA, and we do that for each other template and each"
    },
    {
      "Time_Start": 887.4,
      "Time_End": 888.9599999999999,
      "Text": " CA."
    },
    {
      "Time_Start": 888.9599999999999,
      "Time_End": 890.68,
      "Text": " Okay."
    },
    {
      "Time_Start": 890.6800000000001,
      "Time_End": 891.6800000000001,
      "Text": " Bottom line."
    },
    {
      "Time_Start": 891.6800000000001,
      "Time_End": 906.6800000000001,
      "Text": " This is the model that enables automatic identification of every named ADCS privilege escalation primitive."
    },
    {
      "Time_Start": 906.6800000000001,
      "Time_End": 908.6400000000001,
      "Text": " So how does that work?"
    },
    {
      "Time_Start": 908.6400000000001,
      "Time_End": 914.5600000000001,
      "Text": " Once the data is in the database, and combining, you know, the knowledge from Will and Lee"
    },
    {
      "Time_Start": 914.5600000000001,
      "Time_End": 924.7600000000001,
      "Text": " about how these escalations emerge, we can construct a query that will \u2011\u2011 sorry."
    },
    {
      "Time_Start": 924.7600000000001,
      "Time_End": 926.5600000000001,
      "Text": " These things aren't showing up."
    },
    {
      "Time_Start": 926.5600000000001,
      "Time_End": 936.5200000000001,
      "Text": " We can construct a query that will inspect any database just agnostically or generically,"
    },
    {
      "Time_Start": 936.5200000000001,
      "Time_End": 942.2,
      "Text": " and any escalation primitive that can emerge, we will model."
    },
    {
      "Time_Start": 942.2,
      "Time_End": 944.5200000000001,
      "Text": " That query looks like that."
    },
    {
      "Time_Start": 944.5200000000001,
      "Time_End": 946.36,
      "Text": " I'm not going to walk through that."
    },
    {
      "Time_Start": 946.36,
      "Time_End": 953.72,
      "Text": " But what you need to know is that even though it looks complicated, it is actually a computationally"
    },
    {
      "Time_Start": 953.72,
      "Time_End": 956.12,
      "Text": " free basically query to run."
    },
    {
      "Time_Start": 956.12,
      "Time_End": 961.24,
      "Text": " This will run in less than a millisecond, no matter the size of the database."
    },
    {
      "Time_Start": 961.24,
      "Time_End": 967.5600000000001,
      "Text": " When we run this query, it will find the patterns in the database to answer that question of"
    },
    {
      "Time_Start": 967.5600000000001,
      "Time_End": 971.12,
      "Text": " which principles can perform escalation one."
    },
    {
      "Time_Start": 971.12,
      "Time_End": 978.48,
      "Text": " The end result of that query is we create, finally, a post\u2011processed edge from any"
    },
    {
      "Time_Start": 978.48,
      "Time_End": 982.84,
      "Text": " principle that can do escalation one to the domain head."
    },
    {
      "Time_Start": 982.84,
      "Time_End": 983.84,
      "Text": " Easy."
    },
    {
      "Time_Start": 983.84,
      "Time_End": 984.84,
      "Text": " Easy peasy."
    },
    {
      "Time_Start": 984.84,
      "Time_End": 985.84,
      "Text": " Okay."
    },
    {
      "Time_Start": 985.84,
      "Time_End": 1002.76,
      "Text": " I'm going to take a drink of water."
    },
    {
      "Time_Start": 1002.76,
      "Time_End": 1007.2800000000001,
      "Text": " So the next thing we're going to talk about is, yeah, we're going to show you how we have"
    },
    {
      "Time_Start": 1007.2800000000001,
      "Time_End": 1012.76,
      "Text": " actually implemented escalation one, three, and four into Bloodhound, and we're going"
    },
    {
      "Time_Start": 1012.76,
      "Time_End": 1021.12,
      "Text": " to give a demo of how you can actually use Bloodhound to identify these things and, yeah."
    },
    {
      "Time_Start": 1021.12,
      "Time_End": 1024.92,
      "Text": " Do your assessment and actually abuse the narrative."
    },
    {
      "Time_Start": 1024.92,
      "Time_End": 1025.92,
      "Text": " Okay."
    },
    {
      "Time_Start": 1025.92,
      "Time_End": 1026.92,
      "Text": " Thanks."
    },
    {
      "Time_Start": 1026.92,
      "Time_End": 1027.92,
      "Text": " Okay."
    },
    {
      "Time_Start": 1027.92,
      "Time_End": 1030.24,
      "Text": " All right."
    },
    {
      "Time_Start": 1030.24,
      "Time_End": 1033.64,
      "Text": " Who has done escalation one?"
    },
    {
      "Time_Start": 1033.64,
      "Time_End": 1035.96,
      "Text": " Who has never heard of escalation one?"
    },
    {
      "Time_Start": 1035.96,
      "Time_End": 1037.44,
      "Text": " Don't be afraid."
    },
    {
      "Time_Start": 1037.44,
      "Time_End": 1038.44,
      "Text": " Okay."
    },
    {
      "Time_Start": 1038.44,
      "Time_End": 1044.0,
      "Text": " So a quick explanation of what escalation one kind of is and how it works."
    },
    {
      "Time_Start": 1044.0,
      "Time_End": 1046.44,
      "Text": " So in this model, we have Alice and Bob."
    },
    {
      "Time_Start": 1046.44,
      "Time_End": 1052.56,
      "Text": " They have a domain controller, an enterprise CA, and a cert template that is configured"
    },
    {
      "Time_Start": 1052.56,
      "Time_End": 1055.52,
      "Text": " in a way that enables escalation one."
    },
    {
      "Time_Start": 1055.52,
      "Time_End": 1064.28,
      "Text": " So Alice will request enrollment in a template against the CA that this template is published"
    },
    {
      "Time_Start": 1065.28,
      "Time_End": 1071.48,
      "Text": " to, and basically say, please give me a certificate that is valid for NT authentication, and oh,"
    },
    {
      "Time_Start": 1071.48,
      "Time_End": 1078.12,
      "Text": " by the way, my subject alternative name is Bob at Contoso.local."
    },
    {
      "Time_Start": 1078.12,
      "Time_End": 1084.6,
      "Text": " And so the very complicated model that we saw before, the ADCS system will go through"
    },
    {
      "Time_Start": 1084.6,
      "Time_End": 1091.56,
      "Text": " the same checks to see whether or not Alice can do that enrollment, and if so, will return"
    },
    {
      "Time_Start": 1091.56,
      "Time_End": 1095.28,
      "Text": " a certificate back to Alice."
    },
    {
      "Time_Start": 1095.28,
      "Time_End": 1100.24,
      "Text": " And that will have a lot of stuff in it, but the relevant bits are that it will have an"
    },
    {
      "Time_Start": 1100.24,
      "Time_End": 1106.12,
      "Text": " EKU that is valid for NT authentication, for example, the client authentication EKU, and"
    },
    {
      "Time_Start": 1106.12,
      "Time_End": 1114.52,
      "Text": " it will also list in a field called subject alternative name, it will list Bob at Contoso.local."
    },
    {
      "Time_Start": 1114.52,
      "Time_End": 1122.08,
      "Text": " Now, with this certificate, Alice can then communicate to the domain controller and say,"
    },
    {
      "Time_Start": 1122.08,
      "Time_End": 1129.08,
      "Text": " please give me a Kerberos ticket, please give me a TGT as Bob."
    },
    {
      "Time_Start": 1129.08,
      "Time_End": 1134.44,
      "Text": " And this certificate will prove that I am allowed to do that."
    },
    {
      "Time_Start": 1134.44,
      "Time_End": 1139.72,
      "Text": " At that point, the domain controller can parse the certificate, and it can understand that,"
    },
    {
      "Time_Start": 1139.72,
      "Time_End": 1146.16,
      "Text": " yes, this was issued by a root CA that I trust, and I can see that, yes, it is a CA"
    },
    {
      "Time_Start": 1146.16,
      "Time_End": 1155.2,
      "Text": " that is trusted for NT authentication, and so I will return a Kerberos ticket to Alice"
    },
    {
      "Time_Start": 1155.2,
      "Time_End": 1159.96,
      "Text": " that Alice can then use to impersonate Bob."
    },
    {
      "Time_Start": 1159.96,
      "Time_End": 1164.3600000000001,
      "Text": " Like at this point, authentication is done, and so now Alice has successfully impersonated"
    },
    {
      "Time_Start": 1164.3600000000001,
      "Time_End": 1165.6000000000001,
      "Text": " Bob."
    },
    {
      "Time_Start": 1165.6000000000001,
      "Time_End": 1167.04,
      "Text": " Okay."
    },
    {
      "Time_Start": 1167.04,
      "Time_End": 1173.2,
      "Text": " What does that look like if we want to discover that attack path with Bloodhound and execute"
    },
    {
      "Time_Start": 1173.2,
      "Time_End": 1177.76,
      "Text": " it?"
    },
    {
      "Time_Start": 1177.76,
      "Time_End": 1185.26,
      "Text": " So we'll go to pathfinding, and in this example, we're actually starting as a user called Garcia,"
    },
    {
      "Time_Start": 1185.26,
      "Time_End": 1188.2,
      "Text": " and we're searching for a path to domain admins."
    },
    {
      "Time_Start": 1188.2,
      "Time_End": 1194.28,
      "Text": " We find it, and you can see that it goes from Garcia to this ADCS escalation one edge to"
    },
    {
      "Time_Start": 1194.28,
      "Time_End": 1195.52,
      "Text": " the domain."
    },
    {
      "Time_Start": 1195.52,
      "Time_End": 1197.48,
      "Text": " And the domain will contain every principle."
    },
    {
      "Time_Start": 1197.48,
      "Time_End": 1201.76,
      "Text": " So it contains the user's container, which contains the domain admins group."
    },
    {
      "Time_Start": 1201.76,
      "Time_End": 1207.36,
      "Text": " That means that with the escalation one primitive against the domain, we can impersonate any"
    },
    {
      "Time_Start": 1207.36,
      "Time_End": 1208.36,
      "Text": " user."
    },
    {
      "Time_Start": 1208.36,
      "Time_End": 1210.16,
      "Text": " So think of this as kind of similar like DC sync."
    },
    {
      "Time_Start": 1210.16,
      "Time_End": 1217.6,
      "Text": " If DC sync is against the domain, we can extract the NT hash for any principle in that domain."
    },
    {
      "Time_Start": 1217.6,
      "Time_End": 1224.68,
      "Text": " You can click on this edge to get information about this edge, so you can see, like, general"
    },
    {
      "Time_Start": 1224.68,
      "Time_End": 1226.3600000000001,
      "Text": " information about what this means."
    },
    {
      "Time_Start": 1226.3600000000001,
      "Time_End": 1231.2,
      "Text": " You can see example Windows abuse commands, Linux abuse commands, et cetera."
    },
    {
      "Time_Start": 1231.2,
      "Time_End": 1238.0,
      "Text": " But what we just clicked on before this laid out is there is another feature here that"
    },
    {
      "Time_Start": 1238.0,
      "Time_End": 1244.8,
      "Text": " we added for ADCS, and it is this feature right here called composition."
    },
    {
      "Time_Start": 1244.8,
      "Time_End": 1250.3600000000001,
      "Text": " So if you want to execute escalation one, you need to know what's the template, what's"
    },
    {
      "Time_Start": 1250.3600000000001,
      "Time_End": 1252.68,
      "Text": " the CA that I want to target."
    },
    {
      "Time_Start": 1252.68,
      "Time_End": 1258.48,
      "Text": " And so by clicking on the composition accordion item, we can see what the details are of where"
    },
    {
      "Time_Start": 1258.48,
      "Time_End": 1263.8400000000001,
      "Text": " the attack path starts and where it ends, which is at the domain head."
    },
    {
      "Time_Start": 1263.8400000000001,
      "Time_End": 1267.28,
      "Text": " And sorry."
    },
    {
      "Time_Start": 1267.28,
      "Time_End": 1272.48,
      "Text": " And so we can see Garcia is a member of this group called group one, which has enroll rights"
    },
    {
      "Time_Start": 1272.48,
      "Time_End": 1275.0800000000002,
      "Text": " against these two different templates."
    },
    {
      "Time_Start": 1275.0800000000002,
      "Time_End": 1278.3200000000002,
      "Text": " Garcia also has enroll rights against this CA."
    },
    {
      "Time_Start": 1278.32,
      "Time_End": 1283.76,
      "Text": " This CA is the enterprise CA for this root CA, which is a root CA for the domain."
    },
    {
      "Time_Start": 1283.76,
      "Time_End": 1291.32,
      "Text": " And this CA is trusted for authentication as listed by the NT auth store for this domain."
    },
    {
      "Time_Start": 1291.32,
      "Time_End": 1298.56,
      "Text": " So the other properties of the templates that enable client authentication that don't require"
    },
    {
      "Time_Start": 1298.56,
      "Time_End": 1304.36,
      "Text": " manager approval, don't require authorized signatures, et cetera, everything that goes"
    },
    {
      "Time_Start": 1304.3600000000001,
      "Time_End": 1311.6000000000001,
      "Text": " in to enabling escalation one has been taken into account when this is displayed."
    },
    {
      "Time_Start": 1311.6000000000001,
      "Time_End": 1318.0800000000002,
      "Text": " So with that information, we can very easily do the attack."
    },
    {
      "Time_Start": 1318.0800000000002,
      "Time_End": 1326.1200000000001,
      "Text": " So first we'll just demonstrate that we're not domain admin by trying to do the C$ drive"
    },
    {
      "Time_Start": 1326.1200000000001,
      "Time_End": 1327.1200000000001,
      "Text": " on the domain controller."
    },
    {
      "Time_Start": 1327.1200000000001,
      "Time_End": 1328.92,
      "Text": " We get access denied."
    },
    {
      "Time_Start": 1328.92,
      "Time_End": 1337.4,
      "Text": " Then we're going to use certify to abuse escalation one, and we're mentioning the CA, and we're"
    },
    {
      "Time_Start": 1337.4,
      "Time_End": 1342.44,
      "Text": " also mentioning the template, and we're mentioning the principle that we want to impersonate."
    },
    {
      "Time_Start": 1342.44,
      "Time_End": 1345.88,
      "Text": " In this example, it's researcher, which is a domain admin in our domain."
    },
    {
      "Time_Start": 1345.88,
      "Time_End": 1350.68,
      "Text": " When we do that, we get a certificate file back in PFX format."
    },
    {
      "Time_Start": 1350.68,
      "Time_End": 1356.0800000000002,
      "Text": " And then we'll do that next step where we ask the domain controller, let me get a TGT"
    },
    {
      "Time_Start": 1356.08,
      "Time_End": 1359.96,
      "Text": " for this user, and here's my certificate to prove that I can do that."
    },
    {
      "Time_Start": 1359.96,
      "Time_End": 1360.96,
      "Text": " That works."
    },
    {
      "Time_Start": 1360.96,
      "Time_End": 1364.72,
      "Text": " And then in this example, we're actually doing the shadow credentials attack that Oliver"
    },
    {
      "Time_Start": 1364.72,
      "Time_End": 1367.1599999999999,
      "Text": " Lewak put into certify."
    },
    {
      "Time_Start": 1367.1599999999999,
      "Time_End": 1373.32,
      "Text": " And the end result is that we have the NT hash for the researcher user."
    },
    {
      "Time_Start": 1373.32,
      "Time_End": 1377.52,
      "Text": " If you're not familiar with what that means, the NT hash is just as good as the clear text"
    },
    {
      "Time_Start": 1377.52,
      "Time_End": 1378.72,
      "Text": " password."
    },
    {
      "Time_Start": 1378.72,
      "Time_End": 1380.56,
      "Text": " So we have become domain admin."
    },
    {
      "Time_Start": 1386.9199999999998,
      "Time_End": 1387.9199999999998,
      "Text": " Okay."
    },
    {
      "Time_Start": 1387.9199999999998,
      "Time_End": 1388.9199999999998,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1388.9199999999998,
      "Time_End": 1389.9199999999998,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1389.9199999999998,
      "Time_End": 1390.9199999999998,
      "Text": " Can you hear me?"
    },
    {
      "Time_Start": 1390.9199999999998,
      "Time_End": 1391.9199999999998,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1391.9199999999998,
      "Time_End": 1392.9199999999998,
      "Text": " You're good."
    },
    {
      "Time_Start": 1392.9199999999998,
      "Time_End": 1393.9199999999998,
      "Text": " Okay."
    },
    {
      "Time_Start": 1393.9199999999998,
      "Time_End": 1394.9199999999998,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1394.9199999999998,
      "Time_End": 1395.9199999999998,
      "Text": " So I think I'll just press this one."
    },
    {
      "Time_Start": 1395.9199999999998,
      "Time_End": 1401.72,
      "Text": " The next one is escalation three."
    },
    {
      "Time_Start": 1401.72,
      "Time_End": 1410.8799999999999,
      "Text": " And escalation three is the abuse of enrollment agent permissions."
    },
    {
      "Time_Start": 1410.8799999999999,
      "Time_End": 1415.48,
      "Text": " And I'll explain that concept with a similar example as the one we had before, where we"
    },
    {
      "Time_Start": 1415.88,
      "Time_End": 1419.1200000000001,
      "Text": " have Alice and Bob and an enterprise CA and a domain controller."
    },
    {
      "Time_Start": 1419.1200000000001,
      "Time_End": 1423.92,
      "Text": " And this time we have two published certificate templates, one called enrollment agent and"
    },
    {
      "Time_Start": 1423.92,
      "Time_End": 1427.04,
      "Text": " another one called user."
    },
    {
      "Time_Start": 1427.04,
      "Time_End": 1430.6,
      "Text": " Alice wants to be an enrollment agent."
    },
    {
      "Time_Start": 1430.6,
      "Time_End": 1435.8,
      "Text": " So she requests a certificate of the enrollment agent certificate template."
    },
    {
      "Time_Start": 1435.8,
      "Time_End": 1440.76,
      "Text": " Assuming that Alice has the enrollment rights on the enterprise CA and on the template,"
    },
    {
      "Time_Start": 1440.76,
      "Time_End": 1446.24,
      "Text": " the enterprise CA will issue this agent certificate here."
    },
    {
      "Time_Start": 1446.24,
      "Time_End": 1451.68,
      "Text": " And what's special about this enrollment agent certificate is that it has this EQU called"
    },
    {
      "Time_Start": 1451.68,
      "Time_End": 1453.92,
      "Text": " certificate request agent."
    },
    {
      "Time_Start": 1453.92,
      "Time_End": 1457.08,
      "Text": " And that makes you an enrollment agent."
    },
    {
      "Time_Start": 1457.08,
      "Time_End": 1462.4,
      "Text": " What an enrollment agent can do is to enroll on behalf of other users."
    },
    {
      "Time_Start": 1462.4,
      "Time_End": 1469.8,
      "Text": " So the next thing Alice will do is to request a certificate of the user template on behalf"
    },
    {
      "Time_Start": 1469.84,
      "Time_End": 1471.2,
      "Text": " of Bob."
    },
    {
      "Time_Start": 1471.2,
      "Time_End": 1476.3999999999999,
      "Text": " And Alice is allowed to do that because she can present the certificate proving that she"
    },
    {
      "Time_Start": 1476.3999999999999,
      "Time_End": 1479.6599999999999,
      "Text": " is an enrollment agent."
    },
    {
      "Time_Start": 1479.6599999999999,
      "Time_End": 1485.8799999999999,
      "Text": " So the enterprise CA is going to say, that's fair, and give her a certificate as Bob."
    },
    {
      "Time_Start": 1485.8799999999999,
      "Time_End": 1489.96,
      "Text": " And the user certificate template has this client authentication EQU."
    },
    {
      "Time_Start": 1489.96,
      "Time_End": 1493.9199999999998,
      "Text": " So now we are kind of in the same position as we were before with escalation one."
    },
    {
      "Time_Start": 1493.96,
      "Time_End": 1500.52,
      "Text": " So now we can just exchange this certificate here to Kerberos ticket on the domain controller."
    },
    {
      "Time_Start": 1500.52,
      "Time_End": 1505.74,
      "Text": " And Alice has now completely impersonated Bob."
    },
    {
      "Time_Start": 1505.74,
      "Time_End": 1508.1200000000001,
      "Text": " So what is an enrollment agent?"
    },
    {
      "Time_Start": 1508.1200000000001,
      "Time_End": 1513.2,
      "Text": " It is a principal that has this certificate with this special EQU called certificate request"
    },
    {
      "Time_Start": 1513.2,
      "Time_End": 1515.26,
      "Text": " agent."
    },
    {
      "Time_Start": 1515.26,
      "Time_End": 1519.48,
      "Text": " And what an enrollment agent can do is to enroll on behalf of other principals."
    },
    {
      "Time_Start": 1520.04,
      "Time_End": 1525.16,
      "Text": " There are some restrictions, though, in what templates you can enroll in."
    },
    {
      "Time_Start": 1525.16,
      "Time_End": 1530.56,
      "Text": " You can enroll in all templates of schema version one."
    },
    {
      "Time_Start": 1530.56,
      "Time_End": 1536.6,
      "Text": " And then also in schema version two and higher if they specify this certificate request agent"
    },
    {
      "Time_Start": 1536.6,
      "Time_End": 1539.9,
      "Text": " EQU in their application policies."
    },
    {
      "Time_Start": 1539.9,
      "Time_End": 1545.04,
      "Text": " So what that looks like in Access Directory is what I have in this screenshot here."
    },
    {
      "Time_Start": 1545.04,
      "Time_End": 1549.92,
      "Text": " So you can see highlighted with light blue that the application policy required in order"
    },
    {
      "Time_Start": 1549.92,
      "Time_End": 1554.48,
      "Text": " to enroll in this certificate template is the certificate request agent."
    },
    {
      "Time_Start": 1554.48,
      "Time_End": 1561.6,
      "Text": " There are, though, a lot of schema one certificate templates available by default in Access Directory."
    },
    {
      "Time_Start": 1561.6,
      "Time_End": 1565.92,
      "Text": " So usually you can go for those."
    },
    {
      "Time_Start": 1565.92,
      "Time_End": 1571.28,
      "Text": " There's a few more requirements in order to pull off the escalation three attack."
    },
    {
      "Time_Start": 1571.28,
      "Time_End": 1574.76,
      "Text": " And I have highlighted those or described those in detail in the blog post."
    },
    {
      "Time_Start": 1574.76,
      "Time_End": 1579.16,
      "Text": " You can find that by this link here."
    },
    {
      "Time_Start": 1579.16,
      "Time_End": 1584.56,
      "Text": " In Bloodhound, what we do is that we create an edge from the enrollment agent template"
    },
    {
      "Time_Start": 1584.56,
      "Time_End": 1585.56,
      "Text": " to..."
    },
    {
      "Time_Start": 1585.56,
      "Time_End": 1586.56,
      "Text": " Oh."
    },
    {
      "Time_Start": 1586.56,
      "Time_End": 1587.56,
      "Text": " Sorry."
    },
    {
      "Time_Start": 1587.56,
      "Time_End": 1588.56,
      "Text": " Back and forth."
    },
    {
      "Time_Start": 1588.56,
      "Time_End": 1589.56,
      "Text": " Thanks."
    },
    {
      "Time_Start": 1589.56,
      "Time_End": 1590.56,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1590.56,
      "Time_End": 1597.16,
      "Text": " So, yeah, what we do in Bloodhound is that we create this edge from enrollment agent"
    },
    {
      "Time_Start": 1597.16,
      "Time_End": 1602.64,
      "Text": " templates to the target template where they allow for the enroll on behalf of functionality."
    },
    {
      "Time_Start": 1602.64,
      "Time_End": 1607.88,
      "Text": " So that makes it a bit easier for us to find the cases where it's possible to abuse escalation"
    },
    {
      "Time_Start": 1607.88,
      "Time_End": 1610.0,
      "Text": " three."
    },
    {
      "Time_Start": 1610.0,
      "Time_End": 1611.22,
      "Text": " And yeah."
    },
    {
      "Time_Start": 1611.22,
      "Time_End": 1618.2800000000002,
      "Text": " So what it looks like in Bloodhound is what we're going to show with this demo here."
    },
    {
      "Time_Start": 1618.2800000000002,
      "Time_End": 1620.68,
      "Text": " So in the same way as before, we're going to use pathfinding."
    },
    {
      "Time_Start": 1620.68,
      "Time_End": 1625.3600000000001,
      "Text": " This time we are using a victim user searching for a path to domain admins."
    },
    {
      "Time_Start": 1625.3600000000001,
      "Time_End": 1631.4,
      "Text": " And we can see that domain users has escalation three against the domain."
    },
    {
      "Time_Start": 1631.4,
      "Time_End": 1637.2,
      "Text": " And as before, if we click on composition, we can see the underlying nodes and edges."
    },
    {
      "Time_Start": 1637.2,
      "Time_End": 1642.0,
      "Text": " So we can see that domain user has enrollment rights in this user template."
    },
    {
      "Time_Start": 1642.0,
      "Time_End": 1646.42,
      "Text": " And also in this enrollment agent template here."
    },
    {
      "Time_Start": 1646.42,
      "Time_End": 1649.68,
      "Text": " So what you're going to do now is to abuse it."
    },
    {
      "Time_Start": 1649.68,
      "Time_End": 1653.2800000000002,
      "Text": " And we're going to use the abuse information that's available in Bloodhound."
    },
    {
      "Time_Start": 1653.2800000000002,
      "Time_End": 1660.0,
      "Text": " So we're just going to copy paste this whole step-by-step guide here into a text editor."
    },
    {
      "Time_Start": 1660.0,
      "Time_End": 1665.0,
      "Text": " And then we need to replace the names of the actual objects that we have in our environment."
    },
    {
      "Time_Start": 1665.0,
      "Time_End": 1670.14,
      "Text": " So we need the CA name that we're going to enroll in."
    },
    {
      "Time_Start": 1670.14,
      "Time_End": 1674.48,
      "Text": " We also need the DNS host name of the CA."
    },
    {
      "Time_Start": 1674.48,
      "Time_End": 1681.52,
      "Text": " And then we need to specify the enrollment agent template."
    },
    {
      "Time_Start": 1681.52,
      "Time_End": 1685.52,
      "Text": " Then we have a lot of text here we can just delete."
    },
    {
      "Time_Start": 1685.52,
      "Time_End": 1690.16,
      "Text": " And then we need the CA name again in the second enrollment where we enroll on behalf"
    },
    {
      "Time_Start": 1690.16,
      "Time_End": 1691.76,
      "Text": " of a target user."
    },
    {
      "Time_Start": 1691.76,
      "Time_End": 1695.2,
      "Text": " We have already specified the right template here."
    },
    {
      "Time_Start": 1695.2,
      "Time_End": 1699.96,
      "Text": " And now we need to find a target that we can impersonate with escalation three."
    },
    {
      "Time_Start": 1699.96,
      "Time_End": 1703.76,
      "Text": " So we can check the domain admins group and check who are the members in there."
    },
    {
      "Time_Start": 1703.76,
      "Time_End": 1705.92,
      "Text": " And we have a user called researcher."
    },
    {
      "Time_Start": 1705.92,
      "Time_End": 1709.84,
      "Text": " So we're going to target that user."
    },
    {
      "Time_Start": 1709.84,
      "Time_End": 1712.4,
      "Text": " More text we can delete."
    },
    {
      "Time_Start": 1712.4,
      "Time_End": 1717.68,
      "Text": " And at last, we also need to specify when we request a Kerberos ticket that we want"
    },
    {
      "Time_Start": 1717.68,
      "Time_End": 1720.8000000000002,
      "Text": " to get the ticket as the target user."
    },
    {
      "Time_Start": 1720.8000000000002,
      "Time_End": 1723.0800000000002,
      "Text": " Now we're on the attacker machine."
    },
    {
      "Time_Start": 1723.0800000000002,
      "Time_End": 1724.68,
      "Text": " And we are logged in as the victim."
    },
    {
      "Time_Start": 1724.68,
      "Time_End": 1728.0400000000002,
      "Text": " And we cannot access the dollar on the domain controller."
    },
    {
      "Time_Start": 1728.0400000000002,
      "Time_End": 1735.72,
      "Text": " So now we're enrolling using Certify, the enrollment agent certificate."
    },
    {
      "Time_Start": 1735.72,
      "Time_End": 1737.52,
      "Text": " And we get that."
    },
    {
      "Time_Start": 1737.52,
      "Time_End": 1744.96,
      "Text": " And with Certify, you need to store the private key of the certificate you receive to disk."
    },
    {
      "Time_Start": 1744.96,
      "Time_End": 1749.0,
      "Text": " You can also do that on another host if you want to."
    },
    {
      "Time_Start": 1749.0,
      "Time_End": 1753.56,
      "Text": " I'm going to store it right here on the attacker machine."
    },
    {
      "Time_Start": 1753.56,
      "Time_End": 1760.76,
      "Text": " Do the same thing for the certificate."
    },
    {
      "Time_Start": 1760.92,
      "Time_End": 1766.2,
      "Text": " And then we're going to use the built-in Windows tool called Search Utils to create a PFX file"
    },
    {
      "Time_Start": 1766.2,
      "Time_End": 1774.52,
      "Text": " or PFX version of the certificate, which allows us to do the enroll on behalf of for the target"
    },
    {
      "Time_Start": 1774.52,
      "Time_End": 1775.52,
      "Text": " user."
    },
    {
      "Time_Start": 1775.52,
      "Time_End": 1780.36,
      "Text": " So now we receive a certificate as the target user."
    },
    {
      "Time_Start": 1780.3600000000001,
      "Time_End": 1794.8000000000002,
      "Text": " We're going to store the private key to disk and the certificate as well."
    },
    {
      "Time_Start": 1794.8000000000002,
      "Time_End": 1800.96,
      "Text": " And when we have the PFX version of the certificate, we can use Ruby as to request a Kerberos ticket"
    },
    {
      "Time_Start": 1800.96,
      "Time_End": 1803.2800000000002,
      "Text": " for the target user."
    },
    {
      "Time_Start": 1803.2800000000002,
      "Time_End": 1806.68,
      "Text": " And we use the command to inject it into memory."
    },
    {
      "Time_Start": 1806.68,
      "Time_End": 1809.8400000000001,
      "Text": " So now we have a Kerberos ticket as the researcher."
    },
    {
      "Time_Start": 1810.3200000000002,
      "Time_End": 1815.6000000000001,
      "Text": " And, yeah, we can access c$ on the main controller as admin."
    },
    {
      "Time_Start": 1825.6000000000001,
      "Time_End": 1826.6000000000001,
      "Text": " Can I?"
    },
    {
      "Time_Start": 1827.6000000000001,
      "Time_End": 1828.6000000000001,
      "Text": " There we go."
    },
    {
      "Time_Start": 1828.6000000000001,
      "Time_End": 1829.6000000000001,
      "Text": " Cool."
    },
    {
      "Time_Start": 1829.6000000000001,
      "Time_End": 1830.6000000000001,
      "Text": " Okay."
    },
    {
      "Time_Start": 1830.6000000000001,
      "Time_End": 1838.6000000000001,
      "Text": " So, next, we will discuss another privilege escalation, which is called Escalation 4."
    },
    {
      "Time_Start": 1840.6000000000001,
      "Time_End": 1851.2800000000002,
      "Text": " So, recall this model and where we have this user that has enroll rights against this template."
    },
    {
      "Time_Start": 1851.2800000000002,
      "Time_End": 1855.2800000000002,
      "Text": " With Escalation 1, all of these things have to combine."
    },
    {
      "Time_Start": 1855.2800000000002,
      "Time_End": 1859.68,
      "Text": " If you get rid of any one of these moving pieces, then Escalation 1 evaporates and it's"
    },
    {
      "Time_Start": 1859.68,
      "Time_End": 1861.4800000000002,
      "Text": " no longer possible."
    },
    {
      "Time_Start": 1861.4800000000002,
      "Time_End": 1866.7600000000002,
      "Text": " So what if that user doesn't have enroll rights against the template?"
    },
    {
      "Time_Start": 1866.76,
      "Time_End": 1870.52,
      "Text": " What would be needed in order for Escalation 1 to reemerge?"
    },
    {
      "Time_Start": 1870.52,
      "Time_End": 1875.28,
      "Text": " Well, the user would need to receive enroll rights."
    },
    {
      "Time_Start": 1875.28,
      "Time_End": 1880.72,
      "Text": " And a user can do this for themselves or somebody else can do it."
    },
    {
      "Time_Start": 1880.72,
      "Time_End": 1885.24,
      "Text": " If the user or if somebody else has the permission to do so."
    },
    {
      "Time_Start": 1885.24,
      "Time_End": 1887.94,
      "Text": " And that may sound obvious."
    },
    {
      "Time_Start": 1887.94,
      "Time_End": 1894.16,
      "Text": " But it's important to model these things because they happen in real life where everything"
    },
    {
      "Time_Start": 1894.24,
      "Time_End": 1896.52,
      "Text": " is there except for one thing."
    },
    {
      "Time_Start": 1896.52,
      "Time_End": 1899.5800000000002,
      "Text": " But that one thing is made up for somewhere else."
    },
    {
      "Time_Start": 1899.5800000000002,
      "Time_End": 1905.8000000000002,
      "Text": " If our tool doesn't report that, that becomes a false negative, which is bad."
    },
    {
      "Time_Start": 1905.8000000000002,
      "Time_End": 1911.8400000000001,
      "Text": " So we model Escalation 4 just like we model Escalation 5 with, you know, there's one thing"
    },
    {
      "Time_Start": 1911.8400000000001,
      "Time_End": 1914.76,
      "Text": " missing, but you can make up for it in this other way."
    },
    {
      "Time_Start": 1914.76,
      "Time_End": 1924.44,
      "Text": " So this model also includes the abusable ace types from just like a generic principle"
    },
    {
      "Time_Start": 1924.44,
      "Time_End": 1927.9,
      "Text": " node to all those other objects."
    },
    {
      "Time_Start": 1927.9,
      "Time_End": 1930.58,
      "Text": " So that is in the model as well."
    },
    {
      "Time_Start": 1930.58,
      "Time_End": 1935.12,
      "Text": " So for example, what if the user has generic all against the template?"
    },
    {
      "Time_Start": 1935.12,
      "Time_End": 1939.64,
      "Text": " Well, with generic all, they can give themselves the enroll right."
    },
    {
      "Time_Start": 1939.64,
      "Time_End": 1943.0,
      "Text": " Or I think generic all does allow enrollment for the template."
    },
    {
      "Time_Start": 1943.0,
      "Time_End": 1944.0,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1944.44,
      "Time_End": 1951.12,
      "Text": " So the user does have enroll rights through a different relationship."
    },
    {
      "Time_Start": 1951.12,
      "Time_End": 1952.88,
      "Text": " You might be thinking this."
    },
    {
      "Time_Start": 1952.88,
      "Time_End": 1956.44,
      "Text": " Like that wouldn't happen in the real world."
    },
    {
      "Time_Start": 1956.44,
      "Time_End": 1958.88,
      "Text": " That's wrong."
    },
    {
      "Time_Start": 1958.88,
      "Time_End": 1965.52,
      "Text": " We have seen this more times than is probably like what you would expect."
    },
    {
      "Time_Start": 1965.52,
      "Time_End": 1972.12,
      "Text": " This is a screenshot from a customer environment, which is sanitized, obviously, where the authenticated"
    },
    {
      "Time_Start": 1972.64,
      "Time_End": 1981.0800000000002,
      "Text": " users group or principle has right owner, right DACL, generic right, generic all against"
    },
    {
      "Time_Start": 1981.0800000000002,
      "Time_End": 1989.0800000000002,
      "Text": " these different templates where the rest of the requirements are in place for Escalation"
    },
    {
      "Time_Start": 1989.0800000000002,
      "Time_End": 1991.0800000000002,
      "Text": " 1 to emerge."
    },
    {
      "Time_Start": 1991.0800000000002,
      "Time_End": 1995.24,
      "Text": " So even though authenticated users doesn't have the enrollment right, it can either give"
    },
    {
      "Time_Start": 1995.24,
      "Time_End": 2000.48,
      "Text": " itself that or it can have that with generic all, for example."
    },
    {
      "Time_Start": 2000.48,
      "Time_End": 2002.6,
      "Text": " So it's kind of like Murphy's law."
    },
    {
      "Time_Start": 2002.6,
      "Time_End": 2004.96,
      "Text": " It's like if something can happen, eventually it will."
    },
    {
      "Time_Start": 2004.96,
      "Time_End": 2010.92,
      "Text": " If the system can be configured in a certain way, eventually the admins will do that or"
    },
    {
      "Time_Start": 2010.92,
      "Time_End": 2015.1200000000001,
      "Text": " more likely third party software will put those configurations in place without the"
    },
    {
      "Time_Start": 2015.1200000000001,
      "Time_End": 2021.72,
      "Text": " admins even knowing about it."
    },
    {
      "Time_Start": 2021.72,
      "Time_End": 2028.92,
      "Text": " Here is a demo video of discovering and executing Escalation 4."
    },
    {
      "Time_Start": 2028.92,
      "Time_End": 2035.16,
      "Text": " So we're starting from Jones and we want to be domain admin."
    },
    {
      "Time_Start": 2035.16,
      "Time_End": 2042.16,
      "Text": " We have ADCS Escalation 4 from Jones to the domain head and then the rest of the path"
    },
    {
      "Time_Start": 2042.16,
      "Time_End": 2046.04,
      "Text": " is kind of just like the pathfinding to get to domain admins."
    },
    {
      "Time_Start": 2046.04,
      "Time_End": 2054.38,
      "Text": " We hit the composition feature and we can see that Jones has generic all on the template."
    },
    {
      "Time_Start": 2054.38,
      "Time_End": 2057.7400000000002,
      "Text": " We can see some of the same info that Jonas was showing earlier with general information"
    },
    {
      "Time_Start": 2057.7400000000002,
      "Time_End": 2061.98,
      "Text": " about what that attack primitive means."
    },
    {
      "Time_Start": 2061.98,
      "Time_End": 2066.9,
      "Text": " So we will try to abuse Escalation 1, which will fail."
    },
    {
      "Time_Start": 2066.9,
      "Time_End": 2072.5400000000004,
      "Text": " So I guess actually generic all is not a rule."
    },
    {
      "Time_Start": 2072.5400000000004,
      "Time_End": 2074.76,
      "Text": " Maybe, I don't know."
    },
    {
      "Time_Start": 2074.76,
      "Time_End": 2080.34,
      "Text": " So we'll try to do Escalation 1 and it says failed to request certificate and it has an"
    },
    {
      "Time_Start": 2080.34,
      "Time_End": 2084.42,
      "Text": " error message giving the details of why that was."
    },
    {
      "Time_Start": 2084.42,
      "Time_End": 2085.42,
      "Text": " I know."
    },
    {
      "Time_Start": 2085.42,
      "Time_End": 2089.62,
      "Text": " Maybe the template wasn't configured with the client auth EKU."
    },
    {
      "Time_Start": 2089.62,
      "Time_End": 2095.38,
      "Text": " So we will make the template vulnerable to Escalation 1 using CertiPy, which is so easy"
    },
    {
      "Time_Start": 2095.38,
      "Time_End": 2099.06,
      "Text": " and I love the work that Oliver Lueck did here."
    },
    {
      "Time_Start": 2099.06,
      "Time_End": 2107.7000000000003,
      "Text": " We'll save the current version so we can put it back and that becomes Escalation 4.json."
    },
    {
      "Time_Start": 2107.7000000000003,
      "Time_End": 2113.5,
      "Text": " Then after we have updated that template, we will go ahead and reattempt to do Escalation"
    },
    {
      "Time_Start": 2113.5,
      "Time_End": 2116.78,
      "Text": " 1, which this time will work."
    },
    {
      "Time_Start": 2116.78,
      "Time_End": 2123.26,
      "Text": " So we have researcher.pfx written to disk and then similar to what we did with Escalation"
    },
    {
      "Time_Start": 2123.26,
      "Time_End": 2128.66,
      "Text": " 1, which is just what we're doing now, we will do the shadow credentials attack and"
    },
    {
      "Time_Start": 2128.66,
      "Time_End": 2137.1,
      "Text": " get the NTLM hash for the researcher user with this command here."
    },
    {
      "Time_Start": 2137.1,
      "Time_End": 2141.5,
      "Text": " And then after that's done, we will clean up after ourselves and put the environment"
    },
    {
      "Time_Start": 2141.5,
      "Time_End": 2147.98,
      "Text": " back into the state that it was when we found it by doing this command here, which will"
    },
    {
      "Time_Start": 2147.98,
      "Time_End": 2152.96,
      "Text": " update the Escalation 4 template back to the state that it was in before we did the attack."
    },
    {
      "Time_Start": 2152.96,
      "Time_End": 2158.98,
      "Text": " So now things are cleaned up and we are domain admin."
    },
    {
      "Time_Start": 2158.98,
      "Time_End": 2162.5,
      "Text": " Sorry."
    },
    {
      "Time_Start": 2163.5,
      "Time_End": 2172.5,
      "Text": " Yeah, so how do you fix these kind of things?"
    },
    {
      "Time_Start": 2172.5,
      "Time_End": 2177.18,
      "Text": " First things first, we need to identify all the non-TLS principles that has any of these"
    },
    {
      "Time_Start": 2177.18,
      "Time_End": 2179.94,
      "Text": " ADCS escalation possibilities."
    },
    {
      "Time_Start": 2179.94,
      "Time_End": 2183.94,
      "Text": " Of course, like domain admins and enterprise admins will be able to impersonate all users"
    },
    {
      "Time_Start": 2183.94,
      "Time_End": 2184.94,
      "Text": " of the environment."
    },
    {
      "Time_Start": 2184.94,
      "Time_End": 2188.82,
      "Text": " That's completely fine, but we don't want anyone that's not supposed to have domain"
    },
    {
      "Time_Start": 2188.82,
      "Time_End": 2194.02,
      "Text": " admin rights or equivalent rights in the environment to have these permissions."
    },
    {
      "Time_Start": 2194.02,
      "Time_End": 2200.06,
      "Text": " You can use the Cypher query here to find, yeah, non-TLS principles with ADCS escalation"
    },
    {
      "Time_Start": 2200.06,
      "Time_End": 2201.06,
      "Text": " possibilities."
    },
    {
      "Time_Start": 2201.06,
      "Time_End": 2208.5800000000004,
      "Text": " I have a second query I want to share with you and I probably need to go, yeah, second"
    },
    {
      "Time_Start": 2208.5800000000004,
      "Time_End": 2213.46,
      "Text": " query I want to share with you guys and that's some of the permissions that Andy talked about"
    },
    {
      "Time_Start": 2213.46,
      "Time_End": 2215.3,
      "Text": " in Escalation 4."
    },
    {
      "Time_Start": 2215.3,
      "Time_End": 2221.7000000000003,
      "Text": " There's similar escalation techniques for Escalation 5 and 7, which is also about permissions"
    },
    {
      "Time_Start": 2221.7000000000003,
      "Time_End": 2225.26,
      "Text": " granted on PKI objects."
    },
    {
      "Time_Start": 2225.26,
      "Time_End": 2231.02,
      "Text": " Those narratives are not completely implemented in Bloodhound yet, but we do collect the underlying"
    },
    {
      "Time_Start": 2231.02,
      "Time_End": 2232.02,
      "Text": " permissions."
    },
    {
      "Time_Start": 2232.02,
      "Time_End": 2238.0600000000004,
      "Text": " So you can use this query here to check if any non-TLS principle has any of these underlying"
    },
    {
      "Time_Start": 2238.0600000000004,
      "Time_End": 2240.2200000000003,
      "Text": " requirements met."
    },
    {
      "Time_Start": 2240.2200000000003,
      "Time_End": 2244.38,
      "Text": " And yeah, those permissions should never be granted to non-TLS principles."
    },
    {
      "Time_Start": 2244.46,
      "Time_End": 2249.5,
      "Text": " So this is definitely also something I would recommend to, yeah, get remediated."
    },
    {
      "Time_Start": 2249.5,
      "Time_End": 2254.5,
      "Text": " I want to focus on remediation of Escalation 1 because this is the most common thing we"
    },
    {
      "Time_Start": 2254.5,
      "Time_End": 2257.62,
      "Text": " see at customers."
    },
    {
      "Time_Start": 2257.62,
      "Time_End": 2263.98,
      "Text": " And yeah, to summarize or to recap, Escalation 1 is where the certificate template has this"
    },
    {
      "Time_Start": 2263.98,
      "Time_End": 2269.62,
      "Text": " enrollee supply subject flag, which allows you to impersonate anyone."
    },
    {
      "Time_Start": 2269.62,
      "Time_End": 2275.46,
      "Text": " If you can, then it makes sense to just limit the enrollment rights to only TLS principles"
    },
    {
      "Time_Start": 2275.46,
      "Time_End": 2277.94,
      "Text": " because then you have remediated the problem."
    },
    {
      "Time_Start": 2277.94,
      "Time_End": 2282.74,
      "Text": " Alternatively, you can also mitigate the problem by removing the key use that allows for domain"
    },
    {
      "Time_Start": 2282.74,
      "Time_End": 2283.98,
      "Text": " authentication."
    },
    {
      "Time_Start": 2283.98,
      "Time_End": 2288.7,
      "Text": " So you can only impersonate for signing and all that stuff, which is maybe not that bad"
    },
    {
      "Time_Start": 2288.7,
      "Time_End": 2290.9,
      "Text": " as authenticating."
    },
    {
      "Time_Start": 2290.9,
      "Time_End": 2296.8599999999997,
      "Text": " However, there is a very common scenario where non-TLS principles like Helpdesk, they need"
    },
    {
      "Time_Start": 2296.8599999999997,
      "Time_End": 2299.04,
      "Text": " to have this impersonation right."
    },
    {
      "Time_Start": 2299.04,
      "Time_End": 2303.2799999999997,
      "Text": " That is when they create smart cards for principles in the organization."
    },
    {
      "Time_Start": 2303.2799999999997,
      "Time_End": 2307.56,
      "Text": " Luckily, there is actually a solution to that, and that is the enrollment agents that we"
    },
    {
      "Time_Start": 2307.56,
      "Time_End": 2309.94,
      "Text": " talked about in Escalation 3."
    },
    {
      "Time_Start": 2309.94,
      "Time_End": 2314.4,
      "Text": " Because with enrollment agents, you can actually specify very granular permissions for these"
    },
    {
      "Time_Start": 2314.4,
      "Time_End": 2319.8,
      "Text": " enrollment agents and limit the ability to impersonate all users."
    },
    {
      "Time_Start": 2319.8,
      "Time_End": 2326.56,
      "Text": " So on the CA itself, you can specify which principles exactly the enrollment agents are"
    },
    {
      "Time_Start": 2326.56,
      "Time_End": 2328.68,
      "Text": " allowed to impersonate."
    },
    {
      "Time_Start": 2329.52,
      "Time_End": 2333.3999999999996,
      "Text": " That might be difficult for an IT admin to figure out exactly what principles they are"
    },
    {
      "Time_Start": 2333.3999999999996,
      "Time_End": 2338.6,
      "Text": " allowed to impersonate, but you can at least then deny the impersonation for all the tier"
    },
    {
      "Time_Start": 2338.6,
      "Time_End": 2339.6,
      "Text": " zero admins."
    },
    {
      "Time_Start": 2339.6,
      "Time_End": 2345.6,
      "Text": " That way, you have remediated the possibility to gain full control over the environment."
    },
    {
      "Time_Start": 2345.6,
      "Time_End": 2350.68,
      "Text": " So I highly recommend to check out these enrollment agents restrictions."
    },
    {
      "Time_Start": 2350.68,
      "Time_End": 2356.12,
      "Text": " Unfortunately, Microsoft has not written a great guide for you to set this up."
    },
    {
      "Time_Start": 2356.12,
      "Time_End": 2358.68,
      "Text": " So you will have to look for vendor guides instead."
    },
    {
      "Time_Start": 2358.68,
      "Time_End": 2363.16,
      "Text": " And there is a pretty good guide here from UVQ that you can check out and follow that"
    },
    {
      "Time_Start": 2363.16,
      "Time_End": 2370.2,
      "Text": " to set up enrollment agents for smart cards."
    },
    {
      "Time_Start": 2370.2,
      "Time_End": 2373.2799999999997,
      "Text": " You should be careful with vendor guides, though."
    },
    {
      "Time_Start": 2373.2799999999997,
      "Time_End": 2378.04,
      "Text": " As I was browsing for good guides on how to set up enrollment agents, I also found another"
    },
    {
      "Time_Start": 2378.04,
      "Time_End": 2379.24,
      "Text": " guide."
    },
    {
      "Time_Start": 2379.24,
      "Time_End": 2384.52,
      "Text": " And this guide says that you should, in the step where you grant enrollment rights on"
    },
    {
      "Time_Start": 2384.52,
      "Time_End": 2389.88,
      "Text": " the enrollment agent template, they specify you should set this right to the principles"
    },
    {
      "Time_Start": 2389.88,
      "Time_End": 2393.0,
      "Text": " that are supposed to enroll on behalf of all users."
    },
    {
      "Time_Start": 2393.0,
      "Time_End": 2398.08,
      "Text": " But in the screenshot, they grant authenticated users enrollment rights."
    },
    {
      "Time_Start": 2398.08,
      "Time_End": 2403.52,
      "Text": " So that basically creates an escalation-free scenario for authenticated users."
    },
    {
      "Time_Start": 2403.52,
      "Time_End": 2410.12,
      "Text": " So yeah, be careful when you are following vendor guides, because it's not always that"
    },
    {
      "Time_Start": 2410.12,
      "Time_End": 2412.8,
      "Text": " they know what they're doing."
    },
    {
      "Time_Start": 2412.8,
      "Time_End": 2416.0800000000004,
      "Text": " I reached out to this vendor here, but they haven't responded."
    },
    {
      "Time_Start": 2416.0800000000004,
      "Time_End": 2417.0800000000004,
      "Text": " Yeah."
    },
    {
      "Time_Start": 2417.0800000000004,
      "Time_End": 2418.0800000000004,
      "Text": " Cool."
    },
    {
      "Time_Start": 2418.0800000000004,
      "Time_End": 2419.0800000000004,
      "Text": " Okay."
    },
    {
      "Time_Start": 2419.0800000000004,
      "Time_End": 2420.0800000000004,
      "Text": " We are almost out of time."
    },
    {
      "Time_Start": 2420.0800000000004,
      "Time_End": 2423.52,
      "Text": " So a quick conclusion for you."
    },
    {
      "Time_Start": 2423.52,
      "Time_End": 2427.8,
      "Text": " So we started earlier with a simple question, which was, what principles can do escalation"
    },
    {
      "Time_Start": 2427.8,
      "Time_End": 2428.8,
      "Text": " 1?"
    },
    {
      "Time_Start": 2428.8,
      "Time_End": 2435.92,
      "Text": " That has a simple answer, which is principle A, principle B, et cetera."
    },
    {
      "Time_Start": 2435.92,
      "Time_End": 2444.6,
      "Text": " The work that you have to do by hand to answer that simple question is tedious, it's prone"
    },
    {
      "Time_Start": 2444.6,
      "Time_End": 2452.0,
      "Text": " to human error, it's extremely time-consuming, and it requires you to already be an expert"
    },
    {
      "Time_Start": 2452.0,
      "Time_End": 2456.48,
      "Text": " in all of these different systems so that you can parse and understand all of these"
    },
    {
      "Time_Start": 2456.48,
      "Time_End": 2460.44,
      "Text": " opaque and confusing mechanics and configurations."
    },
    {
      "Time_Start": 2460.44,
      "Time_End": 2463.76,
      "Text": " So instead, you can use Bloodhound."
    },
    {
      "Time_Start": 2463.76,
      "Time_End": 2470.8,
      "Text": " And the results will be accurate, automatic, and accessible, and the software is free and"
    },
    {
      "Time_Start": 2470.8,
      "Time_End": 2471.88,
      "Text": " open source."
    },
    {
      "Time_Start": 2471.88,
      "Time_End": 2479.32,
      "Text": " So our objective is with Bloodhound to help you skip this stupid work so that you can"
    },
    {
      "Time_Start": 2479.32,
      "Time_End": 2485.1200000000003,
      "Text": " do more interesting things and let the software, let the product, let the computer do that"
    },
    {
      "Time_Start": 2485.1200000000003,
      "Time_End": 2489.28,
      "Text": " hard analysis work for us."
    },
    {
      "Time_Start": 2489.28,
      "Time_End": 2490.0,
      "Text": " Thank you very much."
    }
  ]
}