{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 13.44,
      "Text": "This text was transcribed using whisper model: large-v2\n\n Thank you very much, I know we're pretty far into the conference so I appreciate you spending"
    },
    {
      "Time_Start": 13.44,
      "Time_End": 19.92,
      "Text": " roughly the next 45 minutes with me, watching me present on some relay-related techniques"
    },
    {
      "Time_Start": 19.92,
      "Time_End": 24.0,
      "Text": " and also thank you so much to the ZivCon organizers for having me."
    },
    {
      "Time_Start": 24.0,
      "Time_End": 28.0,
      "Text": " So today I'll be presenting something that I refer to as Relay Your Heart Away or more"
    },
    {
      "Time_Start": 28.0,
      "Time_End": 35.28,
      "Text": " specifically an offset conscious approach to taking over port 445."
    },
    {
      "Time_Start": 35.28,
      "Time_End": 40.4,
      "Text": " A little bit about me, my name is Nick Powers, I've been working on the adversary simulation"
    },
    {
      "Time_Start": 40.4,
      "Time_End": 45.56,
      "Text": " team at SpectreOps for a little over three and a half years now."
    },
    {
      "Time_Start": 45.56,
      "Time_End": 51.32,
      "Text": " I started as a consultant, then senior consultant and currently working as a service architect,"
    },
    {
      "Time_Start": 51.32,
      "Time_End": 58.46,
      "Text": " we're mainly contributing and supporting our adversary simulation team with things"
    },
    {
      "Time_Start": 58.46,
      "Time_End": 62.96,
      "Text": " like this technique hopefully that we get to make use of on assessments."
    },
    {
      "Time_Start": 62.96,
      "Time_End": 67.8,
      "Text": " Most of my career has been focused primarily on something like offensive security related,"
    },
    {
      "Time_Start": 67.8,
      "Time_End": 73.84,
      "Text": " so pin tests, red teams, more so red teams at SpectreOps and some of my personal work-related"
    },
    {
      "Time_Start": 73.84,
      "Time_End": 80.08,
      "Text": " interests include initial access techniques, some windows internals as well as like this,"
    },
    {
      "Time_Start": 80.08,
      "Time_End": 85.67999999999999,
      "Text": " things relevant to targeted authentication relay attacks and my handle on Twitter, Bloodhound"
    },
    {
      "Time_Start": 85.67999999999999,
      "Time_End": 91.96,
      "Text": " Slack and most other social media is Zenergy."
    },
    {
      "Time_Start": 91.96,
      "Time_End": 97.16,
      "Text": " So a very brief agenda of what we will be covering, we'll start off with why does this"
    },
    {
      "Time_Start": 97.16,
      "Time_End": 101.75999999999999,
      "Text": " matter, like why do we even want control over port 445 in the first place, like what problem"
    },
    {
      "Time_Start": 101.75999999999999,
      "Time_End": 103.75999999999999,
      "Text": " are we trying to solve?"
    },
    {
      "Time_Start": 103.75999999999999,
      "Time_End": 108.24,
      "Text": " We'll go over some existing solutions to this problem, it's not new, it's something I think"
    },
    {
      "Time_Start": 108.36000000000001,
      "Time_End": 113.28000000000002,
      "Text": " red teamers and pin testers have struggled with for years and there's already solutions,"
    },
    {
      "Time_Start": 113.28000000000002,
      "Time_End": 115.48,
      "Text": " this is just another approach to that."
    },
    {
      "Time_Start": 115.48,
      "Time_End": 121.92000000000002,
      "Text": " We'll go through debugging some of the relevant drivers to this technique to hopefully better"
    },
    {
      "Time_Start": 121.92000000000002,
      "Time_End": 126.24000000000001,
      "Text": " understand why this works under the hood, then we'll go over some tools to automate"
    },
    {
      "Time_Start": 126.24000000000001,
      "Time_End": 135.52,
      "Text": " as well as demonstration of like why this has been impactful for us for example on assessments."
    },
    {
      "Time_Start": 135.52,
      "Time_End": 140.24,
      "Text": " Before we get into the material, 45 minutes unfortunately is not enough to cover all of"
    },
    {
      "Time_Start": 140.24,
      "Time_End": 145.44,
      "Text": " the relevant things to this technique, so like all of the socks proxying and reverse"
    },
    {
      "Time_Start": 145.44,
      "Time_End": 149.92000000000002,
      "Text": " port forwards, like tunnelling tradecraft in general as it pertains to operating out"
    },
    {
      "Time_Start": 149.92000000000002,
      "Time_End": 155.24,
      "Text": " of a C2, so I'll reference some of that but it is kind of assumed knowledge, again if"
    },
    {
      "Time_Start": 155.24,
      "Time_End": 160.46,
      "Text": " you have any questions or like how some of that works for us on assessments, more than"
    },
    {
      "Time_Start": 160.46,
      "Time_End": 163.32000000000002,
      "Text": " happy to chat about it after the talk."
    },
    {
      "Time_Start": 163.32,
      "Time_End": 168.35999999999999,
      "Text": " Some entry level knowledge will probably be helpful regarding relevant or popular NTLM"
    },
    {
      "Time_Start": 168.35999999999999,
      "Time_End": 173.23999999999998,
      "Text": " relay techniques currently as well as like coercion and the protections associated, none"
    },
    {
      "Time_Start": 173.23999999999998,
      "Time_End": 178.0,
      "Text": " of this is required, it will just help make sense of some of the demo stuff at the end."
    },
    {
      "Time_Start": 178.0,
      "Time_End": 183.01999999999998,
      "Text": " And then lastly like an entry level knowledge of reverse engineering, I emphasize the entry"
    },
    {
      "Time_Start": 183.01999999999998,
      "Time_End": 188.2,
      "Text": " because I'm not an exceptional reverse engineer so even if you do know reverse engineering"
    },
    {
      "Time_Start": 188.20000000000002,
      "Time_End": 195.32000000000002,
      "Text": " hopefully this will make a decent amount of sense when we step through that."
    },
    {
      "Time_Start": 195.32000000000002,
      "Time_End": 201.56,
      "Text": " And also before we dig into some of the specifics, to kind of elaborate on like why we would"
    },
    {
      "Time_Start": 201.56,
      "Time_End": 206.24,
      "Text": " be interested in this in the first place, the problem that hopefully this will solve"
    },
    {
      "Time_Start": 206.24,
      "Time_End": 213.92000000000002,
      "Text": " for some people is that currently as it stands conducting SMB based NTLM relays over C2 specifically"
    },
    {
      "Time_Start": 214.04000000000002,
      "Time_End": 219.12,
      "Text": " which is like what's relevant for us on assessments for example, is kind of a difficult thing"
    },
    {
      "Time_Start": 219.12,
      "Time_End": 220.12,
      "Text": " to do."
    },
    {
      "Time_Start": 220.12,
      "Time_End": 224.20000000000002,
      "Text": " There are existing solutions to the problem but none of them are incredibly straightforward,"
    },
    {
      "Time_Start": 224.20000000000002,
      "Time_End": 229.56,
      "Text": " all of them come like most other things come with associated operational security risks."
    },
    {
      "Time_Start": 229.56,
      "Time_End": 235.08,
      "Text": " The solution that will hopefully come from this is a way to take control of the port"
    },
    {
      "Time_Start": 235.08,
      "Time_End": 242.12,
      "Text": " that we're interested in for SMB related NTLM relay attacks but with hopefully some of the"
    },
    {
      "Time_Start": 242.20000000000002,
      "Time_End": 247.20000000000002,
      "Text": " offset concerns kind of eliminated."
    },
    {
      "Time_Start": 247.20000000000002,
      "Time_End": 254.56,
      "Text": " So relevance of taking control of this port, I'll admit that my experience is biased towards"
    },
    {
      "Time_Start": 254.56,
      "Time_End": 259.16,
      "Text": " like how we conduct our red team so I lean towards, what we've leaned towards heavily"
    },
    {
      "Time_Start": 259.16,
      "Time_End": 264.76,
      "Text": " for the last two, three plus years is targeted NTLM relay attacks, the popular coercion with"
    },
    {
      "Time_Start": 264.76,
      "Time_End": 271.76,
      "Text": " things like Petit Patam, Printerbug related coercion technique and the reason we focus"
    },
    {
      "Time_Start": 272.12,
      "Time_End": 276.48,
      "Text": " on that a lot is because even in incredibly mature organizations that are what I would"
    },
    {
      "Time_Start": 276.48,
      "Time_End": 281.64,
      "Text": " consider mature that we target on a regular basis for our customer base, these are still"
    },
    {
      "Time_Start": 281.64,
      "Time_End": 288.12,
      "Text": " attack avenues that work very, very consistently because there's a lot of stuff to remediate"
    },
    {
      "Time_Start": 288.12,
      "Time_End": 291.24,
      "Text": " to make sure everything is locked down properly."
    },
    {
      "Time_Start": 291.24,
      "Time_End": 296.52,
      "Text": " So when I say it works regularly, what I'm typically referring to like the most popular"
    },
    {
      "Time_Start": 296.64,
      "Time_End": 301.84,
      "Text": " for us would probably be HTTP to LDAP related relays so take advantage of object takeover"
    },
    {
      "Time_Start": 301.84,
      "Time_End": 308.15999999999997,
      "Text": " primitives that our colleague Elad has published some research on like shadow credentials,"
    },
    {
      "Time_Start": 308.15999999999997,
      "Time_End": 310.08,
      "Text": " resource-based constrained delegation."
    },
    {
      "Time_Start": 310.08,
      "Time_End": 317.59999999999997,
      "Text": " We also have SMB or HTTP to HTTP relays so that's like escalation 8 or SCCM takeover"
    },
    {
      "Time_Start": 317.59999999999997,
      "Time_End": 324.84,
      "Text": " 4.2, that's the takeover primitive where you relay to the SCCM admin service API if I remember"
    },
    {
      "Time_Start": 324.84,
      "Time_End": 325.84,
      "Text": " correctly."
    },
    {
      "Time_Start": 326.36,
      "Time_End": 332.96000000000004,
      "Text": " Then there's SMB to HTTP targeting SMB so this is a lot of the recent SCCM takeover"
    },
    {
      "Time_Start": 332.96000000000004,
      "Time_End": 337.56000000000006,
      "Text": " primitives as well as a lot of other general relay opportunity and then the demo that we'll"
    },
    {
      "Time_Start": 337.56000000000006,
      "Time_End": 344.04,
      "Text": " be going over at the end will be SMB or HTTP to MSSQL, more specifically the SCCM takeover"
    },
    {
      "Time_Start": 344.04,
      "Time_End": 346.72,
      "Text": " 1 primitive, that'll be the demo."
    },
    {
      "Time_Start": 346.72,
      "Time_End": 351.3,
      "Text": " But the reason we're going over all this is because depending on your perspective of access"
    },
    {
      "Time_Start": 351.3,
      "Time_End": 357.5,
      "Text": " in the target network, taking over or controlling the inbound SMB traffic like what you have"
    },
    {
      "Time_Start": 357.5,
      "Time_End": 363.46000000000004,
      "Text": " potentially coerced or maybe even poisoned in some capacity can be more involved depending"
    },
    {
      "Time_Start": 363.46000000000004,
      "Time_End": 366.56,
      "Text": " on your perspective in the network."
    },
    {
      "Time_Start": 366.56,
      "Time_End": 373.46000000000004,
      "Text": " So what I mean by your perspective in the network is if you're operating from a kind"
    },
    {
      "Time_Start": 373.46000000000004,
      "Time_End": 377.52,
      "Text": " of traditional like pin test scenario like you have a Linux box plugged into the network,"
    },
    {
      "Time_Start": 377.52,
      "Time_End": 382.76,
      "Text": " you have a VM deployed in your target environment, then this could be as simple as just like"
    },
    {
      "Time_Start": 382.76,
      "Time_End": 387.96,
      "Text": " your root, you bind to 4.4.5, you can conduct like your responder poisoning based attack"
    },
    {
      "Time_Start": 387.96,
      "Time_End": 390.64,
      "Text": " and it can be relatively straightforward."
    },
    {
      "Time_Start": 390.64,
      "Time_End": 394.59999999999997,
      "Text": " It can also be kind of straightforward from a Windows machine depending on your perspective"
    },
    {
      "Time_Start": 394.59999999999997,
      "Time_End": 399.28,
      "Text": " by doing something just as simple as disabling the land man server service, you reboot the"
    },
    {
      "Time_Start": 399.28,
      "Time_End": 404.84,
      "Text": " host, 4.4.5 is no longer bound, you can do like your reverse port forward functionality"
    },
    {
      "Time_Start": 404.96000000000004,
      "Time_End": 407.88000000000005,
      "Text": " from there."
    },
    {
      "Time_Start": 407.88000000000005,
      "Time_End": 412.44000000000005,
      "Text": " Opening from or operating from a compromised Windows host, however, so like operating through"
    },
    {
      "Time_Start": 412.44000000000005,
      "Time_End": 417.96000000000004,
      "Text": " an agent, for example, this is typically a lot more involved and ultimately we want to"
    },
    {
      "Time_Start": 417.96000000000004,
      "Time_End": 420.88000000000005,
      "Text": " end up with some sort of reverse port forward functionality."
    },
    {
      "Time_Start": 420.88000000000005,
      "Time_End": 424.88000000000005,
      "Text": " So what I mean when I say that is like you coerce some traffic, it comes back to your"
    },
    {
      "Time_Start": 424.88000000000005,
      "Time_End": 430.72,
      "Text": " compromised host and you need a way to tunnel that traffic out to do like some type of relay"
    },
    {
      "Time_Start": 430.72,
      "Time_End": 432.92,
      "Text": " tunnel it back into the network."
    },
    {
      "Time_Start": 433.40000000000003,
      "Time_End": 437.68,
      "Text": " The root of the problem is that by default the Windows kernel is bound to 4.4.5 TCP on"
    },
    {
      "Time_Start": 437.68,
      "Time_End": 444.52000000000004,
      "Text": " all network interfaces for both IPv4 and IPv6 and you can see a little like pseudo terminal"
    },
    {
      "Time_Start": 444.52000000000004,
      "Time_End": 449.20000000000005,
      "Text": " here where we do like a net stack command and show that 4.4.5 is bound listening by"
    },
    {
      "Time_Start": 449.20000000000005,
      "Time_End": 451.88,
      "Text": " something."
    },
    {
      "Time_Start": 451.88,
      "Time_End": 458.12,
      "Text": " So before we dig into this specific approach, I wanted to reference existing solutions that"
    },
    {
      "Time_Start": 458.12,
      "Time_End": 463.76,
      "Text": " I think are relatively popularly abused currently for solving this problem."
    },
    {
      "Time_Start": 463.76,
      "Time_End": 468.48,
      "Text": " And the first and the one that I see referenced probably the most currently is techniques"
    },
    {
      "Time_Start": 468.48,
      "Time_End": 476.8,
      "Text": " relevant to leveraging the WinDivert driver for interacting or redirecting inbound traffic."
    },
    {
      "Time_Start": 476.8,
      "Time_End": 481.84000000000003,
      "Text": " So when you abuse the WinDivert driver, you load that signed driver, it's most likely"
    },
    {
      "Time_Start": 481.84000000000003,
      "Time_End": 487.52,
      "Text": " EV code signed so you can load this open source driver and WinDivert specifically is defined"
    },
    {
      "Time_Start": 487.52,
      "Time_End": 493.47999999999996,
      "Text": " as a user mode packet interception library and there's a lot of really popular projects"
    },
    {
      "Time_Start": 493.47999999999996,
      "Time_End": 498.2,
      "Text": " that make use of the WinDivert driver like port bender that's written as a reflective"
    },
    {
      "Time_Start": 498.2,
      "Time_End": 504.76,
      "Text": " DLL, there's sharp relay that's C sharp that interacts with the WinDivert driver, stream"
    },
    {
      "Time_Start": 504.76,
      "Time_End": 513.12,
      "Text": " divert, divert TCP, C C++ as well as the HWFW bypass project which is over 10 years old"
    },
    {
      "Time_Start": 513.12,
      "Time_End": 517.88,
      "Text": " now I think, so leveraging WinDivert is not a new technique but it's something that is"
    },
    {
      "Time_Start": 517.88,
      "Time_End": 522.6,
      "Text": " still very popularly abused and lots of projects implement this."
    },
    {
      "Time_Start": 522.6,
      "Time_End": 529.16,
      "Text": " There's also C COB or ethical chaos's LSA authentication provider or the LSA relay X"
    },
    {
      "Time_Start": 529.16,
      "Time_End": 534.84,
      "Text": " project which is a really interesting approach that hooks the NTLM and negotiate authentication"
    },
    {
      "Time_Start": 534.84,
      "Time_End": 541.32,
      "Text": " packages and redirects those authentication requests, in his case using named pipes."
    },
    {
      "Time_Start": 541.32,
      "Time_End": 544.6800000000001,
      "Text": " And then lastly like I already mentioned kind of briefly is you also have the option"
    },
    {
      "Time_Start": 544.6800000000001,
      "Time_End": 550.6400000000001,
      "Text": " to just reconfigure the land man server service to a disabled start type and then when you"
    },
    {
      "Time_Start": 550.6400000000001,
      "Time_End": 555.44,
      "Text": " reboot the box 445 will no longer be bound, you can do your reverse port forwarding and"
    },
    {
      "Time_Start": 555.44,
      "Time_End": 558.6,
      "Text": " everything will work."
    },
    {
      "Time_Start": 558.6,
      "Time_End": 563.9200000000001,
      "Text": " But some of the existing opsec concerns or struggles that we have with that during assessments"
    },
    {
      "Time_Start": 563.9200000000001,
      "Time_End": 569.12,
      "Text": " is in the case of loading drivers or WinDivert specifically or other drivers that would accomplish"
    },
    {
      "Time_Start": 569.12,
      "Time_End": 573.44,
      "Text": " this for us, there's the like mentioned in the last talk, there's plenty of potential"
    },
    {
      "Time_Start": 573.44,
      "Time_End": 579.72,
      "Text": " for like if you interact with the driver in such a way that like error handling is not"
    },
    {
      "Time_Start": 579.72,
      "Time_End": 584.8,
      "Text": " accounted for appropriately, it's very easy to cause blue screen of death and this isn't"
    },
    {
      "Time_Start": 584.8,
      "Time_End": 588.6,
      "Text": " super viable at least for us, especially if we're operating on critical infrastructure"
    },
    {
      "Time_Start": 588.6,
      "Time_End": 595.1,
      "Text": " or even just on a normal workstation where we don't want to interrupt day to day operation."
    },
    {
      "Time_Start": 595.1,
      "Time_End": 600.1800000000001,
      "Text": " Also leveraging a driver could be a single point of failure regarding detection, so you're"
    },
    {
      "Time_Start": 600.1800000000001,
      "Time_End": 605.1,
      "Text": " relatively limited in terms of the options you have for loading drivers and when something"
    },
    {
      "Time_Start": 605.1,
      "Time_End": 608.94,
      "Text": " like WinDivert is so commonly abused, even though it is a legitimate driver it's a pretty"
    },
    {
      "Time_Start": 608.94,
      "Time_End": 613.94,
      "Text": " high fidelity thing to look for in an environment if you're not using that for software in your"
    },
    {
      "Time_Start": 613.94,
      "Time_End": 618.34,
      "Text": " environment it could be a relatively clear indicator of compromise."
    },
    {
      "Time_Start": 618.34,
      "Time_End": 624.14,
      "Text": " And then lastly still related to loading drivers for this would be you also need some way to"
    },
    {
      "Time_Start": 624.18,
      "Time_End": 629.46,
      "Text": " interface with that driver, so like the Ioctl is potentially exposed by WinDivert, you're"
    },
    {
      "Time_Start": 629.46,
      "Time_End": 635.12,
      "Text": " going to need to reflectively load a DLL to interact with those or leverage some type"
    },
    {
      "Time_Start": 635.12,
      "Time_End": 643.78,
      "Text": " of .NET dynamic execution, unmanaged PE, like some kind of pick shell code or a boff, you'll"
    },
    {
      "Time_Start": 643.78,
      "Time_End": 652.66,
      "Text": " need something in addition to the driver that also has its own set of operational security"
    },
    {
      "Time_Start": 652.66,
      "Time_End": 654.9,
      "Text": " concerns."
    },
    {
      "Time_Start": 654.9,
      "Time_End": 661.38,
      "Text": " As it pertains to using custom LSA authentication providers, this is a limitation of how Windows"
    },
    {
      "Time_Start": 661.38,
      "Time_End": 668.7199999999999,
      "Text": " and LSA custom providers for authentication providers for LSA work, but you can't unload"
    },
    {
      "Time_Start": 668.7199999999999,
      "Time_End": 672.8199999999999,
      "Text": " those custom providers until a reboot, like the reboot will be what unloads that custom"
    },
    {
      "Time_Start": 672.8199999999999,
      "Time_End": 679.54,
      "Text": " provider, so having like a custom DLL that's doing something malicious hanging out in memory"
    },
    {
      "Time_Start": 679.54,
      "Time_End": 685.02,
      "Text": " of LSAS and the only way to get rid of that being a reboot is a concern for us operationally"
    },
    {
      "Time_Start": 685.02,
      "Time_End": 689.8199999999999,
      "Text": " as well as you also have general stability that could be an issue and if there is a problem"
    },
    {
      "Time_Start": 689.8199999999999,
      "Time_End": 694.4599999999999,
      "Text": " with the code that you've written or you use it in an unexpected way, an error is not accounted"
    },
    {
      "Time_Start": 694.4599999999999,
      "Time_End": 701.4599999999999,
      "Text": " for, LSAS could reboot and that would cause a forced reboot of the host operating system."
    },
    {
      "Time_Start": 701.4599999999999,
      "Time_End": 706.5799999999999,
      "Text": " And I also mentioned you can set the land man server service to a disabled state but"
    },
    {
      "Time_Start": 706.58,
      "Time_End": 710.98,
      "Text": " oftentimes we just can't reboot a host, we just can't reboot a host in the middle of"
    },
    {
      "Time_Start": 710.98,
      "Time_End": 718.38,
      "Text": " an assessment for a number of reasons so sometimes that's not an option for us as well."
    },
    {
      "Time_Start": 718.38,
      "Time_End": 724.1800000000001,
      "Text": " So this had been a topic that was on my list for like hopefully finding an alternative"
    },
    {
      "Time_Start": 724.1800000000001,
      "Time_End": 730.5400000000001,
      "Text": " solution to for probably like over four years and eventually just sitting down one day like"
    },
    {
      "Time_Start": 730.54,
      "Time_End": 736.4599999999999,
      "Text": " four or five months ago, more or less accidentally stumbled on a solution and it started with"
    },
    {
      "Time_Start": 736.4599999999999,
      "Time_End": 743.0999999999999,
      "Text": " looking at drivers associated with 445 being bound in the first place."
    },
    {
      "Time_Start": 743.0999999999999,
      "Time_End": 747.92,
      "Text": " So like I mentioned before, I'm far from being a professional reverse engineer but the tools"
    },
    {
      "Time_Start": 747.92,
      "Time_End": 754.4599999999999,
      "Text": " that I started with to start going down this rabbit hole was primarily system informer,"
    },
    {
      "Time_Start": 754.46,
      "Time_End": 760.98,
      "Text": " a free version of IDA, win debug, just to do basic static dynamic analysis and to kind"
    },
    {
      "Time_Start": 760.98,
      "Time_End": 768.52,
      "Text": " of redefine what our goal here is, we want to do something that releases the target port"
    },
    {
      "Time_Start": 768.52,
      "Time_End": 773.98,
      "Text": " without requiring a reboot, without loading a driver ideally or without loading an arbitrary"
    },
    {
      "Time_Start": 773.98,
      "Time_End": 776.9200000000001,
      "Text": " module into LSAS."
    },
    {
      "Time_Start": 776.9200000000001,
      "Time_End": 778.38,
      "Text": " So where can we start?"
    },
    {
      "Time_Start": 778.38,
      "Time_End": 783.1800000000001,
      "Text": " Well we already know that we can set the land man server service to disabled and reboot the"
    },
    {
      "Time_Start": 783.1800000000001,
      "Time_End": 788.94,
      "Text": " host and we will end up with 445 not bound so we can do something in terms of analysis"
    },
    {
      "Time_Start": 788.94,
      "Time_End": 791.86,
      "Text": " from that point."
    },
    {
      "Time_Start": 791.86,
      "Time_End": 797.08,
      "Text": " And by simply resetting the start type of the land man server service, so we disable"
    },
    {
      "Time_Start": 797.08,
      "Time_End": 802.3800000000001,
      "Text": " land man server, we reboot the host, 445 is not bound but we know that we can set land"
    },
    {
      "Time_Start": 802.3800000000001,
      "Time_End": 808.3000000000001,
      "Text": " man server service back to an auto start type and it re-enables and all of the associated"
    },
    {
      "Time_Start": 808.3000000000001,
      "Time_End": 814.7800000000001,
      "Text": " resources with 445 being bound also come back into play, 445 is bound again."
    },
    {
      "Time_Start": 814.7800000000001,
      "Time_End": 820.48,
      "Text": " So this provides us a starting opportunity in terms of both dynamic and static analysis"
    },
    {
      "Time_Start": 820.48,
      "Time_End": 827.3800000000001,
      "Text": " because we can get 445 unbound even though it's after a reboot and we can re-enable land"
    },
    {
      "Time_Start": 827.3800000000001,
      "Time_End": 832.58,
      "Text": " man server service and 445 will rebind so we can start to inspect what's happening under"
    },
    {
      "Time_Start": 832.58,
      "Time_End": 835.4200000000001,
      "Text": " the hood there."
    },
    {
      "Time_Start": 835.4200000000001,
      "Time_End": 836.4200000000001,
      "Text": " So what do we want to do?"
    },
    {
      "Time_Start": 836.5400000000001,
      "Time_End": 841.7400000000001,
      "Text": " We probably want to start by identifying the process or like the resource on the host that's"
    },
    {
      "Time_Start": 841.7400000000001,
      "Time_End": 846.0200000000001,
      "Text": " actually binding to this port, we want to triage relevant loaded modules or in this"
    },
    {
      "Time_Start": 846.0200000000001,
      "Time_End": 851.46,
      "Text": " case some drivers, we want to narrow down the drivers associated with this behavior"
    },
    {
      "Time_Start": 851.46,
      "Time_End": 853.7,
      "Text": " that we want to learn more about."
    },
    {
      "Time_Start": 853.7,
      "Time_End": 859.0600000000001,
      "Text": " And this last note is just because I wasted like at least a week statically reversing"
    },
    {
      "Time_Start": 859.0600000000001,
      "Time_End": 864.1,
      "Text": " the wrong versions of DLLs, so definitely make sure because you're going to be doing"
    },
    {
      "Time_Start": 864.1,
      "Time_End": 867.82,
      "Text": " kernel debugging if you're looking at this, you use something like WinBindex, so you're"
    },
    {
      "Time_Start": 867.82,
      "Time_End": 875.26,
      "Text": " using if you have the machine you're doing the reversing on versus where you're actually"
    },
    {
      "Time_Start": 875.26,
      "Time_End": 880.0600000000001,
      "Text": " doing the debugging, if you have different versions of the DLLs it's going to cause problems"
    },
    {
      "Time_Start": 880.0600000000001,
      "Time_End": 887.1,
      "Text": " when you're doing static analysis for example, so WinBindex is a great resource for that."
    },
    {
      "Time_Start": 887.1,
      "Time_End": 892.34,
      "Text": " So to kind of get us started we can run a simple PowerShell command here, we see that"
    },
    {
      "Time_Start": 892.34,
      "Time_End": 898.38,
      "Text": " it is PID of or it's the system process specifically a representative of a lot of kernel related"
    },
    {
      "Time_Start": 898.38,
      "Time_End": 904.5400000000001,
      "Text": " activity that's bound to port 445 and I use this was either process hacker or system informer"
    },
    {
      "Time_Start": 904.5400000000001,
      "Time_End": 909.38,
      "Text": " here on the left to look at the modules, we see a bunch of drivers and their descriptions,"
    },
    {
      "Time_Start": 909.38,
      "Time_End": 914.14,
      "Text": " so I did what potentially some other people in the room would do and I just copied all"
    },
    {
      "Time_Start": 914.14,
      "Time_End": 920.62,
      "Text": " that in a chat GPT, I said hey what's relevant to like SMB and NetBIOS, that at least narrowed"
    },
    {
      "Time_Start": 920.62,
      "Time_End": 927.86,
      "Text": " down the list from 30 plus drivers to 5, 6, a more digestible amount of drivers to"
    },
    {
      "Time_Start": 927.86,
      "Time_End": 930.1,
      "Text": " start looking at."
    },
    {
      "Time_Start": 930.1,
      "Time_End": 935.98,
      "Text": " So used IDAfree then in combination with symbols for a lot of these drivers to just start looking"
    },
    {
      "Time_Start": 935.98,
      "Time_End": 941.26,
      "Text": " at interesting functions that seemed like they were related to binding ports or related"
    },
    {
      "Time_Start": 941.26,
      "Time_End": 946.46,
      "Text": " to SMB communication or NetBIOS, just things that seemed like it might have something to"
    },
    {
      "Time_Start": 946.46,
      "Time_End": 952.02,
      "Text": " do with what we're interested in and I came up with a very, very long list of functions"
    },
    {
      "Time_Start": 952.02,
      "Time_End": 956.7,
      "Text": " and even though we narrowed down a little bit, it was still, this list was at least"
    },
    {
      "Time_Start": 956.7,
      "Time_End": 961.98,
      "Text": " like 50 or 60 functions but some of them kind of stood above the others like INet choir"
    },
    {
      "Time_Start": 961.98,
      "Time_End": 966.58,
      "Text": " and the TCP IP driver was interesting, a lot of interesting functions to start looking"
    },
    {
      "Time_Start": 966.58,
      "Time_End": 970.7,
      "Text": " at in terms of static analysis."
    },
    {
      "Time_Start": 970.7,
      "Time_End": 976.7800000000001,
      "Text": " So we configure a kernel debugging, this was actually the first time I had ever configured"
    },
    {
      "Time_Start": 976.7800000000001,
      "Time_End": 981.62,
      "Text": " kernel debugging, it was less arduous than I expected but configure that on a remote"
    },
    {
      "Time_Start": 981.62,
      "Time_End": 987.5400000000001,
      "Text": " host, snapshot the host when 445 is unbound, so like I mentioned before you disable land"
    },
    {
      "Time_Start": 987.5400000000001,
      "Time_End": 992.3000000000001,
      "Text": " man server service, reboot the host, it's unbound, I snapshot it because I'm going or"
    },
    {
      "Time_Start": 992.3000000000001,
      "Time_End": 996.5400000000001,
      "Text": " hopefully to start doing dynamic analysis we will be re-enabling the service regularly"
    },
    {
      "Time_Start": 996.5400000000001,
      "Time_End": 999.0200000000001,
      "Text": " to get a better understanding of what's happening."
    },
    {
      "Time_Start": 999.02,
      "Time_End": 1003.54,
      "Text": " So we do that, just write this PowerShell one liner and hot key it so I can revert the"
    },
    {
      "Time_Start": 1003.54,
      "Time_End": 1008.1,
      "Text": " snapshot, re-enable land man server service, revert the snapshot, re-enable it and start"
    },
    {
      "Time_Start": 1008.1,
      "Time_End": 1010.18,
      "Text": " setting break points."
    },
    {
      "Time_Start": 1010.18,
      "Time_End": 1013.14,
      "Text": " So we set the break points for the functions, some of the functions mentioned in the last"
    },
    {
      "Time_Start": 1013.14,
      "Time_End": 1017.34,
      "Text": " slide and eventually that led to inspection of this function called INet acquire port"
    },
    {
      "Time_Start": 1017.34,
      "Time_End": 1022.8199999999999,
      "Text": " in the TCP IP driver which was reliably hit after re-enabling the land man server service"
    },
    {
      "Time_Start": 1022.8199999999999,
      "Time_End": 1027.94,
      "Text": " and doing the reboot and regularly hitting this function that seemed like it would be"
    },
    {
      "Time_Start": 1027.94,
      "Time_End": 1031.98,
      "Text": " very relevant to start getting a better understanding of what's going on here."
    },
    {
      "Time_Start": 1031.98,
      "Time_End": 1038.3,
      "Text": " But even though I was hitting that break point, I wanted to make sure that hitting that break"
    },
    {
      "Time_Start": 1038.3,
      "Time_End": 1044.74,
      "Text": " point was associated with the rebinding of 445, I wanted to definitively know that and"
    },
    {
      "Time_Start": 1044.74,
      "Time_End": 1050.98,
      "Text": " thankfully that's a relatively easy thing to do with kernel debugging."
    },
    {
      "Time_Start": 1050.98,
      "Time_End": 1055.8200000000002,
      "Text": " So I tried to keep as little code, especially pseudocode from IDA in the slides, I know"
    },
    {
      "Time_Start": 1055.82,
      "Time_End": 1061.3,
      "Text": " nobody wants to look at decompiled code that looks like nonsense or maybe that's just me,"
    },
    {
      "Time_Start": 1061.3,
      "Time_End": 1067.22,
      "Text": " but just two tiny snippets, this one's from that INet acquire port function that I mentioned"
    },
    {
      "Time_Start": 1067.22,
      "Time_End": 1069.1799999999998,
      "Text": " and the TCP IP driver."
    },
    {
      "Time_Start": 1069.1799999999998,
      "Time_End": 1075.5,
      "Text": " The reason this stood out was because one, there's a subsequent call to the is port in"
    },
    {
      "Time_Start": 1075.5,
      "Time_End": 1080.02,
      "Text": " exclusion and I guess before I start describing the specifics, the reason this was interesting"
    },
    {
      "Time_Start": 1080.02,
      "Time_End": 1084.26,
      "Text": " is because just the name of the port is like I wanted to know definitively that this has"
    },
    {
      "Time_Start": 1084.26,
      "Time_End": 1089.78,
      "Text": " to do with 445 rebinding and the name of the function as well as subsequent function"
    },
    {
      "Time_Start": 1089.78,
      "Time_End": 1095.42,
      "Text": " calls like is port in exclusion list, it seems like this is associated with that behavior."
    },
    {
      "Time_Start": 1095.42,
      "Time_End": 1100.32,
      "Text": " So because the INet acquire port function makes a subsequent call to this is port in"
    },
    {
      "Time_Start": 1100.32,
      "Time_End": 1107.14,
      "Text": " exclusion list and one of the parameters for that is port in exclusion is a data type,"
    },
    {
      "Time_Start": 1107.14,
      "Time_End": 1112.34,
      "Text": " more specifically an int16 that could very likely represent a port number, a TCP port"
    },
    {
      "Time_Start": 1112.34,
      "Time_End": 1113.78,
      "Text": " number."
    },
    {
      "Time_Start": 1113.78,
      "Time_End": 1117.98,
      "Text": " That was interesting, a good starting place for dynamic analysis."
    },
    {
      "Time_Start": 1117.98,
      "Time_End": 1123.22,
      "Text": " So I step through a couple of these break points, it's triggered when I reenable land"
    },
    {
      "Time_Start": 1123.22,
      "Time_End": 1128.34,
      "Text": " main server service, I step through until I reach a couple of calls to this is port"
    },
    {
      "Time_Start": 1128.34,
      "Time_End": 1135.08,
      "Text": " in exclusion list and because of the fast call calling convention, we know the function"
    },
    {
      "Time_Start": 1135.08,
      "Time_End": 1143.28,
      "Text": " has two parameters, this B68, that's the thing we think is likely a port number because"
    },
    {
      "Time_Start": 1143.28,
      "Time_End": 1148.9199999999998,
      "Text": " it's int16 and if we step through, fast call calling convention tells us that based on"
    },
    {
      "Time_Start": 1148.9199999999998,
      "Time_End": 1156.1599999999999,
      "Text": " the function's prototype that variable will end up in the RDX register and if we asked"
    },
    {
      "Time_Start": 1156.1599999999999,
      "Time_End": 1162.96,
      "Text": " when debug it returns, now we know definitively that when I reenable the land main server"
    },
    {
      "Time_Start": 1162.96,
      "Time_End": 1169.28,
      "Text": " service, eventually this function is towards the end of that call stack and associated"
    },
    {
      "Time_Start": 1169.28,
      "Time_End": 1177.04,
      "Text": " with that rebinding behavior, we see 445 specifically in the RDX register."
    },
    {
      "Time_Start": 1177.04,
      "Time_End": 1183.2,
      "Text": " But all of this is associated with binding 445, that's not really what we're trying to"
    },
    {
      "Time_Start": 1183.2,
      "Time_End": 1189.76,
      "Text": " accomplish here, but how can this call stack, like when we hit INet port acquire help us"
    },
    {
      "Time_Start": 1189.76,
      "Time_End": 1195.36,
      "Text": " understand the unbinding process?"
    },
    {
      "Time_Start": 1195.36,
      "Time_End": 1200.44,
      "Text": " So initially I thought like I'm going to have to dig through maybe like IOctals exposed"
    },
    {
      "Time_Start": 1200.44,
      "Time_End": 1205.2,
      "Text": " by some of these drivers relevant to the binding process and maybe there's something exposed"
    },
    {
      "Time_Start": 1205.2,
      "Time_End": 1210.44,
      "Text": " that would allow us to reach a code path that we could unbind with, thankfully I didn't"
    },
    {
      "Time_Start": 1210.44,
      "Time_End": 1213.44,
      "Text": " have to dig that deep."
    },
    {
      "Time_Start": 1213.44,
      "Time_End": 1217.6,
      "Text": " Starting from the servnet.sys driver within the previous call stack mentioned, so we see"
    },
    {
      "Time_Start": 1217.6000000000001,
      "Time_End": 1222.8000000000002,
      "Text": " that here towards the bottom, some calls from servnet."
    },
    {
      "Time_Start": 1222.8000000000002,
      "Time_End": 1228.16,
      "Text": " The symbols started to very easily allow for identification of like what was happening"
    },
    {
      "Time_Start": 1228.16,
      "Time_End": 1232.2400000000002,
      "Text": " when we were binding compared to what would likely be happening when we were unbinding,"
    },
    {
      "Time_Start": 1232.2400000000002,
      "Time_End": 1239.5400000000002,
      "Text": " so you see like when we just identified the relevant call stack for the binding process"
    },
    {
      "Time_Start": 1239.5400000000002,
      "Time_End": 1245.96,
      "Text": " we saw servnet workstation open listen socket, well if you just look at the symbols there's"
    },
    {
      "Time_Start": 1245.96,
      "Time_End": 1250.56,
      "Text": " a close listen socket or allocate end point, there's a close end point and it was pretty"
    },
    {
      "Time_Start": 1250.56,
      "Time_End": 1256.2,
      "Text": " easy to correlate what would likely be the functions responsible for unbinding."
    },
    {
      "Time_Start": 1256.2,
      "Time_End": 1261.44,
      "Text": " And I start looking through cross references, so like if we reference the call stack for"
    },
    {
      "Time_Start": 1261.44,
      "Time_End": 1267.24,
      "Text": " this is what was what we definitively determined was associated with the binding process, so"
    },
    {
      "Time_Start": 1267.24,
      "Time_End": 1273.6000000000001,
      "Text": " if we start down here towards some of the functions from servnet, we can just dig through"
    },
    {
      "Time_Start": 1273.6000000000001,
      "Time_End": 1278.5800000000002,
      "Text": " some of the cross references, see where these functions are used within the driver and eventually"
    },
    {
      "Time_Start": 1278.5800000000002,
      "Time_End": 1285.72,
      "Text": " before we have to take too many steps we go from the net close end point to this crazy"
    },
    {
      "Time_Start": 1285.72,
      "Time_End": 1290.68,
      "Text": " long function I'm not going to make everybody listen to me say and we eventually reach driver"
    },
    {
      "Time_Start": 1290.68,
      "Time_End": 1296.0800000000002,
      "Text": " unload which some people in the audience probably have an idea of where I'm going with this"
    },
    {
      "Time_Start": 1296.0800000000002,
      "Time_End": 1299.0800000000002,
      "Text": " but this was definitely interesting."
    },
    {
      "Time_Start": 1299.08,
      "Time_End": 1305.32,
      "Text": " So how can we determine if unloading this driver or functionality associated with this"
    },
    {
      "Time_Start": 1305.32,
      "Time_End": 1311.56,
      "Text": " driver unload function could be or we could reach that in some way?"
    },
    {
      "Time_Start": 1311.56,
      "Time_End": 1315.6399999999999,
      "Text": " Well our first option would be we can just be a good reverse engineer, step through all"
    },
    {
      "Time_Start": 1315.6399999999999,
      "Time_End": 1319.52,
      "Text": " of the disassembly until we have a relatively good understanding of what's going on in the"
    },
    {
      "Time_Start": 1319.52,
      "Time_End": 1325.9199999999998,
      "Text": " driver or you can just let Jesus take the wheel and start disabling services and I'll"
    },
    {
      "Time_Start": 1326.0,
      "Time_End": 1331.2,
      "Text": " let everybody assume which approach that I took."
    },
    {
      "Time_Start": 1331.2,
      "Time_End": 1333.96,
      "Text": " So why are we stopping services in the first place?"
    },
    {
      "Time_Start": 1333.96,
      "Time_End": 1340.44,
      "Text": " Well if we stop a service or more specifically a service like a driver relevant service,"
    },
    {
      "Time_Start": 1340.44,
      "Time_End": 1345.24,
      "Text": " this should ideally call its respective driver unload function, I say should because not"
    },
    {
      "Time_Start": 1345.24,
      "Time_End": 1353.76,
      "Text": " all drivers implement this correctly but it is a prereq of the WDM framework and some"
    },
    {
      "Time_Start": 1353.76,
      "Time_End": 1362.4,
      "Text": " other guidelines for development of drivers and so if we just try to stop servnet we see"
    },
    {
      "Time_Start": 1362.4,
      "Time_End": 1367.76,
      "Text": " this error, unable to stop service, something about dependencies so why are service dependencies"
    },
    {
      "Time_Start": 1367.76,
      "Time_End": 1368.76,
      "Text": " relevant?"
    },
    {
      "Time_Start": 1368.76,
      "Time_End": 1375.48,
      "Text": " Well MSDN defines a dependency as something that specifies the name of services or groups"
    },
    {
      "Time_Start": 1375.48,
      "Time_End": 1378.4,
      "Text": " that must start before this service starts."
    },
    {
      "Time_Start": 1378.4,
      "Time_End": 1384.48,
      "Text": " So in most default builds of Windows the servnet service is a dependent of the serv2"
    },
    {
      "Time_Start": 1384.48,
      "Time_End": 1389.52,
      "Text": " service which is then a dependent of landman server service so there's some nested dependencies"
    },
    {
      "Time_Start": 1389.52,
      "Time_End": 1396.52,
      "Text": " here and this is even more encouraging because if you remember we've mentioned three or four"
    },
    {
      "Time_Start": 1396.52,
      "Time_End": 1401.2,
      "Text": " times now you can stop the landman server service, reboot the host, now we've worked"
    },
    {
      "Time_Start": 1401.2,
      "Time_End": 1405.64,
      "Text": " through the static and dynamic analysis and we're connecting the dots back to the landman"
    },
    {
      "Time_Start": 1405.64,
      "Time_End": 1410.1200000000001,
      "Text": " server service through these service dependencies."
    },
    {
      "Time_Start": 1410.1200000000001,
      "Time_End": 1415.68,
      "Text": " And you can kind of see here if you're using like process hacker, system informer, you"
    },
    {
      "Time_Start": 1415.68,
      "Time_End": 1421.5600000000002,
      "Text": " can very easily list service dependents as well as just where that information also exists"
    },
    {
      "Time_Start": 1421.5600000000002,
      "Time_End": 1427.0,
      "Text": " in registry here."
    },
    {
      "Time_Start": 1427.0,
      "Time_End": 1433.3200000000002,
      "Text": " So we've done static analysis, we've done dynamic analysis, somehow like service dependencies"
    },
    {
      "Time_Start": 1433.32,
      "Time_End": 1438.6,
      "Text": " are relevant to all this stuff but how do we connect all of this information and hopefully"
    },
    {
      "Time_Start": 1438.6,
      "Time_End": 1445.12,
      "Text": " turn understanding the binding process into successfully unbinding port 445?"
    },
    {
      "Time_Start": 1445.12,
      "Time_End": 1449.96,
      "Text": " Well we can reconfigure these services that we've better understood through this analysis"
    },
    {
      "Time_Start": 1449.96,
      "Time_End": 1452.9199999999998,
      "Text": " in a specific order because of the dependencies."
    },
    {
      "Time_Start": 1452.9199999999998,
      "Time_End": 1456.84,
      "Text": " So like we've mentioned several times now, we change the start type of the landman server"
    },
    {
      "Time_Start": 1456.84,
      "Time_End": 1458.96,
      "Text": " service from auto start to disabled."
    },
    {
      "Time_Start": 1458.96,
      "Time_End": 1465.08,
      "Text": " The reason we do this is because landman server has this concept of service triggers,"
    },
    {
      "Time_Start": 1465.08,
      "Time_End": 1468.92,
      "Text": " things that will potentially automatically enable that service."
    },
    {
      "Time_Start": 1468.92,
      "Time_End": 1475.88,
      "Text": " There are service triggers associated with landman server service that will constantly"
    },
    {
      "Time_Start": 1475.88,
      "Time_End": 1476.88,
      "Text": " hit the service."
    },
    {
      "Time_Start": 1476.88,
      "Time_End": 1481.1200000000001,
      "Text": " So you need to configure it to a disabled state because if you just stop the service,"
    },
    {
      "Time_Start": 1481.1200000000001,
      "Time_End": 1485.16,
      "Text": " the service trigger will be hit in less than 30 seconds, it will re-enable so you need"
    },
    {
      "Time_Start": 1485.16,
      "Time_End": 1489.68,
      "Text": " to reconfigure the start type, you do that, then you stop the service, then you start"
    },
    {
      "Time_Start": 1489.68,
      "Time_End": 1494.52,
      "Text": " the serve to service because that's the next dependency that we've identified, then you"
    },
    {
      "Time_Start": 1494.52,
      "Time_End": 1500.68,
      "Text": " stop the serve net service and then the fifth step is you just pray that 445 is unbound"
    },
    {
      "Time_Start": 1500.68,
      "Time_End": 1501.68,
      "Text": " hopefully."
    },
    {
      "Time_Start": 1501.68,
      "Time_End": 1505.52,
      "Text": " But instead of praying, we're actually going to try to be decent reverse engineers here"
    },
    {
      "Time_Start": 1505.52,
      "Time_End": 1510.44,
      "Text": " and step through a little bit more debugging to actually make sure that our assumptions"
    },
    {
      "Time_Start": 1510.44,
      "Time_End": 1511.72,
      "Text": " are validated here."
    },
    {
      "Time_Start": 1511.72,
      "Time_End": 1517.8,
      "Text": " So we talked about the Inet acquire port function for the binding process, symbols tell us we"
    },
    {
      "Time_Start": 1517.8,
      "Time_End": 1526.8,
      "Text": " can potentially assume that Inet release port is the unbinding equivalent in TCPIP and similarly"
    },
    {
      "Time_Start": 1526.8,
      "Time_End": 1534.04,
      "Text": " we also see another call to is port an exclusion which has that same like int64, it's probably"
    },
    {
      "Time_Start": 1534.04,
      "Time_End": 1536.84,
      "Text": " a port, we can set some break points and validate."
    },
    {
      "Time_Start": 1537.44,
      "Time_End": 1541.8000000000002,
      "Text": " We set those break points, we step through, we hit them again consistently when we disable"
    },
    {
      "Time_Start": 1541.8000000000002,
      "Time_End": 1546.7600000000002,
      "Text": " these services in a specific order and then finally we can validate that when is port"
    },
    {
      "Time_Start": 1546.7600000000002,
      "Time_End": 1553.6000000000001,
      "Text": " and exclusion is hit and associated with the release port function, it is definitely associated"
    },
    {
      "Time_Start": 1553.6000000000001,
      "Time_End": 1558.8400000000001,
      "Text": " with unbinding port 445 here as we see in the RDX register."
    },
    {
      "Time_Start": 1558.8400000000001,
      "Time_End": 1563.2400000000002,
      "Text": " And then finally we just validate with PowerShell or whatever your tool of choice is and we"
    },
    {
      "Time_Start": 1563.24,
      "Time_End": 1571.52,
      "Text": " see that 445 is successfully unbound."
    },
    {
      "Time_Start": 1571.52,
      "Time_End": 1577.68,
      "Text": " So to kind of make sense of all the like static stuff we've looked at, dynamic analysis, if"
    },
    {
      "Time_Start": 1577.68,
      "Time_End": 1582.52,
      "Text": " you want to start from the beginning, like the reconfiguring services, imagine that's"
    },
    {
      "Time_Start": 1582.52,
      "Time_End": 1588.68,
      "Text": " like below the graph here, we stop the services when we finally reach stopping the servnet"
    },
    {
      "Time_Start": 1588.68,
      "Time_End": 1594.3600000000001,
      "Text": " service that calls the driver and load function, that makes more function calls in the servnet"
    },
    {
      "Time_Start": 1594.3600000000001,
      "Time_End": 1600.0,
      "Text": " driver which eventually reaches the servnet workstation close listen socket function which"
    },
    {
      "Time_Start": 1600.0,
      "Time_End": 1605.5600000000002,
      "Text": " then makes more virtual function calls to the ADF driver, ultimately filtering up to"
    },
    {
      "Time_Start": 1605.5600000000002,
      "Time_End": 1613.8400000000001,
      "Text": " this inet release port function that is responsible for unbinding port 445."
    },
    {
      "Time_Start": 1613.8400000000001,
      "Time_End": 1620.0800000000002,
      "Text": " So for anybody that's interacted with the service control manager regularly, you can"
    },
    {
      "Time_Start": 1620.0800000000002,
      "Time_End": 1625.6000000000001,
      "Text": " probably assume this is a relatively easy task to pull off with existing tooling, but"
    },
    {
      "Time_Start": 1625.6000000000001,
      "Time_End": 1630.7200000000003,
      "Text": " for those who don't want to make a series of four manual interactions with the service"
    },
    {
      "Time_Start": 1630.7200000000003,
      "Time_End": 1638.0000000000002,
      "Text": " control manager, I did write a simple boff as well as impact based Python script to automate"
    },
    {
      "Time_Start": 1638.0000000000002,
      "Time_End": 1642.92,
      "Text": " some of this for you, but first before we look at that, I ran into a couple of things"
    },
    {
      "Time_Start": 1642.92,
      "Time_End": 1647.64,
      "Text": " while I was testing, also things that we've run across during red team engagements that"
    },
    {
      "Time_Start": 1647.64,
      "Time_End": 1652.16,
      "Text": " would be relevant to consider when you're abusing this technique, first of which would"
    },
    {
      "Time_Start": 1652.16,
      "Time_End": 1657.0,
      "Text": " be however you're interacting with the service control manager, it's important to be mindful"
    },
    {
      "Time_Start": 1657.0,
      "Time_End": 1664.5600000000002,
      "Text": " of how you're interacting with it, and what I mean by that is a lot of tools, especially"
    },
    {
      "Time_Start": 1664.5600000000002,
      "Time_End": 1669.48,
      "Text": " offensive security related tools will default to leveraging name pipes for communication"
    },
    {
      "Time_Start": 1669.48,
      "Time_End": 1678.88,
      "Text": " with things like the service control manager or this NPCACN, it's important to remember"
    },
    {
      "Time_Start": 1678.88,
      "Time_End": 1683.32,
      "Text": " that when we're disabling these services, you're disabling the things that allow you"
    },
    {
      "Time_Start": 1683.32,
      "Time_End": 1689.76,
      "Text": " to communicate over name pipes or SMB communication, so if you're targeting a remote host and you"
    },
    {
      "Time_Start": 1689.76,
      "Time_End": 1695.68,
      "Text": " disable all of this stuff, then yes, 445 is unbound but you're also unable to communicate"
    },
    {
      "Time_Start": 1695.68,
      "Time_End": 1699.8,
      "Text": " over name pipes to re-enable it, so something to consider."
    },
    {
      "Time_Start": 1699.8,
      "Time_End": 1702.88,
      "Text": " You're not completely out of luck because you can also interact with the service control"
    },
    {
      "Time_Start": 1702.88,
      "Time_End": 1709.8,
      "Text": " manager using RPC over TCP and there's plenty of tools that allow you to do that, I'll give"
    },
    {
      "Time_Start": 1709.8,
      "Time_End": 1711.88,
      "Text": " some examples here in a second."
    },
    {
      "Time_Start": 1711.88,
      "Time_End": 1718.24,
      "Text": " One big bonus in my opinion of leveraging this technique to disable 445 is that once"
    },
    {
      "Time_Start": 1718.24,
      "Time_End": 1723.6000000000001,
      "Text": " you've disabled the service, you can just simply set the start type of landman server"
    },
    {
      "Time_Start": 1723.6000000000001,
      "Time_End": 1728.5600000000002,
      "Text": " service to autostart, wait 30 seconds or so or however long it takes, not very long,"
    },
    {
      "Time_Start": 1728.5600000000002,
      "Time_End": 1732.68,
      "Text": " a service trigger will be hit for the service which re-enables landman server service and"
    },
    {
      "Time_Start": 1732.68,
      "Time_End": 1736.94,
      "Text": " because serve 2 is a dependent of landman server, that one gets re-enabled and because"
    },
    {
      "Time_Start": 1736.94,
      "Time_End": 1741.8400000000001,
      "Text": " serve net is a dependent of serve 2, serve net gets re-enabled, so long story short you"
    },
    {
      "Time_Start": 1741.8400000000001,
      "Time_End": 1746.96,
      "Text": " just set landman server back to autostart, you wait for a few seconds, 445 is rebound"
    },
    {
      "Time_Start": 1746.96,
      "Time_End": 1750.7600000000002,
      "Text": " and hopefully not too much issue from that point forward."
    },
    {
      "Time_Start": 1750.76,
      "Time_End": 1757.78,
      "Text": " So again, wrote two quick implementations of automating this for post exploitation."
    },
    {
      "Time_Start": 1757.78,
      "Time_End": 1761.12,
      "Text": " What that kind of looks like here and I guess before I explain any of this, I just wanted"
    },
    {
      "Time_Start": 1761.12,
      "Time_End": 1767.72,
      "Text": " to give a reference to WMI exec pro which this was very largely based on because it"
    },
    {
      "Time_Start": 1767.72,
      "Time_End": 1773.72,
      "Text": " defaults to RPC over TCP communication, so just kind of hacked together a version of"
    },
    {
      "Time_Start": 1773.72,
      "Time_End": 1778.68,
      "Text": " that that automates these specific service control manager interactions so you can see"
    },
    {
      "Time_Start": 1778.68,
      "Time_End": 1783.48,
      "Text": " in the output landman server service, we set it disabled, we stopped some other services"
    },
    {
      "Time_Start": 1783.48,
      "Time_End": 1789.16,
      "Text": " and then the simple functions that I implemented were just stop, check and start."
    },
    {
      "Time_Start": 1789.16,
      "Time_End": 1795.3200000000002,
      "Text": " So we stop, it does the things here, we check, it checks the status of all of those services"
    },
    {
      "Time_Start": 1795.3200000000002,
      "Time_End": 1800.48,
      "Text": " and the core of my logic here for making the assumption that 445 is unbound is just really"
    },
    {
      "Time_Start": 1800.48,
      "Time_End": 1805.3200000000002,
      "Text": " checking serve net because we can assume due to the dependencies associated with these"
    },
    {
      "Time_Start": 1805.32,
      "Time_End": 1810.72,
      "Text": " services, if this one stopped that the serve net driver is unloaded, therefore 445 is"
    },
    {
      "Time_Start": 1810.72,
      "Time_End": 1814.08,
      "Text": " most likely unbound."
    },
    {
      "Time_Start": 1814.08,
      "Time_End": 1817.08,
      "Text": " So this is what the Python script looks like."
    },
    {
      "Time_Start": 1817.08,
      "Time_End": 1822.56,
      "Text": " In this example I'm proxying it in like we would on most assessments and again the benefit"
    },
    {
      "Time_Start": 1822.56,
      "Time_End": 1827.52,
      "Text": " here is if you disable 445 on a remote host, you'll still be able to use this to check"
    },
    {
      "Time_Start": 1827.52,
      "Time_End": 1832.36,
      "Text": " and re-enable 445."
    },
    {
      "Time_Start": 1832.3600000000001,
      "Time_End": 1837.8000000000002,
      "Text": " Same thing with a boff basically and again another shout out, I definitely didn't reinvent"
    },
    {
      "Time_Start": 1837.8000000000002,
      "Time_End": 1844.48,
      "Text": " the wheel here, leveraged existing Python and like boff related code to conduct these"
    },
    {
      "Time_Start": 1844.48,
      "Time_End": 1850.8400000000001,
      "Text": " service control manager interactions but same function, stop, start, check, super simple,"
    },
    {
      "Time_Start": 1850.8400000000001,
      "Time_End": 1856.2,
      "Text": " does the service control manager interactions and will hopefully unbind and rebind 445 for"
    },
    {
      "Time_Start": 1856.2,
      "Time_End": 1858.96,
      "Text": " you."
    },
    {
      "Time_Start": 1858.96,
      "Time_End": 1866.44,
      "Text": " And I like to make this note because these two specific like the boff and the Python"
    },
    {
      "Time_Start": 1866.44,
      "Time_End": 1872.28,
      "Text": " script I probably won't revisit and the reason for that is if you need to interact with services"
    },
    {
      "Time_Start": 1872.28,
      "Time_End": 1878.56,
      "Text": " there's an endless number of tools to do that, use the SC binary, use impact, there's hundreds"
    },
    {
      "Time_Start": 1878.56,
      "Time_End": 1884.04,
      "Text": " of tools available and it's a simple series of interactions so I'll definitely publish"
    },
    {
      "Time_Start": 1884.12,
      "Time_End": 1889.68,
      "Text": " my proof of concept tools but if there's a case where there's different dependencies"
    },
    {
      "Time_Start": 1889.68,
      "Time_End": 1893.6,
      "Text": " or anything like that, it hopefully should just be simple enough to use the existing"
    },
    {
      "Time_Start": 1893.6,
      "Time_End": 1897.08,
      "Text": " WMI exec pro project or the SC binary."
    },
    {
      "Time_Start": 1897.08,
      "Time_End": 1902.74,
      "Text": " I've seen a couple of our consultants leverage SC from a remote Windows machine that they"
    },
    {
      "Time_Start": 1902.74,
      "Time_End": 1910.36,
      "Text": " just proxy in over like proxy fire or proxy cap and one note about using the SC binary"
    },
    {
      "Time_Start": 1910.3600000000001,
      "Time_End": 1917.6000000000001,
      "Text": " from a remote Windows host is that SC.exe defaults to RPC over TCP so good option if"
    },
    {
      "Time_Start": 1917.6000000000001,
      "Time_End": 1922.2600000000002,
      "Text": " you want something that can disable and also re-enable remotely."
    },
    {
      "Time_Start": 1922.2600000000002,
      "Time_End": 1928.2,
      "Text": " Same thing with WMI exec pro, defaults to RPC over TCP and you can just like the logic"
    },
    {
      "Time_Start": 1928.2,
      "Time_End": 1933.3600000000001,
      "Text": " of the boff and Python script that I'll release, you can just simply check the status of the"
    },
    {
      "Time_Start": 1933.3600000000001,
      "Time_End": 1938.2800000000002,
      "Text": " servnet service, that's like the root of kind of controlling what we're talking about here"
    },
    {
      "Time_Start": 1938.44,
      "Time_End": 1943.24,
      "Text": " and if it is stopped or started, you can generally make the assumption of whether or not you've"
    },
    {
      "Time_Start": 1943.24,
      "Time_End": 1949.36,
      "Text": " successfully unbound or rebound the target port."
    },
    {
      "Time_Start": 1949.36,
      "Time_End": 1956.54,
      "Text": " So I wanted to give a, I guess before I give the demonstration, I want to give a shout"
    },
    {
      "Time_Start": 1956.54,
      "Time_End": 1962.36,
      "Text": " out to both Garrett Foster as well as Chris Thompson and everybody else associated with"
    },
    {
      "Time_Start": 1962.36,
      "Time_End": 1966.8,
      "Text": " the SCCM research, lots of people from the community, another one of our colleagues,"
    },
    {
      "Time_Start": 1966.8,
      "Time_End": 1973.0,
      "Text": " and these two specifically because I had not abused a lot of the SCCM related tradecraft"
    },
    {
      "Time_Start": 1973.0,
      "Time_End": 1978.68,
      "Text": " up to this point but I personally think that this is significantly more impactful because"
    },
    {
      "Time_Start": 1978.68,
      "Time_End": 1983.68,
      "Text": " of their work, because of the additional relay primitives that they've discovered in the"
    },
    {
      "Time_Start": 1983.68,
      "Time_End": 1990.1599999999999,
      "Text": " last couple years and Chris got me set up in an SCCM lab to demo some of this and if"
    },
    {
      "Time_Start": 1990.1599999999999,
      "Time_End": 1994.6399999999999,
      "Text": " he hadn't done that, I'm sure some people here know SCCM is difficult enough to set"
    },
    {
      "Time_Start": 1994.64,
      "Time_End": 1999.3200000000002,
      "Text": " up, I don't know if I ever would have demoed this, so Chris was a huge help, Garrett walked"
    },
    {
      "Time_Start": 1999.3200000000002,
      "Time_End": 2003.72,
      "Text": " me through making sure I had a good understanding of the abuse primitives that were relevant"
    },
    {
      "Time_Start": 2003.72,
      "Time_End": 2022.92,
      "Text": " and just using his SCCM hunter tool."
    },
    {
      "Time_Start": 2023.04,
      "Time_End": 2030.0,
      "Text": " So I guess before I start, I'll make a quick note of what we already have that we're kind"
    },
    {
      "Time_Start": 2030.0,
      "Time_End": 2034.64,
      "Text": " of just making some assumptions here, we already have a compromised host in a regular domain"
    },
    {
      "Time_Start": 2034.64,
      "Time_End": 2043.88,
      "Text": " user context, we've already opened up a SOCKS 5 proxy or SOCKS 4A and another note I want"
    },
    {
      "Time_Start": 2043.88,
      "Time_End": 2048.04,
      "Text": " to make is I'm using Cobalt Strike here, it's just what was easiest and most available to"
    },
    {
      "Time_Start": 2048.04,
      "Time_End": 2053.08,
      "Text": " spin up, this is nothing Cobalt Strike specific like I mentioned before with the implementation"
    },
    {
      "Time_Start": 2053.08,
      "Time_End": 2060.32,
      "Text": " of the automation or the Python script that I'll release, you can use any service control"
    },
    {
      "Time_Start": 2060.32,
      "Time_End": 2065.6,
      "Text": " manager interaction for this, you don't need Cobalt Strike, you don't need any proprietary"
    },
    {
      "Time_Start": 2065.6,
      "Time_End": 2070.74,
      "Text": " solution to accomplish this, use SSH, use another C2, there's a lot of ways to accomplish"
    },
    {
      "Time_Start": 2070.74,
      "Time_End": 2075.0,
      "Text": " this in a similar fashion."
    },
    {
      "Time_Start": 2075.0,
      "Time_End": 2080.8,
      "Text": " So we start, we have the SOCKS proxy, we have a regular domain user context, we run"
    },
    {
      "Time_Start": 2080.8,
      "Time_End": 2088.32,
      "Text": " SCCM hunter, for the sake of time I've already done the information gathering for SCCM in"
    },
    {
      "Time_Start": 2088.32,
      "Time_End": 2091.36,
      "Text": " the hypothetical target environment."
    },
    {
      "Time_Start": 2091.36,
      "Time_End": 2097.2,
      "Text": " So we see SCCM hunter returns for us this nice view of like a primary site server, some"
    },
    {
      "Time_Start": 2097.2,
      "Time_End": 2106.7999999999997,
      "Text": " host that could be related to like a site database."
    },
    {
      "Time_Start": 2106.7999999999997,
      "Time_End": 2111.8399999999997,
      "Text": " So we do just a quick port scan, sorry I kind of missed it there, but it was an in map scan"
    },
    {
      "Time_Start": 2111.8399999999997,
      "Time_End": 2118.0,
      "Text": " of the relevant port for MSSQL, so now we're relatively certain that one of those SCCM"
    },
    {
      "Time_Start": 2118.0,
      "Time_End": 2129.6,
      "Text": " servers are associated with being like a site database for the SCCM site."
    },
    {
      "Time_Start": 2129.6,
      "Time_End": 2134.96,
      "Text": " We run this SCCM hunter command that will query the appropriate LDAP related information"
    },
    {
      "Time_Start": 2134.96,
      "Time_End": 2140.08,
      "Text": " to construct this SQL statement and we'll use this as part of the relay, so like when"
    },
    {
      "Time_Start": 2140.08,
      "Time_End": 2146.64,
      "Text": " we coerce auth from a primary site server, then when the auth is successfully coerced"
    },
    {
      "Time_Start": 2146.68,
      "Time_End": 2152.6,
      "Text": " and then targeting a site database, this will be the SQL statement executed, it will"
    },
    {
      "Time_Start": 2152.6,
      "Time_End": 2156.56,
      "Text": " hopefully add an administrative user to the site database."
    },
    {
      "Time_Start": 2156.56,
      "Time_End": 2160.7599999999998,
      "Text": " I know I'm kind of like glazing over some of the details, I'll elaborate on the unbinding"
    },
    {
      "Time_Start": 2160.7599999999998,
      "Time_End": 2167.7599999999998,
      "Text": " of port 445 part, but this is all the SCCM takeover one primitive, which if you're curious"
    },
    {
      "Time_Start": 2167.7599999999998,
      "Time_End": 2173.56,
      "Text": " about the specific details or like how to abuse it, Chris, Dwayne, Garrett, all of the"
    },
    {
      "Time_Start": 2173.56,
      "Time_End": 2180.36,
      "Text": " SCCM crowd publish a project called misconfiguration manager that gives an incredible amount of"
    },
    {
      "Time_Start": 2180.36,
      "Time_End": 2190.72,
      "Text": " detail and reference to how exploitation of this works."
    },
    {
      "Time_Start": 2190.72,
      "Time_End": 2194.56,
      "Text": " So we have the SQL statement, we've done some enumeration, we think we know where the site"
    },
    {
      "Time_Start": 2194.56,
      "Time_End": 2199.44,
      "Text": " database server is, now on our compromised host we have elevated access because we do"
    },
    {
      "Time_Start": 2199.52,
      "Time_End": 2209.04,
      "Text": " need elevated access to disable these services, for example, so we run the boff, we run check,"
    },
    {
      "Time_Start": 2209.04,
      "Time_End": 2212.76,
      "Text": " everything's enabled, we can assume 445 is bound, just for the sake of demonstration"
    },
    {
      "Time_Start": 2212.76,
      "Time_End": 2220.08,
      "Text": " purposes, I just run a quick netstat command here, I use shell, if evasion is relevant"
    },
    {
      "Time_Start": 2220.08,
      "Time_End": 2224.8,
      "Text": " would definitely recommend not using shell, but just for the sake of simplicity, we run"
    },
    {
      "Time_Start": 2224.8,
      "Time_End": 2229.7200000000003,
      "Text": " netstat, we parse out what's bound to 445 and just like when we were stepping through"
    },
    {
      "Time_Start": 2229.7200000000003,
      "Time_End": 2236.88,
      "Text": " the initial analysis we see that the system process or process of PID4 is bound to 445,"
    },
    {
      "Time_Start": 2236.88,
      "Time_End": 2243.1600000000003,
      "Text": " everything is going as expected, we run stop, it disables the services and now because servnet"
    },
    {
      "Time_Start": 2243.1600000000003,
      "Time_End": 2251.32,
      "Text": " is unbound we can relatively safely make the assumption that 445 is no longer bound."
    },
    {
      "Time_Start": 2251.32,
      "Time_End": 2256.56,
      "Text": " We run another netstat just to make sure of that, scroll through, 445 is no longer"
    },
    {
      "Time_Start": 2256.56,
      "Time_End": 2261.36,
      "Text": " bound on the target host and what this affords us the opportunity to do is instead of having"
    },
    {
      "Time_Start": 2261.36,
      "Time_End": 2267.76,
      "Text": " to do like, pause this for a second, instead of having to like load the wind divert driver"
    },
    {
      "Time_Start": 2267.76,
      "Time_End": 2275.44,
      "Text": " or load something in LSAS or reboot the host, now we can just jump straight into configuring"
    },
    {
      "Time_Start": 2275.44,
      "Time_End": 2279.6000000000004,
      "Text": " that reverse port forward type functionality to where we can bind somewhere on the host,"
    },
    {
      "Time_Start": 2279.6,
      "Time_End": 2286.04,
      "Text": " in this case just straight to 445 where in other cases like with port bender or other"
    },
    {
      "Time_Start": 2286.04,
      "Time_End": 2291.92,
      "Text": " wind divert related projects we would probably have to bind elsewhere and construct or create"
    },
    {
      "Time_Start": 2291.92,
      "Time_End": 2296.4,
      "Text": " a redirection of traffic from like 445 to another port and then reverse port forward"
    },
    {
      "Time_Start": 2296.4,
      "Time_End": 2297.4,
      "Text": " from there."
    },
    {
      "Time_Start": 2297.4,
      "Time_End": 2303.08,
      "Text": " This kind of cuts out one of those steps and we can just bind straight to 445 because it's"
    },
    {
      "Time_Start": 2303.08,
      "Time_End": 2321.04,
      "Text": " no longer bound to create our reverse port forward there."
    },
    {
      "Time_Start": 2321.04,
      "Time_End": 2328.12,
      "Text": " So we create our port forward, we bind to 445 and now hopefully when traffic comes from"
    },
    {
      "Time_Start": 2328.12,
      "Time_End": 2334.3199999999997,
      "Text": " the target network, a lot of our relays especially operating over C2 start with the coercion"
    },
    {
      "Time_Start": 2334.3199999999997,
      "Time_End": 2341.7999999999997,
      "Text": " of traffic and now we're bound on 445 and we coerce now S and B traffic, it comes to"
    },
    {
      "Time_Start": 2341.7999999999997,
      "Time_End": 2346.64,
      "Text": " our host, hits where we've created that reverse port forward, it will tunnel out of the network"
    },
    {
      "Time_Start": 2346.64,
      "Time_End": 2357.04,
      "Text": " over port 445."
    },
    {
      "Time_Start": 2357.04,
      "Time_End": 2364.48,
      "Text": " And then we fire up NTLM relay X and it's a huge statement here but basically all we're"
    },
    {
      "Time_Start": 2364.48,
      "Time_End": 2371.2799999999997,
      "Text": " doing is the way you would target any other MSSQL service for a NTLM relay like this,"
    },
    {
      "Time_Start": 2371.2799999999997,
      "Time_End": 2376.12,
      "Text": " so it's just NTLM relay X, give it a couple parameters, we're targeting MSSQL, the long"
    },
    {
      "Time_Start": 2376.12,
      "Time_End": 2381.22,
      "Text": " scary thing here is just that SQL statement that we generated earlier with SCCM hunter."
    },
    {
      "Time_Start": 2381.22,
      "Time_End": 2382.56,
      "Text": " We fire that up."
    },
    {
      "Time_Start": 2382.56,
      "Time_End": 2388.08,
      "Text": " One thing I also like to note is that we start NTLM relay X with proxy chains because when"
    },
    {
      "Time_Start": 2388.08,
      "Time_End": 2395.6,
      "Text": " we bind to that port, in this case directly to 445 now that we can just unbind that, we"
    },
    {
      "Time_Start": 2395.6,
      "Time_End": 2401.44,
      "Text": " coerce traffic with something like printer bug or Petit Putam, that traffic comes back"
    },
    {
      "Time_Start": 2401.44,
      "Time_End": 2407.56,
      "Text": " to us, now it hits port 445, it tunnels out very likely over our C2 channel and then because"
    },
    {
      "Time_Start": 2407.64,
      "Time_End": 2413.24,
      "Text": " we have NTLM relay X listening as well as running with proxy chains configured, when"
    },
    {
      "Time_Start": 2413.24,
      "Time_End": 2418.64,
      "Text": " that coerced NTLM authentication reaches our attacker host through that reverse port forward,"
    },
    {
      "Time_Start": 2418.64,
      "Time_End": 2423.7999999999997,
      "Text": " it hits NTLM relay X where it's waiting for the incoming connection, leverages SOCKS to"
    },
    {
      "Time_Start": 2423.7999999999997,
      "Time_End": 2429.08,
      "Text": " go back into the network and target the, in this case, SCCM site database."
    },
    {
      "Time_Start": 2438.0,
      "Time_End": 2441.84,
      "Text": " And then we actually coerce the traffic, in this case just using Petit Putam, that goes"
    },
    {
      "Time_Start": 2441.84,
      "Time_End": 2445.84,
      "Text": " over SOCKS, it hits the target host and we see it go through the tunnels, the series"
    },
    {
      "Time_Start": 2445.84,
      "Time_End": 2450.7599999999998,
      "Text": " of tunnels that we've created, it successfully reaches the site database server and it's"
    },
    {
      "Time_Start": 2450.7599999999998,
      "Time_End": 2457.36,
      "Text": " executed the SQL statement, we have now hopefully added our regular domain user as an administrator"
    },
    {
      "Time_Start": 2457.36,
      "Time_End": 2460.24,
      "Text": " in the SCCM site database."
    },
    {
      "Time_Start": 2460.2400000000002,
      "Time_End": 2467.28,
      "Text": " So we use Garrett's SCCM hunter again to connect to, we use the admin command which"
    },
    {
      "Time_Start": 2467.28,
      "Time_End": 2473.1200000000003,
      "Text": " is connecting to the admin service API and we just say, hey, what's the admins here in"
    },
    {
      "Time_Start": 2473.1200000000003,
      "Time_End": 2477.38,
      "Text": " the site database that we've now hopefully compromised and we see that now the normal"
    },
    {
      "Time_Start": 2477.38,
      "Time_End": 2482.3,
      "Text": " user one, the domain user context that we were operating in is now added as an administrator"
    },
    {
      "Time_Start": 2482.3,
      "Time_End": 2486.6800000000003,
      "Text": " in the site database, so that's good news for us."
    },
    {
      "Time_Start": 2486.68,
      "Time_End": 2491.48,
      "Text": " And then to just kind of like start, give like a relatively quick demonstration of like"
    },
    {
      "Time_Start": 2491.48,
      "Time_End": 2495.64,
      "Text": " we're added to the site database, what do we do now to actually like compromise a privileged"
    },
    {
      "Time_Start": 2495.64,
      "Time_End": 2500.8399999999997,
      "Text": " server in the environment, we get the device info for the primary site server, like the"
    },
    {
      "Time_Start": 2500.8399999999997,
      "Time_End": 2505.48,
      "Text": " privileged machine that we want to compromise, we interact with it using SCCM hunter, we"
    },
    {
      "Time_Start": 2505.48,
      "Time_End": 2509.48,
      "Text": " try to deploy a script and we see we need some approval credentials, this is relatively"
    },
    {
      "Time_Start": 2509.48,
      "Time_End": 2514.12,
      "Text": " common with this type of SCCM related abuse but thankfully Garrett has already accounted"
    },
    {
      "Time_Start": 2514.12,
      "Time_End": 2520.08,
      "Text": " for this in SCCM hunter, all we need is any other domain user to elevate and be an approver"
    },
    {
      "Time_Start": 2520.08,
      "Time_End": 2525.3599999999997,
      "Text": " of the script that we want to deploy, so now we just give it any other domain credentials"
    },
    {
      "Time_Start": 2525.3599999999997,
      "Time_End": 2527.2799999999997,
      "Text": " as the approver for this."
    },
    {
      "Time_Start": 2527.2799999999997,
      "Time_End": 2533.3599999999997,
      "Text": " We will add that user also as an administrator in the site database, we can do that now because"
    },
    {
      "Time_Start": 2533.3599999999997,
      "Time_End": 2535.8399999999997,
      "Text": " we are already an administrator."
    },
    {
      "Time_Start": 2535.8399999999997,
      "Time_End": 2542.0,
      "Text": " So we need the SID to do that, we get the SID of the other user, we add them as an admin"
    },
    {
      "Time_Start": 2542.0,
      "Time_End": 2546.36,
      "Text": " and then now we should have everything we need to go from just pretty much any domain"
    },
    {
      "Time_Start": 2546.36,
      "Time_End": 2551.44,
      "Text": " user that has local admin somewhere in the environment to arbitrarily execute a script"
    },
    {
      "Time_Start": 2551.44,
      "Time_End": 2557.28,
      "Text": " on the primary site server of this SCCM site."
    },
    {
      "Time_Start": 2557.28,
      "Time_End": 2563.44,
      "Text": " So we interact with the site server, we CD to see users public, all the script does is"
    },
    {
      "Time_Start": 2563.44,
      "Time_End": 2570.84,
      "Text": " drop a file called we made it and inside the file it will tell us the user context, so"
    },
    {
      "Time_Start": 2570.84,
      "Time_End": 2579.0,
      "Text": " we do script to deploy that script."
    },
    {
      "Time_Start": 2579.0,
      "Time_End": 2582.2000000000003,
      "Text": " There's no output because it's just dropping a file to disk."
    },
    {
      "Time_Start": 2582.2000000000003,
      "Time_End": 2587.08,
      "Text": " We LS the contents of the folder, this is on the primary site server, we see we actually"
    },
    {
      "Time_Start": 2587.08,
      "Time_End": 2591.8,
      "Text": " dropped a file on the primary site server which is encouraging, if we cat the contents"
    },
    {
      "Time_Start": 2591.8,
      "Time_End": 2597.56,
      "Text": " it will tell us what our user context is and we have arbitrarily executed code on the primary"
    },
    {
      "Time_Start": 2597.56,
      "Time_End": 2601.7999999999997,
      "Text": " site server in a system context."
    },
    {
      "Time_Start": 2601.7999999999997,
      "Time_End": 2608.96,
      "Text": " So now just another script is deployed to do clean up of the file that we dropped, LS"
    },
    {
      "Time_Start": 2608.96,
      "Time_End": 2617.4,
      "Text": " to make sure that worked and the file is no longer there."
    },
    {
      "Time_Start": 2617.4,
      "Time_End": 2622.7599999999998,
      "Text": " So to kind of wrap up everything that we've covered and why I feel like this will hopefully"
    },
    {
      "Time_Start": 2622.76,
      "Time_End": 2628.76,
      "Text": " be helpful for people doing NTLM relays over C2 for example, something that's very common"
    },
    {
      "Time_Start": 2628.76,
      "Time_End": 2637.7200000000003,
      "Text": " for us is instead of potentially having to load a driver or do like things that could"
    },
    {
      "Time_Start": 2637.7200000000003,
      "Time_End": 2644.2400000000002,
      "Text": " have OPSEC related implications with LSAS like loading custom authentication providers,"
    },
    {
      "Time_Start": 2644.2400000000002,
      "Time_End": 2647.96,
      "Text": " hopefully you can just conduct a series of simple service control manager interactions"
    },
    {
      "Time_Start": 2647.96,
      "Time_End": 2654.92,
      "Text": " using my POC or whatever your favorite service control manager related tool is and ultimately"
    },
    {
      "Time_Start": 2654.92,
      "Time_End": 2661.76,
      "Text": " end up with 445 unbound and do all of your SMB related NTLM relays using that now that"
    },
    {
      "Time_Start": 2661.76,
      "Time_End": 2667.26,
      "Text": " 445 is unbound and again just wanted to note that remotely conducting these interactions"
    },
    {
      "Time_Start": 2667.26,
      "Time_End": 2672.48,
      "Text": " with service control manager when you're disabling this port is probably beneficial to do leveraging"
    },
    {
      "Time_Start": 2672.48,
      "Time_End": 2677.76,
      "Text": " RPC over TCP because you'll still be able to re-enable it remotely."
    },
    {
      "Time_Start": 2678.5600000000004,
      "Time_End": 2685.1600000000003,
      "Text": " The Python script will be released if you want a way to automate this relatively quickly."
    },
    {
      "Time_Start": 2685.1600000000003,
      "Time_End": 2689.82,
      "Text": " The code is written, we've been using it on assessments for the last four or five months"
    },
    {
      "Time_Start": 2689.82,
      "Time_End": 2693.44,
      "Text": " and I plan to release that here probably in the next three to four weeks so that will"
    },
    {
      "Time_Start": 2693.44,
      "Time_End": 2696.0,
      "Text": " be on GitHub."
    },
    {
      "Time_Start": 2696.0,
      "Time_End": 2703.48,
      "Text": " And ultimately my hope is that this provides a lower touch solution to have a way to control"
    },
    {
      "Time_Start": 2703.48,
      "Time_End": 2709.44,
      "Text": " inbound 445 TCP traffic that will result in you more easily being able to conduct NTLM"
    },
    {
      "Time_Start": 2709.44,
      "Time_End": 2711.64,
      "Text": " relays over C2."
    },
    {
      "Time_Start": 2711.64,
      "Time_End": 2717.16,
      "Text": " I again am biased, I've talked a lot about NTLM relays but there's a slew of offensive"
    },
    {
      "Time_Start": 2717.16,
      "Time_End": 2723.0,
      "Text": " related techniques where having control over inbound 445 traffic would be relevant so NTLM"
    },
    {
      "Time_Start": 2723.0,
      "Time_End": 2727.36,
      "Text": " relays is what I am preferential to but hopefully this will help in more situations than just"
    },
    {
      "Time_Start": 2727.36,
      "Time_End": 2731.52,
      "Text": " relays."
    },
    {
      "Time_Start": 2731.52,
      "Time_End": 2733.84,
      "Text": " And that's it."
    }
  ]
}