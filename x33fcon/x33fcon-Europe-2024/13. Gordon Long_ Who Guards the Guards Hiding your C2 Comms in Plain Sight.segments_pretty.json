{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 10.72,
      "Text": "This text was transcribed using whisper model: large-v2\n\n Hi, everybody."
    },
    {
      "Time_Start": 10.72,
      "Time_End": 11.72,
      "Text": " My name is Gordon Long."
    },
    {
      "Time_Start": 11.72,
      "Time_End": 16.48,
      "Text": " I'm going to be talking to you today about who guards the guards, hiding your C2 comms"
    },
    {
      "Time_Start": 16.48,
      "Time_End": 17.68,
      "Text": " in plain sight."
    },
    {
      "Time_Start": 17.68,
      "Time_End": 22.16,
      "Text": " I even have a fancy little Latin quote here, which essentially just means who guards the"
    },
    {
      "Time_Start": 22.16,
      "Time_End": 23.16,
      "Text": " guards themselves."
    },
    {
      "Time_Start": 23.16,
      "Time_End": 26.560000000000002,
      "Text": " Before I begin, I just want to give a big shout out to ZeefCon."
    },
    {
      "Time_Start": 26.560000000000002,
      "Time_End": 30.480000000000004,
      "Text": " This is actually my first time here, and it's been a great experience so far."
    },
    {
      "Time_Start": 30.480000000000004,
      "Time_End": 33.56,
      "Text": " Thank you so much for inviting me to speak."
    },
    {
      "Time_Start": 33.56,
      "Time_End": 35.400000000000006,
      "Text": " It's been a really, really fun time."
    },
    {
      "Time_Start": 35.400000000000006,
      "Time_End": 37.64,
      "Text": " So let's get into it."
    },
    {
      "Time_Start": 37.64,
      "Time_End": 39.0,
      "Text": " So who am I?"
    },
    {
      "Time_Start": 39.0,
      "Time_End": 40.52,
      "Text": " Like I said, my name is Gordon."
    },
    {
      "Time_Start": 40.52,
      "Time_End": 41.760000000000005,
      "Text": " I'm from the U.S."
    },
    {
      "Time_Start": 41.760000000000005,
      "Time_End": 47.480000000000004,
      "Text": " I'm president and founder of LEGO X Cyber Technologies, which is my own little security"
    },
    {
      "Time_Start": 47.480000000000004,
      "Time_End": 48.480000000000004,
      "Text": " startup."
    },
    {
      "Time_Start": 48.480000000000004,
      "Time_End": 50.92,
      "Text": " I'm also a senior offensive security engineer at Zoom."
    },
    {
      "Time_Start": 50.92,
      "Time_End": 53.36,
      "Text": " What that essentially means is I'm a red teamer."
    },
    {
      "Time_Start": 53.36,
      "Time_End": 58.56,
      "Text": " I also am an adjunct professor at George Mason University, dabble in their masters"
    },
    {
      "Time_Start": 58.56,
      "Time_End": 61.0,
      "Text": " of computer forensics program."
    },
    {
      "Time_Start": 61.0,
      "Time_End": 64.6,
      "Text": " And just to get the legalese out of the way at the beginning of the talk, my views are"
    },
    {
      "Time_Start": 64.6,
      "Time_End": 72.32,
      "Text": " my own and do not represent any of the aforementioned companies or institutions."
    },
    {
      "Time_Start": 72.32,
      "Time_End": 74.92,
      "Text": " So I'm not going to go over this entire outline right now."
    },
    {
      "Time_Start": 74.92,
      "Time_End": 75.92,
      "Text": " You can reference it later."
    },
    {
      "Time_Start": 75.92,
      "Time_End": 80.56,
      "Text": " But the one big thing I did want to say here, because I realize the talk title can be deceptive."
    },
    {
      "Time_Start": 80.56,
      "Time_End": 81.56,
      "Text": " All right."
    },
    {
      "Time_Start": 81.56,
      "Time_End": 82.56,
      "Text": " No laser."
    },
    {
      "Time_Start": 83.4,
      "Time_End": 88.44,
      "Text": " We're going to be talking about C2 modular communications today, not like hiding your"
    },
    {
      "Time_Start": 88.44,
      "Time_End": 90.16,
      "Text": " C2 network comms."
    },
    {
      "Time_Start": 90.16,
      "Time_End": 92.4,
      "Text": " So I understand the title might be a little confusing there."
    },
    {
      "Time_Start": 92.4,
      "Time_End": 96.16,
      "Text": " So I just want to point that out at the beginning."
    },
    {
      "Time_Start": 96.16,
      "Time_End": 99.80000000000001,
      "Text": " So to begin with, we're dealing with Windows in this talk."
    },
    {
      "Time_Start": 99.80000000000001,
      "Time_End": 103.88,
      "Text": " We're going to be talking about what the state of EDR on Windows is today, what we have to"
    },
    {
      "Time_Start": 103.88,
      "Time_End": 107.16,
      "Text": " deal with as attackers."
    },
    {
      "Time_Start": 107.16,
      "Time_End": 109.84,
      "Text": " Most people here I'm assuming are familiar with the term EDR."
    },
    {
      "Time_Start": 109.84,
      "Time_End": 115.4,
      "Text": " I'm not going to go into the MDR, XDR, way too many acronyms for this industry."
    },
    {
      "Time_Start": 115.4,
      "Time_End": 119.52000000000001,
      "Text": " But if you're not familiar, just think of it as tools that live on endpoints that can"
    },
    {
      "Time_Start": 119.52000000000001,
      "Time_End": 120.82000000000001,
      "Text": " do a lot of different things."
    },
    {
      "Time_Start": 120.82000000000001,
      "Time_End": 123.04,
      "Text": " They can do detections."
    },
    {
      "Time_Start": 123.04,
      "Time_End": 124.72,
      "Text": " They can do actual active response."
    },
    {
      "Time_Start": 124.72,
      "Time_End": 128.86,
      "Text": " They can also just do logging, telemetry, et cetera."
    },
    {
      "Time_Start": 128.86,
      "Time_End": 133.68,
      "Text": " But on Windows specifically, EDR tends to use one of two approaches."
    },
    {
      "Time_Start": 133.68,
      "Time_End": 139.2,
      "Text": " So it either uses user land hooks or kernel-based hooks or sometimes both."
    },
    {
      "Time_Start": 139.56000000000003,
      "Time_End": 143.44000000000003,
      "Text": " Today, just based on my own experience, what I'm seeing in the industry, a lot of the more"
    },
    {
      "Time_Start": 143.44000000000003,
      "Time_End": 148.88000000000002,
      "Text": " advanced EDRs are starting to switch more into kernel-based detections."
    },
    {
      "Time_Start": 148.88000000000002,
      "Time_End": 154.44000000000003,
      "Text": " There's been a lot of activity around user land unhooking and other techniques in user"
    },
    {
      "Time_Start": 154.44000000000003,
      "Time_End": 158.84000000000003,
      "Text": " land that attackers can use to try and make telemetry less reliable for EDRs."
    },
    {
      "Time_Start": 158.84000000000003,
      "Time_End": 163.52,
      "Text": " So there's been a bit of a push to have a lot more of your telemetry coming from kernel,"
    },
    {
      "Time_Start": 163.52,
      "Time_End": 169.44,
      "Text": " which kind of ups the game for attackers in terms of if you want to disrupt that telemetry."
    },
    {
      "Time_Start": 169.44,
      "Time_End": 174.76000000000002,
      "Text": " So as attackers, we kind of need to be expecting to go up against kernel-level defenses these"
    },
    {
      "Time_Start": 174.76000000000002,
      "Time_End": 177.4,
      "Text": " days."
    },
    {
      "Time_Start": 177.4,
      "Time_End": 179.76000000000002,
      "Text": " So based on that, we have some choices."
    },
    {
      "Time_Start": 179.76000000000002,
      "Time_End": 182.16000000000003,
      "Text": " We know we have to deal with the kernel."
    },
    {
      "Time_Start": 182.16000000000003,
      "Time_End": 186.74,
      "Text": " So we can either choose to go into the kernel ourselves."
    },
    {
      "Time_Start": 186.74,
      "Time_End": 191.20000000000002,
      "Text": " That means trying to load vulnerable drivers, trying to mess with kernel memory, trying"
    },
    {
      "Time_Start": 191.20000000000002,
      "Time_End": 198.28000000000003,
      "Text": " to prevent telemetry from going to the agent, maybe doing unhooking inside of kernel memory"
    },
    {
      "Time_Start": 198.28000000000003,
      "Time_End": 199.60000000000002,
      "Text": " space."
    },
    {
      "Time_Start": 199.60000000000002,
      "Time_End": 201.8,
      "Text": " You can also try and go above or below."
    },
    {
      "Time_Start": 201.8,
      "Time_End": 206.96,
      "Text": " So get yourself loaded at the hardware level, get yourself loaded before the EDR even is"
    },
    {
      "Time_Start": 206.96,
      "Time_End": 212.28000000000003,
      "Text": " loaded, or try and do things on the network, try and prevent telemetry from going out across"
    },
    {
      "Time_Start": 212.28000000000003,
      "Time_End": 215.00000000000003,
      "Text": " the wire to inform people what's going on."
    },
    {
      "Time_Start": 215.00000000000003,
      "Time_End": 217.68,
      "Text": " We're not going to deal with any of those methods today."
    },
    {
      "Time_Start": 217.68,
      "Time_End": 220.28000000000003,
      "Text": " We're actually going to stick just to user land."
    },
    {
      "Time_Start": 220.36,
      "Time_End": 224.24,
      "Text": " So if you're in user land on Windows and you know you have to go up against the kernel,"
    },
    {
      "Time_Start": 224.24,
      "Time_End": 226.72,
      "Text": " what that essentially means is you're going to be seen."
    },
    {
      "Time_Start": 226.72,
      "Time_End": 228.12,
      "Text": " You're going to be looked at."
    },
    {
      "Time_Start": 228.12,
      "Time_End": 229.6,
      "Text": " What you're doing is going to be looked at."
    },
    {
      "Time_Start": 229.6,
      "Time_End": 232.0,
      "Text": " So you need to act accordingly."
    },
    {
      "Time_Start": 232.0,
      "Time_End": 234.08,
      "Text": " Everything you do will be watched."
    },
    {
      "Time_Start": 234.08,
      "Time_End": 236.6,
      "Text": " So how do you still try to blend in?"
    },
    {
      "Time_Start": 236.6,
      "Time_End": 241.84,
      "Text": " How do you still try to evade EDR?"
    },
    {
      "Time_Start": 241.84,
      "Time_End": 243.02,
      "Text": " So I love this picture."
    },
    {
      "Time_Start": 243.02,
      "Time_End": 246.52,
      "Text": " This is really my only meme slide in this talk, but I love this picture because it does"
    },
    {
      "Time_Start": 246.52,
      "Time_End": 248.56,
      "Text": " pretty much describe what we're trying to do."
    },
    {
      "Time_Start": 248.56,
      "Time_End": 253.94,
      "Text": " You want to blend in as much as possible with the stuffed animals being a cat."
    },
    {
      "Time_Start": 253.94,
      "Time_End": 257.34,
      "Text": " One of the ways that you can do that is by staying as still as possible, as you can see"
    },
    {
      "Time_Start": 257.34,
      "Time_End": 259.34,
      "Text": " in this photo."
    },
    {
      "Time_Start": 259.34,
      "Time_End": 263.16,
      "Text": " So the analogy there is we're staying as still as possible."
    },
    {
      "Time_Start": 263.16,
      "Time_End": 267.32,
      "Text": " What that really means is do the least amount of bad that you need to to accomplish your"
    },
    {
      "Time_Start": 267.32,
      "Time_End": 269.44,
      "Text": " goals or objectives, right?"
    },
    {
      "Time_Start": 269.44,
      "Time_End": 275.44,
      "Text": " A lot of times when people think of red teaming or pen testing stuff, they think like, oh,"
    },
    {
      "Time_Start": 275.44,
      "Time_End": 277.16,
      "Text": " I'm going up against Active Directory."
    },
    {
      "Time_Start": 277.16,
      "Time_End": 279.40000000000003,
      "Text": " I'm going to grab that domain controller."
    },
    {
      "Time_Start": 279.40000000000003,
      "Time_End": 283.6,
      "Text": " But do you actually need to do what it is you're looking to do right now?"
    },
    {
      "Time_Start": 283.6,
      "Time_End": 287.40000000000003,
      "Text": " What is the minimum you actually need to do to accomplish your objectives?"
    },
    {
      "Time_Start": 287.40000000000003,
      "Time_End": 291.16,
      "Text": " So always keep that in mind, especially when you're in user land."
    },
    {
      "Time_Start": 291.16,
      "Time_End": 293.32000000000005,
      "Text": " And I recommend utilizing a stage zero."
    },
    {
      "Time_Start": 293.32000000000005,
      "Time_End": 296.04,
      "Text": " What I mean by stage zero, just a simple loader."
    },
    {
      "Time_Start": 296.04,
      "Time_End": 299.16,
      "Text": " Most of the functionality in this loader, pretty much all of the functionality that's"
    },
    {
      "Time_Start": 299.16,
      "Time_End": 302.08000000000004,
      "Text": " going to be on disk is going to be benign."
    },
    {
      "Time_Start": 302.08000000000004,
      "Time_End": 303.72,
      "Text": " You're not going to do anything crazy here."
    },
    {
      "Time_Start": 303.72,
      "Time_End": 306.52000000000004,
      "Text": " You're going to have basic reconnaissance capabilities."
    },
    {
      "Time_Start": 306.52,
      "Time_End": 309.88,
      "Text": " You're going to be able to look at basic system information."
    },
    {
      "Time_Start": 309.88,
      "Time_End": 313.97999999999996,
      "Text": " You might want to confirm that you're on a target that's in scope, for example, before"
    },
    {
      "Time_Start": 313.97999999999996,
      "Time_End": 314.97999999999996,
      "Text": " you do anything else."
    },
    {
      "Time_Start": 314.97999999999996,
      "Time_End": 317.76,
      "Text": " But you're going to have some kind of loading capability as well."
    },
    {
      "Time_Start": 317.76,
      "Time_End": 321.71999999999997,
      "Text": " So anything that you need to do that's a little crazier, anything that's a little more advanced,"
    },
    {
      "Time_Start": 321.71999999999997,
      "Time_End": 325.85999999999996,
      "Text": " you're going to load that in as post exploitation modules."
    },
    {
      "Time_Start": 325.85999999999996,
      "Time_End": 329.21999999999997,
      "Text": " So keep yourself as benign as possible on disk."
    },
    {
      "Time_Start": 329.21999999999997,
      "Time_End": 331.59999999999997,
      "Text": " Have a loading capability."
    },
    {
      "Time_Start": 331.59999999999997,
      "Time_End": 333.03999999999996,
      "Text": " And there's multiple reasons to do it this way."
    },
    {
      "Time_Start": 333.03999999999996,
      "Time_End": 334.78,
      "Text": " This actually isn't even true just on Windows."
    },
    {
      "Time_Start": 334.78000000000003,
      "Time_End": 337.90000000000003,
      "Text": " This is good rule of thumb across the board."
    },
    {
      "Time_Start": 337.90000000000003,
      "Time_End": 341.62,
      "Text": " If you keep yourself tiny and small and don't really do that much, it's actually pretty"
    },
    {
      "Time_Start": 341.62,
      "Time_End": 342.90000000000003,
      "Text": " easy to write to you."
    },
    {
      "Time_Start": 342.90000000000003,
      "Time_End": 345.58000000000004,
      "Text": " So if you get burned, it's easy to write a new one."
    },
    {
      "Time_Start": 345.58000000000004,
      "Time_End": 349.70000000000005,
      "Text": " And if you get burned, there's not necessarily a whole lot that can go into reverse engineering"
    },
    {
      "Time_Start": 349.70000000000005,
      "Time_End": 351.78000000000003,
      "Text": " it."
    },
    {
      "Time_Start": 351.78000000000003,
      "Time_End": 354.62,
      "Text": " There's not that much that lives on disk."
    },
    {
      "Time_Start": 354.62,
      "Time_End": 357.14000000000004,
      "Text": " Okay."
    },
    {
      "Time_Start": 357.14000000000004,
      "Time_End": 360.3,
      "Text": " So we're going to briefly touch on named pipes in Windows."
    },
    {
      "Time_Start": 360.3,
      "Time_End": 362.78000000000003,
      "Text": " I'm sure many of you are familiar."
    },
    {
      "Time_Start": 362.78000000000003,
      "Time_End": 369.42,
      "Text": " Named pipes are used for communication between processes and objects over network and locally"
    },
    {
      "Time_Start": 369.42,
      "Time_End": 370.42,
      "Text": " on Windows."
    },
    {
      "Time_Start": 370.42,
      "Time_End": 375.58000000000004,
      "Text": " They have a server and a client component, which means essentially that multiple clients"
    },
    {
      "Time_Start": 375.58000000000004,
      "Time_End": 381.62,
      "Text": " can talk to a single server instance, which makes them useful for communications."
    },
    {
      "Time_Start": 381.62,
      "Time_End": 384.5,
      "Text": " And they utilize SMB remotely or RPC locally."
    },
    {
      "Time_Start": 384.5,
      "Time_End": 388.62,
      "Text": " The reason I'm mentioning named pipes at all is because a lot of C2s like to use them."
    },
    {
      "Time_Start": 388.94,
      "Time_End": 392.18,
      "Text": " There was actually a talk yesterday that was talking about ways you could try to detect"
    },
    {
      "Time_Start": 392.18,
      "Time_End": 395.38,
      "Text": " named pipe creation for this exact reason."
    },
    {
      "Time_Start": 395.38,
      "Time_End": 398.78000000000003,
      "Text": " I'm sure some of you have heard of Cobalt Strike."
    },
    {
      "Time_Start": 398.78000000000003,
      "Time_End": 400.86,
      "Text": " Cobalt Strike loves to use named pipes."
    },
    {
      "Time_Start": 400.86,
      "Time_End": 402.56,
      "Text": " It's all over its documentation."
    },
    {
      "Time_Start": 402.56,
      "Time_End": 407.5,
      "Text": " They have a lot of built-in ways that you can try and change around what the defaults"
    },
    {
      "Time_Start": 407.5,
      "Time_End": 412.94,
      "Text": " are that are set in regards to named pipe names and arguments, stuff like that."
    },
    {
      "Time_Start": 412.94,
      "Time_End": 418.54,
      "Text": " But it's used for post exploitation, for staging, for communications, for payload."
    },
    {
      "Time_Start": 418.54,
      "Time_End": 426.5,
      "Text": " So it's used all over the place, not just by Cobalt Strike, but by many C2 frameworks."
    },
    {
      "Time_Start": 426.5,
      "Time_End": 430.5,
      "Text": " So yesterday this was touched on as well, but there's been a lot of research from the"
    },
    {
      "Time_Start": 430.5,
      "Time_End": 434.46000000000004,
      "Text": " defensive side in trying to hunt based on named pipes because they're used all over"
    },
    {
      "Time_Start": 434.46000000000004,
      "Time_End": 436.12,
      "Text": " the place."
    },
    {
      "Time_Start": 436.12,
      "Time_End": 440.26,
      "Text": " There's actually a lot of legitimate usage as well, which is part of the reason why C2s"
    },
    {
      "Time_Start": 440.26,
      "Time_End": 441.78000000000003,
      "Text": " have defaulted to using them."
    },
    {
      "Time_Start": 441.78000000000003,
      "Time_End": 443.94,
      "Text": " I show you just a small snippet here."
    },
    {
      "Time_Start": 443.94,
      "Time_End": 444.94,
      "Text": " Hopefully this is visible."
    },
    {
      "Time_Start": 445.38,
      "Time_End": 449.86,
      "Text": " I've learned don't use dark backgrounds for slides."
    },
    {
      "Time_Start": 449.86,
      "Time_End": 454.7,
      "Text": " But there's 87 named pipes running on this little Windows VM that is running nothing"
    },
    {
      "Time_Start": 454.7,
      "Time_End": 455.7,
      "Text": " malicious."
    },
    {
      "Time_Start": 455.7,
      "Time_End": 460.34,
      "Text": " It's actually just running Firefox and Mozilla, and you can see there's already just tons"
    },
    {
      "Time_Start": 460.34,
      "Time_End": 463.1,
      "Text": " and tons of named pipes all over the place."
    },
    {
      "Time_Start": 463.1,
      "Time_End": 465.98,
      "Text": " So a bit of a pain if you are trying to hunt for them."
    },
    {
      "Time_Start": 465.98,
      "Time_End": 469.62,
      "Text": " There was, again, talk yesterday which talked about different ways to try and hunt on them,"
    },
    {
      "Time_Start": 469.62,
      "Time_End": 473.14,
      "Text": " but there's been a bunch of blog posts on ways trying to hunt just by name."
    },
    {
      "Time_Start": 473.34,
      "Time_End": 477.62,
      "Text": " If people are lazy, again, there's defaults used by a lot of these C2s."
    },
    {
      "Time_Start": 477.62,
      "Time_End": 480.41999999999996,
      "Text": " If you don't change some things around, it's pretty easy to catch you."
    },
    {
      "Time_Start": 480.41999999999996,
      "Time_End": 483.94,
      "Text": " If you do try and change things around, it becomes a little bit more of a pain."
    },
    {
      "Time_Start": 483.94,
      "Time_End": 489.5,
      "Text": " But I just wanted to say EDR is starting to focus much more on this topic."
    },
    {
      "Time_Start": 489.5,
      "Time_End": 492.26,
      "Text": " Defensive products are trying to focus much more on named pipes."
    },
    {
      "Time_Start": 492.26,
      "Time_End": 497.21999999999997,
      "Text": " So that was leading me down the ideas of, all right, do I need to use named pipes at"
    },
    {
      "Time_Start": 497.21999999999997,
      "Time_End": 498.21999999999997,
      "Text": " all?"
    },
    {
      "Time_Start": 498.21999999999997,
      "Time_End": 501.78,
      "Text": " Can I try and achieve some of the same objectives without utilizing these structures?"
    },
    {
      "Time_Start": 502.42,
      "Time_End": 507.42,
      "Text": " They're starting to be scrutinized significantly more."
    },
    {
      "Time_Start": 507.42,
      "Time_End": 511.18,
      "Text": " So my idea was, okay, I don't want to use named pipes."
    },
    {
      "Time_Start": 511.18,
      "Time_End": 512.62,
      "Text": " What else can I use instead?"
    },
    {
      "Time_Start": 512.62,
      "Time_End": 518.94,
      "Text": " Why don't I just look at trying to use my own process memory or just memory in general?"
    },
    {
      "Time_Start": 518.94,
      "Time_End": 524.74,
      "Text": " So we're going to talk just briefly about how EDR might try to hunt you in memory and"
    },
    {
      "Time_Start": 524.74,
      "Time_End": 528.08,
      "Text": " some of the things that you might want to try to avoid as an attacker."
    },
    {
      "Time_Start": 528.08,
      "Time_End": 529.7,
      "Text": " So just basic stuff."
    },
    {
      "Time_Start": 529.7,
      "Time_End": 535.26,
      "Text": " The EDR is going to look for permission changes and just permissions in general."
    },
    {
      "Time_Start": 535.26,
      "Time_End": 539.46,
      "Text": " So if you have a region of memory, this is very well known, that's read write executable."
    },
    {
      "Time_Start": 539.46,
      "Time_End": 540.46,
      "Text": " Why is that?"
    },
    {
      "Time_Start": 540.46,
      "Time_End": 541.46,
      "Text": " That's kind of weird."
    },
    {
      "Time_Start": 541.46,
      "Time_End": 543.46,
      "Text": " Unless you're in a .NET process, but that's a story for another day."
    },
    {
      "Time_Start": 543.46,
      "Time_End": 547.1,
      "Text": " I don't know why they use so much read write execute memory, but they do."
    },
    {
      "Time_Start": 547.1,
      "Time_End": 550.4200000000001,
      "Text": " But you want to avoid doing that if you don't need to."
    },
    {
      "Time_Start": 550.4200000000001,
      "Time_End": 555.86,
      "Text": " You also need to be careful if you're going to be invoking the Windows 3.2 APIs or system"
    },
    {
      "Time_Start": 555.86,
      "Time_End": 558.46,
      "Text": " level calls that deal with changing memory permissions."
    },
    {
      "Time_Start": 558.46,
      "Time_End": 563.02,
      "Text": " If you do these things in too quick of a succession, if you do certain calls back to"
    },
    {
      "Time_Start": 563.02,
      "Time_End": 565.6600000000001,
      "Text": " back, that's also very suspicious."
    },
    {
      "Time_Start": 565.6600000000001,
      "Time_End": 571.38,
      "Text": " So the classic example is using virtual alloc, you allocate a read write page in memory,"
    },
    {
      "Time_Start": 571.38,
      "Time_End": 574.9000000000001,
      "Text": " you write to it, and then you change that permission to read execute."
    },
    {
      "Time_Start": 574.9000000000001,
      "Time_End": 579.7,
      "Text": " That's a classic sign of injection and malware trying to execute its code."
    },
    {
      "Time_Start": 579.7,
      "Time_End": 581.94,
      "Text": " So there's always a cat and mouse game."
    },
    {
      "Time_Start": 581.94,
      "Time_End": 586.74,
      "Text": " You insert delays, you do other API calls in between, but those are things you have"
    },
    {
      "Time_Start": 586.74,
      "Time_End": 588.7,
      "Text": " to watch out for as well."
    },
    {
      "Time_Start": 588.7,
      "Time_End": 593.94,
      "Text": " EDR is also going to look at whether memory is backed on disk, so whether it's tied back"
    },
    {
      "Time_Start": 593.94,
      "Time_End": 597.82,
      "Text": " to something that's on disk, a DLL, et cetera."
    },
    {
      "Time_Start": 597.82,
      "Time_End": 599.0600000000001,
      "Text": " This is very well known."
    },
    {
      "Time_Start": 599.0600000000001,
      "Time_End": 602.9,
      "Text": " There's lots of techniques that talk about trying to get around this problem."
    },
    {
      "Time_Start": 602.9,
      "Time_End": 607.9,
      "Text": " Module stomping, there's a ton of them, so won't go into too many today, but just something"
    },
    {
      "Time_Start": 607.9,
      "Time_End": 610.38,
      "Text": " else you have to be aware of."
    },
    {
      "Time_Start": 610.38,
      "Time_End": 614.1800000000001,
      "Text": " And again, EDR is trying to look at code execution."
    },
    {
      "Time_Start": 614.1800000000001,
      "Time_End": 615.38,
      "Text": " Where are your threads coming from?"
    },
    {
      "Time_Start": 615.38,
      "Time_End": 616.98,
      "Text": " Are they tied to things on disk?"
    },
    {
      "Time_Start": 616.98,
      "Time_End": 618.82,
      "Text": " What is it you're trying to execute?"
    },
    {
      "Time_Start": 618.82,
      "Time_End": 620.06,
      "Text": " That kind of thing."
    },
    {
      "Time_Start": 620.06,
      "Time_End": 625.42,
      "Text": " And then as other talks have pointed out, they're looking for entropy and actually even"
    },
    {
      "Time_Start": 625.42,
      "Time_End": 626.78,
      "Text": " static bytes."
    },
    {
      "Time_Start": 626.78,
      "Time_End": 630.46,
      "Text": " So you'll have scans in memory that look for specific static bytes."
    },
    {
      "Time_Start": 630.46,
      "Time_End": 632.42,
      "Text": " These are often tied to things like Cobalt Strike."
    },
    {
      "Time_Start": 632.42,
      "Time_End": 636.54,
      "Text": " If you don't do any changes, you're going to get caught very quickly because a lot of"
    },
    {
      "Time_Start": 636.54,
      "Time_End": 640.38,
      "Text": " these bytes are signatured, and if you try and use too much encryption, et cetera, that"
    },
    {
      "Time_Start": 640.38,
      "Time_End": 645.58,
      "Text": " entropy can also get you caught because it's weird to have too, too much randomness."
    },
    {
      "Time_Start": 645.58,
      "Time_End": 649.14,
      "Text": " This is why attackers like to use things like encrypted sleeps."
    },
    {
      "Time_Start": 649.14,
      "Time_End": 652.5,
      "Text": " I highly recommend, I hope you got to check out the talk yesterday, but if not, check"
    },
    {
      "Time_Start": 652.5,
      "Time_End": 657.34,
      "Text": " out the recordings because that talk yesterday, it also talked about dealing with named pipes,"
    },
    {
      "Time_Start": 657.34,
      "Time_End": 664.28,
      "Text": " also mentioned ways in which you could try to catch encrypted sleeps based on timers."
    },
    {
      "Time_Start": 664.28,
      "Time_End": 667.26,
      "Text": " So basic Windows memory permissions."
    },
    {
      "Time_Start": 667.26,
      "Time_End": 673.22,
      "Text": " I'm sure many of you are familiar with these pages if you've done any Windows dev, but"
    },
    {
      "Time_Start": 673.22,
      "Time_End": 678.46,
      "Text": " we've got the basic page execute, page execute read write, stuff that I mentioned before,"
    },
    {
      "Time_Start": 678.46,
      "Time_End": 681.02,
      "Text": " page read only in the left box here."
    },
    {
      "Time_Start": 681.02,
      "Time_End": 685.14,
      "Text": " We're going to be focusing more on the right box today, and that's specifically modifiers"
    },
    {
      "Time_Start": 685.14,
      "Time_End": 687.66,
      "Text": " essentially that you can add to these regions."
    },
    {
      "Time_Start": 687.66,
      "Time_End": 691.9399999999999,
      "Text": " In particular, we're going to be talking about the page guard permission."
    },
    {
      "Time_Start": 691.9399999999999,
      "Time_End": 694.34,
      "Text": " Page guards aren't new."
    },
    {
      "Time_Start": 694.34,
      "Time_End": 699.7800000000001,
      "Text": " They were originally designed to help prevent stack corruption, so there would be this region"
    },
    {
      "Time_Start": 699.7800000000001,
      "Time_End": 704.34,
      "Text": " of memory that was allocated at the end of the stack that if you overwrote your stack"
    },
    {
      "Time_Start": 704.34,
      "Time_End": 708.86,
      "Text": " too much, you would hit this memory region and you would hit the guard page and the guard"
    },
    {
      "Time_Start": 708.86,
      "Time_End": 710.7,
      "Text": " page would trigger an exception."
    },
    {
      "Time_Start": 710.7,
      "Time_End": 715.94,
      "Text": " Now normally this exception, as handled by the system, if it notices that it's the thread"
    },
    {
      "Time_Start": 715.94,
      "Time_End": 721.94,
      "Text": " that is tied to that stack, it will automatically add more memory for you, set a new page guard"
    },
    {
      "Time_Start": 721.94,
      "Time_End": 726.98,
      "Text": " permission at the top of the stack again, and just do dynamic memory allocation."
    },
    {
      "Time_Start": 726.98,
      "Time_End": 732.08,
      "Text": " So this is preventing stack overwriting and stack corruption."
    },
    {
      "Time_Start": 732.08,
      "Time_End": 735.34,
      "Text": " So notice exceptions will be triggered."
    },
    {
      "Time_Start": 735.34,
      "Time_End": 736.34,
      "Text": " This is interesting."
    },
    {
      "Time_Start": 736.34,
      "Time_End": 740.46,
      "Text": " I'm not the first person that's thought of utilizing guard pages for badness based on"
    },
    {
      "Time_Start": 740.46,
      "Time_End": 743.98,
      "Text": " these exceptions, and we're going to go into some of the history of them in a second, but"
    },
    {
      "Time_Start": 743.98,
      "Time_End": 749.5400000000001,
      "Text": " I did want to point out, hopefully it's visible here, notice that all of these page guard"
    },
    {
      "Time_Start": 749.54,
      "Time_End": 756.18,
      "Text": " regions of memory are tied to specific stack threads, or thread stacks, I should say."
    },
    {
      "Time_Start": 756.18,
      "Time_End": 757.18,
      "Text": " Specific threads."
    },
    {
      "Time_Start": 757.18,
      "Time_End": 758.74,
      "Text": " And you can see those thread IDs there."
    },
    {
      "Time_Start": 758.74,
      "Time_End": 761.06,
      "Text": " This is just a basic system informer view."
    },
    {
      "Time_Start": 761.06,
      "Time_End": 766.6999999999999,
      "Text": " If you open up any process on a Windows box, pretty much all of them will contain these"
    },
    {
      "Time_Start": 766.6999999999999,
      "Time_End": 773.26,
      "Text": " page guard regions because they are tied to legitimate threads."
    },
    {
      "Time_Start": 773.26,
      "Time_End": 777.3,
      "Text": " So like I said, I'm not the first person that's thought about, oh, these page guard regions,"
    },
    {
      "Time_Start": 777.3,
      "Time_End": 778.42,
      "Text": " they're interesting."
    },
    {
      "Time_Start": 778.8600000000001,
      "Time_End": 784.22,
      "Text": " One of the previous uses for malware for guard pages is you can actually use it to try and"
    },
    {
      "Time_Start": 784.22,
      "Time_End": 786.82,
      "Text": " detect if you're running in a debugger."
    },
    {
      "Time_Start": 786.82,
      "Time_End": 791.82,
      "Text": " So basically you could set a page guard region of memory, purposely try to access it to trigger"
    },
    {
      "Time_Start": 791.82,
      "Time_End": 797.5400000000001,
      "Text": " the exception, and if you don't see this status guard page violation, you know you're actually"
    },
    {
      "Time_Start": 797.5400000000001,
      "Time_End": 798.9000000000001,
      "Text": " running in a debugger."
    },
    {
      "Time_Start": 798.9000000000001,
      "Time_End": 802.22,
      "Text": " If you do see the exception, you're not running in a debugger."
    },
    {
      "Time_Start": 802.22,
      "Time_End": 806.6200000000001,
      "Text": " Debuggers also utilize guard pages for doing things like break points, and this is actually"
    },
    {
      "Time_Start": 806.62,
      "Time_End": 807.62,
      "Text": " covered."
    },
    {
      "Time_Start": 807.62,
      "Time_End": 808.62,
      "Text": " I want to give a shout out to Sector 7."
    },
    {
      "Time_Start": 808.62,
      "Time_End": 810.74,
      "Text": " I know they're sponsoring this conference."
    },
    {
      "Time_Start": 810.74,
      "Time_End": 813.98,
      "Text": " They talk about this in their malware development advanced course."
    },
    {
      "Time_Start": 813.98,
      "Time_End": 817.14,
      "Text": " They're also going to talk about the next thing that we're about to touch on."
    },
    {
      "Time_Start": 817.14,
      "Time_End": 822.62,
      "Text": " But definitely check that out if you want to learn more about some of these techniques."
    },
    {
      "Time_Start": 822.62,
      "Time_End": 828.14,
      "Text": " So the other big thing, and this was popular for a while, pretty clever method, came out"
    },
    {
      "Time_Start": 828.14,
      "Time_End": 833.94,
      "Text": " over a decade ago now, is implementing these guard hooks and these vectored exception handling"
    },
    {
      "Time_Start": 833.94,
      "Time_End": 835.5600000000001,
      "Text": " hooks, essentially."
    },
    {
      "Time_Start": 835.5600000000001,
      "Time_End": 841.36,
      "Text": " So vectored exception handling are basically customized exception functions that you can"
    },
    {
      "Time_Start": 841.36,
      "Time_End": 846.96,
      "Text": " implement inside of your code so that if an exception happens, it does what you want it"
    },
    {
      "Time_Start": 846.96,
      "Time_End": 850.72,
      "Text": " to do instead of the normal system handling of exceptions."
    },
    {
      "Time_Start": 850.72,
      "Time_End": 853.2,
      "Text": " So you could use this along with guard pages."
    },
    {
      "Time_Start": 853.2,
      "Time_End": 854.9200000000001,
      "Text": " You know you're going to trigger exceptions."
    },
    {
      "Time_Start": 854.9200000000001,
      "Time_End": 858.9200000000001,
      "Text": " You could use this essentially to trigger your own custom functionality, right?"
    },
    {
      "Time_Start": 858.9200000000001,
      "Time_End": 864.44,
      "Text": " So you could do things like building encrypted sleeps by if you have a region in memory that"
    },
    {
      "Time_Start": 864.44,
      "Time_End": 868.4000000000001,
      "Text": " is triggered by an EDR scanning memory, for example, it will trigger your guard page,"
    },
    {
      "Time_Start": 868.4000000000001,
      "Time_End": 873.0400000000001,
      "Text": " which will trigger an exception, which then forks over to your exception handler, which"
    },
    {
      "Time_Start": 873.0400000000001,
      "Time_End": 876.72,
      "Text": " can suspend your thread, change the permissions in memory."
    },
    {
      "Time_Start": 876.72,
      "Time_End": 879.44,
      "Text": " We'll go over a basic example in a minute."
    },
    {
      "Time_Start": 879.44,
      "Time_End": 884.0200000000001,
      "Text": " But it's a nice way that you can try and react to things happening on the system in a way"
    },
    {
      "Time_Start": 884.0200000000001,
      "Time_End": 886.62,
      "Text": " that you can control."
    },
    {
      "Time_Start": 886.62,
      "Time_End": 889.48,
      "Text": " You can also use this technique defensively."
    },
    {
      "Time_Start": 889.48,
      "Time_End": 894.52,
      "Text": " There was an interesting blog that I read of EDRs trying to utilize a similar-ish kind"
    },
    {
      "Time_Start": 894.52,
      "Time_End": 899.9200000000001,
      "Text": " of technique where they would add in fake DLLs that were loaded into process memory."
    },
    {
      "Time_Start": 899.9200000000001,
      "Time_End": 905.48,
      "Text": " And so if attackers were trying to crawl and get to, say, like NTDLL, the module NTDLL,"
    },
    {
      "Time_Start": 905.48,
      "Time_End": 909.62,
      "Text": " they might hit a fake NTDLL, which is going to have guard pages in it, and while they're"
    },
    {
      "Time_Start": 909.62,
      "Time_End": 914.86,
      "Text": " trying to crawl that DLL looking for what have you, they're going to trigger the exception"
    },
    {
      "Time_Start": 915.02,
      "Time_End": 920.9,
      "Text": " and actually cause the EDR's vectored exception handler to activate, do certain things, look"
    },
    {
      "Time_Start": 920.9,
      "Time_End": 924.94,
      "Text": " more at what's happening, so you could use it actually both ways."
    },
    {
      "Time_Start": 924.94,
      "Time_End": 926.34,
      "Text": " There's a bunch of examples of this."
    },
    {
      "Time_Start": 926.34,
      "Time_End": 928.62,
      "Text": " Like I said, it's been around for over a decade."
    },
    {
      "Time_Start": 928.62,
      "Time_End": 932.82,
      "Text": " It got really popular because you didn't have to modify bytes in your process memory to"
    },
    {
      "Time_Start": 932.82,
      "Time_End": 933.82,
      "Text": " install hooks."
    },
    {
      "Time_Start": 933.82,
      "Time_End": 935.54,
      "Text": " This is why people liked it."
    },
    {
      "Time_Start": 935.54,
      "Time_End": 939.46,
      "Text": " Also covered in that Sector 7 course, so again, check it out."
    },
    {
      "Time_Start": 939.46,
      "Time_End": 943.54,
      "Text": " But we're going to go over this medium example here just to show you what that kind of looks"
    },
    {
      "Time_Start": 943.54,
      "Time_End": 945.3399999999999,
      "Text": " like."
    },
    {
      "Time_Start": 945.3399999999999,
      "Time_End": 948.2199999999999,
      "Text": " So this is some basic code that would install a hook."
    },
    {
      "Time_Start": 948.2199999999999,
      "Time_End": 954.74,
      "Text": " You can see the handler function at the top that's going to be looking for that status"
    },
    {
      "Time_Start": 954.74,
      "Time_End": 956.52,
      "Text": " guard page violation."
    },
    {
      "Time_Start": 956.52,
      "Time_End": 960.5799999999999,
      "Text": " If it notices that guard page violation, it's going to redirect execution to a customized"
    },
    {
      "Time_Start": 960.5799999999999,
      "Time_End": 965.78,
      "Text": " function called my create process internal, and what they did is they actually set the"
    },
    {
      "Time_Start": 965.78,
      "Time_End": 972.6999999999999,
      "Text": " first page on the normal Windows 32 API create process internal to a guard page, and so as"
    },
    {
      "Time_Start": 972.86,
      "Time_End": 978.34,
      "Text": " soon as EDR tries to call that function for memory scanning, it would trigger their exception."
    },
    {
      "Time_Start": 978.34,
      "Time_End": 982.94,
      "Text": " They'd redirect execution to that my create process internal, which would do what I was"
    },
    {
      "Time_Start": 982.94,
      "Time_End": 986.94,
      "Text": " talking about before of suspending the main malicious thread, setting permissions to page"
    },
    {
      "Time_Start": 986.94,
      "Time_End": 991.3000000000001,
      "Text": " no access so EDR couldn't scan it properly, waiting a certain amount of time before setting"
    },
    {
      "Time_Start": 991.3000000000001,
      "Time_End": 992.3000000000001,
      "Text": " it all back."
    },
    {
      "Time_Start": 992.3000000000001,
      "Time_End": 997.4200000000001,
      "Text": " So just a very basic example of the APIs you can use is that add vector exception handler"
    },
    {
      "Time_Start": 997.4200000000001,
      "Time_End": 1003.6200000000001,
      "Text": " is the API to add in your own customized exception function, and that's located at"
    },
    {
      "Time_Start": 1003.6200000000001,
      "Time_End": 1007.1,
      "Text": " this medium article here."
    },
    {
      "Time_Start": 1007.1,
      "Time_End": 1010.6600000000001,
      "Text": " So I noticed the virtual protect call, that's how you can change memory permissions to add"
    },
    {
      "Time_Start": 1010.6600000000001,
      "Time_End": 1011.6600000000001,
      "Text": " in your page guard."
    },
    {
      "Time_Start": 1011.6600000000001,
      "Time_End": 1015.98,
      "Text": " It's just that little modifier at the end."
    },
    {
      "Time_Start": 1015.98,
      "Time_End": 1020.0600000000001,
      "Text": " So obviously this was pretty popular for a while."
    },
    {
      "Time_Start": 1020.0600000000001,
      "Time_End": 1025.8600000000001,
      "Text": " Of course, when things get popular, the defensive industry tends to notice and start to look"
    },
    {
      "Time_Start": 1025.8600000000001,
      "Time_End": 1026.8600000000001,
      "Text": " for it."
    },
    {
      "Time_Start": 1026.8600000000001,
      "Time_End": 1032.7800000000002,
      "Text": " So defense started taking some stabs a while back, several years ago, and you actually,"
    },
    {
      "Time_Start": 1032.7800000000002,
      "Time_End": 1038.2600000000002,
      "Text": " it turns out, can tell whether processes are using these vectored exception handlers by"
    },
    {
      "Time_Start": 1038.2600000000002,
      "Time_End": 1042.8000000000002,
      "Text": " crawling the PEB and looking for a specific bit, and you can actually see the structure"
    },
    {
      "Time_Start": 1042.8000000000002,
      "Time_End": 1045.5000000000002,
      "Text": " here in memory that you would look at."
    },
    {
      "Time_Start": 1045.5000000000002,
      "Time_End": 1049.18,
      "Text": " Essentially you're just looking for process using VEH, that's that vectored exception"
    },
    {
      "Time_Start": 1049.18,
      "Time_End": 1050.18,
      "Text": " handler."
    },
    {
      "Time_Start": 1050.18,
      "Time_End": 1052.66,
      "Text": " You would have the same for that process using VCH."
    },
    {
      "Time_Start": 1052.66,
      "Time_End": 1057.38,
      "Text": " VCH stands for vectored continue handlers."
    },
    {
      "Time_Start": 1057.38,
      "Time_End": 1061.5800000000002,
      "Text": " I do want to point out, it looks like there might be some room to play with vectored continue"
    },
    {
      "Time_Start": 1061.5800000000002,
      "Time_End": 1062.5800000000002,
      "Text": " handlers."
    },
    {
      "Time_Start": 1062.5800000000002,
      "Time_End": 1065.8200000000002,
      "Text": " There's not a lot of research done on them, using them for offensive purposes, but they"
    },
    {
      "Time_Start": 1065.8200000000002,
      "Time_End": 1069.46,
      "Text": " also can act based on how exceptions are handled."
    },
    {
      "Time_Start": 1069.46,
      "Time_End": 1073.78,
      "Text": " There's a certain load order for when they get called, so might be interesting to play"
    },
    {
      "Time_Start": 1073.78,
      "Time_End": 1078.14,
      "Text": " with those as well, but you can actually detect both of them being used in processes in the"
    },
    {
      "Time_Start": 1078.14,
      "Time_End": 1079.74,
      "Text": " same way."
    },
    {
      "Time_Start": 1079.74,
      "Time_End": 1086.18,
      "Text": " The VEH and VCH structure is a doubly linked list, so you can crawl those lists to see"
    },
    {
      "Time_Start": 1086.18,
      "Time_End": 1090.54,
      "Text": " what modules those customized exception functions are pointing at, see if something weird is"
    },
    {
      "Time_Start": 1090.54,
      "Time_End": 1091.54,
      "Text": " going on."
    },
    {
      "Time_Start": 1091.54,
      "Time_End": 1095.78,
      "Text": " So that's how EDR often tries to hunt for these today."
    },
    {
      "Time_Start": 1095.78,
      "Time_End": 1099.46,
      "Text": " You can check out this article at the bottom if you want to read more about that."
    },
    {
      "Time_Start": 1099.46,
      "Time_End": 1103.98,
      "Text": " So that's just kind of covering the history of malware using guard pages, abusing guard"
    },
    {
      "Time_Start": 1103.98,
      "Time_End": 1105.94,
      "Text": " pages, abusing these exceptions."
    },
    {
      "Time_Start": 1106.94,
      "Time_End": 1108.38,
      "Text": " However, I had a different idea."
    },
    {
      "Time_Start": 1108.38,
      "Time_End": 1112.42,
      "Text": " I was like, OK, these are all very interesting methods, I like these customized exception"
    },
    {
      "Time_Start": 1112.42,
      "Time_End": 1116.22,
      "Text": " handlers, et cetera, but they're pretty loud these days."
    },
    {
      "Time_Start": 1116.22,
      "Time_End": 1121.7,
      "Text": " What if we try to utilize guard pages instead of for code execution, what if we just use"
    },
    {
      "Time_Start": 1121.7,
      "Time_End": 1123.94,
      "Text": " these for data storage?"
    },
    {
      "Time_Start": 1123.94,
      "Time_End": 1127.14,
      "Text": " So remember I was talking about trying to avoid using named pipes."
    },
    {
      "Time_Start": 1127.14,
      "Time_End": 1133.54,
      "Text": " Well, what if we just design our C2, our stage 0, to load in a module, and when that module"
    },
    {
      "Time_Start": 1133.54,
      "Time_End": 1138.3,
      "Text": " fetches data, we'll have the module actually allocate to a region of memory and then set"
    },
    {
      "Time_Start": 1138.3,
      "Time_End": 1140.94,
      "Text": " permissions for guard pages."
    },
    {
      "Time_Start": 1140.94,
      "Time_End": 1142.18,
      "Text": " There's some advantages to this."
    },
    {
      "Time_Start": 1142.18,
      "Time_End": 1145.6599999999999,
      "Text": " We don't have to deal at all with executable bits of memory, which makes memory a lot less"
    },
    {
      "Time_Start": 1145.6599999999999,
      "Time_End": 1151.1,
      "Text": " suspicious to EDRs, and we get to avoid named pipes, as I said."
    },
    {
      "Time_Start": 1151.1,
      "Time_End": 1155.8999999999999,
      "Text": " If EDR tries to scan too much with guard pages, it's a little bit of extra overhead, but also"
    },
    {
      "Time_Start": 1155.8999999999999,
      "Time_End": 1161.44,
      "Text": " EDR needs to be very, very careful, because as I mentioned before, page guards were introduced"
    },
    {
      "Time_Start": 1161.44,
      "Time_End": 1165.44,
      "Text": " legitimately to try and prevent stack corruption, right?"
    },
    {
      "Time_Start": 1165.44,
      "Time_End": 1170.8,
      "Text": " So if you scan a region of memory that is page guard protected and you don't take subsequent"
    },
    {
      "Time_Start": 1170.8,
      "Time_End": 1175.0,
      "Text": " action, you'll actually remove the page guard permission by default, that's how it gets"
    },
    {
      "Time_Start": 1175.0,
      "Time_End": 1178.4,
      "Text": " handled, and you risk corrupting the stack and crashing processes."
    },
    {
      "Time_Start": 1178.4,
      "Time_End": 1184.48,
      "Text": " So you'd have to be careful when trying to scan memory and dealing with page guard permission."
    },
    {
      "Time_Start": 1184.48,
      "Time_End": 1188.28,
      "Text": " And then you can actually, if you're being scanned, we'll talk about ways in which you"
    },
    {
      "Time_Start": 1188.28,
      "Time_End": 1192.78,
      "Text": " could actually use that to your advantage to detect that EDR is looking at you based"
    },
    {
      "Time_Start": 1192.78,
      "Time_End": 1197.84,
      "Text": " on these page guard permissions and take action accordingly without utilizing those vector"
    },
    {
      "Time_Start": 1197.84,
      "Time_End": 1200.68,
      "Text": " exception handlers we were just talking about."
    },
    {
      "Time_Start": 1200.68,
      "Time_End": 1204.8,
      "Text": " So what we're going to do, we're going to design our post-exploitation modules to grab"
    },
    {
      "Time_Start": 1204.8,
      "Time_End": 1209.24,
      "Text": " some data, whatever it is that you want to do, this is a pretty general approach, then"
    },
    {
      "Time_Start": 1209.24,
      "Time_End": 1212.72,
      "Text": " you're going to allocate your region of memory, you're going to set it to read write, you're"
    },
    {
      "Time_Start": 1212.72,
      "Time_End": 1217.24,
      "Text": " going to stuff the data in there, then you're going to add the guard page bit on top of"
    },
    {
      "Time_Start": 1217.24,
      "Time_End": 1221.52,
      "Text": " your regular data, you're also going to add in a particular header and footer, and then"
    },
    {
      "Time_Start": 1221.52,
      "Time_End": 1226.64,
      "Text": " your main stage zero can crawl your own process memory space and look for these page guard"
    },
    {
      "Time_Start": 1226.64,
      "Time_End": 1230.8,
      "Text": " permissions, it knows to look at the page guard protected pages, it will change those"
    },
    {
      "Time_Start": 1230.8,
      "Time_End": 1234.88,
      "Text": " permissions to read write, it will check for the header, if it doesn't find it, just change"
    },
    {
      "Time_Start": 1234.88,
      "Time_End": 1239.72,
      "Text": " it back, if it does find it, it knows it's found your data."
    },
    {
      "Time_Start": 1239.72,
      "Time_End": 1244.08,
      "Text": " So this is just the basic example of how you could set up a DLL with an exported function"
    },
    {
      "Time_Start": 1244.08,
      "Time_End": 1248.52,
      "Text": " to do this, you would insert whatever functionality you want here, in this case I'm just doing"
    },
    {
      "Time_Start": 1248.52,
      "Time_End": 1252.84,
      "Text": " a get process list, you add your header bytes to the front of that data set, add your footer"
    },
    {
      "Time_Start": 1252.84,
      "Time_End": 1258.32,
      "Text": " bytes to the end, you allocate just a basic region in memory, don't worry too much about"
    },
    {
      "Time_Start": 1258.32,
      "Time_End": 1262.8799999999999,
      "Text": " the sizing stuff, the times too, it's just because I'm using W chars instead of regular"
    },
    {
      "Time_Start": 1262.8799999999999,
      "Time_End": 1270.08,
      "Text": " chars, but you'll write your data in, and then you'll set that protection to page guard,"
    },
    {
      "Time_Start": 1270.08,
      "Time_End": 1274.12,
      "Text": " and then your main stage zero will have, you can do this in different ways, but this"
    },
    {
      "Time_Start": 1274.12,
      "Time_End": 1279.9199999999998,
      "Text": " is the dumb example, you'll have your header hard coded in that stage zero, it will crawl"
    },
    {
      "Time_Start": 1279.9199999999998,
      "Time_End": 1286.32,
      "Text": " your memory process space and look for the page guard permissions, and then if it actually"
    },
    {
      "Time_Start": 1286.32,
      "Time_End": 1291.3999999999999,
      "Text": " finds the header in the region of memory, it knows it's grabbed the correct data."
    },
    {
      "Time_Start": 1291.3999999999999,
      "Time_End": 1296.84,
      "Text": " I did want to point out here I have virtual query X as the Win32 API that I'm using, I"
    },
    {
      "Time_Start": 1296.84,
      "Time_End": 1301.8,
      "Text": " left that in because you could do this with remote processes as well, it doesn't need"
    },
    {
      "Time_Start": 1301.8,
      "Time_End": 1306.1599999999999,
      "Text": " to be local process, but I would personally recommend you stick to local process if you"
    },
    {
      "Time_Start": 1306.1599999999999,
      "Time_End": 1311.24,
      "Text": " can, it just tends to be a little bit less loud, a little stealthier for EDRs, they tend"
    },
    {
      "Time_Start": 1311.24,
      "Time_End": 1315.1999999999998,
      "Text": " to care less what you're doing in your own process memory space as opposed to if you're"
    },
    {
      "Time_Start": 1315.1999999999998,
      "Time_End": 1321.12,
      "Text": " interacting with other processes in memory space, so I left virtual query X in to just"
    },
    {
      "Time_Start": 1321.12,
      "Time_End": 1324.6399999999999,
      "Text": " say you could do this with remote processes, but I wouldn't necessarily recommend it, so"
    },
    {
      "Time_Start": 1324.76,
      "Time_End": 1329.8000000000002,
      "Text": " use virtual query instead if you're just going to do your local process memory space."
    },
    {
      "Time_Start": 1329.8000000000002,
      "Time_End": 1334.3200000000002,
      "Text": " We're going to have this buffer here that we're reading into, this info buffer, and"
    },
    {
      "Time_Start": 1334.3200000000002,
      "Time_End": 1338.68,
      "Text": " we're going to talk about some of the limitations of this in a second."
    },
    {
      "Time_Start": 1338.68,
      "Time_End": 1342.76,
      "Text": " But once you read in, like I said, compare against the header, if you find the header,"
    },
    {
      "Time_Start": 1342.76,
      "Time_End": 1345.4,
      "Text": " you know you got your data, you can print it out, you can send it somewhere, do whatever"
    },
    {
      "Time_Start": 1345.4,
      "Time_End": 1350.0,
      "Text": " it is you want to do, and then you're actually going to reset the region to zero, you're"
    },
    {
      "Time_Start": 1350.0,
      "Time_End": 1352.8000000000002,
      "Text": " going to just set zeros there, just clear it all out, and then you can just free that"
    },
    {
      "Time_Start": 1352.8,
      "Time_End": 1354.96,
      "Text": " region of memory and you're good to go."
    },
    {
      "Time_Start": 1354.96,
      "Time_End": 1358.68,
      "Text": " If you don't find the header, just, again, set the permissions back to what they were"
    },
    {
      "Time_Start": 1358.68,
      "Time_End": 1364.08,
      "Text": " so you don't cause any stack corruption, you don't want to crash the process."
    },
    {
      "Time_Start": 1364.08,
      "Time_End": 1370.48,
      "Text": " So let's do the first demo."
    },
    {
      "Time_Start": 1370.48,
      "Time_End": 1375.8799999999999,
      "Text": " So don't judge me, I did the very, very basic and not OPSEC safe just load library and get"
    },
    {
      "Time_Start": 1375.8799999999999,
      "Time_End": 1379.08,
      "Text": " proc address and stuff like that, this is just to demonstrate the technique, this is"
    },
    {
      "Time_Start": 1379.08,
      "Time_End": 1382.8799999999999,
      "Text": " not to show you the best and best ways to use it, but what we're going to do is load"
    },
    {
      "Time_Start": 1382.8799999999999,
      "Time_End": 1387.52,
      "Text": " our process listing DLL, this would be our post exploitation module, we're going to find"
    },
    {
      "Time_Start": 1387.52,
      "Time_End": 1394.6399999999999,
      "Text": " the exported function address in memory and then run it with create thread."
    },
    {
      "Time_Start": 1394.6399999999999,
      "Time_End": 1400.1999999999998,
      "Text": " We're going to look at our process memory space here, and we'll notice we've got a few"
    },
    {
      "Time_Start": 1400.1999999999998,
      "Time_End": 1406.72,
      "Text": " hopefully you guys can see this, we've loaded our process list DLL, and then as we continue"
    },
    {
      "Time_Start": 1406.72,
      "Time_End": 1412.24,
      "Text": " on, yeah, there's our exported function."
    },
    {
      "Time_Start": 1412.24,
      "Time_End": 1420.16,
      "Text": " As we continue on, I just wanted to show you it's a basic DLL, nothing crazy here."
    },
    {
      "Time_Start": 1420.16,
      "Time_End": 1423.72,
      "Text": " You'll notice we actually already have a bunch of read write plus page guard regions of memory,"
    },
    {
      "Time_Start": 1423.72,
      "Time_End": 1429.1200000000001,
      "Text": " there were four of them there, like I said, all processes are going to have them legitimately."
    },
    {
      "Time_Start": 1429.1200000000001,
      "Time_End": 1432.4,
      "Text": " We're just going to jump ahead, do our create thread, our post exploitation module should"
    },
    {
      "Time_Start": 1432.4,
      "Time_End": 1433.76,
      "Text": " be finished now."
    },
    {
      "Time_Start": 1433.76,
      "Time_End": 1438.32,
      "Text": " So if we refresh our memory in our process, we're going to see a new region, that's read"
    },
    {
      "Time_Start": 1438.32,
      "Time_End": 1443.16,
      "Text": " write plus page guard, that's 24 kilobytes, notice, however, it's not tied to any particular"
    },
    {
      "Time_Start": 1443.16,
      "Time_End": 1448.76,
      "Text": " thread stack, and we're going to talk about that in a minute, and how it's a bit larger."
    },
    {
      "Time_Start": 1448.76,
      "Time_End": 1452.36,
      "Text": " But that is our region in memory, that's actually where our data is located right now, and our"
    },
    {
      "Time_Start": 1452.36,
      "Time_End": 1456.68,
      "Text": " stage zero can find that as we continue on."
    },
    {
      "Time_Start": 1456.68,
      "Time_End": 1462.22,
      "Text": " Going to look for that header, we find the header, we print out the data in just a second,"
    },
    {
      "Time_Start": 1462.22,
      "Time_End": 1466.26,
      "Text": " and it also shows you all the other page guard regions it found in memory, that's obviously"
    },
    {
      "Time_Start": 1466.26,
      "Time_End": 1472.26,
      "Text": " for debugging, don't do that in your actual stage zero, printing that stuff out."
    },
    {
      "Time_Start": 1472.26,
      "Time_End": 1476.38,
      "Text": " And we'll notice if we refresh again, that page guard permission is gone now, because"
    },
    {
      "Time_Start": 1476.38,
      "Time_End": 1480.5,
      "Text": " our stage zero has reset the permissions just to read write, so it can read the data, and"
    },
    {
      "Time_Start": 1480.5,
      "Time_End": 1487.38,
      "Text": " there's all the process listing data, including our header and footer, in there right now."
    },
    {
      "Time_Start": 1487.38,
      "Time_End": 1491.74,
      "Text": " So we'll just print that out, and we've grabbed our data, once we're finished, we set that"
    },
    {
      "Time_Start": 1491.74,
      "Time_End": 1496.14,
      "Text": " data, that region to all zeros, and we free that memory."
    },
    {
      "Time_Start": 1496.14,
      "Time_End": 1499.86,
      "Text": " And we're good, and you can see all the information that we fetched, again, basic example of just"
    },
    {
      "Time_Start": 1499.86,
      "Time_End": 1502.04,
      "Text": " a process list."
    },
    {
      "Time_Start": 1502.04,
      "Time_End": 1505.7,
      "Text": " But you can insert whatever kind of post exploitation module that's going to gather data for you"
    },
    {
      "Time_Start": 1505.7,
      "Time_End": 1506.7,
      "Text": " here."
    },
    {
      "Time_Start": 1506.7,
      "Time_End": 1507.7,
      "Text": " All right."
    },
    {
      "Time_Start": 1507.7,
      "Time_End": 1512.38,
      "Text": " Let's see if we can go back, yeah, perfect."
    },
    {
      "Time_Start": 1512.38,
      "Time_End": 1516.26,
      "Text": " So definitely some disadvantages with this method."
    },
    {
      "Time_Start": 1516.26,
      "Time_End": 1519.16,
      "Text": " We have a lot of size constraints."
    },
    {
      "Time_Start": 1519.16,
      "Time_End": 1523.3799999999999,
      "Text": " If we're reading into that smaller buffer, if you're expecting to get, like, two gigs"
    },
    {
      "Time_Start": 1523.3799999999999,
      "Time_End": 1528.28,
      "Text": " of data back, I would not recommend using this approach."
    },
    {
      "Time_Start": 1528.28,
      "Time_End": 1532.1,
      "Text": " You could use heap memory instead, I encourage you to play around with it, but there's a"
    },
    {
      "Time_Start": 1532.1,
      "Time_End": 1537.22,
      "Text": " little bit more work to control it, and just the way that the heap allocates into memory"
    },
    {
      "Time_Start": 1537.22,
      "Time_End": 1540.1,
      "Text": " itself, you have a little bit more things to worry about."
    },
    {
      "Time_Start": 1540.1,
      "Time_End": 1545.74,
      "Text": " As I pointed out, there was no tie to an existing thread stack."
    },
    {
      "Time_Start": 1545.74,
      "Time_End": 1549.06,
      "Text": " That's kind of a problem, kind of sticks out, kind of weird."
    },
    {
      "Time_Start": 1549.06,
      "Time_End": 1554.6200000000001,
      "Text": " You could utilize user LAN unhooking, I'm just using the regular Win32 API for the demo."
    },
    {
      "Time_Start": 1554.6200000000001,
      "Time_End": 1559.42,
      "Text": " There is actually a debate here of whether it's smarter to do that or not, because a"
    },
    {
      "Time_Start": 1559.42,
      "Time_End": 1563.84,
      "Text": " lot of EDRs aren't doing user LAN hooks anymore."
    },
    {
      "Time_Start": 1563.84,
      "Time_End": 1566.7,
      "Text": " Sometimes it can actually look weirder to try and do direct system calls as opposed"
    },
    {
      "Time_Start": 1566.7,
      "Time_End": 1569.46,
      "Text": " to just using the Win32 API."
    },
    {
      "Time_Start": 1569.46,
      "Time_End": 1573.68,
      "Text": " So there actually is room for debate there."
    },
    {
      "Time_Start": 1573.68,
      "Time_End": 1577.74,
      "Text": " And then consider the sizing of the data itself, remember, we allocated this new region"
    },
    {
      "Time_Start": 1577.74,
      "Time_End": 1582.44,
      "Text": " of memory, this new read write plus page guard, that was 24 kilobytes, and if you noticed,"
    },
    {
      "Time_Start": 1582.44,
      "Time_End": 1586.44,
      "Text": " all the other regions of page guard memory were just 12 kilobytes, so we're already double"
    },
    {
      "Time_Start": 1586.44,
      "Time_End": 1590.6000000000001,
      "Text": " in size of what a normal region looks like, which is not great."
    },
    {
      "Time_Start": 1590.6000000000001,
      "Time_End": 1594.9,
      "Text": " Maybe if it's just 24, you'll get away with it, but if you're allocating 500 kilobytes"
    },
    {
      "Time_Start": 1594.9,
      "Time_End": 1598.42,
      "Text": " of memory, et cetera, that's going to look really weird compared to a normal read write"
    },
    {
      "Time_Start": 1598.42,
      "Time_End": 1601.0800000000002,
      "Text": " plus guard page section."
    },
    {
      "Time_Start": 1601.6799999999998,
      "Time_End": 1604.24,
      "Text": " Recommend doing this still mostly locally in your own local process."
    },
    {
      "Time_Start": 1604.24,
      "Time_End": 1606.8,
      "Text": " You could do it remotely, but..."
    },
    {
      "Time_Start": 1606.8,
      "Time_End": 1610.1999999999998,
      "Text": " And then we also didn't do things like encrypting the data before we stuffed it in the memory"
    },
    {
      "Time_Start": 1610.1999999999998,
      "Time_End": 1611.1999999999998,
      "Text": " region."
    },
    {
      "Time_Start": 1611.1999999999998,
      "Time_End": 1612.6399999999999,
      "Text": " There's other ways to play here."
    },
    {
      "Time_Start": 1612.6399999999999,
      "Time_End": 1615.96,
      "Text": " You can do more dynamic headers and footers versus the hard coding."
    },
    {
      "Time_Start": 1615.96,
      "Time_End": 1619.4399999999998,
      "Text": " Just wanted to show you the basic example."
    },
    {
      "Time_Start": 1619.4399999999998,
      "Time_End": 1623.4199999999998,
      "Text": " I did want to make this approach as general as possible, and you can integrate this with"
    },
    {
      "Time_Start": 1623.4199999999998,
      "Time_End": 1629.28,
      "Text": " your own custom C2 tooling for sure, but based on this approach, unfortunately right now,"
    },
    {
      "Time_Start": 1629.28,
      "Time_End": 1633.6,
      "Text": " you would still need to rewrite your state zero at least a little bit, and your post"
    },
    {
      "Time_Start": 1633.6,
      "Time_End": 1638.52,
      "Text": " exploitation modules, you'd at least need to wrap them in a way that your modules know"
    },
    {
      "Time_Start": 1638.52,
      "Time_End": 1642.52,
      "Text": " to allocate their data in this way, and your C2 knows to fetch it this way."
    },
    {
      "Time_Start": 1642.52,
      "Time_End": 1644.0,
      "Text": " So definitely a general approach."
    },
    {
      "Time_Start": 1644.0,
      "Time_End": 1646.8799999999999,
      "Text": " You can integrate with a lot of tooling, but it is going to take some work and some rewriting"
    },
    {
      "Time_Start": 1646.8799999999999,
      "Time_End": 1649.32,
      "Text": " to do."
    },
    {
      "Time_Start": 1649.32,
      "Time_End": 1653.8799999999999,
      "Text": " So like I said, if we want to detect this, you can look for that non-backed memory."
    },
    {
      "Time_Start": 1653.8799999999999,
      "Time_End": 1659.08,
      "Text": " You can look for the weird region sizes compared to normal page guard memory, and then you"
    },
    {
      "Time_Start": 1659.08,
      "Time_End": 1662.76,
      "Text": " would look in kernel for the memory calls based on virtual protect."
    },
    {
      "Time_Start": 1662.76,
      "Time_End": 1667.3999999999999,
      "Text": " Why are you virtual protecting with guard page memory and sending it back to guard page"
    },
    {
      "Time_Start": 1667.3999999999999,
      "Time_End": 1670.1599999999999,
      "Text": " and you're doing that continuously in a very short span of time."
    },
    {
      "Time_Start": 1670.1599999999999,
      "Time_End": 1671.1599999999999,
      "Text": " Kind of looks weird."
    },
    {
      "Time_Start": 1671.1599999999999,
      "Time_End": 1674.4399999999998,
      "Text": " You could add in some delays, et cetera, as an attacker to try and mitigate some of that,"
    },
    {
      "Time_Start": 1674.4399999999998,
      "Time_End": 1679.0,
      "Text": " but if you do focus in on those, it might be a way you can detect this technique, and"
    },
    {
      "Time_Start": 1679.0,
      "Time_End": 1682.56,
      "Text": " especially why is this happening all over your process memory space in a very short"
    },
    {
      "Time_Start": 1682.56,
      "Time_End": 1685.6,
      "Text": " span of time."
    },
    {
      "Time_Start": 1685.6000000000001,
      "Time_End": 1690.72,
      "Text": " So to fix some of these issues, I call this first method that I just demoed for you guard"
    },
    {
      "Time_Start": 1690.72,
      "Time_End": 1691.72,
      "Text": " comms."
    },
    {
      "Time_Start": 1691.72,
      "Time_End": 1694.8400000000001,
      "Text": " The second method I'm calling guard stomping."
    },
    {
      "Time_Start": 1694.8400000000001,
      "Time_End": 1699.44,
      "Text": " So instead of having our post-exploitation modules allocate a new region in memory and"
    },
    {
      "Time_Start": 1699.44,
      "Time_End": 1703.88,
      "Text": " set it to page guard, we're going to abuse those existing guard pages that are in pretty"
    },
    {
      "Time_Start": 1703.88,
      "Time_End": 1705.8000000000002,
      "Text": " much every process."
    },
    {
      "Time_Start": 1705.8000000000002,
      "Time_End": 1711.0400000000002,
      "Text": " So instead of allocating new regions, we're going to write over data inside of these existing"
    },
    {
      "Time_Start": 1711.0400000000002,
      "Time_End": 1712.3600000000001,
      "Text": " regions."
    },
    {
      "Time_Start": 1712.3600000000001,
      "Time_End": 1717.5200000000002,
      "Text": " So that's not going to be a lot of changes in your main stage 0 here."
    },
    {
      "Time_Start": 1717.5200000000002,
      "Time_End": 1721.88,
      "Text": " Instead of freeing the memory when you're finished, you're just going to set it back"
    },
    {
      "Time_Start": 1721.88,
      "Time_End": 1724.96,
      "Text": " to 0s and then virtual protect it back to page guard."
    },
    {
      "Time_Start": 1724.96,
      "Time_End": 1728.92,
      "Text": " If you don't find it, the exact same as before, just set it back to page guard."
    },
    {
      "Time_Start": 1728.92,
      "Time_End": 1734.72,
      "Text": " Ironically, based on my research, page guard pages normally are filled with 0s anyway,"
    },
    {
      "Time_Start": 1734.72,
      "Time_End": 1739.0000000000002,
      "Text": " which makes your life pretty easy because you don't need to try to remember what data"
    },
    {
      "Time_Start": 1739.0000000000002,
      "Time_End": 1740.68,
      "Text": " was there before to restore it."
    },
    {
      "Time_Start": 1740.68,
      "Time_End": 1745.8400000000001,
      "Text": " You can just set it back to 0s and that's exactly what it looked like before."
    },
    {
      "Time_Start": 1745.8400000000001,
      "Time_End": 1749.44,
      "Text": " Our post-exploitation module we're going to have to do a little bit of work on."
    },
    {
      "Time_Start": 1749.44,
      "Time_End": 1754.0,
      "Text": " So now you're going to have to add in querying for your own process memory space or remote"
    },
    {
      "Time_Start": 1754.0,
      "Time_End": 1758.8,
      "Text": " process memory space, looking for those regions in memory so then you can do the set this"
    },
    {
      "Time_Start": 1758.8,
      "Time_End": 1763.16,
      "Text": " to read write, write to it, set the permissions back, et cetera."
    },
    {
      "Time_Start": 1763.16,
      "Time_End": 1766.96,
      "Text": " And so there's a bit of complex math here again because I was using Wchars and I did"
    },
    {
      "Time_Start": 1766.96,
      "Time_End": 1771.28,
      "Text": " want to point out if the laser works, oh, there it is."
    },
    {
      "Time_Start": 1771.28,
      "Time_End": 1773.4,
      "Text": " This is a little bit of a typo here."
    },
    {
      "Time_Start": 1773.4,
      "Time_End": 1775.7,
      "Text": " This should have a divide by 2."
    },
    {
      "Time_Start": 1775.7,
      "Time_End": 1780.72,
      "Text": " It's going to be corrected in the code that I publish after the conference is over."
    },
    {
      "Time_Start": 1780.72,
      "Time_End": 1785.16,
      "Text": " But just wanted to point out that this actually should have a divide by 2."
    },
    {
      "Time_Start": 1785.16,
      "Time_End": 1788.04,
      "Text": " But this would also be a lot simpler and you wouldn't have to be worried about these divide"
    },
    {
      "Time_Start": 1788.04,
      "Time_End": 1790.2,
      "Text": " by 2s times 2s if you're just using regular Chars."
    },
    {
      "Time_Start": 1790.2,
      "Time_End": 1792.3600000000001,
      "Text": " So really up to you."
    },
    {
      "Time_Start": 1792.3600000000001,
      "Time_End": 1795.92,
      "Text": " Do the second demo."
    },
    {
      "Time_Start": 1795.92,
      "Time_End": 1797.76,
      "Text": " So this is just going to demonstrate guard stomping."
    },
    {
      "Time_Start": 1797.76,
      "Time_End": 1800.76,
      "Text": " We're going to jump right into the post exploitation module."
    },
    {
      "Time_Start": 1800.76,
      "Time_End": 1805.3600000000001,
      "Text": " We're going to use virtual protect on the regions of memory that we catch."
    },
    {
      "Time_Start": 1805.3600000000001,
      "Time_End": 1806.76,
      "Text": " And something really weird is going to happen."
    },
    {
      "Time_Start": 1806.76,
      "Time_End": 1808.68,
      "Text": " I actually still don't know why this is."
    },
    {
      "Time_Start": 1808.68,
      "Time_End": 1812.24,
      "Text": " So if anyone in the audience has an idea, I would love to hear it."
    },
    {
      "Time_Start": 1812.24,
      "Time_End": 1816.64,
      "Text": " Something odd occurs when we use virtual protect on this first region of page guard memory"
    },
    {
      "Time_Start": 1816.64,
      "Time_End": 1819.16,
      "Text": " or really any region of page guard memory that we find."
    },
    {
      "Time_Start": 1819.16,
      "Time_End": 1824.0,
      "Text": " And that oddness is going to be the size changes dramatically of the region."
    },
    {
      "Time_Start": 1824.0,
      "Time_End": 1825.44,
      "Text": " I still don't know why this is."
    },
    {
      "Time_Start": 1825.44,
      "Time_End": 1828.64,
      "Text": " This is also true if you try to use NT protect virtual memory."
    },
    {
      "Time_Start": 1828.64,
      "Time_End": 1829.92,
      "Text": " It doesn't matter."
    },
    {
      "Time_Start": 1829.92,
      "Time_End": 1830.92,
      "Text": " The same thing happens."
    },
    {
      "Time_Start": 1830.92,
      "Time_End": 1834.8,
      "Text": " So if we actually jump up to that region, it now no longer has the page guard, but it's"
    },
    {
      "Time_Start": 1834.8,
      "Time_End": 1838.0800000000002,
      "Text": " also now 520 kilobytes in size."
    },
    {
      "Time_Start": 1838.0800000000002,
      "Time_End": 1841.04,
      "Text": " And you'll see the first 12 kilobytes are still the zeros like they were before."
    },
    {
      "Time_Start": 1841.04,
      "Time_End": 1844.2,
      "Text": " We haven't even added data to this yet, but then there's just a bunch of random bytes"
    },
    {
      "Time_Start": 1844.2,
      "Time_End": 1845.4,
      "Text": " written there."
    },
    {
      "Time_Start": 1845.4,
      "Time_End": 1847.52,
      "Text": " Again, no idea why this is."
    },
    {
      "Time_Start": 1847.52,
      "Time_End": 1850.8400000000001,
      "Text": " Didn't have enough time to play with it before the talk."
    },
    {
      "Time_Start": 1850.8400000000001,
      "Time_End": 1854.44,
      "Text": " But once we write our data, it stays the same size, but you can see we still only wrote"
    },
    {
      "Time_Start": 1854.44,
      "Time_End": 1857.16,
      "Text": " like the 12 kilobytes of size."
    },
    {
      "Time_Start": 1857.16,
      "Time_End": 1858.44,
      "Text": " And then there's a bunch of random bytes."
    },
    {
      "Time_Start": 1858.44,
      "Time_End": 1863.4,
      "Text": " As soon as we protect it and add in the guard page bit again, it goes back to 12 kilobytes."
    },
    {
      "Time_Start": 1863.4,
      "Time_End": 1864.88,
      "Text": " I have no idea why it is."
    },
    {
      "Time_Start": 1864.88,
      "Time_End": 1865.88,
      "Text": " It's very weird."
    },
    {
      "Time_Start": 1865.88,
      "Time_End": 1868.6200000000001,
      "Text": " I hope somebody in the audience has an idea."
    },
    {
      "Time_Start": 1868.6200000000001,
      "Time_End": 1871.6000000000001,
      "Text": " But just one of those things that definitely made me scratch my head."
    },
    {
      "Time_Start": 1871.6000000000001,
      "Time_End": 1873.68,
      "Text": " I just added in some more debugging here."
    },
    {
      "Time_Start": 1873.68,
      "Time_End": 1877.6000000000001,
      "Text": " So you have to be careful and you have to only write as many bytes as you have space"
    },
    {
      "Time_Start": 1877.6000000000001,
      "Time_End": 1879.3600000000001,
      "Text": " for, including your headers and footers."
    },
    {
      "Time_Start": 1879.3600000000001,
      "Time_End": 1883.16,
      "Text": " So you're much more limited on how many bytes you can write per region."
    },
    {
      "Time_Start": 1883.16,
      "Time_End": 1885.52,
      "Text": " Like I said, that's usually around 12 kilobytes."
    },
    {
      "Time_Start": 1885.52,
      "Time_End": 1886.52,
      "Text": " Not a ton of size."
    },
    {
      "Time_Start": 1886.52,
      "Time_End": 1889.8000000000002,
      "Text": " So sizing does remain an issue."
    },
    {
      "Time_Start": 1889.8000000000002,
      "Time_End": 1893.76,
      "Text": " But we've written our data into existing page guard memory."
    },
    {
      "Time_Start": 1893.76,
      "Time_End": 1896.28,
      "Text": " You can see it's still tied to those thread stacks."
    },
    {
      "Time_Start": 1896.28,
      "Time_End": 1898.8000000000002,
      "Text": " Blends in a lot better."
    },
    {
      "Time_Start": 1898.8000000000002,
      "Time_End": 1903.88,
      "Text": " And then we'll go back to our main stage 0, which we'll query through our memory, looking"
    },
    {
      "Time_Start": 1903.88,
      "Time_End": 1906.48,
      "Text": " for those permissions."
    },
    {
      "Time_Start": 1906.48,
      "Time_End": 1909.96,
      "Text": " And once we find that information, we print it out."
    },
    {
      "Time_Start": 1909.96,
      "Time_End": 1914.0,
      "Text": " And then before we quit, I'll just show you, if we look at those regions of memory again"
    },
    {
      "Time_Start": 1914.0,
      "Time_End": 1916.1200000000001,
      "Text": " now, we'll refresh."
    },
    {
      "Time_Start": 1916.1200000000001,
      "Time_End": 1917.1200000000001,
      "Text": " We have our data."
    },
    {
      "Time_Start": 1917.1200000000001,
      "Time_End": 1918.2,
      "Text": " They're just gonna be filled with zeros."
    },
    {
      "Time_Start": 1918.2,
      "Time_End": 1920.92,
      "Text": " It's gonna look totally legitimate, just like it did before."
    },
    {
      "Time_Start": 1920.92,
      "Time_End": 1922.16,
      "Text": " So we're still tied to thread stacks."
    },
    {
      "Time_Start": 1922.16,
      "Time_End": 1926.32,
      "Text": " If we change that permission manually, just to examine what's there, it's just gonna be"
    },
    {
      "Time_Start": 1926.32,
      "Time_End": 1933.2,
      "Text": " all zeros, which is exactly what it would have looked like before."
    },
    {
      "Time_Start": 1933.2,
      "Time_End": 1941.48,
      "Text": " And that's for each of the regions that we wrote to."
    },
    {
      "Time_Start": 1941.48,
      "Time_End": 1946.0800000000002,
      "Text": " And that is pretty much the end of that demo."
    },
    {
      "Time_Start": 1946.0800000000002,
      "Time_End": 1954.4,
      "Text": " And so just wrapping up here, quickly, you can jump back to the presentation, I think."
    },
    {
      "Time_Start": 1954.4,
      "Time_End": 1955.4,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1955.4,
      "Time_End": 1958.52,
      "Text": " You can jump back."
    },
    {
      "Time_Start": 1958.52,
      "Time_End": 1961.0,
      "Text": " So just wrapping up really quickly."
    },
    {
      "Time_Start": 1961.0,
      "Time_End": 1962.8,
      "Text": " Benefits of using guard stomping."
    },
    {
      "Time_Start": 1963.3999999999999,
      "Time_End": 1964.3999999999999,
      "Text": " We're now tied to normal thread stacks."
    },
    {
      "Time_Start": 1964.3999999999999,
      "Time_End": 1966.28,
      "Text": " A little bit more annoying for EDR to find us."
    },
    {
      "Time_Start": 1966.28,
      "Time_End": 1970.52,
      "Text": " We're using the normal sizes of guard pages, so that's another indicator that's gone."
    },
    {
      "Time_Start": 1970.52,
      "Time_End": 1974.36,
      "Text": " And again, guard pages are normally filled with zeros, so that's great."
    },
    {
      "Time_Start": 1974.36,
      "Time_End": 1976.32,
      "Text": " However, you still have some problems."
    },
    {
      "Time_Start": 1976.32,
      "Time_End": 1978.9199999999998,
      "Text": " There's still a lot of sizing issues."
    },
    {
      "Time_Start": 1978.9199999999998,
      "Time_End": 1981.12,
      "Text": " There's ways that you could try to tackle this."
    },
    {
      "Time_Start": 1981.12,
      "Time_End": 1984.08,
      "Text": " You don't even know necessarily how many page guard regions there will be."
    },
    {
      "Time_Start": 1984.08,
      "Time_End": 1987.32,
      "Text": " You could try to do things like introducing benign threads that are always gonna have"
    },
    {
      "Time_Start": 1987.32,
      "Time_End": 1990.96,
      "Text": " their own page guards and adding more and more to build more space, but you can only"
    },
    {
      "Time_Start": 1990.96,
      "Time_End": 1993.16,
      "Text": " go by about 12 kilobyte increments."
    },
    {
      "Time_Start": 1993.16,
      "Time_End": 1998.72,
      "Text": " So still, if you're expecting 2 gigs of data back, not the best way to go."
    },
    {
      "Time_Start": 1998.72,
      "Time_End": 2002.6000000000001,
      "Text": " You could actually try to combine some of the older methods with guard stomping as well."
    },
    {
      "Time_Start": 2002.6000000000001,
      "Time_End": 2006.28,
      "Text": " I wanted to hint on this, and we'll talk about this again in a second."
    },
    {
      "Time_Start": 2006.28,
      "Time_End": 2009.88,
      "Text": " But instead of just stuffing data here, you could try and do things like stuffing shell"
    },
    {
      "Time_Start": 2009.88,
      "Time_End": 2013.64,
      "Text": " code here and dividing it among different regions of page guard memory that's already"
    },
    {
      "Time_Start": 2013.64,
      "Time_End": 2016.56,
      "Text": " tied to different thread stacks."
    },
    {
      "Time_Start": 2016.56,
      "Time_End": 2020.64,
      "Text": " But you need to be very careful, because these page guards exist for a reason when you remove"
    },
    {
      "Time_Start": 2020.64,
      "Time_End": 2025.44,
      "Text": " them, and if you're running code, you always run the risk of corrupting the stack and crashing"
    },
    {
      "Time_Start": 2025.44,
      "Time_End": 2026.48,
      "Text": " your process."
    },
    {
      "Time_Start": 2026.48,
      "Time_End": 2030.0800000000002,
      "Text": " Might be better to do that if you know exactly what the thread is going to do and you control"
    },
    {
      "Time_Start": 2030.0800000000002,
      "Time_End": 2035.96,
      "Text": " it, and you can make sure it's not gonna try and allocate more memory randomly or overwrite"
    },
    {
      "Time_Start": 2035.96,
      "Time_End": 2039.92,
      "Text": " its stack memory space."
    },
    {
      "Time_Start": 2039.92,
      "Time_End": 2047.3200000000002,
      "Text": " And I recommend just as other usages for this, you can play with guard pages to try to deceive"
    },
    {
      "Time_Start": 2047.3200000000002,
      "Time_End": 2048.32,
      "Text": " the EDR."
    },
    {
      "Time_Start": 2048.44,
      "Time_End": 2051.96,
      "Text": " We talked about before how EDR, it's kind of painful if it wants to be scanning your"
    },
    {
      "Time_Start": 2051.96,
      "Time_End": 2054.04,
      "Text": " memory and dealing with guard pages."
    },
    {
      "Time_Start": 2054.04,
      "Time_End": 2058.96,
      "Text": " We can actually utilize the fact that if you try and touch a guard page region and you're"
    },
    {
      "Time_Start": 2058.96,
      "Time_End": 2062.36,
      "Text": " not tied to the thread stack, it just removes the guard page permission."
    },
    {
      "Time_Start": 2062.36,
      "Time_End": 2067.56,
      "Text": " We can constantly query our memory space, and if you notice a page of memory you've"
    },
    {
      "Time_Start": 2067.56,
      "Time_End": 2071.8,
      "Text": " set that has the page guard permission, even for a second, if that guard permission doesn't"
    },
    {
      "Time_Start": 2071.8,
      "Time_End": 2075.84,
      "Text": " exist anymore, you know someone's tried to look at it and you can take actions accordingly."
    },
    {
      "Time_Start": 2075.84,
      "Time_End": 2078.84,
      "Text": " You don't need to use vectored exception handling."
    },
    {
      "Time_Start": 2078.84,
      "Time_End": 2079.84,
      "Text": " It's less reliable."
    },
    {
      "Time_Start": 2079.84,
      "Time_End": 2083.92,
      "Text": " It's more of a race condition as opposed to vectored exception handling, but it's still"
    },
    {
      "Time_Start": 2083.92,
      "Time_End": 2087.2000000000003,
      "Text": " a method that you can use, and I think it would be a lot more annoying to detect for"
    },
    {
      "Time_Start": 2087.2000000000003,
      "Time_End": 2089.92,
      "Text": " EDR, because all you're doing is querying your own memory space, and that's perfectly"
    },
    {
      "Time_Start": 2089.92,
      "Time_End": 2092.4,
      "Text": " benign behavior."
    },
    {
      "Time_Start": 2092.4,
      "Time_End": 2095.88,
      "Text": " And so you can combine some of these other methods that I talked about historically."
    },
    {
      "Time_Start": 2095.88,
      "Time_End": 2097.6400000000003,
      "Text": " You can combine this with guard something."
    },
    {
      "Time_Start": 2097.6400000000003,
      "Time_End": 2099.48,
      "Text": " You could still use stuff like VEH."
    },
    {
      "Time_Start": 2099.48,
      "Time_End": 2103.6800000000003,
      "Text": " I still think there's room to play with VCH, but just wanted to point out these are not"
    },
    {
      "Time_Start": 2103.68,
      "Time_End": 2106.3199999999997,
      "Text": " mutually exclusive techniques."
    },
    {
      "Time_Start": 2106.3199999999997,
      "Time_End": 2109.8399999999997,
      "Text": " These are general techniques that you can mix and match as you want depending on your"
    },
    {
      "Time_Start": 2109.8399999999997,
      "Time_End": 2113.44,
      "Text": " needs, et cetera."
    },
    {
      "Time_Start": 2113.44,
      "Time_End": 2115.2799999999997,
      "Text": " And just useful resources and links."
    },
    {
      "Time_Start": 2115.2799999999997,
      "Time_End": 2121.52,
      "Text": " There's a bunch of them to learn about historical uses as well as just ways that you can abuse"
    },
    {
      "Time_Start": 2121.52,
      "Time_End": 2125.24,
      "Text": " page guard, and that's pretty much it for me."
    },
    {
      "Time_Start": 2125.24,
      "Time_End": 2130.08,
      "Text": " I'm going to publish the code to GitHub here if you want to follow along."
    },
    {
      "Time_Start": 2130.08,
      "Time_End": 2134.52,
      "Text": " I also forgot to add my Twitter handle, but it's at ethicalhacks with an X if you want"
    },
    {
      "Time_Start": 2134.52,
      "Time_End": 2136.72,
      "Text": " to add me and talk about this later."
    },
    {
      "Time_Start": 2136.72,
      "Time_End": 2138.24,
      "Text": " But yeah, expect this in the next couple of weeks."
    },
    {
      "Time_Start": 2138.24,
      "Time_End": 2142.72,
      "Text": " I'll publish this code for both just basic guard comms as well as guard stomping."
    },
    {
      "Time_Start": 2142.72,
      "Time_End": 2144.08,
      "Text": " And that's it."
    },
    {
      "Time_Start": 2144.08,
      "Time_End": 2145.08,
      "Text": " Thanks for coming to my TED talk."
    },
    {
      "Time_Start": 2145.08,
      "Time_End": 2146.08,
      "Text": " I appreciate it."
    },
    {
      "Time_Start": 2146.08,
      "Time_End": 2147.08,
      "Text": " I appreciate it."
    },
    {
      "Time_Start": 2147.08,
      "Time_End": 2148.08,
      "Text": " I appreciate it."
    },
    {
      "Time_Start": 2148.08,
      "Time_End": 2148.58,
      "Text": " I appreciate it."
    }
  ]
}