{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 14.32,
      "Text": "This text was transcribed using whisper model: large-v2\n\n Welcome to my talk, hiding payloads in plain dot text, or how I bypassed a particularly"
    },
    {
      "Time_Start": 14.32,
      "Time_End": 16.48,
      "Text": " big brain EDR detection vector."
    },
    {
      "Time_Start": 16.48,
      "Time_End": 19.68,
      "Text": " A bit of sarcasm there, but you will see."
    },
    {
      "Time_Start": 19.68,
      "Time_End": 21.28,
      "Text": " My name is Mo Sommers."
    },
    {
      "Time_Start": 21.28,
      "Time_End": 23.0,
      "Text": " Welcome to this talk."
    },
    {
      "Time_Start": 23.0,
      "Time_End": 29.0,
      "Text": " What we'll be talking about today, ah, that's not working, crap."
    },
    {
      "Time_Start": 30.0,
      "Time_End": 32.2,
      "Text": " Ah, this is working, nice."
    },
    {
      "Time_Start": 32.2,
      "Time_End": 36.96,
      "Text": " So a brief introduction about myself, and then there's a whole lot of content."
    },
    {
      "Time_Start": 36.96,
      "Time_End": 38.8,
      "Text": " I hope it's not too much, but we'll see."
    },
    {
      "Time_Start": 38.8,
      "Time_End": 42.4,
      "Text": " So we'll start out with a bit of theoretical background."
    },
    {
      "Time_Start": 42.4,
      "Time_End": 47.72,
      "Text": " So how do we build our payloads, what's entropy, how does it factor into our payloads."
    },
    {
      "Time_Start": 47.72,
      "Time_End": 54.16,
      "Text": " Then we'll see where can we effectively put our payload in a PE file, and how can we then"
    },
    {
      "Time_Start": 54.16,
      "Time_End": 58.84,
      "Text": " evade a very annoying EDR detection vector, that's about Shannon entropy."
    },
    {
      "Time_Start": 58.84,
      "Time_End": 61.28,
      "Text": " It sucked a whole bunch, but you will see."
    },
    {
      "Time_Start": 61.28,
      "Time_End": 63.800000000000004,
      "Text": " And lastly I'll give you a demo and draw a conclusion."
    },
    {
      "Time_Start": 63.800000000000004,
      "Time_End": 71.68,
      "Text": " So I'd say, as I said, my name is Mo Sommers, I'm from Inviso, and at Inviso I am in the"
    },
    {
      "Time_Start": 71.68,
      "Time_End": 74.08,
      "Text": " red team, and I'm a red team operator."
    },
    {
      "Time_Start": 74.08,
      "Time_End": 79.28,
      "Text": " But what I do there is I focus on R&D, so I try and identify changes that our team has"
    },
    {
      "Time_Start": 79.28,
      "Time_End": 83.88,
      "Text": " during our everyday operations, and then try and find solutions to those."
    },
    {
      "Time_Start": 83.88,
      "Time_End": 88.88,
      "Text": " Oftentimes it's tooling, and as it just so happens, this talk is about one such tool"
    },
    {
      "Time_Start": 88.88,
      "Time_End": 91.32,
      "Text": " for one such challenge that we face."
    },
    {
      "Time_Start": 91.32,
      "Time_End": 94.24,
      "Text": " And without any further ado, I'd say let's jump right in."
    },
    {
      "Time_Start": 94.24,
      "Time_End": 98.6,
      "Text": " So that's a bit of a common theme with my slides here, I used AI to generate those cover"
    },
    {
      "Time_Start": 98.6,
      "Time_End": 99.6,
      "Text": " slide images."
    },
    {
      "Time_Start": 99.6,
      "Time_End": 103.6,
      "Text": " I like to believe that I'm a red team operator discussing plans and look like that when I"
    },
    {
      "Time_Start": 103.6,
      "Time_End": 106.56,
      "Text": " do that, but I guess I don't."
    },
    {
      "Time_Start": 106.56,
      "Time_End": 109.84,
      "Text": " You will see the prompts that I use there in the subtitle, they're just going to get"
    },
    {
      "Time_Start": 109.84,
      "Time_End": 112.39999999999999,
      "Text": " better, I promise you."
    },
    {
      "Time_Start": 112.4,
      "Time_End": 115.24000000000001,
      "Text": " So let's jump straight in."
    },
    {
      "Time_Start": 115.24000000000001,
      "Time_End": 119.12,
      "Text": " So how do we build an exemplary payload?"
    },
    {
      "Time_Start": 119.12,
      "Time_End": 122.80000000000001,
      "Text": " We usually start out with shellcode that's being generated by our C2 framework, so that"
    },
    {
      "Time_Start": 122.80000000000001,
      "Time_End": 126.2,
      "Text": " implements the core C2 functionality."
    },
    {
      "Time_Start": 126.2,
      "Time_End": 130.92000000000002,
      "Text": " Then it just sits there pretty much butt naked, so it will easily get flagged by AV and EDR,"
    },
    {
      "Time_Start": 130.92000000000002,
      "Time_End": 136.24,
      "Text": " so we put some encryption, so we encrypt it, that gives us some protection, so it won't"
    },
    {
      "Time_Start": 136.24,
      "Time_End": 138.8,
      "Text": " be detected as easily anymore."
    },
    {
      "Time_Start": 138.92000000000002,
      "Time_End": 143.28,
      "Text": " Then we still got the issue that we can't execute it, it's just an encrypted block,"
    },
    {
      "Time_Start": 143.28,
      "Time_End": 148.56,
      "Text": " so what we do is we embed this encrypted block in some loader or launch application, so it"
    },
    {
      "Time_Start": 148.56,
      "Time_End": 153.60000000000002,
      "Text": " will then be an XE or DLL which we usually compile ourselves, that gives us the ability"
    },
    {
      "Time_Start": 153.60000000000002,
      "Time_End": 159.28,
      "Text": " to actually decrypt and execute our payload and also gives us the ability to implement"
    },
    {
      "Time_Start": 159.28,
      "Time_End": 165.56,
      "Text": " some object checks, so we can see are we on the right target machine, is the target machine"
    },
    {
      "Time_Start": 165.56,
      "Time_End": 170.96,
      "Text": " joined to the correct domain there, so that's nice to have, you should have that, absolutely,"
    },
    {
      "Time_Start": 170.96,
      "Time_End": 173.52,
      "Text": " if you don't, please do."
    },
    {
      "Time_Start": 173.52,
      "Time_End": 179.32,
      "Text": " And then you just end up with an XE that you just compiled and it's a bit random, so it's"
    },
    {
      "Time_Start": 179.32,
      "Time_End": 183.8,
      "Text": " not a legitimate XE file or not a well-known one, so it kind of stands out, you don't want"
    },
    {
      "Time_Start": 183.8,
      "Time_End": 184.8,
      "Text": " to have that."
    },
    {
      "Time_Start": 184.8,
      "Time_End": 190.2,
      "Text": " So what we do then is we apply some, we copy some metadata from legitimate XEs, for example"
    },
    {
      "Time_Start": 190.52,
      "Time_End": 197.32000000000002,
      "Text": " legitimate Microsoft XEs, so it looks a bit more legit, it helps us disguise our stuff."
    },
    {
      "Time_Start": 197.32000000000002,
      "Time_End": 202.36,
      "Text": " Now let's consider that we are not building an XE file but a DLL file for a DLL site loading,"
    },
    {
      "Time_Start": 202.36,
      "Time_End": 209.00000000000003,
      "Text": " so that we need additional binaries that could then load our DLL and execute our stuff, so"
    },
    {
      "Time_Start": 209.00000000000003,
      "Time_End": 214.04000000000002,
      "Text": " that helps us with being more indirect with our execution because we are not starting"
    },
    {
      "Time_Start": 214.04000000000002,
      "Time_End": 218.12,
      "Text": " our own process, we are using a legitimate XE for a legitimate application to load our"
    },
    {
      "Time_Start": 218.24,
      "Time_End": 222.28,
      "Text": " code and execute our code and it helps us disguising our file because then it's just"
    },
    {
      "Time_Start": 222.28,
      "Time_End": 224.32,
      "Text": " one of many files, right?"
    },
    {
      "Time_Start": 224.32,
      "Time_End": 231.44,
      "Text": " Yeah, lastly we will oftentimes just archive it for delivery, it's as simple as that."
    },
    {
      "Time_Start": 231.44,
      "Time_End": 235.24,
      "Text": " But one thing that I like to really focus on here is one part that's super custom to"
    },
    {
      "Time_Start": 235.24,
      "Time_End": 239.56,
      "Text": " your operation there or to your build step there, that's the loader, because that you"
    },
    {
      "Time_Start": 239.56,
      "Time_End": 244.96,
      "Text": " usually either do yourself or you get it off the shelf, whatever, but that's the thing"
    },
    {
      "Time_Start": 245.08,
      "Time_End": 250.48000000000002,
      "Text": " that will in the end be analysed by the AV and EDR, so it needs to be good."
    },
    {
      "Time_Start": 250.48000000000002,
      "Time_End": 254.16,
      "Text": " Turns out that entropy is a thing and let's have a look at that."
    },
    {
      "Time_Start": 254.16,
      "Time_End": 256.88,
      "Text": " So what is entropy?"
    },
    {
      "Time_Start": 256.88,
      "Time_End": 263.88,
      "Text": " Well, I used to create those very math heavy slides there but I decided that it's not really"
    },
    {
      "Time_Start": 263.88,
      "Time_End": 268.64,
      "Text": " relevant, the math behind that stuff, I will just simplify it a bit."
    },
    {
      "Time_Start": 268.64,
      "Time_End": 274.12,
      "Text": " So it is a measure of so-called uncertainty or predictability of events and we can dumb"
    },
    {
      "Time_Start": 274.28000000000003,
      "Time_End": 278.68,
      "Text": " it a bit down, for our use case here we can say it's a measure of randomness of data or"
    },
    {
      "Time_Start": 278.68,
      "Time_End": 286.04,
      "Text": " of information density of data, it's in bits, that's the unit we're measuring and this says"
    },
    {
      "Time_Start": 286.04,
      "Time_End": 290.92,
      "Text": " how many bits do an average require to encode information?"
    },
    {
      "Time_Start": 290.92,
      "Time_End": 294.28000000000003,
      "Text": " So the higher that is, the more information is supposed to be in the block that you're"
    },
    {
      "Time_Start": 294.28000000000003,
      "Time_End": 296.24,
      "Text": " evaluating there."
    },
    {
      "Time_Start": 296.24,
      "Time_End": 300.72,
      "Text": " And this is actually used by malware analysts, AVs and EDRs, because it's a very easy metric"
    },
    {
      "Time_Start": 300.72,
      "Time_End": 302.52,
      "Text": " that you can just analyse."
    },
    {
      "Time_Start": 303.32,
      "Time_End": 308.76,
      "Text": " Here's actually a formula to calculate it, I won't discuss this a whole lot, so let's"
    },
    {
      "Time_Start": 308.76,
      "Time_End": 309.76,
      "Text": " just skip that."
    },
    {
      "Time_Start": 309.76,
      "Time_End": 313.71999999999997,
      "Text": " But the fun thing is the guy who came up with that concept, Claude Shannon, he was like"
    },
    {
      "Time_Start": 313.71999999999997,
      "Time_End": 317.68,
      "Text": " okay how should I call that concept, it's a bit weird to describe, it's not that easy"
    },
    {
      "Time_Start": 317.68,
      "Time_End": 322.32,
      "Text": " and he asked his pal John von Neumann in 1948, like what should I call it and John von Neumann"
    },
    {
      "Time_Start": 322.32,
      "Time_End": 325.79999999999995,
      "Text": " said you should call it entropy, nobody knows what entropy really is, so in a debate you"
    },
    {
      "Time_Start": 325.79999999999995,
      "Time_End": 331.08,
      "Text": " will always have the advantage, which is kind of a troll move I believe, that's a cool one."
    },
    {
      "Time_Start": 331.08,
      "Time_End": 336.59999999999997,
      "Text": " So let's have a look at what do those values that you get when you couple entropy really"
    },
    {
      "Time_Start": 336.59999999999997,
      "Time_End": 337.59999999999997,
      "Text": " mean."
    },
    {
      "Time_Start": 337.59999999999997,
      "Time_End": 344.52,
      "Text": " So it's a range of values, it's a scale, it starts at zero, goes up to 8.0, that's 8 bits"
    },
    {
      "Time_Start": 344.52,
      "Time_End": 351.96,
      "Text": " in a byte, zero means there's absolute certainty, there's no unpredictability, there's no randomness,"
    },
    {
      "Time_Start": 351.96,
      "Time_End": 356.79999999999995,
      "Text": " whereas 8.0 says it's purely random, so a couple of examples there."
    },
    {
      "Time_Start": 356.8,
      "Time_End": 361.84000000000003,
      "Text": " Imagine you have a set of data which is all zeros, there's absolutely no unpredictability,"
    },
    {
      "Time_Start": 361.84000000000003,
      "Time_End": 366.2,
      "Text": " it's absolutely predictable, there's no randomness in there, so it requires zero bits of entropy"
    },
    {
      "Time_Start": 366.2,
      "Time_End": 371.68,
      "Text": " to represent that, or zero bits to represent that, whereas when you got a set of all the"
    },
    {
      "Time_Start": 371.68,
      "Time_End": 379.56,
      "Text": " values from zero to 255, so the byte min and max values, it's just 8.0, it's a very high"
    },
    {
      "Time_Start": 379.56,
      "Time_End": 383.16,
      "Text": " entropy so that's considered unpredictable."
    },
    {
      "Time_Start": 383.16,
      "Time_End": 387.72,
      "Text": " You need to see here that Shannon entropy doesn't take ordering into account, so it"
    },
    {
      "Time_Start": 387.72,
      "Time_End": 391.76000000000005,
      "Text": " could be a randomised order there, it doesn't really matter."
    },
    {
      "Time_Start": 391.76000000000005,
      "Time_End": 395.08000000000004,
      "Text": " Another example, if you've got a coin flip, so just ones and zeros and an equal amount"
    },
    {
      "Time_Start": 395.08000000000004,
      "Time_End": 399.64000000000004,
      "Text": " of those, you just need precisely one bit to represent that, which makes sense because"
    },
    {
      "Time_Start": 399.64000000000004,
      "Time_End": 406.04,
      "Text": " either that bit is one or a zero, that's also a coin flip in itself, but more applied."
    },
    {
      "Time_Start": 406.04,
      "Time_End": 411.0,
      "Text": " If you take four kilobytes of random data, that tends to be very much random, you would"
    },
    {
      "Time_Start": 411.0,
      "Time_End": 414.08,
      "Text": " expect that, so it's got a very high entropy."
    },
    {
      "Time_Start": 414.08,
      "Time_End": 420.12,
      "Text": " Now let's consider an image, so this is the Windows XP whole paper there, it's a PNG,"
    },
    {
      "Time_Start": 420.12,
      "Time_End": 423.96,
      "Text": " it got 7.99 entropy, which is very high, why would that be?"
    },
    {
      "Time_Start": 423.96,
      "Time_End": 428.28,
      "Text": " Because there's compression in there, so PNGs don't store pixel data in raw format but they"
    },
    {
      "Time_Start": 428.28,
      "Time_End": 430.0,
      "Text": " compress it."
    },
    {
      "Time_Start": 430.0,
      "Time_End": 435.76,
      "Text": " So we see there's a very high information density, so you can look at it that way."
    },
    {
      "Time_Start": 435.76,
      "Time_End": 436.76,
      "Text": " Why be encrypted?"
    },
    {
      "Time_Start": 436.76,
      "Time_End": 439.96,
      "Text": " Well there's obviously encryption and you want to have very unpredictable data there"
    },
    {
      "Time_Start": 440.04,
      "Time_End": 444.40000000000003,
      "Text": " or else you will compromise your plain text or cipher that you use, you don't want that."
    },
    {
      "Time_Start": 444.40000000000003,
      "Time_End": 447.88000000000005,
      "Text": " What does that mean for our build steps that I showed before?"
    },
    {
      "Time_Start": 447.88000000000005,
      "Time_End": 454.16,
      "Text": " Well I annotated them with the measured entropy values that I found, let's start from the"
    },
    {
      "Time_Start": 454.16,
      "Time_End": 459.36,
      "Text": " beginning there, so a shellcode, typically medium to high entropy because they do a whole"
    },
    {
      "Time_Start": 459.36,
      "Time_End": 462.48,
      "Text": " lot of compression and encryption."
    },
    {
      "Time_Start": 462.48,
      "Time_End": 467.36,
      "Text": " The reason why there's also 6.5 which isn't as high is that certain frameworks, for example"
    },
    {
      "Time_Start": 467.48,
      "Time_End": 472.8,
      "Text": " Cobalt Strike will allow you to customise your payload a fair bit or they use padding"
    },
    {
      "Time_Start": 472.8,
      "Time_End": 475.2,
      "Text": " values like zeros."
    },
    {
      "Time_Start": 475.2,
      "Time_End": 480.0,
      "Text": " Then when you encrypt your stuff, well, naturally it gets a very high entropy, when you compile"
    },
    {
      "Time_Start": 480.0,
      "Time_End": 487.40000000000003,
      "Text": " it you add a considerable amount of overhead of just your PEXE file and then the last steps,"
    },
    {
      "Time_Start": 487.40000000000003,
      "Time_End": 490.48,
      "Text": " well, let's not really have a look at them very much because they don't really factor"
    },
    {
      "Time_Start": 490.48,
      "Time_End": 495.08000000000004,
      "Text": " in and we really want to focus on the other stuff, right?"
    },
    {
      "Time_Start": 495.08,
      "Time_End": 502.47999999999996,
      "Text": " So let's exclude those, next let's have a look at the shellcode, we don't have a lot"
    },
    {
      "Time_Start": 502.47999999999996,
      "Time_End": 508.44,
      "Text": " of control of how this is being assembled, so it's really out of the picture, it's not"
    },
    {
      "Time_Start": 508.44,
      "Time_End": 513.4399999999999,
      "Text": " something we can control, we don't want to compromise our encryption because we want"
    },
    {
      "Time_Start": 513.4399999999999,
      "Time_End": 517.16,
      "Text": " to have good encryption, right, so we don't want to compromise that as well, leaves us"
    },
    {
      "Time_Start": 517.16,
      "Time_End": 522.16,
      "Text": " with the loader application, so how can we improve the entropy values there and make"
    },
    {
      "Time_Start": 522.16,
      "Time_End": 524.76,
      "Text": " our payload not stand out as much?"
    },
    {
      "Time_Start": 524.76,
      "Time_End": 530.8399999999999,
      "Text": " Which brings me to hide and seek in Pico files, where can we put our stuff effectively?"
    },
    {
      "Time_Start": 530.8399999999999,
      "Time_End": 536.68,
      "Text": " Well let's have a look what a PE file is, so it might start out as source code which"
    },
    {
      "Time_Start": 536.68,
      "Time_End": 542.76,
      "Text": " you can compile, then for C code you get an object file which already got the compiled"
    },
    {
      "Time_Start": 542.76,
      "Time_End": 548.1999999999999,
      "Text": " code in there, data in there, then usually you couple a bunch of those and link them"
    },
    {
      "Time_Start": 548.2,
      "Time_End": 554.2800000000001,
      "Text": " together then you get an XE file, which is nice and on Windows they use the portable"
    },
    {
      "Time_Start": 554.2800000000001,
      "Time_End": 559.2800000000001,
      "Text": " executable common object file format for that which is Pico, let's have a look what does"
    },
    {
      "Time_Start": 559.2800000000001,
      "Time_End": 565.84,
      "Text": " an XE file look like, it's basically two things that you find in there, it's a bunch of headers"
    },
    {
      "Time_Start": 565.84,
      "Time_End": 571.08,
      "Text": " and then sections, I will try and simplify here a bit to just save a bit of time, so"
    },
    {
      "Time_Start": 571.08,
      "Time_End": 576.0,
      "Text": " here you can see all the headers in there and I would say we consider it metadata, it's"
    },
    {
      "Time_Start": 576.0,
      "Time_End": 581.64,
      "Text": " about what is in your file, what you can find where in the file, what machine it runs"
    },
    {
      "Time_Start": 581.64,
      "Time_End": 590.08,
      "Text": " on, when you start execution of this file, where should you start execution and when"
    },
    {
      "Time_Start": 590.08,
      "Time_End": 594.88,
      "Text": " we try and consider maybe hiding stuff in there, that's a bit tough because there's"
    },
    {
      "Time_Start": 594.88,
      "Time_End": 599.72,
      "Text": " not much space to work with, consider you have a regular file with maybe like ten sections"
    },
    {
      "Time_Start": 599.72,
      "Time_End": 603.32,
      "Text": " or something, that's the only variable thing for the header there, then you end up with"
    },
    {
      "Time_Start": 603.32,
      "Time_End": 608.4000000000001,
      "Text": " a space of less than one kilobyte to actually put stuff in there and we got payloads of"
    },
    {
      "Time_Start": 608.4000000000001,
      "Time_End": 614.6400000000001,
      "Text": " 50 to 300 kilobytes, it doesn't work out for our purposes and modifications also easily"
    },
    {
      "Time_Start": 614.6400000000001,
      "Time_End": 620.6,
      "Text": " stand out, so on to that, but we still got the sections, what do we find there, well"
    },
    {
      "Time_Start": 620.6,
      "Time_End": 625.0400000000001,
      "Text": " actual content I would say, there's code, there's data, there's resource like assets"
    },
    {
      "Time_Start": 625.0400000000001,
      "Time_End": 630.32,
      "Text": " like icons, images, binary stuff, whatever you want to put in there and especially when"
    },
    {
      "Time_Start": 630.32,
      "Time_End": 636.5200000000001,
      "Text": " we compile stuff ourselves, we have a very simple situation where it's very easy to modify"
    },
    {
      "Time_Start": 636.5200000000001,
      "Time_End": 638.2800000000001,
      "Text": " things in there."
    },
    {
      "Time_Start": 638.2800000000001,
      "Time_End": 644.96,
      "Text": " Then for completeness sake, you can also just append stuff to your XE file, it's not within"
    },
    {
      "Time_Start": 644.96,
      "Time_End": 651.0400000000001,
      "Text": " your XE file, let's not do that, it's a super cheap approach but I will get back to that"
    },
    {
      "Time_Start": 651.0400000000001,
      "Time_End": 653.84,
      "Text": " later, I promise."
    },
    {
      "Time_Start": 653.84,
      "Time_End": 657.7600000000001,
      "Text": " So let's have a look at some sections that you might find there and how you can actually"
    },
    {
      "Time_Start": 657.76,
      "Time_End": 661.88,
      "Text": " put things into specific sections when we write our own code."
    },
    {
      "Time_Start": 661.88,
      "Time_End": 665.64,
      "Text": " So there might be a data section that's for readable, writable data, we can just write"
    },
    {
      "Time_Start": 665.64,
      "Time_End": 670.4399999999999,
      "Text": " a C array like that and we'll be put there, it's super easy to implement, you can modify"
    },
    {
      "Time_Start": 670.4399999999999,
      "Time_End": 673.12,
      "Text": " it in place, it's nice for our purposes."
    },
    {
      "Time_Start": 673.12,
      "Time_End": 677.3199999999999,
      "Text": " You might also have an R data section, same thing, it's just read only, also very easy"
    },
    {
      "Time_Start": 677.3199999999999,
      "Time_End": 682.28,
      "Text": " to implement, you just need to append a constant in your C code, very easy."
    },
    {
      "Time_Start": 682.28,
      "Time_End": 686.8,
      "Text": " You can also put arbitrary stuff into the text section which hosts your code, your compiled"
    },
    {
      "Time_Start": 686.8000000000001,
      "Time_End": 690.72,
      "Text": " machine code, your assembly instructions pretty much."
    },
    {
      "Time_Start": 690.72,
      "Time_End": 694.08,
      "Text": " That's pretty cool, you just need to append that annotation there for your compiler that"
    },
    {
      "Time_Start": 694.08,
      "Time_End": 698.08,
      "Text": " varies from compiler to compiler, compiler specific, but your compiler usually is happy"
    },
    {
      "Time_Start": 698.08,
      "Time_End": 701.6800000000001,
      "Text": " to put anything in there that you instructed to do so."
    },
    {
      "Time_Start": 701.6800000000001,
      "Time_End": 706.1200000000001,
      "Text": " So also very easy to implement, but consider that in a text section we would expect to"
    },
    {
      "Time_Start": 706.1200000000001,
      "Time_End": 711.32,
      "Text": " find actual instructions, not just some random bytes, so this will stand out a lot, don't"
    },
    {
      "Time_Start": 711.32,
      "Time_End": 712.32,
      "Text": " want to do that."
    },
    {
      "Time_Start": 713.32,
      "Time_End": 717.2800000000001,
      "Text": " Spoiler alert, we will, of course, that's in the title of the talk, so of course we"
    },
    {
      "Time_Start": 717.2800000000001,
      "Time_End": 718.2800000000001,
      "Text": " are."
    },
    {
      "Time_Start": 718.2800000000001,
      "Time_End": 722.4000000000001,
      "Text": " Then there's also the resource section, as I said you can put anything in there, it's"
    },
    {
      "Time_Start": 722.4000000000001,
      "Time_End": 730.32,
      "Text": " a multi-step process though, it sucks a bit to be honest, uses some Win32 APIs, the intended"
    },
    {
      "Time_Start": 730.32,
      "Time_End": 734.9200000000001,
      "Text": " way to access those at runtime is to use those APIs, we don't want to do that and it's a"
    },
    {
      "Time_Start": 734.9200000000001,
      "Time_End": 741.6400000000001,
      "Text": " very common, well-known and super old approach, so not very good for OPSEC, I'd wager."
    },
    {
      "Time_Start": 741.68,
      "Time_End": 746.92,
      "Text": " One thing to note here which I find very interesting, just a side note, those names of those sections"
    },
    {
      "Time_Start": 746.92,
      "Time_End": 751.4399999999999,
      "Text": " are there by convention but not by rule, you are free to change and patch the section names"
    },
    {
      "Time_Start": 751.4399999999999,
      "Time_End": 755.88,
      "Text": " to whatever you like, just notice that when you don't use those conventional names it"
    },
    {
      "Time_Start": 755.88,
      "Time_End": 758.72,
      "Text": " will stand out a whole freaking lot."
    },
    {
      "Time_Start": 758.72,
      "Time_End": 763.8,
      "Text": " But that actually made me think, okay, let's maybe analyse what kind of sections you will"
    },
    {
      "Time_Start": 763.8,
      "Time_End": 769.04,
      "Text": " find in your regular exe files, let's do some, let's crunch some numbers."
    },
    {
      "Time_Start": 769.04,
      "Time_End": 773.36,
      "Text": " So what I did is I wrote a Python script that analysed all the executables it could"
    },
    {
      "Time_Start": 773.36,
      "Time_End": 779.48,
      "Text": " find in system 32, that was close to 6,000 files, more than 5 gigabytes of data and more"
    },
    {
      "Time_Start": 779.48,
      "Time_End": 785.76,
      "Text": " than a 2.5 gigabyte of just code, which I find to be kind of impressive, and I got some"
    },
    {
      "Time_Start": 785.76,
      "Time_End": 792.0,
      "Text": " fun facts here, so there are very, very large files, there's MSHDL which is 250 megabytes,"
    },
    {
      "Time_Start": 792.0,
      "Time_End": 797.88,
      "Text": " not sure whether you would analyse that on the fly if you implement your AVDR, probably"
    },
    {
      "Time_Start": 797.88,
      "Time_End": 802.52,
      "Text": " pretty costly, not sure, and you have got some very high entropy values that you can"
    },
    {
      "Time_Start": 802.52,
      "Time_End": 808.92,
      "Text": " find there, so to my fellow red teamers, if you are looking for a file that you can try"
    },
    {
      "Time_Start": 808.92,
      "Time_End": 814.68,
      "Text": " and impersonate, I would have a look at OneDrive setup.exe, you have got a very high file entropy,"
    },
    {
      "Time_Start": 814.68,
      "Time_End": 819.0,
      "Text": " just copy the metadata, see what you can do out of that, could be nice, and I found out"
    },
    {
      "Time_Start": 819.0,
      "Time_End": 824.68,
      "Text": " that in this selection of close to 6,000 files there were more than 120 unique section names,"
    },
    {
      "Time_Start": 825.0000000000001,
      "Time_End": 831.72,
      "Text": " that's a freaking lot, to be honest I have not encountered most of them before, it was wild."
    },
    {
      "Time_Start": 832.5200000000001,
      "Time_End": 838.2,
      "Text": " So some actual numbers though, more actual numbers, I plotted here the number of occurrences"
    },
    {
      "Time_Start": 838.2,
      "Time_End": 843.24,
      "Text": " of for example the resource section that I found in all of those files, so all in all of those"
    },
    {
      "Time_Start": 843.24,
      "Time_End": 851.0000000000001,
      "Text": " close to 6,000 files I found 5,500 roughly resource sections, then text also, they are"
    },
    {
      "Time_Start": 851.0,
      "Time_End": 857.96,
      "Text": " very, very prominent and in the lower chart you will see a plot of the measured entropy values of"
    },
    {
      "Time_Start": 857.96,
      "Time_End": 863.96,
      "Text": " those sections that I found. So let's have a look at those three ones because they are super"
    },
    {
      "Time_Start": 863.96,
      "Time_End": 868.84,
      "Text": " prominent and their entropy values also look kind of interesting, so just to try and make sense of"
    },
    {
      "Time_Start": 868.84,
      "Time_End": 873.8,
      "Text": " the visualisation here, the graph in the bottom for the resource section for example shows that"
    },
    {
      "Time_Start": 873.8000000000001,
      "Time_End": 881.08,
      "Text": " we got a distribution of values from 0 to 7, but a very heavy concentration around 2.5,"
    },
    {
      "Time_Start": 881.8800000000001,
      "Time_End": 888.6800000000001,
      "Text": " but there's another visualisation that I got for you and that's that, so entropy distribution"
    },
    {
      "Time_Start": 889.6400000000001,
      "Time_End": 894.2800000000001,
      "Text": " for the individual sections, so on the left hand side you can see the resource section, very"
    },
    {
      "Time_Start": 895.0000000000001,
      "Time_End": 899.4000000000001,
      "Text": " heavy concentration at 1.0, that's not very good for our purpose because we got very high"
    },
    {
      "Time_Start": 899.4,
      "Time_End": 905.24,
      "Text": " entropy data that we want to hide, not cool, very present but not cool, data section somewhere"
    },
    {
      "Time_Start": 905.24,
      "Time_End": 911.48,
      "Text": " in the middle around 5, 4.5, also not a very viable way to go, but then there's the absolute"
    },
    {
      "Time_Start": 911.48,
      "Time_End": 916.52,
      "Text": " kicker, that's the text section, they will see a naturally very high entropy, which makes sense"
    },
    {
      "Time_Start": 916.52,
      "Time_End": 921.24,
      "Text": " when you think about it, because you want to put a whole lot of code into your executable but you"
    },
    {
      "Time_Start": 921.24,
      "Time_End": 926.68,
      "Text": " don't want to produce a very large file, so encoding extra instructions should take up very"
    },
    {
      "Time_Start": 926.6800000000001,
      "Time_End": 931.1600000000001,
      "Text": " little space and then you've got a high information density and then you've got a high entropy."
    },
    {
      "Time_Start": 932.2,
      "Time_End": 939.4000000000001,
      "Text": " So that's cool, now we know where we could hide our payload, but our payload is way, way, way"
    },
    {
      "Time_Start": 939.4000000000001,
      "Time_End": 945.5600000000001,
      "Text": " of way higher entropy, so we need to bring that down. How do you do this though? Well, kind of"
    },
    {
      "Time_Start": 945.5600000000001,
      "Time_End": 951.5600000000001,
      "Text": " easy if you think about it, so let's consider that here we got an exemplary buffer of some bytes,"
    },
    {
      "Time_Start": 951.6400000000001,
      "Time_End": 957.0000000000001,
      "Text": " of a whole lot of bytes, they vary a lot so they got a high entropy, so what we can just do is we"
    },
    {
      "Time_Start": 957.0000000000001,
      "Time_End": 963.24,
      "Text": " can introduce a whole lot of repetitions, so artificially inflating the data, like think of"
    },
    {
      "Time_Start": 963.24,
      "Time_End": 970.6,
      "Text": " for example decompression, so when you have an archive you have a very high information density"
    },
    {
      "Time_Start": 971.4000000000001,
      "Time_End": 975.72,
      "Text": " but when you decompress it, it will be larger files but there will be the same information"
    },
    {
      "Time_Start": 975.72,
      "Time_End": 982.12,
      "Text": " contained in them, so that's what I think I would do and I did, so I came up with a very"
    },
    {
      "Time_Start": 982.12,
      "Time_End": 988.84,
      "Text": " naive approach and I thought to myself, okay, let's try and make things look like it was code,"
    },
    {
      "Time_Start": 988.84,
      "Time_End": 994.6800000000001,
      "Text": " so let's have a look at some code. This was notepad.exe running, a couple of instructions,"
    },
    {
      "Time_Start": 994.6800000000001,
      "Time_End": 998.2,
      "Text": " on the left hand side you can see the machine code that makes up those instructions, on the right"
    },
    {
      "Time_Start": 998.2,
      "Time_End": 1004.52,
      "Text": " hand side you can see the disassembly and what I noticed is, well, you know, we want to make"
    },
    {
      "Time_Start": 1005.24,
      "Time_End": 1011.0799999999999,
      "Text": " things look legit, so if we put anything into the text section it should be proper instructions,"
    },
    {
      "Time_Start": 1011.0799999999999,
      "Time_End": 1016.76,
      "Text": " it should look like proper instructions, so let's split them up, what your CPU needs and"
    },
    {
      "Time_Start": 1016.76,
      "Time_End": 1021.88,
      "Text": " what the disassembler really requires is that your instructions are valid and you can split up those"
    },
    {
      "Time_Start": 1021.88,
      "Time_End": 1028.68,
      "Text": " instructions into opcodes and operands, as long as you use valid opcodes and the right length of"
    },
    {
      "Time_Start": 1028.68,
      "Time_End": 1035.4,
      "Text": " operands if they are required, stuff looks like legitimate instruction and we can't really try"
    },
    {
      "Time_Start": 1035.4,
      "Time_End": 1040.28,
      "Text": " and hide anything within the opcode or else we might generate invalid instructions, so let's not"
    },
    {
      "Time_Start": 1040.28,
      "Time_End": 1045.8,
      "Text": " do that, but there's a whole bunch of operands, a whole bunch of space that we can abuse, so let's"
    },
    {
      "Time_Start": 1045.8,
      "Time_End": 1051.16,
      "Text": " kind of do that, so I just grabbed a couple of instructions, just like that, for example, and I"
    },
    {
      "Time_Start": 1051.16,
      "Time_End": 1056.76,
      "Text": " created templates from them in a JSON file, so I noted down the assembly, I noted down the bytes"
    },
    {
      "Time_Start": 1056.76,
      "Time_End": 1061.72,
      "Text": " that make up those instructions and I noted down where are the operands and how many bytes can I"
    },
    {
      "Time_Start": 1061.72,
      "Time_End": 1067.4,
      "Text": " encode into those operands, kind of easy, so I did this for a couple of instructions, so I had a"
    },
    {
      "Time_Start": 1067.4,
      "Time_End": 1073.64,
      "Text": " couple of templates and then let's try and hide some data using that or encode some data using"
    },
    {
      "Time_Start": 1073.64,
      "Time_End": 1079.64,
      "Text": " that, so I had those templates, I had my raw payload, I wrote a very small pre-processing"
    },
    {
      "Time_Start": 1079.64,
      "Time_End": 1085.72,
      "Text": " step and encoder which tries to generate legit looking instructions which don't really make any"
    },
    {
      "Time_Start": 1085.72,
      "Time_End": 1091.24,
      "Text": " sense because they're picked at random, but they look legit, this is what's coming out there, so"
    },
    {
      "Time_Start": 1091.96,
      "Time_End": 1097.48,
      "Text": " there you got those pseudo ASM instructions, those fake instructions and as you can see it's"
    },
    {
      "Time_Start": 1097.48,
      "Time_End": 1101.56,
      "Text": " in this case the same instruction every time just for demo purposes, but you can see that the"
    },
    {
      "Time_Start": 1101.56,
      "Time_End": 1107.8,
      "Text": " operands are 55, 48, 89, E5 which are precisely the bytes that are in our payload, that's kind"
    },
    {
      "Time_Start": 1107.8,
      "Time_End": 1115.56,
      "Text": " of neat, isn't it, and we can also then generate a payload that we put into a buffer, we put that"
    },
    {
      "Time_Start": 1115.56,
      "Time_End": 1121.3999999999999,
      "Text": " into a text section and boom, we just created fake instructions in our text section, nice, it looks"
    },
    {
      "Time_Start": 1121.3999999999999,
      "Time_End": 1127.24,
      "Text": " legit, kind of, but that leaves you with a whole bunch of fake instructions in your text section,"
    },
    {
      "Time_Start": 1127.24,
      "Time_End": 1132.44,
      "Text": " so what are you going to do, are you going to retrieve your raw payload again, you need a"
    },
    {
      "Time_Start": 1132.44,
      "Time_End": 1138.28,
      "Text": " decoder component at runtime, so that's what I wrote and then you get your recovered payload"
    },
    {
      "Time_Start": 1138.28,
      "Time_End": 1143.8799999999999,
      "Text": " again, so that's kind of nice, but maybe the keen eyed upon you will have noticed that there are"
    },
    {
      "Time_Start": 1143.88,
      "Time_End": 1148.92,
      "Text": " some significant drawbacks here, because for every byte that I encode, I create four additional"
    },
    {
      "Time_Start": 1148.92,
      "Time_End": 1154.8400000000001,
      "Text": " bytes, so I'm doing some very quick maths here, it's an increase in an overhead of 400% of things"
    },
    {
      "Time_Start": 1154.8400000000001,
      "Time_End": 1162.0400000000002,
      "Text": " that I do here, so your 300 kilobytes payload becomes 1.5 megabytes, that's not very good,"
    },
    {
      "Time_Start": 1162.0400000000002,
      "Time_End": 1168.3600000000001,
      "Text": " that's not very nice, so especially when you got stageless payloads like those 300 kilobytes,"
    },
    {
      "Time_Start": 1168.3600000000001,
      "Time_End": 1172.7600000000002,
      "Text": " it's kind of hard then delivering them to your target machine, it's really kind of obvious,"
    },
    {
      "Time_Start": 1173.64,
      "Time_End": 1177.72,
      "Text": " but the nice thing about it is you can see we got a net reduction of close to 60%,"
    },
    {
      "Time_Start": 1178.76,
      "Time_End": 1185.96,
      "Text": " that's a whole freaking lot, but is that feasible, yeah, I did this last year, pretty much"
    },
    {
      "Time_Start": 1187.16,
      "Time_End": 1192.68,
      "Text": " last June and I came to the conclusion, no, it's not, let's not do that, and I just moved on with"
    },
    {
      "Time_Start": 1192.68,
      "Time_End": 1201.72,
      "Text": " my life and life was good, but then things turned out to be challenging, so we face an EDR and that"
    },
    {
      "Time_Start": 1201.8,
      "Time_End": 1207.8,
      "Text": " EDR was a bit annoying, let me tell you about it. So that was four months after, in October,"
    },
    {
      "Time_Start": 1207.8,
      "Time_End": 1213.0,
      "Text": " and there my dear colleague Patrick reached out to me and said, dude, my payloads are getting"
    },
    {
      "Time_Start": 1213.0,
      "Time_End": 1218.28,
      "Text": " busted left and right, these EDRs are so annoying, I was like okay, why, what's the issue, tell me"
    },
    {
      "Time_Start": 1218.28,
      "Time_End": 1225.16,
      "Text": " about it, and he showed me a couple of screenshots, it was CrowdStrike Falcon, it was a bit of a pain"
    },
    {
      "Time_Start": 1225.16,
      "Time_End": 1230.28,
      "Text": " in the ass, and there it said in this pop up message, malicious behaviour was detected,"
    },
    {
      "Time_Start": 1230.28,
      "Time_End": 1235.08,
      "Text": " I was like, okay, that makes sense, if you think that you detected that, that's legit, okay."
    },
    {
      "Time_Start": 1235.96,
      "Time_End": 1241.32,
      "Text": " Then in that detection note there, in the details, it said detection is based on a couple of things,"
    },
    {
      "Time_Start": 1241.32,
      "Time_End": 1245.96,
      "Text": " and there it said packing or anti-malware evasion, I can see that, that makes sense,"
    },
    {
      "Time_Start": 1245.96,
      "Time_End": 1250.44,
      "Text": " I totally agree, but then it also said high degree of entropy, I was like what the hell,"
    },
    {
      "Time_Start": 1251.0,
      "Time_End": 1256.36,
      "Text": " like really, are you sure, because we saw that we got legitimate XE and DLL files that got very"
    },
    {
      "Time_Start": 1256.3600000000001,
      "Time_End": 1264.44,
      "Text": " high entropy, okay, let's tackle that vector, so let's have a look what's considered harmful,"
    },
    {
      "Time_Start": 1264.44,
      "Time_End": 1270.6000000000001,
      "Text": " right, so those lovely people over at practical security analytics did a bunch of an analysis,"
    },
    {
      "Time_Start": 1271.16,
      "Time_End": 1276.92,
      "Text": " they compared multiple thousands of files that were harmless and files that were malicious,"
    },
    {
      "Time_Start": 1276.92,
      "Time_End": 1281.3200000000002,
      "Text": " and they just plotted down here the overall file entropy, turns out there's a danger zone,"
    },
    {
      "Time_Start": 1281.32,
      "Time_End": 1288.28,
      "Text": " they consider everything with a greater entropy than 7.2 to be malicious, guess where we were at"
    },
    {
      "Time_Start": 1288.28,
      "Time_End": 1297.08,
      "Text": " with our payload, right in the danger zone, not very fun. So what do we do? We just set our new"
    },
    {
      "Time_Start": 1297.08,
      "Time_End": 1303.8,
      "Text": " POC there for that approach that I developed, so I used that one, then I had my 1.5 megabyte"
    },
    {
      "Time_Start": 1303.8,
      "Time_End": 1311.96,
      "Text": " file size, 1.5 megabyte size file, used that and yeah, easy, bypassed, cool, great success, cool."
    },
    {
      "Time_Start": 1313.32,
      "Time_End": 1318.04,
      "Text": " Turns out when I created those slides two weeks ago, I found I didn't do a very good research"
    },
    {
      "Time_Start": 1318.04,
      "Time_End": 1324.6,
      "Text": " in that topic, because there was Red Siege who published a blog post about evading crowd"
    },
    {
      "Time_Start": 1324.6,
      "Time_End": 1329.8799999999999,
      "Text": " sack falcon using entropy, they had the same problem statement and they found a very nice"
    },
    {
      "Time_Start": 1329.88,
      "Time_End": 1336.8400000000001,
      "Text": " approach to solving that. Yeah, they just append stuff to the XE file, who would have guessed?"
    },
    {
      "Time_Start": 1339.0,
      "Time_End": 1346.92,
      "Text": " Well, you could admit it's a good solution, you can even append like pictures, it will be fine."
    },
    {
      "Time_Start": 1348.2,
      "Time_End": 1355.48,
      "Text": " But yeah, there was, well, it was something different. Anyway, let's continue, I tried"
    },
    {
      "Time_Start": 1355.48,
      "Time_End": 1360.84,
      "Text": " doing some research then in the scientific field and tried looking up papers, I know my prompting"
    },
    {
      "Time_Start": 1360.84,
      "Time_End": 1365.48,
      "Text": " game and my searching game isn't that good, so yeah, I just looked for a hidden PIFA in Google"
    },
    {
      "Time_Start": 1365.48,
      "Time_End": 1370.84,
      "Text": " Scholar, a whole lot of results, a third of a million results, then I looked for information"
    },
    {
      "Time_Start": 1370.84,
      "Time_End": 1378.92,
      "Text": " hiding PIFA, what's that? Approved undetectable antivirus digonography from multimedia"
    },
    {
      "Time_Start": 1378.92,
      "Time_End": 1384.84,
      "Text": " information in PIFA, what the hell am I reading there? Approved undetectable antivirus, what the"
    },
    {
      "Time_Start": 1384.84,
      "Time_End": 1391.3999999999999,
      "Text": " hell? So I had a look, it was a wild paper, I would consider it not to be a very good one and I"
    },
    {
      "Time_Start": 1391.3999999999999,
      "Time_End": 1398.36,
      "Text": " also found out when I had a look at the citations there, there are a whole lot of people who are"
    },
    {
      "Time_Start": 1398.36,
      "Time_End": 1404.36,
      "Text": " co-authoring there, an awful bunch of people that are co-authoring there, I think they are just"
    },
    {
      "Time_Start": 1404.36,
      "Time_End": 1408.28,
      "Text": " pushing out a whole lot of papers, so let's not get into that any more but it's a lesson learned"
    },
    {
      "Time_Start": 1408.28,
      "Time_End": 1413.08,
      "Text": " for me to better look somewhere else for information about red teaming, you know."
    },
    {
      "Time_Start": 1414.12,
      "Time_End": 1419.8799999999999,
      "Text": " All right, so let's continue. We just successfully bypassed CrowdStrike's entropy detection which"
    },
    {
      "Time_Start": 1419.8799999999999,
      "Time_End": 1425.48,
      "Text": " we overengineered a bit but it was effective, very effective but it had significant drawbacks,"
    },
    {
      "Time_Start": 1425.48,
      "Time_End": 1431.72,
      "Text": " right, so for example when we had instruction templates that used a whole lot of padding"
    },
    {
      "Time_Start": 1431.72,
      "Time_End": 1438.04,
      "Text": " bytes and just a few bytes for encoding your payload, you would have a high file size, it just"
    },
    {
      "Time_Start": 1438.04,
      "Time_End": 1443.1599999999999,
      "Text": " showed you 400% overhead, that's kind of crazy but if you take the opposite and have just very"
    },
    {
      "Time_Start": 1443.1599999999999,
      "Time_End": 1448.12,
      "Text": " few padding bytes, here for example it's one byte, then you don't have an as effective entropy"
    },
    {
      "Time_Start": 1448.12,
      "Time_End": 1453.24,
      "Text": " reduction, that kind of sucks but at that point I decided, you know, the approach is kind of cool,"
    },
    {
      "Time_Start": 1453.24,
      "Time_End": 1458.44,
      "Text": " we can improve on that, let's give it a name, it's Codasm, like encoding payloads into pseudo"
    },
    {
      "Time_Start": 1458.44,
      "Time_End": 1464.28,
      "Text": " assembly instructions, let's get at it, what did we improve there? So there was the naive approach"
    },
    {
      "Time_Start": 1464.28,
      "Time_End": 1471.16,
      "Text": " here, right, we got those payload instruction templates but we can do more, there are more"
    },
    {
      "Time_Start": 1471.16,
      "Time_End": 1476.68,
      "Text": " things that we can abuse here and leverage to our purposes, so you got for example instructions"
    },
    {
      "Time_Start": 1476.68,
      "Time_End": 1482.76,
      "Text": " that don't got any operands really, we can use those to more in a more targeted fashion introduce"
    },
    {
      "Time_Start": 1482.76,
      "Time_End": 1487.48,
      "Text": " padding bytes which is kind of nice, that gives us more flexibility, also I just showed you that"
    },
    {
      "Time_Start": 1487.48,
      "Time_End": 1491.16,
      "Text": " when you generate those fake instructions they really stand out because they don't"
    },
    {
      "Time_Start": 1491.88,
      "Time_End": 1497.0,
      "Text": " for example we're missing function prologues and epilogues, it was easy to just implement that"
    },
    {
      "Time_Start": 1497.0,
      "Time_End": 1504.28,
      "Text": " and put our generated fake things just there in the middle, so I did that, kind of cool and also"
    },
    {
      "Time_Start": 1504.28,
      "Time_End": 1509.3200000000002,
      "Text": " since all this stuff uses a fair bunch of RNG it would just make sense to more closely control that,"
    },
    {
      "Time_Start": 1509.88,
      "Time_End": 1516.1200000000001,
      "Text": " so I implemented a means of controlling what the chance is of the next instruction being"
    },
    {
      "Time_Start": 1516.1200000000001,
      "Time_End": 1523.5600000000002,
      "Text": " generated to actually encode a payload byte or to become a padding instruction, sounds simple"
    },
    {
      "Time_Start": 1523.5600000000002,
      "Time_End": 1529.48,
      "Text": " but it was very effective. So let's see, I got some demo for you, because I can tell you all"
    },
    {
      "Time_Start": 1529.48,
      "Time_End": 1534.0400000000002,
      "Text": " about it but let me just show you I guess, could be nicer, just need to switch."
    },
    {
      "Time_Start": 1534.04,
      "Time_End": 1536.52,
      "Text": " Hope that stuff is still running."
    },
    {
      "Time_Start": 1564.84,
      "Time_End": 1574.52,
      "Text": " All right, so now you can see stuff, that's nice. Yeah, this is Codasm, so we got our"
    },
    {
      "Time_Start": 1575.72,
      "Time_End": 1580.92,
      "Text": " scripts here, we got a collection of instruction templates that I told you about here on the right"
    },
    {
      "Time_Start": 1580.92,
      "Time_End": 1586.76,
      "Text": " hand side, it's a fair bunch, there's a whole lot of stuff to it but I would say let's just"
    },
    {
      "Time_Start": 1586.76,
      "Time_End": 1595.96,
      "Text": " execute and have a look at it. So very simple example, let us create a demo payload, so just"
    },
    {
      "Time_Start": 1596.92,
      "Time_End": 1606.04,
      "Text": " 300 kilobytes of random stuff, we got that there, then let's actually run Codasm."
    },
    {
      "Time_Start": 1611.72,
      "Time_End": 1613.4,
      "Text": " Okay, fuck that up."
    },
    {
      "Time_Start": 1617.24,
      "Time_End": 1624.6,
      "Text": " Ha ha, so this might take a while, because it's 300,000 bytes that it needs to put somewhere"
    },
    {
      "Time_Start": 1624.6,
      "Time_End": 1629.64,
      "Text": " randomly, but it's done. So let's have a look at what it actually generates, I told you it will"
    },
    {
      "Time_Start": 1629.64,
      "Time_End": 1637.8,
      "Text": " generate source code, so here you can see just the blob of instructions and only the bytes of"
    },
    {
      "Time_Start": 1637.8,
      "Time_End": 1641.72,
      "Text": " those, so you can't really do a whole lot with that, it's a whole lot of instructions as you can"
    },
    {
      "Time_Start": 1641.72,
      "Time_End": 1648.28,
      "Text": " see, 900 kilobytes, that's a fair bunch. I also got some debug output, so this is the generated"
    },
    {
      "Time_Start": 1648.28,
      "Time_End": 1654.04,
      "Text": " pseudo instructions in a disassembled fashion, so you can try and make sense of that, but I think"
    },
    {
      "Time_Start": 1654.04,
      "Time_End": 1658.84,
      "Text": " one of the more interesting things to show here is actually the decoder, because you somehow need"
    },
    {
      "Time_Start": 1658.84,
      "Time_End": 1665.48,
      "Text": " to retrieve your stuff at run time again, right? So I got a couple of things just for utility"
    },
    {
      "Time_Start": 1665.48,
      "Time_End": 1669.96,
      "Text": " stuff, like a concept of buffer, reading from a buffer, things like that, XOR key, I do some XOR"
    },
    {
      "Time_Start": 1669.96,
      "Time_End": 1676.52,
      "Text": " encryption which is super cheap, but why not, just throw it in there, then I have a huge function"
    },
    {
      "Time_Start": 1676.52,
      "Time_End": 1682.28,
      "Text": " for parsing one single instruction from those buffers, and this function is just being called"
    },
    {
      "Time_Start": 1682.28,
      "Time_End": 1686.6000000000001,
      "Text": " over and over again in my decode function, so let's have a look at the parse instructions here,"
    },
    {
      "Time_Start": 1686.6000000000001,
      "Time_End": 1692.68,
      "Text": " and this is all generated by Codesign, so the rest of the file is pretty much pre-written by me,"
    },
    {
      "Time_Start": 1692.68,
      "Time_End": 1700.76,
      "Text": " but the rest here is generated, so here, for example, you see how will it try and get and decode"
    },
    {
      "Time_Start": 1700.76,
      "Time_End": 1712.2,
      "Text": " this instruction, JNZ, where is that? So that's it, so here we define that we have one byte of payload,"
    },
    {
      "Time_Start": 1712.2,
      "Time_End": 1717.48,
      "Text": " and this is at offset one, so what we first try and make sure is that the buffer actually has two"
    },
    {
      "Time_Start": 1717.48,
      "Time_End": 1724.04,
      "Text": " bytes to read from, same for the output buffer, we need to output one byte, and then we see whether"
    },
    {
      "Time_Start": 1724.04,
      "Time_End": 1730.52,
      "Text": " the first byte that we find is a hex 75, which is the first byte that we want to identify here."
    },
    {
      "Time_Start": 1730.52,
      "Time_End": 1736.2,
      "Text": " Which if you think about it, actually comes with a constraint for you, so you cannot put any"
    },
    {
      "Time_Start": 1736.2,
      "Time_End": 1740.6,
      "Text": " instructions in there, your opcodes need to be somewhat unique or else my approach here won't be"
    },
    {
      "Time_Start": 1740.6,
      "Time_End": 1746.92,
      "Text": " able to recover the correct instruction, because there might be ambiguous bytes that it tries to"
    },
    {
      "Time_Start": 1746.92,
      "Time_End": 1753.64,
      "Text": " find there. So it's a whole bunch of code, it's also I believe completely in line, isn't it?"
    },
    {
      "Time_Start": 1753.64,
      "Time_End": 1764.68,
      "Text": " I think so. Should be. Right, so this only gives you that much, if you take a look at it, you can't"
    },
    {
      "Time_Start": 1764.68,
      "Time_End": 1773.4,
      "Text": " really execute it, it's just supposed to be one step of your build, of your tool chain, and here I"
    },
    {
      "Time_Start": 1773.4,
      "Time_End": 1779.4,
      "Text": " included some sample users, you can use it like that, but let's actually use it like that, so"
    },
    {
      "Time_Start": 1779.4,
      "Time_End": 1789.4,
      "Text": " cd demo 2, right, so I prepared a little automatic compilation thing here which also use"
    },
    {
      "Time_Start": 1789.4,
      "Time_End": 1795.48,
      "Text": " Codecs and let's have a look at the output and what it actually does. So for example I generate a"
    },
    {
      "Time_Start": 1795.48,
      "Time_End": 1801.16,
      "Text": " pop calc shellcode which is just 300 bytes in size, it's not very representative for a real payload,"
    },
    {
      "Time_Start": 1801.16,
      "Time_End": 1807.72,
      "Text": " so what I do is I append like 300 kilobytes of random data from random to it, then I get a"
    },
    {
      "Time_Start": 1807.72,
      "Time_End": 1814.1200000000001,
      "Text": " binary file which has a very large entropy, then I do some more stuff like converting it to"
    },
    {
      "Time_Start": 1814.1200000000001,
      "Time_End": 1819.96,
      "Text": " shellcode using donut after I compile the basic loader, then I throw it into Codecs and then I"
    },
    {
      "Time_Start": 1819.96,
      "Time_End": 1829.48,
      "Text": " actually build an executable. So that is the Codecs, let's have a look at the entropy of"
    },
    {
      "Time_Start": 1829.72,
      "Time_End": 1843.72,
      "Text": " Codecs.exe, so you can see it's an entropy of 6.5, it's very, very low, but again you will see"
    },
    {
      "Time_Start": 1843.72,
      "Time_End": 1849.72,
      "Text": " that Codecs.exe now is one megabyte in size, so again we got the size increase, that's supposed"
    },
    {
      "Time_Start": 1849.72,
      "Time_End": 1856.68,
      "Text": " to be there kind of, but we got a nice low entropy. Now I would expect that when I run it, I"
    },
    {
      "Time_Start": 1856.68,
      "Time_End": 1864.28,
      "Text": " actually pop calc, let's have a look, there it is, cool, works kind of nicely. So that was the"
    },
    {
      "Time_Start": 1864.28,
      "Time_End": 1870.1200000000001,
      "Text": " retinas perspective, let's have a look at how you would look at it when you are analysing the file,"
    },
    {
      "Time_Start": 1870.1200000000001,
      "Time_End": 1875.96,
      "Text": " so let's just do that. We already saw that the entropy really isn't high, so to us that doesn't"
    },
    {
      "Time_Start": 1875.96,
      "Time_End": 1884.04,
      "Text": " mean anything right now, but let's have a look at the other stuff that we can find out about it,"
    },
    {
      "Time_Start": 1884.12,
      "Time_End": 1890.44,
      "Text": " like the sections. We got a couple of sections here, all the usual suspects, but what really"
    },
    {
      "Time_Start": 1890.44,
      "Time_End": 1896.6,
      "Text": " stands out here to me at least is that the text section is huge, so usually here is a diagram of"
    },
    {
      "Time_Start": 1897.72,
      "Time_End": 1903.32,
      "Text": " where the individual sections are and the size pretty much says how big it is in relation to"
    },
    {
      "Time_Start": 1903.32,
      "Time_End": 1908.2,
      "Text": " other sections. You can see they are all stuffed down here because they are just so tiny compared"
    },
    {
      "Time_Start": 1908.2,
      "Time_End": 1912.76,
      "Text": " to the text section, the text section is almost a megabyte in size, which is crazy, so if I were"
    },
    {
      "Time_Start": 1912.76,
      "Time_End": 1917.8799999999999,
      "Text": " analysing the file, I would be already like oof, that's a lot of code in there, it's going to be"
    },
    {
      "Time_Start": 1917.8799999999999,
      "Time_End": 1925.32,
      "Text": " tough, okay, let's have a look. Now we see, you can also have a look at what APIs are being used"
    },
    {
      "Time_Start": 1925.32,
      "Time_End": 1931.96,
      "Text": " by that file, here we got for example kernel 32 DLL and it uses virtual protect, that's pretty"
    },
    {
      "Time_Start": 1931.96,
      "Time_End": 1937.08,
      "Text": " nice, we know that we use that to mark sections as for example executable, that would be a nice"
    },
    {
      "Time_Start": 1937.08,
      "Time_End": 1943.96,
      "Text": " thing to have a look at, so let's have a look at that. We load it into Jitra,"
    },
    {
      "Time_Start": 1949.1599999999999,
      "Time_End": 1953.56,
      "Text": " and you would suspect that analysing that file in Jitra takes a whole lot of time because it's"
    },
    {
      "Time_Start": 1953.56,
      "Time_End": 1961.6399999999999,
      "Text": " one megabyte of text, right, turns out it doesn't, because Jitra is clever enough not to try and"
    },
    {
      "Time_Start": 1961.72,
      "Time_End": 1965.8000000000002,
      "Text": " analyse my generated junk code, but let's have a look at that."
    },
    {
      "Time_Start": 1969.0,
      "Time_End": 1973.88,
      "Text": " So you see it's doing its thing, but it will be done pretty much soon."
    },
    {
      "Time_Start": 1980.68,
      "Time_End": 1987.16,
      "Text": " Right, so I'll take a shortcut here to save a bit of time, because I wrote that thing, I know what"
    },
    {
      "Time_Start": 1987.16,
      "Time_End": 1993.4,
      "Text": " to find in here, right, so there is one very telling string that I can have a look at and that"
    },
    {
      "Time_Start": 1993.4,
      "Time_End": 1998.28,
      "Text": " says fail to decode, since I know that we want to decode things at runtime, let's have a look"
    },
    {
      "Time_Start": 1999.0800000000002,
      "Time_End": 2003.16,
      "Text": " where this is being used. So that's there."
    },
    {
      "Time_Start": 2007.16,
      "Time_End": 2014.68,
      "Text": " And here we can then work our way up, so here it says fail to decode, there's an if statement"
    },
    {
      "Time_Start": 2014.68,
      "Time_End": 2020.52,
      "Text": " right before and there's a function from which that value which is being evaluated here is"
    },
    {
      "Time_Start": 2020.52,
      "Time_End": 2026.52,
      "Text": " returned, so I would guess this has something to do with encoding and one interesting thing is that"
    },
    {
      "Time_Start": 2026.52,
      "Time_End": 2031.0,
      "Text": " we actually pass a pointer to the text section, to a function, let's have a look at that."
    },
    {
      "Time_Start": 2032.44,
      "Time_End": 2039.0,
      "Text": " You can see, okay, this is a very short function and Jitra fails to disassemble stuff very, very"
    },
    {
      "Time_Start": 2039.0,
      "Time_End": 2043.96,
      "Text": " quickly, because here it just got an arbitrary jump to somewhere, right, it's not even a valid"
    },
    {
      "Time_Start": 2043.96,
      "Time_End": 2050.2,
      "Text": " destination, so it can't really try and make sense of that, I can try to make it manually"
    },
    {
      "Time_Start": 2050.2,
      "Time_End": 2056.12,
      "Text": " disassemble things again, but this takes a whole lot of time, might be quite tricky, so if I was"
    },
    {
      "Time_Start": 2056.12,
      "Time_End": 2061.32,
      "Text": " seeing that as an analyst, I would be like what the hell, what am I seeing here, this looks like"
    },
    {
      "Time_Start": 2061.32,
      "Time_End": 2069.2400000000002,
      "Text": " code but it doesn't make any sense and the thing is you will find that you can very easily find"
    },
    {
      "Time_Start": 2069.2400000000002,
      "Time_End": 2075.0800000000004,
      "Text": " where the data is being decoded to and you can just dump that at runtime. I won't do that now"
    },
    {
      "Time_Start": 2075.0800000000004,
      "Time_End": 2080.6800000000003,
      "Text": " though, because it takes a whole bunch of time, but I would say let's have a look at what we"
    },
    {
      "Time_Start": 2080.6800000000003,
      "Time_End": 2085.4,
      "Text": " actually learn from this approach, so how we can actually use that tool. What's also that I"
    },
    {
      "Time_Start": 2085.64,
      "Time_End": 2090.6800000000003,
      "Text": " learned here, so I will just re-plug again, give me a sec."
    },
    {
      "Time_Start": 2090.68,
      "Time_End": 2096.68,
      "Text": " Okay. The monitor thingy again. Swap. This looks right. Okay. So this is what we are"
    },
    {
      "Time_Start": 2121.24,
      "Time_End": 2131.24,
      "Text": " Cool. So let's have a look at the results and draw some conclusions. What I did here is I did a"
    },
    {
      "Time_Start": 2131.24,
      "Time_End": 2136.68,
      "Text": " couple of test runs with varying encoding versus padding chances, so I told you about the factor"
    },
    {
      "Time_Start": 2136.68,
      "Time_End": 2140.7599999999998,
      "Text": " that I can control whether the next instruction that's being generated actually encodes payload"
    },
    {
      "Time_Start": 2140.7599999999998,
      "Time_End": 2148.44,
      "Text": " or just generates padding instructions, so when I go ahead and say that I only want to have a"
    },
    {
      "Time_Start": 2148.44,
      "Time_End": 2154.92,
      "Text": " chance of 10% to actually encode payload, then I get a very nice decrease in entropy, because I'm"
    },
    {
      "Time_Start": 2154.92,
      "Time_End": 2159.88,
      "Text": " generating a whole lot of trash, so that's minus 38%, that's a whole lot, but then my file actually"
    },
    {
      "Time_Start": 2159.88,
      "Time_End": 2165.48,
      "Text": " gets 4 megabytes in size, that's insane. You don't want to do that. Then somewhere later there, we"
    },
    {
      "Time_Start": 2165.48,
      "Time_End": 2169.88,
      "Text": " got still a very nice entropy reduction and I copy pasted the wrong value there, just ignore that,"
    },
    {
      "Time_Start": 2170.6,
      "Time_End": 2177.08,
      "Text": " but I still got like 600% of overhead of file size. That's still kind of bad. Then later on,"
    },
    {
      "Time_Start": 2177.7999999999997,
      "Time_End": 2183.64,
      "Text": " you know, it just converges to the right there, still got a very nice entropy reduction to 6.4,"
    },
    {
      "Time_Start": 2184.2,
      "Time_End": 2188.52,
      "Text": " which is very close to the 6.5 that we found in the text section, just from natural samples, so to"
    },
    {
      "Time_Start": 2188.52,
      "Time_End": 2195.88,
      "Text": " speak, so that's perfectly fine, but I still got close to 200% of overhead, but you can make it"
    },
    {
      "Time_Start": 2195.88,
      "Time_End": 2203.3199999999997,
      "Text": " work in certain cases. So what did we learn from that? Let's draw some conclusions. Well, that"
    },
    {
      "Time_Start": 2203.32,
      "Time_End": 2207.96,
      "Text": " approach and that tool is effective in what it does. It's not a silver bullet, you should only"
    },
    {
      "Time_Start": 2207.96,
      "Time_End": 2211.48,
      "Text": " use it when necessary, because the drawback is obviously you got a huge payload, don't want to"
    },
    {
      "Time_Start": 2211.48,
      "Time_End": 2216.52,
      "Text": " do that if you don't need to. Honestly, I used that tool on a couple of assessments now, it is"
    },
    {
      "Time_Start": 2216.52,
      "Time_End": 2221.56,
      "Text": " good at what it does, but I really use it super rarely, because you can really, on very rare"
    },
    {
      "Time_Start": 2221.56,
      "Time_End": 2228.84,
      "Text": " occasions, really make that trade-off. It needs to make sense. But the cool thing is, you can also"
    },
    {
      "Time_Start": 2229.2400000000002,
      "Time_End": 2235.1600000000003,
      "Text": " plug it into other tools, potentially. It needs a bit more work, but you could, for example,"
    },
    {
      "Time_Start": 2235.1600000000003,
      "Time_End": 2241.88,
      "Text": " couple it with SigFlip. I don't know, do you guys know SigFlip? Hands up. Geez, you really need to"
    },
    {
      "Time_Start": 2241.88,
      "Time_End": 2245.8,
      "Text": " learn that tool, that's really cool. So SigFlip, for example, is a tool that lets you embed pretty"
    },
    {
      "Time_Start": 2245.8,
      "Time_End": 2250.36,
      "Text": " much arbitrary data into signed executables, for example, Microsoft signed executables, and this"
    },
    {
      "Time_Start": 2250.36,
      "Time_End": 2255.48,
      "Text": " will not break the signature, super nice for payload crafting, and you could couple Codesign"
    },
    {
      "Time_Start": 2255.48,
      "Time_End": 2261.16,
      "Text": " with that. You could also do more improvements for how those instructions are being generated,"
    },
    {
      "Time_Start": 2261.16,
      "Time_End": 2266.04,
      "Text": " so that, for example, JITAR won't stop trying to disassemble stuff, just because one instruction"
    },
    {
      "Time_Start": 2266.04,
      "Time_End": 2271.96,
      "Text": " points to an invalid place, so you could improve those instructions there that are being generated,"
    },
    {
      "Time_Start": 2272.68,
      "Time_End": 2276.76,
      "Text": " and what I think could be a very nice thing to do is implement a multi-language decoder,"
    },
    {
      "Time_Start": 2276.76,
      "Time_End": 2281.48,
      "Text": " so far you can only retrieve those bytes at runtime using C code, but I think implementing"
    },
    {
      "Time_Start": 2281.48,
      "Time_End": 2288.28,
      "Text": " that in C Sharp, Golang, Rust, whatever, could be a really nice thing. Then there's a lesson"
    },
    {
      "Time_Start": 2288.28,
      "Time_End": 2294.28,
      "Text": " learned, a very personal lesson for me, research. I need to do research and better research, so"
    },
    {
      "Time_Start": 2294.84,
      "Time_End": 2301.2400000000002,
      "Text": " the fact that I only very late found that Red Seed blog post, I'm going to work on that, but"
    },
    {
      "Time_Start": 2301.2400000000002,
      "Time_End": 2306.44,
      "Text": " maybe also a takeaway for you, if you look for information that is very much focused on"
    },
    {
      "Time_Start": 2306.44,
      "Time_End": 2313.2400000000002,
      "Text": " Red Team related stuff, do look at the appropriate places, so go look up those Red Team base or"
    },
    {
      "Time_Start": 2313.2400000000002,
      "Time_End": 2321.08,
      "Text": " focus blogs, and that brings us pretty much to the end. Thank you very much for your attention."
    }
  ]
}