{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 7.96,
      "Text": "This text was transcribed using whisper model: large-v2\n\n So, yeah, I'm Kevin, I'm from SynActive in France."
    },
    {
      "Time_Start": 7.96,
      "Time_End": 13.16,
      "Text": " We are doing pen testing and stuff like that, reverse too."
    },
    {
      "Time_Start": 13.16,
      "Time_End": 18.400000000000002,
      "Text": " So I've been doing research recently on DCOM."
    },
    {
      "Time_Start": 18.400000000000002,
      "Time_End": 21.52,
      "Text": " So it's an old technology, we'll see that."
    },
    {
      "Time_Start": 21.52,
      "Time_End": 26.14,
      "Text": " And I wanted to check for DLL hijacking on COM classes."
    },
    {
      "Time_Start": 26.14,
      "Time_End": 28.44,
      "Text": " So it's a tedious process."
    },
    {
      "Time_Start": 28.44,
      "Time_End": 32.1,
      "Text": " You need to get the legit DLL, you"
    },
    {
      "Time_Start": 32.1,
      "Time_End": 34.9,
      "Text": " have to get the exported function from the DLL,"
    },
    {
      "Time_Start": 34.9,
      "Time_End": 38.54,
      "Text": " compile the MySUSE DLL, and then activate the remote class"
    },
    {
      "Time_Start": 38.54,
      "Time_End": 41.900000000000006,
      "Text": " to trigger the DLL hijacking."
    },
    {
      "Time_Start": 41.900000000000006,
      "Time_End": 45.02,
      "Text": " And I had thousands of classes to check,"
    },
    {
      "Time_Start": 45.02,
      "Time_End": 47.3,
      "Text": " so I decided to make a tool."
    },
    {
      "Time_Start": 47.3,
      "Time_End": 53.260000000000005,
      "Text": " It's called DLHell, but first we have to see what is DCOM."
    },
    {
      "Time_Start": 53.260000000000005,
      "Time_End": 56.66,
      "Text": " And that's the developer from Microsoft"
    },
    {
      "Time_Start": 56.660000000000004,
      "Time_End": 63.18000000000001,
      "Text": " when you ask him, what is DCOM, you just see his face."
    },
    {
      "Time_Start": 63.18000000000001,
      "Time_End": 66.42,
      "Text": " So, yeah, DCOM is quite complicated."
    },
    {
      "Time_Start": 66.42,
      "Time_End": 67.78,
      "Text": " It's an old technology."
    },
    {
      "Time_Start": 70.86,
      "Time_End": 74.94,
      "Text": " First, before seeing what is DCOM,"
    },
    {
      "Time_Start": 74.94,
      "Time_End": 77.66,
      "Text": " you have to understand what is COM."
    },
    {
      "Time_Start": 77.66,
      "Time_End": 82.46000000000001,
      "Text": " COM stands for Component Object Model."
    },
    {
      "Time_Start": 82.46000000000001,
      "Time_End": 87.42,
      "Text": " It was launched in 1993, so it's very old."
    },
    {
      "Time_Start": 87.42,
      "Time_End": 91.62,
      "Text": " It's embedded in Windows, and it's a very important"
    },
    {
      "Time_Start": 91.62,
      "Time_End": 94.38000000000001,
      "Text": " technology inside Windows."
    },
    {
      "Time_Start": 94.38000000000001,
      "Time_End": 98.54,
      "Text": " It's the successor of OLE, Object Linking and Embedding,"
    },
    {
      "Time_Start": 98.54,
      "Time_End": 102.10000000000001,
      "Text": " which was used in the Office application"
    },
    {
      "Time_Start": 102.10000000000001,
      "Time_End": 107.58000000000001,
      "Text": " to embed documents in spreadsheets and presentations"
    },
    {
      "Time_Start": 107.58000000000001,
      "Time_End": 108.54,
      "Text": " and stuff like that."
    },
    {
      "Time_Start": 108.94000000000001,
      "Time_End": 112.82000000000001,
      "Text": " So you had Excel spreadsheets within your PowerPoint"
    },
    {
      "Time_Start": 112.82000000000001,
      "Time_End": 116.14,
      "Text": " presentation, and this was OLE."
    },
    {
      "Time_Start": 116.14,
      "Time_End": 119.7,
      "Text": " It was the first use case for this technology."
    },
    {
      "Time_Start": 119.7,
      "Time_End": 124.34,
      "Text": " So basically, it's a middleware between Windows processes,"
    },
    {
      "Time_Start": 124.34,
      "Time_End": 127.34,
      "Text": " if you want to simplify the thing."
    },
    {
      "Time_Start": 127.34,
      "Time_End": 130.94,
      "Text": " And DCOM stands for Distributed COM."
    },
    {
      "Time_Start": 130.94,
      "Time_End": 133.34,
      "Text": " It's the network implementation of COM."
    },
    {
      "Time_Start": 133.34,
      "Time_End": 137.94,
      "Text": " So between computers, you can trigger instantiate classes"
    },
    {
      "Time_Start": 137.94,
      "Time_End": 141.98,
      "Text": " and access methods on remote hosts."
    },
    {
      "Time_Start": 141.98,
      "Time_End": 149.74,
      "Text": " So the objects in COM are identified using the CLSID."
    },
    {
      "Time_Start": 149.74,
      "Time_End": 151.85999999999999,
      "Text": " So it's a class identifier."
    },
    {
      "Time_Start": 151.85999999999999,
      "Time_End": 156.14,
      "Text": " So within the server, you can have multiple objects."
    },
    {
      "Time_Start": 156.14,
      "Time_End": 159.42,
      "Text": " And inside a container named AppID,"
    },
    {
      "Time_Start": 159.42,
      "Time_End": 165.57999999999998,
      "Text": " so it's basically a grid that embeds multiple objects."
    },
    {
      "Time_Start": 165.58,
      "Time_End": 169.66000000000003,
      "Text": " And each of those objects have a CLSID, which identifies them,"
    },
    {
      "Time_Start": 169.66000000000003,
      "Time_End": 176.22000000000003,
      "Text": " and a ProgID, which is a friendly name for the class."
    },
    {
      "Time_Start": 176.22000000000003,
      "Time_End": 179.94,
      "Text": " So objects define interfaces."
    },
    {
      "Time_Start": 179.94,
      "Time_End": 183.98000000000002,
      "Text": " From those interfaces, you can call methods"
    },
    {
      "Time_Start": 183.98000000000002,
      "Time_End": 186.42000000000002,
      "Text": " on the remote process."
    },
    {
      "Time_Start": 186.42000000000002,
      "Time_End": 190.62,
      "Text": " And there are two types of servers, in-process servers,"
    },
    {
      "Time_Start": 190.62,
      "Time_End": 195.3,
      "Text": " which are, as their name, inside the process."
    },
    {
      "Time_Start": 195.58,
      "Time_End": 197.98000000000002,
      "Text": " They are implemented in a DLL file,"
    },
    {
      "Time_Start": 197.98000000000002,
      "Time_End": 201.78,
      "Text": " and out-of-process objects, which are implemented"
    },
    {
      "Time_Start": 201.78,
      "Time_End": 206.70000000000002,
      "Text": " in executable files, so exe files."
    },
    {
      "Time_Start": 206.70000000000002,
      "Time_End": 211.42000000000002,
      "Text": " So basically, before calling any methods on the COM object,"
    },
    {
      "Time_Start": 211.42000000000002,
      "Time_End": 215.18,
      "Text": " you have to activate it, instantiate the object."
    },
    {
      "Time_Start": 215.18,
      "Time_End": 218.46,
      "Text": " And to do that, the computer, Windows,"
    },
    {
      "Time_Start": 218.46,
      "Time_End": 223.14000000000001,
      "Text": " just looks at the registry and checks for two input,"
    },
    {
      "Time_Start": 223.14000000000001,
      "Time_End": 226.82000000000002,
      "Text": " two keys, in-proc server 32."
    },
    {
      "Time_Start": 226.82000000000002,
      "Time_End": 230.74,
      "Text": " If this key is present, then it's an in-process server."
    },
    {
      "Time_Start": 230.74,
      "Time_End": 235.9,
      "Text": " So the computer just loads the DLL"
    },
    {
      "Time_Start": 235.9,
      "Time_End": 240.66000000000003,
      "Text": " and instantiates the object, so you can call methods on it."
    },
    {
      "Time_Start": 240.66000000000003,
      "Time_End": 245.5,
      "Text": " So it's not the most interesting type of server,"
    },
    {
      "Time_Start": 245.5,
      "Time_End": 247.94000000000003,
      "Text": " in the case of DLL hijacking."
    },
    {
      "Time_Start": 247.94000000000003,
      "Time_End": 250.62,
      "Text": " Local server 32 is more interesting,"
    },
    {
      "Time_Start": 250.62,
      "Time_End": 254.34,
      "Text": " because it creates a process from an exe file,"
    },
    {
      "Time_Start": 254.34,
      "Time_End": 256.1,
      "Text": " defined in the registry."
    },
    {
      "Time_Start": 256.1,
      "Time_End": 259.9,
      "Text": " So basically, you can, using DCOM,"
    },
    {
      "Time_Start": 259.9,
      "Time_End": 268.18,
      "Text": " you can trigger and create a process from a remote host."
    },
    {
      "Time_Start": 268.18,
      "Time_End": 274.42,
      "Text": " So you need a local admin rights on the remote computer"
    },
    {
      "Time_Start": 274.42,
      "Time_End": 276.38,
      "Text": " to activate the class."
    },
    {
      "Time_Start": 276.38,
      "Time_End": 284.98,
      "Text": " And it's using port 135 to connect on the remote host."
    },
    {
      "Time_Start": 284.98,
      "Time_End": 289.82,
      "Text": " So it's the default rights, but some classes"
    },
    {
      "Time_Start": 289.82,
      "Time_End": 294.54,
      "Text": " may implement different rights."
    },
    {
      "Time_Start": 294.54,
      "Time_End": 297.14,
      "Text": " So DLL hijacking, how it works, it's"
    },
    {
      "Time_Start": 297.14,
      "Time_End": 301.74,
      "Text": " the second part of the two."
    },
    {
      "Time_Start": 301.74,
      "Time_End": 305.54,
      "Text": " If the reference DLL does not exist on the file system,"
    },
    {
      "Time_Start": 305.54,
      "Time_End": 309.90000000000003,
      "Text": " and the program calls it, you can just"
    },
    {
      "Time_Start": 309.90000000000003,
      "Time_End": 313.94,
      "Text": " place a malicious DLL file to execute arbitrary code."
    },
    {
      "Time_Start": 313.94,
      "Time_End": 319.58000000000004,
      "Text": " So it's the simplest DLL hijacking that you can do."
    },
    {
      "Time_Start": 319.58000000000004,
      "Time_End": 325.14000000000004,
      "Text": " And the second one is if the reference DLL exists,"
    },
    {
      "Time_Start": 325.14000000000004,
      "Time_End": 326.46000000000004,
      "Text": " but it's writable."
    },
    {
      "Time_Start": 326.46000000000004,
      "Time_End": 328.94,
      "Text": " Imagine in OneDrive, for example,"
    },
    {
      "Time_Start": 328.94,
      "Time_End": 332.82000000000005,
      "Text": " you have DLLs that are user-writable."
    },
    {
      "Time_Start": 332.82000000000005,
      "Time_End": 335.14000000000004,
      "Text": " You don't need admin rights."
    },
    {
      "Time_Start": 335.14,
      "Time_End": 338.18,
      "Text": " And you can just rewrite the legit DLL"
    },
    {
      "Time_Start": 338.18,
      "Time_End": 340.58,
      "Text": " and execute malicious code."
    },
    {
      "Time_Start": 340.58,
      "Time_End": 342.41999999999996,
      "Text": " But it breaks the application."
    },
    {
      "Time_Start": 342.41999999999996,
      "Time_End": 345.46,
      "Text": " So in order to make it work, you just"
    },
    {
      "Time_Start": 345.46,
      "Time_End": 348.14,
      "Text": " proxy the function, the legit function."
    },
    {
      "Time_Start": 348.14,
      "Time_End": 354.38,
      "Text": " So you call the malicious DLL that proxies to the legit DLL,"
    },
    {
      "Time_Start": 354.38,
      "Time_End": 359.14,
      "Text": " and then the application doesn't break."
    },
    {
      "Time_Start": 359.14,
      "Time_End": 361.86,
      "Text": " So how to find resting classes?"
    },
    {
      "Time_Start": 361.86,
      "Time_End": 363.82,
      "Text": " It's pretty easy."
    },
    {
      "Time_Start": 363.82,
      "Time_End": 367.74,
      "Text": " You just have to launch ProcMon from sysinternals"
    },
    {
      "Time_Start": 367.74,
      "Time_End": 372.74,
      "Text": " and look for name not found on DLL files."
    },
    {
      "Time_Start": 372.74,
      "Time_End": 382.42,
      "Text": " Or you can just watch for which DLLs are called by the exe file."
    },
    {
      "Time_Start": 382.42,
      "Time_End": 387.42,
      "Text": " And then you activate the com class."
    },
    {
      "Time_Start": 387.42,
      "Time_End": 393.18,
      "Text": " And you just see the results and look for loaded DLLs"
    },
    {
      "Time_Start": 393.18,
      "Time_End": 397.42,
      "Text": " that you can hijack using the two previous methods."
    },
    {
      "Time_Start": 397.42,
      "Time_End": 402.5,
      "Text": " So what DLL does, it does all those steps"
    },
    {
      "Time_Start": 402.5,
      "Time_End": 406.22,
      "Text": " that are pretty tedious."
    },
    {
      "Time_Start": 406.22,
      "Time_End": 409.58,
      "Text": " So downloading the legit DLL from the victim using"
    },
    {
      "Time_Start": 409.58,
      "Time_End": 414.86,
      "Text": " SMB, using impacket in this case,"
    },
    {
      "Time_Start": 414.86,
      "Time_End": 416.82,
      "Text": " it extracts the function exports,"
    },
    {
      "Time_Start": 416.82,
      "Time_End": 420.18,
      "Text": " compiles the proxy DLL using mingwin,"
    },
    {
      "Time_Start": 420.18,
      "Time_End": 423.46,
      "Text": " because I didn't want to use Visual Studio,"
    },
    {
      "Time_Start": 423.46,
      "Time_End": 427.3,
      "Text": " and puts the DLL, the original, the malicious one,"
    },
    {
      "Time_Start": 427.3,
      "Time_End": 431.22,
      "Text": " on the victim computer and activates to the com class."
    },
    {
      "Time_Start": 431.22,
      "Time_End": 433.58,
      "Text": " So here is the command."
    },
    {
      "Time_Start": 433.58,
      "Time_End": 440.3,
      "Text": " Unfortunately, it's a spare laptop, not my laptop from work,"
    },
    {
      "Time_Start": 440.3,
      "Time_End": 444.38,
      "Text": " so I didn't have anything set up to show you a demo."
    },
    {
      "Time_Start": 444.38,
      "Time_End": 446.18,
      "Text": " But you can just try it."
    },
    {
      "Time_Start": 446.18,
      "Time_End": 448.14,
      "Text": " It's available on GitHub."
    },
    {
      "Time_Start": 448.14,
      "Time_End": 450.7,
      "Text": " And the command is pretty simple."
    },
    {
      "Time_Start": 450.7,
      "Time_End": 458.53999999999996,
      "Text": " You just need to specify the credentials, the remote DLL,"
    },
    {
      "Time_Start": 458.53999999999996,
      "Time_End": 460.65999999999997,
      "Text": " and the legit one, and the command"
    },
    {
      "Time_Start": 460.65999999999997,
      "Time_End": 463.09999999999997,
      "Text": " that you want to execute."
    },
    {
      "Time_Start": 463.09999999999997,
      "Time_End": 467.3,
      "Text": " The template is just the DLL source file."
    },
    {
      "Time_Start": 467.3,
      "Time_End": 471.21999999999997,
      "Text": " It's just a simple template that makes a create process"
    },
    {
      "Time_Start": 471.86,
      "Time_End": 477.94000000000005,
      "Text": " and calls the command calc.exe, the command that you specify."
    },
    {
      "Time_Start": 480.82000000000005,
      "Time_End": 486.18,
      "Text": " Some tools that does that already exist,"
    },
    {
      "Time_Start": 486.18,
      "Time_End": 492.66,
      "Text": " but I didn't find any tool that makes the compilation using"
    },
    {
      "Time_Start": 492.66,
      "Time_End": 494.62,
      "Text": " mingwin and some of the stuff."
    },
    {
      "Time_Start": 494.62,
      "Time_End": 501.06,
      "Text": " So nothing that does all of the work, so I just made one."
    }
  ]
}