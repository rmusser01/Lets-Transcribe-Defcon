**Cloud Console Cartographer: Tapping Into Mapping > Slogging Thru Logging** 

- Understanding cloud logs is essential but challenging, especially when a single click can generate hundreds of events. 
- Event logs are crucial for security professionals to understand activities in an environment. 
- Cloud logs differ significantly from on-premise logs in format and granularity between providers. 
- Browser-based console sessions can obfuscate user actions with numerous backend API invocations. 
- The open-source Cloud Console Cartographer tool provides clarity by mapping events to user actions. 

**Event Logs: Facts and Visibility** 

- Logs provide facts and visibility into what has happened. 
- It's important to ensure logs are available, understand log sources, and take action on the logs. 
- Cloud logs are less granular and abstracted, focusing on API calls determined by the provider. 

**Cloud Logs: Control Plane and Data Plane** 

- Control plane logs relate to configuration changes and are usually enabled. 
- Data plane logs refer to usage and are often disabled due to volume and cost. 
- Cloud providers vary in log generation delays and retention limits. 

**Example Cloud Logs: AWS vs. Azure** 

- AWS and Azure cloud logs differ in structure and detail. 
- Normalization is important for multi-cloud environments. 

**Interactive Cloud Console Usage: Attackers and Logs** 

- Attackers, including threat actors like Lucre 1 and Lucre 3, use cloud consoles for tasks like reconnaissance and exfiltration. 
- Technical limitations may also drive attackers to use consoles, e.g., a federated token unable to access IAM service except through the console. 

**Noisy Console Logs: AWS Enumeration** 

- AWS console logs can be noisy, generating many events for simple enumeration actions. 
- Azure tends to log only changes, resulting in fewer logs. 

**Problem: Noisy Console Logs and High Volume** 

- High volume of console logs can overwhelm defenders, making it difficult to identify important activities. 
- A single user click can trigger multiple backend API calls, resulting in a large number of events. 

**Solution: Cloud Console Cartographer** 

- The Cloud Console Cartographer tool maps console events to user actions, providing clarity for defenders. 
- It categorizes events as anchor, required, or optional, and uses a two-pass approach for label addition and signal generation. 
- The tool extracts relevant data, handles complex scenarios, and merges/modifies signals as needed. 

**Demo: Emulating Attacker Techniques** 

- The demo emulates an attacker's actions, including user enumeration, access key creation, secret enumeration, S3 bucket inspection, and EC2 global view. 
- The resulting logs are analyzed using Cloud Console Cartographer to demonstrate its capabilities. 

**Main Takeaways** 

- Console sessions matter, and understanding log sources and options is crucial. 
- Cloud Console Cartographer helps defenders filter benign activity and focus on potentially malicious behavior. 
- The tool is free and open-source, with detailed documentation for adding custom mappings.