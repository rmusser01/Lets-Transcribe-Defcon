{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 16.44,
      "Text": "This text was transcribed using whisper model: large-v2\n\n My name is Greg or Grzegorz Tworek. I'm working in standard charter as malware security lead"
    },
    {
      "Time_Start": 16.44,
      "Time_End": 22.28,
      "Text": " engineer and deeply in my heart I'm on the blue side and I'm digging into internals of"
    },
    {
      "Time_Start": 22.28,
      "Time_End": 28.96,
      "Text": " Windows and this is what I do both for work and for fun. And today the agenda is quite"
    },
    {
      "Time_Start": 28.96,
      "Time_End": 34.980000000000004,
      "Text": " simple because I would like to talk about monitoring in Windows, briefly go through"
    },
    {
      "Time_Start": 34.980000000000004,
      "Time_End": 42.52,
      "Text": " possible options and then talk about ETW and then the rest of the time will be some demonstration"
    },
    {
      "Time_Start": 42.52,
      "Time_End": 50.400000000000006,
      "Text": " of practical aspects of the ETW. So when it comes to monitoring, we have a lot of possibilities,"
    },
    {
      "Time_Start": 50.4,
      "Time_End": 60.64,
      "Text": " a lot of ways how Windows is trying to tell us what it is doing. So first, the best known are"
    },
    {
      "Time_Start": 60.64,
      "Time_End": 65.6,
      "Text": " event logs. In the past we had three event logs. Right now we have hundreds of them. It is"
    },
    {
      "Time_Start": 65.6,
      "Time_End": 76.32,
      "Text": " relatively easy to ask about all of them using PowerShell, using the GetWinEvent command with"
    },
    {
      "Time_Start": 76.32000000000001,
      "Time_End": 83.60000000000001,
      "Text": " list log parameter and you will see this like 400 is not unusual number. Then we have"
    },
    {
      "Time_Start": 83.60000000000001,
      "Time_End": 89.68,
      "Text": " performance counters. This is something we can observe in performance and here number is"
    },
    {
      "Time_Start": 89.68,
      "Time_End": 95.96000000000001,
      "Text": " coming into thousands and I'm talking only about those provided by the operating system"
    },
    {
      "Time_Start": 95.96000000000001,
      "Time_End": 106.56,
      "Text": " itself. Some other applications are doing their own monitoring thing through those interfaces. If"
    },
    {
      "Time_Start": 106.56,
      "Time_End": 113.52000000000001,
      "Text": " you are developing some applications, it would be great if you do the same way. It is great, well"
    },
    {
      "Time_Start": 113.52000000000001,
      "Time_End": 121.92000000000002,
      "Text": " known and well known also for administrators so they are relatively well fitted to monitor the"
    },
    {
      "Time_Start": 121.92,
      "Time_End": 127.92,
      "Text": " stuff you are trying to share with them. Next we are going to some less known things within"
    },
    {
      "Time_Start": 127.92,
      "Time_End": 134.96,
      "Text": " Windows. The first thing is the debug channel, the debug output. Because an application can"
    },
    {
      "Time_Start": 135.84,
      "Time_End": 141.36,
      "Text": " print something into a debug channel, it is not appearing anywhere on the screen"
    },
    {
      "Time_Start": 142.72,
      "Time_End": 148.16,
      "Text": " and if you want, you can monitor this. If you run your application within debugger,"
    },
    {
      "Time_Start": 148.96,
      "Time_End": 157.2,
      "Text": " the debug output will appear in the debugger console. If you want to stay more on the"
    },
    {
      "Time_Start": 157.2,
      "Time_End": 163.6,
      "Text": " administrator side, not the developer side, you can launch debug view from Sysinternals and also"
    },
    {
      "Time_Start": 163.6,
      "Time_End": 169.92,
      "Text": " observe what application are talking about, what is happening inside. Interesting fact is some"
    },
    {
      "Time_Start": 171.28,
      "Time_End": 177.6,
      "Text": " release application not being intended to monitor what is happening inside are pretty talkative"
    },
    {
      "Time_Start": 177.68,
      "Time_End": 183.76,
      "Text": " using debug output and debug view can display you what is happening inside,"
    },
    {
      "Time_Start": 183.76,
      "Time_End": 193.44,
      "Text": " including the number of the line in the code, etc. So it is good exercise to make it running"
    },
    {
      "Time_Start": 193.44,
      "Time_End": 201.2,
      "Text": " both for your application and for third-party application. If you are developers, writing to"
    },
    {
      "Time_Start": 201.2,
      "Time_End": 206.32,
      "Text": " debug view is not very complicated. It is well documented. It is done through API. It is slightly"
    },
    {
      "Time_Start": 206.32,
      "Time_End": 215.28,
      "Text": " more complex from PowerShell, but it is way better than spitting message boxes or logging into"
    },
    {
      "Time_Start": 216.07999999999998,
      "Time_End": 221.92,
      "Text": " a text file for your own purpose, how the code is going. Doing this through debug channel is way"
    },
    {
      "Time_Start": 221.92,
      "Time_End": 230.32,
      "Text": " more convenient. Next, we have slightly more hidden features. The first one is WPP, Windows"
    },
    {
      "Time_Start": 230.32,
      "Time_End": 237.84,
      "Text": " Software Trace Preprocessor. It is intended for developers. The idea of WPP is to provide"
    },
    {
      "Time_Start": 237.84,
      "Time_End": 245.35999999999999,
      "Text": " developers a way of testing what is happening within the application. It is slightly more"
    },
    {
      "Time_Start": 245.35999999999999,
      "Time_End": 254.79999999999998,
      "Text": " structured than the debug output. So it may be used for tests, for pre-releases, and so on."
    },
    {
      "Time_Start": 255.76000000000002,
      "Time_End": 261.12,
      "Text": " On the top of WPP, there is one interesting feature, so-called in-flight trace recorder."
    },
    {
      "Time_Start": 261.12,
      "Time_End": 272.0,
      "Text": " It is somehow documented by Microsoft. And with IFR, you can relatively easily find the log."
    },
    {
      "Time_Start": 272.8,
      "Time_End": 280.48,
      "Text": " The size of the log for IFR is relatively small, but at the same time, it is kept in the memory in"
    },
    {
      "Time_Start": 280.56,
      "Time_End": 290.64000000000004,
      "Text": " a circular form. And when the dump is created, the data from the IFR is going into a well-determined"
    },
    {
      "Time_Start": 290.64000000000004,
      "Time_End": 297.76,
      "Text": " place. So it is a great feature, especially if you are doing some kernel development,"
    },
    {
      "Time_Start": 297.76,
      "Time_End": 308.0,
      "Text": " because if your OS crashes, you open the dump, and you can relatively easily read what went to"
    },
    {
      "Time_Start": 308.48,
      "Time_End": 317.68,
      "Text": " IFR. So seeing the last actions about your software, what it did before the OS crashed."
    },
    {
      "Time_Start": 318.72,
      "Time_End": 324.96,
      "Text": " We have also some kernel black boxes for monitoring. Those are not exposed. Actually,"
    },
    {
      "Time_Start": 326.4,
      "Time_End": 333.44,
      "Text": " only two of those are documented. And one is for the boot process, and another one is for services."
    },
    {
      "Time_Start": 334.16,
      "Time_End": 343.2,
      "Text": " And those can be read through extensions for the debugger. The boot process is not very"
    },
    {
      "Time_Start": 343.2,
      "Time_End": 349.2,
      "Text": " deeply covered in the modern version of operating systems. Services are talking about what is"
    },
    {
      "Time_Start": 349.2,
      "Time_End": 356.4,
      "Text": " happening, and you can read the data or report the data through this as well. And the final one,"
    },
    {
      "Time_Start": 356.40000000000003,
      "Time_End": 364.00000000000006,
      "Text": " last but not least, is event tracing for Windows or ETW. And when it comes to ETW,"
    },
    {
      "Time_Start": 364.00000000000006,
      "Time_End": 373.04,
      "Text": " the architecture is well documented by Microsoft. It appeared for the first time in Windows Vista."
    },
    {
      "Time_Start": 373.84000000000003,
      "Time_End": 381.36,
      "Text": " At the beginning, it has a lower number of sessions. So if someone listens to"
    },
    {
      "Time_Start": 381.76,
      "Time_End": 391.36,
      "Text": " ETW stuff, others cannot listen to it. Right now, it is relatively easy because we have"
    },
    {
      "Time_Start": 392.32,
      "Time_End": 401.36,
      "Text": " higher numbers of session available. And within the structure, we have the engine itself,"
    },
    {
      "Time_Start": 402.64,
      "Time_End": 408.0,
      "Text": " block in the middle of the diagram. We have some controllers on the top."
    },
    {
      "Time_Start": 408.4,
      "Time_End": 417.44,
      "Text": " And controllers are applications, mainly, telling to the ETW engine what to do,"
    },
    {
      "Time_Start": 417.44,
      "Time_End": 424.24,
      "Text": " which providers to use, where to store the data going through ETW, and so on."
    },
    {
      "Time_Start": 425.12,
      "Time_End": 432.72,
      "Text": " We have providers. I will cover them in a moment. And we have consumers, someone who is pushing"
    },
    {
      "Time_Start": 433.68,
      "Time_End": 445.68,
      "Text": " a set of messages into the ETW engine, and someone obtaining messages out of the engine."
    },
    {
      "Time_Start": 445.68,
      "Time_End": 449.6,
      "Text": " And of course, it is also possible to store the data coming out of the ETW"
    },
    {
      "Time_Start": 450.16,
      "Time_End": 455.84000000000003,
      "Text": " into a file on the drive with some parameters, specifying what is the maximum size, if it's"
    },
    {
      "Time_Start": 456.48,
      "Time_End": 464.08000000000004,
      "Text": " a circular log, et cetera, et cetera. And we can also specify which events we want to collect,"
    },
    {
      "Time_Start": 464.8,
      "Time_End": 473.20000000000005,
      "Text": " both in terms of which provider we want to listen to, and which type of events from this"
    },
    {
      "Time_Start": 473.92,
      "Time_End": 485.12,
      "Text": " particular providers are interesting for us. Okay. The next slide is actually"
    },
    {
      "Time_Start": 488.0,
      "Time_End": 495.91999999999996,
      "Text": " almost the last one, because right now, I will go more through this nice bluish console."
    },
    {
      "Time_Start": 496.56,
      "Time_End": 506.88,
      "Text": " So, to start, let's see which providers and which sessions within the ETW infrastructure"
    },
    {
      "Time_Start": 507.44,
      "Time_End": 513.44,
      "Text": " are present right now. The main command which is built into the operating system is logman command."
    },
    {
      "Time_Start": 516.0,
      "Time_End": 522.48,
      "Text": " Its syntax is not very obvious, but there is some built-in help. There is some documentation."
    },
    {
      "Time_Start": 523.2,
      "Time_End": 534.16,
      "Text": " What I like to do is to perform logman query minus ETS. Minus ETS generally saying means"
    },
    {
      "Time_Start": 534.16,
      "Time_End": 545.44,
      "Text": " do it right now for live monitoring. So, ETS. This is the set of sessions being"
    },
    {
      "Time_Start": 546.4000000000001,
      "Time_End": 555.9200000000001,
      "Text": " currently active within the operating systems. You can see from here that even some data going"
    },
    {
      "Time_Start": 555.9200000000001,
      "Time_End": 568.8000000000001,
      "Text": " into the event log is actually writing a file based on some ETW data. I can check the security,"
    },
    {
      "Time_Start": 569.2800000000001,
      "Time_End": 576.72,
      "Text": " and, for example, this one would be smaller. I can do logman query,"
    },
    {
      "Time_Start": 578.5600000000001,
      "Time_End": 585.7600000000001,
      "Text": " and then name of the log, and then ETS, and I can name of the session, and I can observe"
    },
    {
      "Time_Start": 586.32,
      "Time_End": 592.6400000000001,
      "Text": " how events in the event log security are appearing that are coming from the"
    },
    {
      "Time_Start": 593.4399999999999,
      "Time_End": 599.52,
      "Text": " real-time trace, and there is some data where the data is collected, and then it's"
    },
    {
      "Time_Start": 599.52,
      "Time_End": 610.08,
      "Text": " transferred to the event log. If I do the same for application event log, I will probably see a lot of"
    },
    {
      "Time_Start": 610.64,
      "Time_End": 622.1600000000001,
      "Text": " providers, which means I will want a new console because it may take some time."
    },
    {
      "Time_Start": 624.1600000000001,
      "Time_End": 631.6800000000001,
      "Text": " Event log application EPS, and this probably will return some result in a moment showing us how"
    },
    {
      "Time_Start": 632.48,
      "Time_End": 640.0000000000001,
      "Text": " stuff is going to application event log. If we want to display just providers,"
    },
    {
      "Time_Start": 640.8800000000001,
      "Time_End": 645.5200000000001,
      "Text": " there is a command, logman query providers,"
    },
    {
      "Time_Start": 648.48,
      "Time_End": 658.8000000000001,
      "Text": " displaying us who is willing to talk to the ETW engine. I will launch"
    },
    {
      "Time_Start": 662.5600000000001,
      "Time_End": 676.08,
      "Text": " also RegEdit, and within RegEdit, I can show you where those providers are registered."
    },
    {
      "Time_Start": 676.08,
      "Time_End": 684.72,
      "Text": " I have those under publishers, and here you can see the list of GUIs with all those"
    },
    {
      "Time_Start": 684.72,
      "Time_End": 691.6,
      "Text": " providers being registered. If I return to the result of my command, logman query providers,"
    },
    {
      "Time_Start": 691.6,
      "Time_End": 699.44,
      "Text": " you can see the set of my providers. You can see that this is quite long. It's usually"
    },
    {
      "Time_Start": 700.32,
      "Time_End": 705.44,
      "Text": " more than 1,000 different providers for different functionalities within the operating system"
    },
    {
      "Time_Start": 705.44,
      "Time_End": 717.2800000000001,
      "Text": " reporting their data into the ETW engine."
    },
    {
      "Time_Start": 719.2800000000001,
      "Time_End": 725.12,
      "Text": " Grzegorz, we have a question from the attendees."
    },
    {
      "Time_Start": 726.08,
      "Time_End": 735.84,
      "Text": " I hope this one is enough. If not, please let me know. I prefer do not zoom in and out,"
    },
    {
      "Time_Start": 735.84,
      "Time_End": 740.16,
      "Text": " and the comment here was this one, logman query providers."
    },
    {
      "Time_Start": 742.8,
      "Time_End": 750.64,
      "Text": " It works for some time and then reports the data from providers."
    },
    {
      "Time_Start": 750.64,
      "Time_End": 760.3199999999999,
      "Text": " Providers are registered here. You can see some of those. For such provider, there is a manifest"
    },
    {
      "Time_Start": 760.3199999999999,
      "Time_End": 766.3199999999999,
      "Text": " being published. If I take this one, let's say, I have no idea what this is about."
    },
    {
      "Time_Start": 767.1999999999999,
      "Time_End": 775.76,
      "Text": " I will copy it to the desktop. Copying it is needed because I will use resource hacker,"
    },
    {
      "Time_Start": 775.76,
      "Time_End": 782.24,
      "Text": " which is not working properly with hard links, and the files within the Windows system 32 folder"
    },
    {
      "Time_Start": 782.24,
      "Time_End": 794.64,
      "Text": " are actually hard links. Copy this file to desktop. Resource hacker, which I have on the desktop,"
    },
    {
      "Time_Start": 795.4399999999999,
      "Time_End": 805.28,
      "Text": " and then I control O, and I will open the DLL I have copied. Open. Within the DLL,"
    },
    {
      "Time_Start": 805.28,
      "Time_End": 813.68,
      "Text": " I cannot see the thing. I see the first one. It's a template, and this one is actually about"
    },
    {
      "Time_Start": 813.68,
      "Time_End": 820.56,
      "Text": " the manifest about events being reported to ETW. You can see this one is pretty short,"
    },
    {
      "Time_Start": 821.5200000000001,
      "Time_End": 826.72,
      "Text": " but we have a longer one as well. When you develop your software, actually you are compiling"
    },
    {
      "Time_Start": 827.36,
      "Time_End": 834.4000000000001,
      "Text": " your XML description into this format. This format is not really documented, so"
    },
    {
      "Time_Start": 836.08,
      "Time_End": 843.5200000000001,
      "Text": " seeing it from this perspective may be challenging, but you can have some data or idea"
    },
    {
      "Time_Start": 844.3199999999999,
      "Time_End": 859.68,
      "Text": " which way to go. Okay. I can ask for some specific provider. I had the list on the screen a moment"
    },
    {
      "Time_Start": 859.68,
      "Time_End": 868.8,
      "Text": " ago. I will refer to the provider responsible for PowerShell, for example, so there is a special"
    },
    {
      "Time_Start": 868.8000000000001,
      "Time_End": 876.08,
      "Text": " provider for the PowerShell only. Logman query providers,"
    },
    {
      "Time_Start": 879.36,
      "Time_End": 884.72,
      "Text": " and the name of the PowerShell provider is Microsoft"
    },
    {
      "Time_Start": 888.0000000000001,
      "Time_End": 896.32,
      "Text": " Windows PowerShell, and I will see some data about this particular provider, so the name of"
    },
    {
      "Time_Start": 896.32,
      "Time_End": 906.96,
      "Text": " the provider, the UID of the provider, some data being useful for filtering the events coming to"
    },
    {
      "Time_Start": 906.96,
      "Time_End": 915.36,
      "Text": " our consumer, so I can specify flags which type of the message from this provider I'm interested"
    },
    {
      "Time_Start": 915.9200000000001,
      "Time_End": 924.0,
      "Text": " in, so I can see only run space or using just a mask, and another mask I can use is the mask for"
    },
    {
      "Time_Start": 924.0,
      "Time_End": 931.76,
      "Text": " the level of the message, because it may be interesting to listen only to errors or whatever."
    },
    {
      "Time_Start": 931.76,
      "Time_End": 938.48,
      "Text": " This is the reason for this, so if you are registering for a provider, for registering,"
    },
    {
      "Time_Start": 938.48,
      "Time_End": 945.36,
      "Text": " for listening to some providers, you are also specifying this data, and there is no general"
    },
    {
      "Time_Start": 945.36,
      "Time_End": 952.16,
      "Text": " rule. It is up to the developer of the provider what it means. Sometimes it is well described,"
    },
    {
      "Time_Start": 952.16,
      "Time_End": 958.64,
      "Text": " sometimes not really, and if you are creating your own providers, it would be great to"
    },
    {
      "Time_Start": 960.48,
      "Time_End": 965.52,
      "Text": " provide this description in a reasonable way. If I start"
    },
    {
      "Time_Start": 968.88,
      "Time_End": 977.28,
      "Text": " PowerShell, and if I issue the same command again, I will also see a list of images"
    },
    {
      "Time_Start": 977.28,
      "Time_End": 986.48,
      "Text": " using this provider actively right now, a list of processes and responsible images."
    },
    {
      "Time_Start": 987.12,
      "Time_End": 996.0,
      "Text": " I can also specify PID as a parameter for logman query providers with the minus PID parameter,"
    },
    {
      "Time_Start": 998.0,
      "Time_End": 1003.68,
      "Text": " but sometimes it is not working properly. I have no idea why it is working sometimes,"
    },
    {
      "Time_Start": 1003.6800000000001,
      "Time_End": 1013.6,
      "Text": " and sometimes not, and it may take a lot of time to process it. Okay, let's use those providers as"
    },
    {
      "Time_Start": 1013.6,
      "Time_End": 1023.0400000000001,
      "Text": " we have some theory behind it. It would be great to play with those. The first thing"
    },
    {
      "Time_Start": 1023.0400000000001,
      "Time_End": 1029.3600000000001,
      "Text": " I would like to cover, maybe not directly playing, but by explaining things, we can of course"
    },
    {
      "Time_Start": 1029.3600000000001,
      "Time_End": 1035.5200000000002,
      "Text": " manipulate those registrations. If we remove something, it will be"
    },
    {
      "Time_Start": 1035.5200000000002,
      "Time_End": 1044.96,
      "Text": " unregistered, and we will have some issues. This provider will not talk to us anymore, so we can"
    },
    {
      "Time_Start": 1044.96,
      "Time_End": 1052.88,
      "Text": " blind our monitoring tools using this way. Another thing, if I go to autologgers, which is"
    },
    {
      "Time_Start": 1052.88,
      "Time_End": 1059.1200000000001,
      "Text": " in the registry over here, here we have the set of those automatic loggers I"
    },
    {
      "Time_Start": 1059.8400000000001,
      "Time_End": 1067.2800000000002,
      "Text": " demonstrated at the very beginning. So, they're currently running automatically by"
    },
    {
      "Time_Start": 1067.2800000000002,
      "Time_End": 1074.16,
      "Text": " the operating system to register, to monitor stuff happening within the operating system"
    },
    {
      "Time_Start": 1074.48,
      "Time_End": 1084.24,
      "Text": " during its normal usage, and here is a pretty nice thing, because maybe not this one, I will try to"
    },
    {
      "Time_Start": 1084.8000000000002,
      "Time_End": 1092.16,
      "Text": " find some, maybe Defender will be good enough, because if I go to a particular"
    },
    {
      "Time_Start": 1092.16,
      "Time_End": 1100.16,
      "Text": " GUID responsible for some provider, there is a value called enable set to one."
    },
    {
      "Time_Start": 1100.16,
      "Time_End": 1108.48,
      "Text": " We can play with switching those to non-one, which means those auto providers will"
    },
    {
      "Time_Start": 1111.68,
      "Time_End": 1119.44,
      "Text": " not monitor this. I can see the question on the chat, does registry removal to get"
    },
    {
      "Time_Start": 1119.44,
      "Time_End": 1126.3200000000002,
      "Text": " rid of logging require system restart? Yes, for this type of the registering providers by removing"
    },
    {
      "Time_Start": 1126.3999999999999,
      "Time_End": 1133.12,
      "Text": " registry entries, it requires reloading the entire engine, which requires system restart."
    },
    {
      "Time_Start": 1133.12,
      "Time_End": 1142.8,
      "Text": " For this particular method, it's yes. Most of manipulations related to the ETW will require"
    },
    {
      "Time_Start": 1142.8,
      "Time_End": 1150.8799999999999,
      "Text": " restart, if you want to manipulate them in a kind of illegal way. Yet another thing I can"
    },
    {
      "Time_Start": 1151.68,
      "Time_End": 1160.96,
      "Text": " mention here is under security, so it is here, it is local machine system current control set"
    },
    {
      "Time_Start": 1160.96,
      "Time_End": 1168.88,
      "Text": " control WMI security, and here you can see a list of all providers, actually the GUIDs, and then the"
    },
    {
      "Time_Start": 1168.88,
      "Time_End": 1176.0800000000002,
      "Text": " data, and the data for every single provider is a security descriptor. If you like to play with"
    },
    {
      "Time_Start": 1176.08,
      "Time_End": 1185.76,
      "Text": " binary security descriptors, you can do this right here, but I have also prepared a small script"
    },
    {
      "Time_Start": 1188.6399999999999,
      "Time_End": 1197.52,
      "Text": " reading those registry values, and then trying to decrypt those permissions into a bit more"
    },
    {
      "Time_Start": 1197.52,
      "Time_End": 1207.68,
      "Text": " human readable things. The important thing I'm specifying within comments for my scripts is"
    },
    {
      "Time_Start": 1207.68,
      "Time_End": 1216.96,
      "Text": " if there is no access control list for some particular provider, it means there is a special"
    },
    {
      "Time_Start": 1216.96,
      "Time_End": 1223.36,
      "Text": " GUID being a template, so that if there is no explicitly specified security for some provider,"
    },
    {
      "Time_Start": 1223.3600000000001,
      "Time_End": 1231.5200000000002,
      "Text": " it will be inherited from this GUID. If I run the script, I'm not an admin, which happens,"
    },
    {
      "Time_Start": 1234.8000000000002,
      "Time_End": 1242.5600000000002,
      "Text": " I will run ISE as admin. Digging through this registry part is not for everyone,"
    },
    {
      "Time_Start": 1243.8400000000001,
      "Time_End": 1251.7600000000002,
      "Text": " so I will run it right here. After some time, it will split the output into two grid views. One"
    },
    {
      "Time_Start": 1251.76,
      "Time_End": 1262.0,
      "Text": " will provide SDDLs for permissions, and another one will try to provide ACLs into a bit more"
    },
    {
      "Time_Start": 1262.64,
      "Time_End": 1271.6,
      "Text": " human readable form. Here you can see those. Here you can see one GUID with a couple of entries"
    },
    {
      "Time_Start": 1271.6,
      "Time_End": 1276.16,
      "Text": " specifying what is allowed for the system, local service, administrators, and user,"
    },
    {
      "Time_Start": 1276.16,
      "Time_End": 1284.0,
      "Text": " and so on. For every single provider being listed there, we have this set over here. Those"
    },
    {
      "Time_Start": 1284.0,
      "Time_End": 1291.44,
      "Text": " are not decrypted by my script for some reason. I have no idea why I didn't spot this previously,"
    },
    {
      "Time_Start": 1291.44,
      "Time_End": 1299.44,
      "Text": " but it happens. Probably requires some reading what those flags actually mean."
    },
    {
      "Time_Start": 1300.4,
      "Time_End": 1306.96,
      "Text": " Here you can see the same stuff within SDDL form, which is way more readable for someone used to it,"
    },
    {
      "Time_Start": 1307.8400000000001,
      "Time_End": 1314.56,
      "Text": " specifying one provider and then one set of permissions, CC for authenticated users,"
    },
    {
      "Time_Start": 1315.6000000000001,
      "Time_End": 1323.2,
      "Text": " this mask for local system, local service, network service, built-in admins, and so on,"
    },
    {
      "Time_Start": 1323.68,
      "Time_End": 1332.72,
      "Text": " is about SDDL syntax. We can play with permissions for ETW providers, who can read those,"
    },
    {
      "Time_Start": 1332.72,
      "Time_End": 1343.3600000000001,
      "Text": " who can write through those providers, et cetera, as sometimes pretty sensitive stuff is"
    },
    {
      "Time_Start": 1344.0800000000002,
      "Time_End": 1352.0800000000002,
      "Text": " transferred over there. Usually it is only for admins to be read under"
    },
    {
      "Time_Start": 1354.16,
      "Time_End": 1362.16,
      "Text": " normal conditions within the normally installed operating system. Interesting thing is there is"
    },
    {
      "Time_Start": 1363.3600000000001,
      "Time_End": 1369.44,
      "Text": " something to play with because it is mostly about com-based application. There is a"
    },
    {
      "Time_Start": 1373.6000000000001,
      "Time_End": 1379.3600000000001,
      "Text": " system environment variable. I'm thinking how to show it to you."
    },
    {
      "Time_Start": 1380.3200000000002,
      "Time_End": 1389.8400000000001,
      "Text": " It would be good you can play with this on your own with the process explorer, for example."
    },
    {
      "Time_Start": 1389.8400000000001,
      "Time_End": 1397.6000000000001,
      "Text": " Because if you start PowerShell, you will see some .NET details on the tabs of the process"
    },
    {
      "Time_Start": 1397.6000000000001,
      "Time_End": 1405.92,
      "Text": " explorer details of the process. If you set a special, not so long time discovered by Adam"
    },
    {
      "Time_Start": 1405.92,
      "Time_End": 1421.28,
      "Text": " Chester, environment variable, com plus and underscore ETW enable equals zero."
    },
    {
      "Time_Start": 1422.4,
      "Time_End": 1431.2,
      "Text": " Right now I set this variable within the CMD, and if I run PowerShell from here,"
    },
    {
      "Time_Start": 1432.0,
      "Time_End": 1439.68,
      "Text": " it will inherit, I'm within the PowerShell, but it inherits the environment from the"
    },
    {
      "Time_Start": 1439.68,
      "Time_End": 1458.96,
      "Text": " parent process, which means ETW is somehow blind within this process. Maybe not this one. I will"
    },
    {
      "Time_Start": 1458.96,
      "Time_End": 1470.4,
      "Text": " try to launch live-assist-internals.com to demonstrate it to you."
    },
    {
      "Time_Start": 1473.04,
      "Time_End": 1475.3600000000001,
      "Text": " Oh, come on. This is what I'm doing when I'm"
    },
    {
      "Time_Start": 1475.3600000000001,
      "Time_End": 1491.2,
      "Text": " running. And process explorer is the thing I would like to launch, so process run,"
    },
    {
      "Time_Start": 1492.72,
      "Time_End": 1495.2800000000002,
      "Text": " and I can switch it to..."
    },
    {
      "Time_Start": 1495.36,
      "Time_End": 1501.04,
      "Text": " Of course, I have to agree. I never did before on this machine. I will switch it to"
    },
    {
      "Time_Start": 1504.6399999999999,
      "Time_End": 1514.96,
      "Text": " admin token, and if I try to find the PowerShell right now, I can use this one, for example,"
    },
    {
      "Time_Start": 1515.92,
      "Time_End": 1528.56,
      "Text": " and PowerShell is the child process. I'm curious which one. I will close this one to make it"
    },
    {
      "Time_Start": 1528.56,
      "Time_End": 1541.44,
      "Text": " simpler, and this PowerShell, finally, I'm here. You can see no information if I'm right. It is"
    },
    {
      "Time_Start": 1541.44,
      "Time_End": 1551.44,
      "Text": " blind this way. If I do the same without this variable, I will obtain more information,"
    },
    {
      "Time_Start": 1551.44,
      "Time_End": 1559.68,
      "Text": " so you can see absolutely nothing within .NET assemblies for the PowerShell. Exit. I will set"
    },
    {
      "Time_Start": 1559.68,
      "Time_End": 1569.2,
      "Text": " this to nothing. Run PowerShell again. Go again here. Go to PowerShell, and within .NET assemblies,"
    },
    {
      "Time_Start": 1569.8400000000001,
      "Time_End": 1579.1200000000001,
      "Text": " those are reported to process explorer with ETW. If you are just listening to ETW,"
    },
    {
      "Time_Start": 1579.1200000000001,
      "Time_End": 1585.28,
      "Text": " you will see the similar effect. It will be nothing coming out of here."
    },
    {
      "Time_Start": 1587.44,
      "Time_End": 1597.1200000000001,
      "Text": " The question I can see is can I modify logging providers, customers with some API? Yes,"
    },
    {
      "Time_Start": 1597.1200000000001,
      "Time_End": 1605.2800000000002,
      "Text": " there is a published API for this. You can register for events. You cannot modify what"
    },
    {
      "Time_Start": 1605.2800000000002,
      "Time_End": 1612.72,
      "Text": " some provider is reporting. It's just throwing the data into the engine, but you can register"
    },
    {
      "Time_Start": 1612.72,
      "Time_End": 1619.8400000000001,
      "Text": " your own stuff, asking for the particular stuff, and so on, and I hope it answers your question,"
    },
    {
      "Time_Start": 1619.8400000000001,
      "Time_End": 1628.4800000000002,
      "Text": " at least partially. Some of the stuff within the API is not really documented. I will show"
    },
    {
      "Time_Start": 1628.4800000000002,
      "Time_End": 1636.4800000000002,
      "Text": " you one of those in a second. Which data is coming out of those providers?"
    },
    {
      "Time_Start": 1639.44,
      "Time_End": 1642.96,
      "Text": " There is a lot of information coming from different components of the"
    },
    {
      "Time_Start": 1643.6000000000001,
      "Time_End": 1650.0,
      "Text": " Windows operating system, some of those related to hard disk drive, some others. There is a"
    },
    {
      "Time_Start": 1650.0,
      "Time_End": 1658.56,
      "Text": " provider responsible for reporting to ETW every single Ethernet frame going through the network"
    },
    {
      "Time_Start": 1658.56,
      "Time_End": 1665.76,
      "Text": " interface, so ETW has a built-in sniffer. Maybe not ETW itself, but there is a provider acting"
    },
    {
      "Time_Start": 1665.76,
      "Time_End": 1670.24,
      "Text": " constantly as a sniffer, and the only thing to do is to listen to it,"
    },
    {
      "Time_Start": 1671.52,
      "Time_End": 1677.52,
      "Text": " and you will have the sniffer up and running within the operating system using only built-in"
    },
    {
      "Time_Start": 1677.52,
      "Time_End": 1682.48,
      "Text": " stuff. Right now, we have yet another sniffer built into the operating system, but in the past,"
    },
    {
      "Time_Start": 1682.48,
      "Time_End": 1689.36,
      "Text": " it was an option. We have WinINet, which is quite often demonstrated. WinINet provider"
    },
    {
      "Time_Start": 1690.16,
      "Time_End": 1700.3200000000002,
      "Text": " is the one responsible for throwing the data to the SSL tunnel, so if your web page is trying to"
    },
    {
      "Time_Start": 1700.3200000000002,
      "Time_End": 1708.64,
      "Text": " send something through HTTPS in an encrypted way, you can sniff to it through ETW before it goes"
    },
    {
      "Time_Start": 1709.2800000000002,
      "Time_End": 1715.6000000000001,
      "Text": " into the tunnel, which means you obtain a clear text sniffing for the HTTPS transmission."
    },
    {
      "Time_Start": 1716.4,
      "Time_End": 1726.96,
      "Text": " Yet another example, before I start my own, is sniffing to USB, because we have some sniffers"
    },
    {
      "Time_Start": 1726.96,
      "Time_End": 1734.96,
      "Text": " related to USB buses, which means we can listen to all messages going through USB,"
    },
    {
      "Time_Start": 1735.5200000000002,
      "Time_End": 1744.64,
      "Text": " and nowadays, most of keyboards is connected through USB, which means we have the data entered"
    },
    {
      "Time_Start": 1744.64,
      "Time_End": 1751.6000000000001,
      "Text": " through keyboard. I can see the question on the chat, do we need admin rights to sniff using ETW?"
    },
    {
      "Time_Start": 1752.3200000000002,
      "Time_End": 1758.88,
      "Text": " Generally saying yes, but we can manipulate somehow permissions for the ETW providers,"
    },
    {
      "Time_Start": 1758.88,
      "Time_End": 1768.64,
      "Text": " as I demonstrated with registry, with security descriptors, and the script somehow decoding it,"
    },
    {
      "Time_Start": 1768.64,
      "Time_End": 1775.2,
      "Text": " but generally saying it is a stuff for admin, mainly due to the sensitivity of the data"
    },
    {
      "Time_Start": 1775.2,
      "Time_End": 1789.76,
      "Text": " going there. My demonstration about ETW, something I played with, I found is related to"
    },
    {
      "Time_Start": 1790.32,
      "Time_End": 1799.6,
      "Text": " one of those providers we have. It is Logman Query Providers,"
    },
    {
      "Time_Start": 1801.52,
      "Time_End": 1812.72,
      "Text": " and the one is Microsoft Windows OSK, and we have such provider. You can see it is relatively"
    },
    {
      "Time_Start": 1812.88,
      "Time_End": 1821.44,
      "Text": " small when it comes to granularity of the data. You can try to guess what is OSK."
    },
    {
      "Time_Start": 1823.04,
      "Time_End": 1834.88,
      "Text": " I will start, and this is how we register for storing the stuff from the ETW"
    },
    {
      "Time_Start": 1834.88,
      "Time_End": 1842.4,
      "Text": " using command line. So, I will leave the name, and the syntax is first coming the name."
    },
    {
      "Time_Start": 1842.96,
      "Time_End": 1850.0,
      "Text": " Logman, I will name the session OSK. I will use minus P provider Microsoft Windows OSK."
    },
    {
      "Time_Start": 1850.72,
      "Time_End": 1860.0,
      "Text": " I will use minus O for output. I will use a root OSK ETL. ETL is traditionally used for"
    },
    {
      "Time_Start": 1860.16,
      "Time_End": 1868.56,
      "Text": " storing the data coming from traces, especially for ETW, and I will issue an important part of"
    },
    {
      "Time_Start": 1868.56,
      "Time_End": 1881.36,
      "Text": " it, which is ETS, which means please do it right now, and with what I did, Logman start."
    },
    {
      "Time_Start": 1882.0000000000002,
      "Time_End": 1890.96,
      "Text": " So, now it started. Now it works. I finally launched OSK. If you have an idea what is OSK,"
    },
    {
      "Time_Start": 1890.96,
      "Time_End": 1898.0000000000002,
      "Text": " you can see it right now. It is on-screen keyboard, and I will press some keys like"
    },
    {
      "Time_Start": 1898.96,
      "Time_End": 1911.92,
      "Text": " X33F, com, and enter. Of course, it went here. It is not recognized. I can close the"
    },
    {
      "Time_Start": 1914.72,
      "Time_End": 1925.04,
      "Text": " on-screen keyboard. It would be great to stop the session registering events into the ETL file,"
    },
    {
      "Time_Start": 1925.04,
      "Time_End": 1940.0,
      "Text": " so Logman stop OSK minus ETS, and you can see OSK ETL have some data collected."
    },
    {
      "Time_Start": 1940.0,
      "Time_End": 1946.3999999999999,
      "Text": " This file is a binary file, so the thing to be done is definitely to convert it to something"
    },
    {
      "Time_Start": 1946.3999999999999,
      "Time_End": 1954.0,
      "Text": " more human readable if this is what we want to do right now. There is another built-in Windows"
    },
    {
      "Time_Start": 1954.0,
      "Time_End": 1964.88,
      "Text": " command, tracerpt, and you have to provide OSK ETL, the input file, and minus all the output"
    },
    {
      "Time_Start": 1964.88,
      "Time_End": 1976.0,
      "Text": " file, OSK XML, and usually, we have some errors. We can have some errors. It is quite rare. I"
    },
    {
      "Time_Start": 1976.0,
      "Time_End": 1984.0,
      "Text": " cannot see any errors here, but some events were not recognized. Okay. If I do notepad"
    },
    {
      "Time_Start": 1986.72,
      "Time_End": 1994.64,
      "Text": " OSK XML, you can see messages from this particular provider being nicely"
    },
    {
      "Time_Start": 1997.12,
      "Time_End": 2004.88,
      "Text": " described in the XML. What I can do, I know there are fields within those properties,"
    },
    {
      "Time_Start": 2006.32,
      "Time_End": 2023.68,
      "Text": " these XML files within those messages, called TCID. I can see the stuff over here."
    },
    {
      "Time_Start": 2025.6,
      "Time_End": 2032.64,
      "Text": " If I try to convert those to hex values, as those are"
    },
    {
      "Time_Start": 2032.88,
      "Time_End": 2053.12,
      "Text": " decimal values, it would be to be 0404. It means 21, and then 2E18, and 31, and then"
    },
    {
      "Time_Start": 2053.3599999999997,
      "Time_End": 2063.04,
      "Text": " the enter key I have pressed as the last one. What are those?"
    },
    {
      "Time_Start": 2066.16,
      "Time_End": 2070.0,
      "Text": " It is about how keyboards are working within the PC"
    },
    {
      "Time_Start": 2071.3599999999997,
      "Time_End": 2077.12,
      "Text": " machine because keyboard is not sending ASCII characters to"
    },
    {
      "Time_Start": 2078.0,
      "Time_End": 2091.6,
      "Text": " the hardware, but keyboard is sending so-called scan codes, so you can find a list of scan codes"
    },
    {
      "Time_Start": 2092.24,
      "Time_End": 2109.36,
      "Text": " wherever over the internet. Control F, 2D was X, then 04 was 3 twice, then 21, F, and what a"
    },
    {
      "Time_Start": 2109.36,
      "Time_End": 2122.4,
      "Text": " surprise, 2E for C, and 18 for O, and 31 all hex for N. I do not like seeing scan codes in the"
    },
    {
      "Time_Start": 2122.4,
      "Time_End": 2130.4,
      "Text": " decimal form, but you have those, so you can try to sniff the on-screen keyboard, which is sometimes"
    },
    {
      "Time_Start": 2130.4,
      "Time_End": 2137.92,
      "Text": " used as a kind of a security improvement. Please use your on-screen keyboard to do not allow others"
    },
    {
      "Time_Start": 2138.0,
      "Time_End": 2146.16,
      "Text": " to sniff in whatever. Well, it depends where you try to sniff. Okay, I will go to the command from"
    },
    {
      "Time_Start": 2147.76,
      "Time_End": 2150.32,
      "Text": " CLS. I will make it bigger."
    },
    {
      "Time_Start": 2154.32,
      "Time_End": 2162.88,
      "Text": " I'm a regular user with a limited token, not elevated, and Windows is not activated,"
    },
    {
      "Time_Start": 2162.88,
      "Time_End": 2172.56,
      "Text": " not a surprise as I have installed it today, and I will try to start one of the services."
    },
    {
      "Time_Start": 2174.48,
      "Time_End": 2181.36,
      "Text": " Let's start SVC. There is a service for reporting errors, Windows reporting services."
    },
    {
      "Time_Start": 2181.36,
      "Time_End": 2188.2400000000002,
      "Text": " As a regular user, I obtain error 5, which is access denied. If I go as an admin,"
    },
    {
      "Time_Start": 2189.0400000000004,
      "Time_End": 2195.28,
      "Text": " I can try to verify why I have access denied, which is not a big surprise, but I can do this"
    },
    {
      "Time_Start": 2195.28,
      "Time_End": 2204.0800000000004,
      "Text": " with scldshowwirsvc. Here you can see SDBL again for a reason. You can see"
    },
    {
      "Time_Start": 2207.0400000000004,
      "Time_End": 2216.4,
      "Text": " regular users. Here is for everyone. This is for local system built-in admins. The key here is"
    },
    {
      "Time_Start": 2216.96,
      "Time_End": 2226.8,
      "Text": " rpwp on the SDBL, meaning who can start and stop the service. Regular users usually cannot"
    },
    {
      "Time_Start": 2226.8,
      "Time_End": 2234.48,
      "Text": " start the service. If I dig deeper into this service, I can display something called triggers."
    },
    {
      "Time_Start": 2235.04,
      "Time_End": 2247.84,
      "Text": " scqtriggerinfowirsvc, and you can see this particular service will start when receiving"
    },
    {
      "Time_Start": 2247.84,
      "Time_End": 2257.44,
      "Text": " an ETW message with this provider, because services can start on message, being services"
    },
    {
      "Time_Start": 2257.44,
      "Time_End": 2263.36,
      "Text": " can be triggered with a message, and the interesting thing is I'm not allowed to start"
    },
    {
      "Time_Start": 2263.36,
      "Time_End": 2271.2000000000003,
      "Text": " the service as a user, this particular one, but I'm perfectly allowed to send this message."
    },
    {
      "Time_Start": 2272.1600000000003,
      "Time_End": 2286.4,
      "Text": " scquerywirsvc, the service is stopped, and using my tiny"
    },
    {
      "Time_Start": 2292.0000000000005,
      "Time_End": 2298.4800000000005,
      "Text": " application, I can send the ETW message, and hopefully I will see it is running right now."
    },
    {
      "Time_Start": 2298.48,
      "Time_End": 2303.6,
      "Text": " I have no permission to send a start command, but I have permission to send an ETW message,"
    },
    {
      "Time_Start": 2303.6,
      "Time_End": 2310.08,
      "Text": " and this particular service is configured in a way making actually service"
    },
    {
      "Time_Start": 2310.08,
      "Time_End": 2317.2,
      "Text": " manager react on this message. I'm sharing the code for this. It is relatively"
    },
    {
      "Time_Start": 2317.5200000000004,
      "Time_End": 2326.5600000000004,
      "Text": " simple with the only thing here. I'm using ETW even write no registration"
    },
    {
      "Time_Start": 2327.1200000000003,
      "Time_End": 2336.0000000000005,
      "Text": " from the exported by MPDLL, and the thing here is this function is not documented"
    },
    {
      "Time_Start": 2336.0000000000005,
      "Time_End": 2343.6000000000004,
      "Text": " because of Microsoft, but you can use it, and it works. I'm sharing the code, so"
    },
    {
      "Time_Start": 2343.68,
      "Time_End": 2353.2799999999997,
      "Text": " it is not very hard to follow me somehow. Okay, let's go further. Here you can see the list of"
    },
    {
      "Time_Start": 2353.2799999999997,
      "Time_End": 2360.0,
      "Text": " the stuff being helpful, so you have two Windows commands, logman and tracerpt. You have a chance"
    },
    {
      "Time_Start": 2360.0,
      "Time_End": 2366.56,
      "Text": " to see those during our session. Microsoft is also providing message analyzer. Well, I'm used"
    },
    {
      "Time_Start": 2366.56,
      "Time_End": 2373.36,
      "Text": " to say the message analyzer for a reason starts with a mess. I do not like this application."
    },
    {
      "Time_Start": 2373.36,
      "Time_End": 2380.88,
      "Text": " It's definitely too heavy to sniff ETW, but it can do this. There is a trace view within SDK WDK,"
    },
    {
      "Time_Start": 2380.88,
      "Time_End": 2388.32,
      "Text": " so download from Microsoft. It is not always working. Fingers crossed for you, and some"
    },
    {
      "Time_Start": 2388.32,
      "Time_End": 2397.2000000000003,
      "Text": " third-party stuff. Silk ETW by FireEye. It is a .NET wrapper for ETW, so if you are more .NET"
    },
    {
      "Time_Start": 2397.2000000000003,
      "Time_End": 2405.2000000000003,
      "Text": " people, you can try to run this way. There is ETW Explorer made by Pavel Yosifovich, the co-author"
    },
    {
      "Time_Start": 2405.2000000000003,
      "Time_End": 2411.6800000000003,
      "Text": " of the latest edition of the Windows Internals book, so ETW Explorer allows you to browse through"
    },
    {
      "Time_Start": 2411.6800000000003,
      "Time_End": 2417.5200000000004,
      "Text": " ETW providers using graphical interface if you really do not like a command line for some reason."
    },
    {
      "Time_Start": 2418.48,
      "Time_End": 2428.96,
      "Text": " PowerCraft ETW open source on GitHub by Zac Brown is a wrapper for ETW to PowerShell"
    },
    {
      "Time_Start": 2428.96,
      "Time_End": 2435.04,
      "Text": " to allow you to directly manipulate with ETW using PowerShell, which may be somehow"
    },
    {
      "Time_Start": 2436.0,
      "Time_End": 2444.56,
      "Text": " beneficial. Windshark is made by Airbus CERT, and it is about this Airbus. It's about their"
    },
    {
      "Time_Start": 2445.2,
      "Time_End": 2452.88,
      "Text": " response team within Airbus, and Windshark is a plugin to Wireshark where you can configure"
    },
    {
      "Time_Start": 2453.44,
      "Time_End": 2460.32,
      "Text": " ETW providers, and those will appear within the Wireshark as some data coming to Wireshark. It"
    },
    {
      "Time_Start": 2460.32,
      "Time_End": 2469.2,
      "Text": " may be the interface, the querying, whatever, or the format of files, et cetera, may be more"
    },
    {
      "Time_Start": 2469.28,
      "Time_End": 2477.28,
      "Text": " friendly for some of users using Wireshark on a regular basis, and there is also GitHub repository"
    },
    {
      "Time_Start": 2478.2400000000002,
      "Time_End": 2485.92,
      "Text": " I'm trying to maintain. It is not only about ETW, but some ETW may happen there. If you try to search"
    },
    {
      "Time_Start": 2485.92,
      "Time_End": 2495.28,
      "Text": " for ETW, you will find the stuff for sure, and that's basically it. I tried to make you a crash"
    },
    {
      "Time_Start": 2495.28,
      "Time_End": 2505.44,
      "Text": " course against ETW. My idea was to make you willing to play with it because the rest is on"
    },
    {
      "Time_Start": 2505.44,
      "Time_End": 2512.4,
      "Text": " your own. Probably the audience is very different. Probably you have some developers, a red team,"
    },
    {
      "Time_Start": 2512.4,
      "Time_End": 2517.6800000000003,
      "Text": " blue team, and so on, so there's no one session useful for everyone, and it's the same about the"
    },
    {
      "Time_Start": 2517.6800000000003,
      "Time_End": 2524.0,
      "Text": " level of your knowledge of the ETW and the operating system. Some of you are just admins,"
    },
    {
      "Time_Start": 2524.88,
      "Time_End": 2531.28,
      "Text": " some of you are kernel developers, and for sure, the different part of the entire scope will be"
    },
    {
      "Time_Start": 2531.28,
      "Time_End": 2541.84,
      "Text": " interesting for you, but I tried to provide you kind of the door into the ETW world, and now it is"
    },
    {
      "Time_Start": 2541.84,
      "Time_End": 2554.1600000000003,
      "Text": " on you and on your responsibility. Thank you very much, and hopefully see you soon."
    }
  ]
}