{"segments": [{"Time_Start": 0.0, "Time_End": 17.0, "Text": " Welcome to the third day of DefCon."}, {"Time_Start": 17.0, "Time_End": 24.0, "Text": " Actually I'm happy to see that as many of you managed to get up this early."}, {"Time_Start": 24.0, "Time_End": 29.0, "Text": " On Sunday morning, I've been asked to show you this part."}, {"Time_Start": 29.0, "Time_End": 35.0, "Text": " this part of today's schedule and as you can see this is the first presentation"}, {"Time_Start": 35.0, "Time_End": 43.0, "Text": " and I'm going to present and discuss some issues for designing buffer overflow exploits"}, {"Time_Start": 43.0, "Time_End": 48.0, "Text": " mainly focusing on small payloads"}, {"Time_Start": 48.0, "Time_End": 54.0, "Text": " my name is and I'm from Sweden and just before I begin I'd like to"}, {"Time_Start": 54.0, "Time_End": 58.0, "Text": " give away some free stuff"}, {"Time_Start": 59.0, "Time_End": 60.0, "Text": " I don't know."}, {"Time_Start": 60.0, "Time_End": 61.0, "Text": " Thank you."}, {"Time_Start": 61.0, "Time_End": 63.0, "Text": " And so"}, {"Time_Start": 63.0, "Time_End": 64.0, "Text": " you're going to"}, {"Time_Start": 64.0, "Time_End": 65.0, "Text": " I'm"}, {"Time_Start": 65.0, "Time_End": 66.0, "Text": " on"}, {"Time_Start": 66.0, "Time_End": 67.0, "Text": " I'm"}, {"Time_Start": 67.0, "Time_End": 68.0, "Text": " I'm"}, {"Time_Start": 68.0, "Time_End": 69.0, "Text": " you're"}, {"Time_Start": 69.0, "Time_End": 70.0, "Text": " on"}, {"Time_Start": 70.0, "Time_End": 71.0, "Text": " you're"}, {"Time_Start": 71.0, "Time_End": 72.0, "Text": " one"}, {"Time_Start": 72.0, "Time_End": 73.0, "Text": " and"}, {"Time_Start": 73.0, "Time_End": 74.0, "Text": " on"}, {"Time_Start": 74.0, "Time_End": 75.0, "Text": " you know"}, {"Time_Start": 75.0, "Time_End": 76.0, "Text": " and"}, {"Time_Start": 76.0, "Time_End": 77.0, "Text": " I'm"}, {"Time_Start": 77.0, "Time_End": 78.0, "Text": " on"}, {"Time_Start": 78.0, "Time_End": 79.0, "Text": " I'm"}, {"Time_Start": 79.0, "Time_End": 80.0, "Text": " you know,"}, {"Time_Start": 80.0, "Time_End": 81.0, "Text": " and"}, {"Time_Start": 81.0, "Time_End": 82.0, "Text": " I'm"}, {"Time_Start": 82.0, "Time_End": 83.0, "Text": " I'm"}, {"Time_Start": 83.0, "Time_End": 84.0, "Text": " and"}, {"Time_Start": 84.0, "Time_End": 85.0, "Text": " I'm"}, {"Time_Start": 85.0, "Time_End": 86.0, "Text": " and"}, {"Time_Start": 86.0, "Time_End": 87.0, "Text": " I'm"}, {"Time_Start": 87.0, "Time_End": 88.0, "Text": " and I'm"}, {"Time_Start": 88.0, "Time_End": 89.0, "Text": " on"}, {"Time_Start": 89.0, "Time_End": 90.0, "Text": " and I'm"}, {"Time_Start": 90.0, "Time_End": 91.0, "Text": " on"}, {"Time_Start": 91.0, "Time_End": 92.0, "Text": " you know,"}, {"Time_Start": 92.0, "Time_End": 106.0, "Text": " Yeah,"}, {"Time_Start": 106.0, "Time_End": 107.0, "Text": " Yeah."}, {"Time_Start": 107.0, "Time_End": 108.0, "Text": " Yeah."}, {"Time_Start": 108.0, "Time_End": 109.0, "Text": " Yeah."}, {"Time_Start": 109.0, "Time_End": 123.66, "Text": " Yeah, I gave a spare one."}, {"Time_Start": 125.0, "Time_End": 127.8, "Text": " If you ask me a question I cannot answer, then I"}, {"Time_Start": 127.8, "Time_End": 129.6, "Text": " better throw the microphone at you."}, {"Time_Start": 129.6, "Time_End": 134.2, "Text": " Actually, I save the T-shirt for the T-shirt for the one who"}, {"Time_Start": 134.2, "Time_End": 137.0, "Text": " asks the question that I can answer."}, {"Time_Start": 137.0, "Time_End": 138.0, "Text": " Okay."}, {"Time_Start": 138.0, "Time_End": 139.0, "Text": " Okay."}, {"Time_Start": 139.0, "Time_End": 145.64, "Text": " Okay. I guess everyone can hear me, right? So a few people here, so. What?"}, {"Time_Start": 145.64, "Time_End": 148.24, "Text": " This year?"}, {"Time_Start": 148.24, "Time_End": 150.44, "Text": " I don't know, it was like four."}, {"Time_Start": 154.44, "Time_End": 156.68, "Text": " Oh, you got me?"}, {"Time_Start": 163.56, "Time_End": 164.92000000000002, "Text": " Okay, I better get home."}, {"Time_Start": 169.0, "Time_End": 174.0, "Text": " As you can see, I tend to lose them quite quickly."}, {"Time_Start": 174.0, "Time_End": 178.0, "Text": " Okay, anyway, why would anyone be interested in buffer overflows?"}, {"Time_Start": 178.0, "Time_End": 180.0, "Text": " I can see two reasons."}, {"Time_Start": 180.0, "Time_End": 182.0, "Text": " These attacks are very effective."}, {"Time_Start": 182.0, "Time_End": 185.0, "Text": " They are very flexible and very useful."}, {"Time_Start": 185.0, "Time_End": 187.0, "Text": " I mean, you can run your own code on the target system."}, {"Time_Start": 187.0, "Time_End": 191.0, "Text": " You can run basically whatever you want if you manage to exploit an application."}, {"Time_Start": 191.0, "Time_End": 195.0, "Text": " If you exploit an application that uses an allowed protocol,"}, {"Time_Start": 195.0, "Time_End": 199.0, "Text": " it will go through through a firewall, let's say HDP or FTP"}, {"Time_Start": 199.0, "Time_End": 206.0, "Text": " or something that's allowed to pass the firewalls and IDS, IDS is and so."}, {"Time_Start": 206.0, "Time_End": 211.0, "Text": " So that's the first reason, effective and flexible attacks, really cool stuff."}, {"Time_Start": 211.0, "Time_End": 218.0, "Text": " And then the second reason why anyone would be interested in buffer overflows is that they are very common."}, {"Time_Start": 218.0, "Time_End": 220.0, "Text": " I read this report."}, {"Time_Start": 220.0, "Time_End": 226.0, "Text": " It's two years old now, but from the Oregon Institute of Science and Technology, I think,"}, {"Time_Start": 226.0, "Time_End": 228.0, "Text": " and they stated that buffer overflow."}, {"Time_Start": 228.0, "Time_End": 234.0, "Text": " buffer overflow has been the most common, the single most common computer security flow"}, {"Time_Start": 234.0, "Time_End": 236.0, "Text": " or problem for 10 years."}, {"Time_Start": 236.0, "Time_End": 239.0, "Text": " So that's another reason to be interested in these things."}, {"Time_Start": 239.0, "Time_End": 242.0, "Text": " And why would anyone be interested in me?"}, {"Time_Start": 242.0, "Time_End": 246.0, "Text": " Besides, I'm easy to trick shirts from."}, {"Time_Start": 246.0, "Time_End": 250.0, "Text": " Well, why would anyone be interested in small payloads?"}, {"Time_Start": 250.0, "Time_End": 257.0, "Text": " The reason that I myself got interested in it is because I was dealing with an exploit for an application"}, {"Time_Start": 257.0, "Time_End": 261.0, "Text": " that used a mismanaged bounce check."}, {"Time_Start": 261.0, "Time_End": 266.0, "Text": " They were doing some kind of bounce check, but they didn't get it perfectly correct."}, {"Time_Start": 266.0, "Time_End": 275.0, "Text": " And so by playing with small payloads, I think that you can add to the number of possible applications to exploit."}, {"Time_Start": 275.0, "Time_End": 282.0, "Text": " As a benefit, it turns out that these suggestions and these design issues that I present"}, {"Time_Start": 282.0, "Time_End": 286.0, "Text": " will make it possible to evade some intrusion detect."}, {"Time_Start": 286.0, "Time_End": 290.0, "Text": " intrusion detection systems, both network-based and host-based."}, {"Time_Start": 290.0, "Time_End": 293.0, "Text": " And I'll get back to that later, of course."}, {"Time_Start": 293.0, "Time_End": 303.0, "Text": " First, how many of you are perfectly sure about buffer-ofero flows and how many need a little reminder?"}, {"Time_Start": 303.0, "Time_End": 305.0, "Text": " How many need a reminder?"}, {"Time_Start": 305.0, "Time_End": 307.0, "Text": " Yeah, at least one."}, {"Time_Start": 307.0, "Time_End": 309.0, "Text": " You won't get a t-shirt this time."}, {"Time_Start": 309.0, "Time_End": 315.0, "Text": " Okay, let's say an application does a string copy operation without a bounce check."}, {"Time_Start": 315.0, "Time_End": 316.0, "Text": " Then that will mean that will mean that,"}, {"Time_Start": 316.0, "Time_End": 323.0, "Text": " that the function will copy data from one memory, one place in memory until another,"}, {"Time_Start": 323.0, "Time_End": 327.0, "Text": " and go on until it reaches a null-byte."}, {"Time_Start": 327.0, "Time_End": 331.0, "Text": " If it doesn't reach it, it will go on copying and overwrite memory,"}, {"Time_Start": 331.0, "Time_End": 336.0, "Text": " and write outside the memory that has been reserved for that variable,"}, {"Time_Start": 336.0, "Time_End": 341.0, "Text": " which means that you will overwrite your stored instruction pointer"}, {"Time_Start": 341.0, "Time_End": 344.0, "Text": " and you may jump into your own code."}, {"Time_Start": 344.0, "Time_End": 345.0, "Text": " Excuse me?"}, {"Time_Start": 345.0, "Time_End": 346.0, "Text": " Excuse me?"}, {"Time_Start": 346.0, "Time_End": 348.0, "Text": " Speak louder."}, {"Time_Start": 348.0, "Time_End": 353.0, "Text": " There's no volume, but I have..."}, {"Time_Start": 353.0, "Time_End": 354.0, "Text": " Okay."}, {"Time_Start": 354.0, "Time_End": 357.0, "Text": " Okay, here's a picture of it."}, {"Time_Start": 357.0, "Time_End": 359.0, "Text": " Let's say you do a function call, then you store your instruction,"}, {"Time_Start": 359.0, "Time_End": 362.0, "Text": " original instruction pointer on the stack memory."}, {"Time_Start": 362.0, "Time_End": 364.0, "Text": " You reserve space for some local variable,"}, {"Time_Start": 364.0, "Time_End": 366.0, "Text": " and then you perform a string copy."}, {"Time_Start": 366.0, "Time_End": 369.0, "Text": " Without a bounce check, you will overwrite the instruction pointer,"}, {"Time_Start": 369.0, "Time_End": 372.0, "Text": " and then you may jump back into your own code"}, {"Time_Start": 372.0, "Time_End": 375.0, "Text": " or jump wherever you want in memory."}, {"Time_Start": 375.0, "Time_End": 376.0, "Text": " So this is..."}, {"Time_Start": 376.0, "Time_End": 378.0, "Text": " Pretty cool."}, {"Time_Start": 378.0, "Time_End": 383.0, "Text": " But let's say some vulnerable server performs a bound check."}, {"Time_Start": 383.0, "Time_End": 386.0, "Text": " Let's say it receives data over the network connection"}, {"Time_Start": 386.0, "Time_End": 390.0, "Text": " and implement some sort of bounce check on the receive call,"}, {"Time_Start": 390.0, "Time_End": 394.0, "Text": " but then not an internal copy functions or such."}, {"Time_Start": 394.0, "Time_End": 396.0, "Text": " Then we have a restriction."}, {"Time_Start": 396.0, "Time_End": 399.0, "Text": " Then we have a bounce check that we have to somewhat get around"}, {"Time_Start": 399.0, "Time_End": 403.0, "Text": " to exploit this application."}, {"Time_Start": 403.0, "Time_End": 405.0, "Text": " I see two possible ways of doing this."}, {"Time_Start": 405.0, "Time_End": 406.0, "Text": " this."}, {"Time_Start": 406.0, "Time_End": 411.0, "Text": " Either we can write a simple small exploit code where the"}, {"Time_Start": 411.0, "Time_End": 415.0, "Text": " where the exploit itself is small"}, {"Time_Start": 415.0, "Time_End": 419.0, "Text": " to fit into this restricted memory"}, {"Time_Start": 419.0, "Time_End": 423.0, "Text": " and still do what what kind of exploit we want to do."}, {"Time_Start": 423.0, "Time_End": 425.0, "Text": " It's a little naive, but it's okay,"}, {"Time_Start": 425.0, "Time_End": 429.0, "Text": " and that's what we did in our last winter."}, {"Time_Start": 429.0, "Time_End": 433.0, "Text": " Another approach which might be better is to change the design concept"}, {"Time_Start": 433.0, "Time_End": 435.0, "Text": " somewhat and make a double"}, {"Time_Start": 435.0, "Time_End": 439.0, "Text": " injection and that is basically what I'm going to present here today."}, {"Time_Start": 439.0, "Time_End": 444.0, "Text": " But first this, first let's have a small look at the"}, {"Time_Start": 444.0, "Time_End": 448.0, "Text": " straightforward simple small exploits."}, {"Time_Start": 448.0, "Time_End": 453.0, "Text": " It will implies at least two functional requirements"}, {"Time_Start": 453.0, "Time_End": 455.0, "Text": " for the exploit itself."}, {"Time_Start": 455.0, "Time_End": 458.0, "Text": " It has to be able to listen for requests over a network"}, {"Time_Start": 458.0, "Time_End": 460.0, "Text": " and execute those at system commands."}, {"Time_Start": 460.0, "Time_End": 464.0, "Text": " That's basically what we want to do when we exploit an application."}, {"Time_Start": 464.0, "Time_End": 465.0, "Text": " And we all"}, {"Time_Start": 465.0, "Time_End": 472.0, "Text": " also has a requirement to keep the number of bytes as low as possible."}, {"Time_Start": 472.0, "Time_End": 478.0, "Text": " Last time we did it, we came up with an example that was just above 250 bytes."}, {"Time_Start": 478.0, "Time_End": 482.0, "Text": " We used two libraries, Windows sockets and Colonel 32."}, {"Time_Start": 482.0, "Time_End": 487.0, "Text": " We used the datagram socket instead of a stream socket because UDP don't need to do,"}, {"Time_Start": 487.0, "Time_End": 492.0, "Text": " because with UDP you don't need to do any listen or accept calls and you save a few bytes."}, {"Time_Start": 492.0, "Time_End": 494.0, "Text": " And then we went into a loop doing research."}, {"Time_Start": 494.0, "Time_End": 499.0, "Text": " doing receive and executing with window win exec from current 32."}, {"Time_Start": 499.0, "Time_End": 504.0, "Text": " If you want to have a look at this one, you can download it from security focus."}, {"Time_Start": 504.0, "Time_End": 507.0, "Text": " It's about half year old."}, {"Time_Start": 507.0, "Time_End": 512.0, "Text": " Now for the second approach that I think it's much more cool"}, {"Time_Start": 512.0, "Time_End": 516.0, "Text": " is to change the design concept and do a double injection."}, {"Time_Start": 516.0, "Time_End": 520.0, "Text": " And of course I will explain that on the next slide."}, {"Time_Start": 520.0, "Time_End": 523.0, "Text": " Besides change the design concept and do a double injection."}, {"Time_Start": 523.0, "Time_End": 524.0, "Text": " Besides,"}, {"Time_Start": 524.0, "Time_End": 530.0, "Text": " the design concept. We can also try to use the existing network connection and try to"}, {"Time_Start": 530.0, "Time_End": 536.0, "Text": " reuse the already loaded libraries to further minimize and optimize our code to get even smaller."}, {"Time_Start": 536.0, "Time_End": 540.0, "Text": " So that's two parts. Change the concept and optimize."}, {"Time_Start": 540.0, "Time_End": 544.0, "Text": " So what do I mean by double injection?"}, {"Time_Start": 544.0, "Time_End": 549.0, "Text": " Let's say you have a server process in the middle that listens for connection over the network"}, {"Time_Start": 549.0, "Time_End": 553.0, "Text": " and when it receives a request from a client, it calls an internal,"}, {"Time_Start": 553.0, "Time_End": 560.0, "Text": " an internal parse and execute function to, yeah, well, to parse and execute."}, {"Time_Start": 560.0, "Time_End": 566.32, "Text": " And it looks like this. And the server is running. Let's say we are at this place in the"}, {"Time_Start": 566.32, "Time_End": 575.0, "Text": " server code. And some clients over the network calls the server. Then when the server receives"}, {"Time_Start": 575.0, "Time_End": 580.5, "Text": " the first call, the first command or request or whatever, the server will call the parse"}, {"Time_Start": 580.5, "Time_End": 584.82, "Text": " and execute function and store the current instruction pointer onto the stack"}, {"Time_Start": 584.82, "Time_End": 589.62, "Text": " memory on top of its stack frame. Stack frame number one belongs to the server"}, {"Time_Start": 589.62, "Time_End": 594.5, "Text": " process and call jump into the instructions of the parse and execute function."}, {"Time_Start": 594.5, "Time_End": 598.5, "Text": " The parse and execute function will receive a stack frame of its own, which is"}, {"Time_Start": 598.5, "Time_End": 603.5, "Text": " being placed above the service stack frame onto the stack memory."}, {"Time_Start": 603.5, "Time_End": 607.5, "Text": " And then the parse and execute performs a string copy call."}, {"Time_Start": 607.5, "Time_End": 610.48, "Text": " So let's say we have a"}, {"Time_Start": 610.5, "Time_End": 616.0, "Text": " We have a restriction on the number of bytes for the first call from the client to the server,"}, {"Time_Start": 616.0, "Time_End": 623.0, "Text": " but let's say we have no bounce check within the parse and execute functions call to string copy."}, {"Time_Start": 623.0, "Time_End": 630.0, "Text": " Then the first payload we send through the first call will overwrite down the second stack frame and overwrite the instruction pointer."}, {"Time_Start": 634.0, "Time_End": 636.0, "Text": " Excuse me?"}, {"Time_Start": 636.0, "Time_End": 638.0, "Text": " Yes."}, {"Time_Start": 638.0, "Time_End": 639.0, "Text": " Yes."}, {"Time_Start": 639.0, "Time_End": 640.0, "Text": " Yes."}, {"Time_Start": 640.0, "Time_End": 649.0, "Text": " So the stack grows upwards and variables are written downwards on the stack."}, {"Time_Start": 649.0, "Time_End": 659.0, "Text": " On the next few couple of slides, I have written memory addresses to us so we can see them."}, {"Time_Start": 659.0, "Time_End": 663.0, "Text": " But not in this very fine animation."}, {"Time_Start": 663.0, "Time_End": 667.0, "Text": " The first time I made a PowerPoint animation."}, {"Time_Start": 667.0, "Time_End": 669.0, "Text": " Well, anyway."}, {"Time_Start": 669.0, "Time_End": 681.0, "Text": " Okay, the second part of the double injection is when the first payload executes and listens for a second injection or a second call from the client,"}, {"Time_Start": 681.0, "Time_End": 688.0, "Text": " it reads the second payload and stores it higher up on the stack where we have free memory, lower address."}, {"Time_Start": 688.0, "Time_End": 698.0, "Text": " Then the first payload, when it has received the entire second payload, it jumps up to it and continues to execute the second payload."}, {"Time_Start": 698.0, "Time_End": 701.0, "Text": " we're still executing on the stack."}, {"Time_Start": 701.0, "Time_End": 704.0, "Text": " And then the second payload can perform the actual exploit,"}, {"Time_Start": 704.0, "Time_End": 713.0, "Text": " and by that I mean open a shell or add an account or whatever that we want to do to exploit this host server."}, {"Time_Start": 717.0, "Time_End": 722.0, "Text": " The benefits of doing this is, of course, that we'll get lower memory requirements for the first payload."}, {"Time_Start": 722.0, "Time_End": 727.0, "Text": " And it's basically only the first payload in this approach"}, {"Time_Start": 727.0, "Time_End": 729.0, "Text": " approach that is interesting."}, {"Time_Start": 729.0, "Time_End": 731.0, "Text": " Because if the first payload is small enough,"}, {"Time_Start": 731.0, "Time_End": 734.0, "Text": " then the first stack frame, that one that belonged to the server,"}, {"Time_Start": 734.0, "Time_End": 736.0, "Text": " will be preserved."}, {"Time_Start": 736.0, "Time_End": 741.0, "Text": " And if it's preserved, then we might be able to do a clean return to the calling function."}, {"Time_Start": 741.0, "Time_End": 745.0, "Text": " And if we can do this clean return, the server function will not crash."}, {"Time_Start": 745.0, "Time_End": 750.0, "Text": " And if it doesn't crash, we will get no log entry on the system."}, {"Time_Start": 750.0, "Time_End": 756.0, "Text": " And if we will get no log entry, we will evade some host-based intrusion detection systems."}, {"Time_Start": 756.0, "Time_End": 762.0, "Text": " systems, mainly those that just parses log files."}, {"Time_Start": 762.0, "Time_End": 768.0, "Text": " Okay, part number two or trick number two is to use the existing connection."}, {"Time_Start": 768.0, "Time_End": 773.0, "Text": " And that means that we let the server open a new socket and receives the first payload."}, {"Time_Start": 773.0, "Time_End": 779.0, "Text": " And then we managed to get this first payload to receive the second payload over the same session"}, {"Time_Start": 779.0, "Time_End": 783.0, "Text": " by using the same socket."}, {"Time_Start": 783.0, "Time_End": 785.0, "Text": " Benefits of doing this."}, {"Time_Start": 785.0, "Time_End": 792.0, "Text": " is that we do not need to set up any new connection."}, {"Time_Start": 792.0, "Time_End": 796.0, "Text": " And if we don't need to set up any new connection,"}, {"Time_Start": 796.0, "Time_End": 800.0, "Text": " we will, or we might evade some intrusion detection systems,"}, {"Time_Start": 800.0, "Time_End": 805.0, "Text": " some network-based intrusion detection system that looks for TCP handshakes"}, {"Time_Start": 805.0, "Time_End": 810.0, "Text": " or that looks for unrecognized elite ports over the network."}, {"Time_Start": 810.0, "Time_End": 813.0, "Text": " But we're using the same still allowed protocol,"}, {"Time_Start": 813.0, "Time_End": 814.0, "Text": " the same still allowed,"}, {"Time_Start": 814.0, "Time_End": 816.0, "Text": " same still allowed port number."}, {"Time_Start": 816.0, "Time_End": 818.0, "Text": " It's the same session."}, {"Time_Start": 818.0, "Time_End": 823.0, "Text": " And that will make it harder for network-based intrusion detection to see it."}, {"Time_Start": 823.0, "Time_End": 828.0, "Text": " Of course, we will also get even lower memory requirements for the first payload,"}, {"Time_Start": 828.0, "Time_End": 830.0, "Text": " and that's a benefit too."}, {"Time_Start": 830.0, "Time_End": 832.0, "Text": " Okay."}, {"Time_Start": 832.0, "Time_End": 834.0, "Text": " I hope this sounds cool."}, {"Time_Start": 834.0, "Time_End": 837.0, "Text": " But how can we do it?"}, {"Time_Start": 837.0, "Time_End": 841.0, "Text": " I have made a small proof of concept implementation that I'm giving away"}, {"Time_Start": 841.0, "Time_End": 844.0, "Text": " after this speech or after DefConner."}, {"Time_Start": 844.0, "Time_End": 848.0, "Text": " I think I will put it up on the post-Defcon pages together with my slides if you want it,"}, {"Time_Start": 848.0, "Time_End": 852.0, "Text": " where I have implemented a small vulnerable server"}, {"Time_Start": 852.0, "Time_End": 856.0, "Text": " that accepts connection, receives commands with this restriction,"}, {"Time_Start": 856.0, "Time_End": 860.0, "Text": " calls this vulnerable, parse and execute function,"}, {"Time_Start": 860.0, "Time_End": 864.0, "Text": " and it's possible to exploit."}, {"Time_Start": 864.0, "Time_End": 868.0, "Text": " And also I will provide, of course, a remote client with these exploits."}, {"Time_Start": 868.0, "Time_End": 873.0, "Text": " And they cannot be used on anything, but this particular server, of course."}, {"Time_Start": 873.0, "Time_End": 891.0, "Text": " Okay, so I'm a little surprised you didn't ask this before I got to the slide, but isn't it interesting how we will manage to use the existing connection."}, {"Time_Start": 891.0, "Time_End": 898.0, "Text": " I'll say we have to find the socket descriptor and use it."}, {"Time_Start": 898.0, "Time_End": 902.0, "Text": " And how to find it is by finding the accept call."}, {"Time_Start": 902.0, "Time_End": 911.0, "Text": " There is accept call can be found by disassembling the server and maybe look for an error message or something."}, {"Time_Start": 911.0, "Time_End": 917.0, "Text": " And then set a break point at that address in the code and debug the program."}, {"Time_Start": 917.0, "Time_End": 922.0, "Text": " And then look where the return value from the accept call is being stored in memory"}, {"Time_Start": 922.0, "Time_End": 930.0, "Text": " because the accept call returns the socket descriptor for the session socket."}, {"Time_Start": 930.0, "Time_End": 931.0, "Text": " There's a plenty of."}, {"Time_Start": 931.0, "Time_End": 937.0, "Text": " There's plenty of disassemblers available on the internet, and that's just one example."}, {"Time_Start": 937.0, "Time_End": 941.0, "Text": " That one's free."}, {"Time_Start": 941.0, "Time_End": 946.0, "Text": " If you run a disassembler on the server that I'm providing, you will get this."}, {"Time_Start": 946.0, "Time_End": 954.0, "Text": " And if you look through the disassembled code, you'll find an error message that is quite useful."}, {"Time_Start": 954.0, "Time_End": 958.0, "Text": " It shows us that the accept function is probably that one."}, {"Time_Start": 958.0, "Time_End": 961.0, "Text": " And then we know that we can set our breakpoint at this ad."}, {"Time_Start": 961.0, "Time_End": 965.0, "Text": " Then we debug the program and we get this."}, {"Time_Start": 965.0, "Time_End": 970.0, "Text": " We see where the session socket is being stored."}, {"Time_Start": 974.0, "Time_End": 978.0, "Text": " Then, okay, so we have found it."}, {"Time_Start": 978.0, "Time_End": 982.0, "Text": " Then to use it, we need to know that the"}, {"Time_Start": 982.0, "Time_End": 987.0, "Text": " socket's position within the stack frame does not change."}, {"Time_Start": 987.0, "Time_End": 990.0, "Text": " Well, the stack frame itself might change."}, {"Time_Start": 990.0, "Time_End": 991.0, "Text": " The stack frame."}, {"Time_Start": 991.0, "Time_End": 994.0, "Text": " frame's position might change the rest."}, {"Time_Start": 994.0, "Time_End": 998.0, "Text": " So if we know a fixed position within the stack frame,"}, {"Time_Start": 998.0, "Time_End": 1003.0, "Text": " we can calculate to where the socket is being stored and reuse it."}, {"Time_Start": 1003.0, "Time_End": 1007.0, "Text": " So this is second animation."}, {"Time_Start": 1007.0, "Time_End": 1011.0, "Text": " And it shows what the first payload is basically doing."}, {"Time_Start": 1011.0, "Time_End": 1014.0, "Text": " When the first payload starts, the base pointer has been overwritten"}, {"Time_Start": 1014.0, "Time_End": 1018.0, "Text": " and the stack pointer points towards the end of the first payload."}, {"Time_Start": 1018.0, "Time_End": 1020.0, "Text": " First I do is to change the base pointer and the"}, {"Time_Start": 1020.0, "Time_End": 1026.0, "Text": " and move the stack pointer upwards against free memory."}, {"Time_Start": 1026.0, "Time_End": 1031.0, "Text": " Then I add some arguments for the receive function."}, {"Time_Start": 1031.0, "Time_End": 1035.0, "Text": " I said a pointer to the buffer where we want to store the second point"}, {"Time_Start": 1035.0, "Time_End": 1041.0, "Text": " the second payload in free memory and then the socket."}, {"Time_Start": 1041.0, "Time_End": 1048.0, "Text": " Because I know the distance from, I know that the distance from the base pointer to the socket"}, {"Time_Start": 1048.0, "Time_End": 1049.0, "Text": " will always be the same."}, {"Time_Start": 1049.0, "Time_End": 1053.0, "Text": " be the same and the base pointer will be set during runtime."}, {"Time_Start": 1053.0, "Time_End": 1057.0, "Text": " So I can always find the socket descriptor."}, {"Time_Start": 1057.0, "Time_End": 1061.0, "Text": " So that's using the socket."}, {"Time_Start": 1061.0, "Time_End": 1065.0, "Text": " So that's using the socket."}, {"Time_Start": 1065.0, "Time_End": 1072.0, "Text": " To further minimize and optimize the code of the first payload,"}, {"Time_Start": 1072.0, "Time_End": 1078.0, "Text": " I suggest to use those functions that have already been loaded by the server."}, {"Time_Start": 1078.0, "Time_End": 1084.0, "Text": " And of course the server needs to use some functions from the Windows socket library."}, {"Time_Start": 1084.0, "Time_End": 1087.0, "Text": " I mean, it receives the first payload."}, {"Time_Start": 1087.0, "Time_End": 1093.0, "Text": " And the addresses to this function are being stored at known places in"}, {"Time_Start": 1093.0, "Time_End": 1099.0, "Text": " within the instructions of the server process as long as it hasn't been relocated,"}, {"Time_Start": 1099.0, "Time_End": 1102.0, "Text": " while the library may be stored wherever in memory,"}, {"Time_Start": 1102.0, "Time_End": 1106.0, "Text": " not wherever, but at an unknown place."}, {"Time_Start": 1106.0, "Time_End": 1115.0, "Text": " So this is what happens when the server calls a function within the Windows socket library."}, {"Time_Start": 1115.0, "Time_End": 1122.0, "Text": " The server uses its jump table."}, {"Time_Start": 1122.0, "Time_End": 1128.0, "Text": " And if we disassemble the server code one more time, we find this."}, {"Time_Start": 1128.0, "Time_End": 1130.0, "Text": " This is the jump table."}, {"Time_Start": 1130.0, "Time_End": 1135.0, "Text": " And by just reading the code or by debugging, we can"}, {"Time_Start": 1135.0, "Time_End": 1141.0, "Text": " deduce that these addresses correspond to these functions."}, {"Time_Start": 1141.0, "Time_End": 1144.0, "Text": " So if we want to do a receive function,"}, {"Time_Start": 1144.0, "Time_End": 1149.0, "Text": " or if we want to call the receive function, we can do it like this."}, {"Time_Start": 1149.0, "Time_End": 1158.0, "Text": " Are you following?"}, {"Time_Start": 1158.0, "Time_End": 1163.0, "Text": " This is just a picture of the first payload in Memorine."}, {"Time_Start": 1163.0, "Time_End": 1164.0, "Text": " As you can see, the address,"}, {"Time_Start": 1164.0, "Time_End": 1167.0, "Text": " you can see the addresses are printed to the left."}, {"Time_Start": 1169.0, "Time_End": 1171.0, "Text": " And this is the code itself."}, {"Time_Start": 1171.0, "Time_End": 1174.0, "Text": " As you can see, I'll start by subtracting"}, {"Time_Start": 1174.0, "Time_End": 1179.0, "Text": " at least as much"}, {"Time_Start": 1183.0, "Time_End": 1186.0, "Text": " at least as much amount of memory from the stack point"}, {"Time_Start": 1186.0, "Time_End": 1189.0, "Text": " that I need to store the second payload."}, {"Time_Start": 1189.0, "Time_End": 1193.0, "Text": " Then I push the arguments to the receive function"}, {"Time_Start": 1193.0, "Time_End": 1194.0, "Text": " on 2."}, {"Time_Start": 1194.0, "Time_End": 1196.0, "Text": " stack, the new stack frame."}, {"Time_Start": 1196.0, "Time_End": 1201.0, "Text": " And then I basically call the receive function through the jump table"}, {"Time_Start": 1201.0, "Time_End": 1203.0, "Text": " within the server."}, {"Time_Start": 1203.0, "Time_End": 1207.0, "Text": " And then I jump to the second payload."}, {"Time_Start": 1207.0, "Time_End": 1209.0, "Text": " You have any questions on this?"}, {"Time_Start": 1209.0, "Time_End": 1210.0, "Text": " First payload?"}, {"Time_Start": 1210.0, "Time_End": 1212.0, "Text": " I have some pens?"}, {"Time_Start": 1212.0, "Time_End": 1213.0, "Text": " No."}, {"Time_Start": 1213.0, "Time_End": 1216.0, "Text": " Ah, anyway."}, {"Time_Start": 1216.0, "Time_End": 1217.0, "Text": " Okay."}, {"Time_Start": 1217.0, "Time_End": 1219.0, "Text": " So what's to send the second time?"}, {"Time_Start": 1219.0, "Time_End": 1221.0, "Text": " I mean, you can send whatever."}, {"Time_Start": 1221.0, "Time_End": 1222.0, "Text": " You can send your code of choice."}, {"Time_Start": 1222.0, "Time_End": 1223.0, "Text": " You do not need to."}, {"Time_Start": 1223.0, "Time_End": 1229.0, "Text": " need to feel any restrictions for the size of the code to send the second time."}, {"Time_Start": 1229.0, "Time_End": 1233.0, "Text": " You can send code that opens a shell and performs"}, {"Time_Start": 1233.0, "Time_End": 1238.0, "Text": " or performs whatever action you want to do to exploit this server."}, {"Time_Start": 1238.0, "Time_End": 1240.0, "Text": " And remember, you may still use the same socket."}, {"Time_Start": 1240.0, "Time_End": 1245.0, "Text": " You may still use the jump table for the functions that has already been loaded,"}, {"Time_Start": 1245.0, "Time_End": 1252.0, "Text": " as well as you might try to load your own libraries and look up new functions."}, {"Time_Start": 1252.0, "Time_End": 1259.0, "Text": " Another important thing concerning the second payload is that we do not need to"}, {"Time_Start": 1259.0, "Time_End": 1264.0, "Text": " exor protect the second payload because it's being sent to the stack."}, {"Time_Start": 1264.0, "Time_End": 1268.0, "Text": " It's being written to the stack as raw data over a socket."}, {"Time_Start": 1268.0, "Time_End": 1272.0, "Text": " The first payload is written to the stack by a string copy operation."}, {"Time_Start": 1272.0, "Time_End": 1277.0, "Text": " And as you probably know, we cannot have any nulls within that because then the string copy function"}, {"Time_Start": 1277.0, "Time_End": 1279.0, "Text": " will stop."}, {"Time_Start": 1279.0, "Time_End": 1281.0, "Text": " So we need to X or protect them."}, {"Time_Start": 1281.0, "Time_End": 1282.0, "Text": " But for the second payload,"}, {"Time_Start": 1282.0, "Time_End": 1285.0, "Text": " we do not need to bother to exor protect the data."}, {"Time_Start": 1287.0, "Time_End": 1290.0, "Text": " The proof of concept implementation that I have made,"}, {"Time_Start": 1290.0, "Time_End": 1294.0, "Text": " it does not exploit this survey in any particular way."}, {"Time_Start": 1294.0, "Time_End": 1299.0, "Text": " It just confirms its success by sending a short message back to the client."}, {"Time_Start": 1312.0, "Time_End": 1318.0, "Text": " Okay, so this is a picture of what the second payload does."}, {"Time_Start": 1318.0, "Time_End": 1320.0, "Text": " When the second payload starts running,"}, {"Time_Start": 1320.0, "Time_End": 1324.0, "Text": " the base pointer still points to the base of the first payload,"}, {"Time_Start": 1324.0, "Time_End": 1328.0, "Text": " and the stack pointer points to the top of the second payload."}, {"Time_Start": 1328.0, "Time_End": 1332.0, "Text": " The instruction pointer is, of course, at the top of the second payload,"}, {"Time_Start": 1332.0, "Time_End": 1334.0, "Text": " because we have made a jump."}, {"Time_Start": 1334.0, "Time_End": 1336.0, "Text": " I call the send function."}, {"Time_Start": 1336.0, "Time_End": 1340.0, "Text": " I push the arguments for the send function to the stack,"}, {"Time_Start": 1340.0, "Time_End": 1341.0, "Text": " and I call the stack."}, {"Time_Start": 1341.0, "Time_End": 1342.0, "Text": " And I call the stack."}, {"Time_Start": 1342.0, "Time_End": 1343.0, "Text": " the send function."}, {"Time_Start": 1343.0, "Time_End": 1344.0, "Text": " Sorry."}, {"Time_Start": 1344.0, "Time_End": 1346.0, "Text": " And then I'm finishing up."}, {"Time_Start": 1346.0, "Time_End": 1350.0, "Text": " When I'm finishing up, I want to do a clean return."}, {"Time_Start": 1350.0, "Time_End": 1356.0, "Text": " Because as you remember, if I do a clean return, because as you remember, if I do a clean return,"}, {"Time_Start": 1356.0, "Time_End": 1364.0, "Text": " I won't get any entry to the system log, and I will, I can use that to possibly evade"}, {"Time_Start": 1364.0, "Time_End": 1366.0, "Text": " an host-based intrusion detection system."}, {"Time_Start": 1366.0, "Time_End": 1371.0, "Text": " So to be able to do a clean return, I need to reset the base pointer and the system."}, {"Time_Start": 1371.0, "Time_End": 1377.0, "Text": " base pointer and the stack pointer to their original originally intended positions"}, {"Time_Start": 1377.0, "Time_End": 1381.0, "Text": " with respect to the first stack frame, the stack frame of the calling function,"}, {"Time_Start": 1381.0, "Time_End": 1386.0, "Text": " and I need to reset the instruction pointer to point back into the service or instruction codes."}, {"Time_Start": 1386.0, "Time_End": 1395.0, "Text": " Of course, if the pars and execute function is supposed to return anything special,"}, {"Time_Start": 1395.0, "Time_End": 1398.0, "Text": " I have to set that up as well."}, {"Time_Start": 1401.0, "Time_End": 1407.0, "Text": " Since I haven't changed the base pointer throughout the execution of the second payload,"}, {"Time_Start": 1407.0, "Time_End": 1412.0, "Text": " and I remember that the base pointer did point to the,"}, {"Time_Start": 1412.0, "Time_End": 1416.0, "Text": " okay, the base pointer did point to the stack pointer before I started."}, {"Time_Start": 1416.0, "Time_End": 1419.0, "Text": " I can simply set them back."}, {"Time_Start": 1419.0, "Time_End": 1424.0, "Text": " And since I know that the stack frame of the calling function is always of the same size,"}, {"Time_Start": 1424.0, "Time_End": 1428.0, "Text": " I can calculate what to set the base pointer to."}, {"Time_Start": 1428.0, "Time_End": 1438.0, "Text": " I mean, all of these stack frames may, their position in memory may change,"}, {"Time_Start": 1438.0, "Time_End": 1440.0, "Text": " and I do not know that until runtime."}, {"Time_Start": 1440.0, "Time_End": 1445.0, "Text": " But what I do know is that the size of the stack frame is always the same."}, {"Time_Start": 1445.0, "Time_End": 1450.0, "Text": " And thereby I can calculate what to set the base point to do."}, {"Time_Start": 1450.0, "Time_End": 1453.0, "Text": " And then I can do a clean return."}, {"Time_Start": 1453.0, "Time_End": 1456.0, "Text": " Back to the server."}, {"Time_Start": 1456.0, "Time_End": 1457.0, "Text": " Back to the server."}, {"Time_Start": 1457.0, "Time_End": 1459.0, "Text": " back to the service or original instructions."}, {"Time_Start": 1459.0, "Time_End": 1464.0, "Text": " With both the stack pointer and the base pointer reset to its original values"}, {"Time_Start": 1464.0, "Time_End": 1468.0, "Text": " and the stack frame of the calling function not disrupted in any way."}, {"Time_Start": 1468.0, "Time_End": 1472.0, "Text": " Do you have any questions?"}, {"Time_Start": 1472.0, "Time_End": 1473.0, "Text": " Yeah."}, {"Time_Start": 1473.0, "Time_End": 1474.0, "Text": " Yeah."}, {"Time_Start": 1474.0, "Time_End": 1476.0, "Text": " You want to pen before?"}, {"Time_Start": 1476.0, "Time_End": 1478.0, "Text": " No, sorry."}, {"Time_Start": 1478.0, "Time_End": 1490.0, "Text": " Let's say you just have a..."}, {"Time_Start": 1490.0, "Time_End": 1495.0, "Text": " Okay, the question was, can you do this without having the source code for the server?"}, {"Time_Start": 1495.0, "Time_End": 1502.0, "Text": " And the answer is, yes, if you manage to read only the disassembly."}, {"Time_Start": 1502.0, "Time_End": 1505.0, "Text": " If you have the binary, you can still disassemble it."}, {"Time_Start": 1505.0, "Time_End": 1516.0, "Text": " Okay, if it's a only remote situation, no, you need to disassemble the server."}, {"Time_Start": 1516.0, "Time_End": 1525.0, "Text": " But since you're only supposed to evaluate your own programs, you will probably have access to the binary, right?"}, {"Time_Start": 1525.0, "Time_End": 1529.0, "Text": " You want a black one or a purple one?"}, {"Time_Start": 1529.0, "Time_End": 1534.0, "Text": " Okay."}, {"Time_Start": 1534.0, "Time_End": 1535.0, "Text": " Cool."}, {"Time_Start": 1535.0, "Time_End": 1537.0, "Text": " Any more questions?"}, {"Time_Start": 1537.0, "Time_End": 1539.0, "Text": " Yeah."}, {"Time_Start": 1539.0, "Time_End": 1558.0, "Text": " The first payload over writes the original return address."}, {"Time_Start": 1558.0, "Time_End": 1563.0, "Text": " Yes."}, {"Time_Start": 1563.0, "Time_End": 1564.0, "Text": " Yeah."}, {"Time_Start": 1565.0, "Time_End": 1572.0, "Text": " Okay, how do I know what to set the instruction point into to do a clean return?"}, {"Time_Start": 1572.0, "Time_End": 1578.0, "Text": " I get it from the disassembly code and it will be the same."}, {"Time_Start": 1578.0, "Time_End": 1580.0, "Text": " Excuse me?"}, {"Time_Start": 1580.0, "Time_End": 1584.0, "Text": " Excuse me?"}, {"Time_Start": 1584.0, "Time_End": 1585.0, "Text": " Excuse me?"}, {"Time_Start": 1595.0, "Time_End": 1608.0, "Text": " I don't know if I got it right, but let's try to answer something and see if it fits."}, {"Time_Start": 1608.0, "Time_End": 1616.0, "Text": " When I disassemble the server, I can find the address for the call, and I know that the return"}, {"Time_Start": 1616.0, "Time_End": 1620.0, "Text": " supposed to return address is the address next, the next address."}, {"Time_Start": 1620.0, "Time_End": 1624.0, "Text": " And as long as the server hasn't been relocated in memory, this address will be the same."}, {"Time_Start": 1624.0, "Time_End": 1630.0, "Text": " be the same because are you taking picture?"}, {"Time_Start": 1630.0, "Time_End": 1631.0, "Text": " Thanks."}, {"Time_Start": 1631.0, "Time_End": 1633.0, "Text": " I think."}, {"Time_Start": 1633.0, "Time_End": 1637.0, "Text": " As long as the server hasn't been relocated with anything,"}, {"Time_Start": 1637.0, "Time_End": 1641.0, "Text": " its base address will always be this"}, {"Time_Start": 1641.0, "Time_End": 1643.0, "Text": " 0040, 00."}, {"Time_Start": 1643.0, "Time_End": 1645.0, "Text": " It's set."}, {"Time_Start": 1645.0, "Time_End": 1648.0, "Text": " You can set that when you compile your binary."}, {"Time_Start": 1648.0, "Time_End": 1651.0, "Text": " And you will see it when you disassembly a binary too."}, {"Time_Start": 1651.0, "Time_End": 1653.0, "Text": " You want a purple or black one?"}, {"Time_Start": 1653.0, "Time_End": 1656.0, "Text": " You don't want any."}, {"Time_Start": 1656.0, "Time_End": 1658.0, "Text": " Okay."}, {"Time_Start": 1658.0, "Time_End": 1660.0, "Text": " Yeah, Steven."}, {"Time_Start": 1688.0, "Time_End": 1692.0, "Text": " Yes, I think this can be made on other services as well."}, {"Time_Start": 1692.0, "Time_End": 1698.0, "Text": " But I'm only providing a proof of concept and something that I made myself."}, {"Time_Start": 1698.0, "Time_End": 1703.0, "Text": " And I don't even know if it's legal to disassemble programs here."}, {"Time_Start": 1703.0, "Time_End": 1707.0, "Text": " But it is probably legal to disassemble your own programs."}, {"Time_Start": 1707.0, "Time_End": 1715.0, "Text": " I mean, there are a number of conditions that has to be met for this to work out."}, {"Time_Start": 1715.0, "Time_End": 1717.0, "Text": " I mean, the payload, the first payload."}, {"Time_Start": 1717.0, "Time_End": 1724.0, "Text": " cannot override the it cannot be allowed to disrupt the first stack frame."}, {"Time_Start": 1724.0, "Time_End": 1729.0, "Text": " And that might be true, that might be possible or that might not be possible."}, {"Time_Start": 1729.0, "Time_End": 1732.0, "Text": " There are some other conditions that has to be met to."}, {"Time_Start": 1732.0, "Time_End": 1739.0, "Text": " But I think the concept, the idea, it will be able to do on other servers as well."}, {"Time_Start": 1739.0, "Time_End": 1740.0, "Text": " Yes, you."}, {"Time_Start": 1747.0, "Time_End": 1753.0, "Text": " Okay, the question was how effective is a non-executable stack frame?"}, {"Time_Start": 1753.0, "Time_End": 1755.0, "Text": " I would say it's quite effective."}, {"Time_Start": 1755.0, "Time_End": 1773.0, "Text": " But let's say, one possible way to get around it might be to jump to maybe an argument that is being stored on the heap or something instead."}, {"Time_Start": 1773.0, "Time_End": 1785.0, "Text": " Basically, I'm kind of amazed that stack frames aren't being protected from execution."}, {"Time_Start": 1785.0, "Time_End": 1790.0, "Text": " You want the last pen?"}, {"Time_Start": 1790.0, "Time_End": 1795.0, "Text": " Sorry."}, {"Time_Start": 1795.0, "Time_End": 1802.0, "Text": " Okay, so I ran out of the pens and ran out of free stuff."}, {"Time_Start": 1802.0, "Time_End": 1803.0, "Text": " Okay."}, {"Time_Start": 1803.0, "Time_End": 1810.0, "Text": " running out of the slides too. So I'm going to finish off and show this is just the payloads in memory."}, {"Time_Start": 1812.0, "Time_End": 1819.0, "Text": " And as you can see, I just send a simple stupid message back from the second payload to the calling client."}, {"Time_Start": 1819.0, "Time_End": 1822.0, "Text": " This is the code for the second payload."}, {"Time_Start": 1822.0, "Time_End": 1831.0, "Text": " As you can see, it's basically just a number of push operations to push the arguments to the send function"}, {"Time_Start": 1831.0, "Time_End": 1832.0, "Text": " and then call the same function through the just."}, {"Time_Start": 1832.0, "Time_End": 1839.0, "Text": " send function through the jump table of the server and then reset the stack pointers and return."}, {"Time_Start": 1839.0, "Time_End": 1843.0, "Text": " So the return address in this example is hard coded into the second payload."}, {"Time_Start": 1843.0, "Time_End": 1847.0, "Text": " You can see it on this second last line to the right."}, {"Time_Start": 1847.0, "Time_End": 1854.0, "Text": " To summarize this, I've discussed a double injection."}, {"Time_Start": 1854.0, "Time_End": 1861.0, "Text": " And by a double injection, I mean that we have, we send the first pay, we send one payload that uploads a second payload."}, {"Time_Start": 1861.0, "Time_End": 1865.0, "Text": " a second payload and then jumps to the second payload and that the second payload"}, {"Time_Start": 1865.0, "Time_End": 1871.0, "Text": " executes the actual exploit like the shell or something."}, {"Time_Start": 1871.0, "Time_End": 1877.0, "Text": " I've suggested to try to use an existing network connection by finding and supplying"}, {"Time_Start": 1877.0, "Time_End": 1881.0, "Text": " an existing socket descriptor to the receive and send functions."}, {"Time_Start": 1881.0, "Time_End": 1885.0, "Text": " And I have also suggested to try to use the existing functions,"}, {"Time_Start": 1885.0, "Time_End": 1888.0, "Text": " the preloaded ones through the jump table of the original program."}, {"Time_Start": 1888.0, "Time_End": 1890.0, "Text": " By doing this,"}, {"Time_Start": 1890.0, "Time_End": 1896.0, "Text": " By doing this, it might be possible to evade a network-based intrusion detection system."}, {"Time_Start": 1896.0, "Time_End": 1901.0, "Text": " There are no elite ports and no TCP handshakes since we are,"}, {"Time_Start": 1901.0, "Time_End": 1904.0, "Text": " sorry, using the existing network connections."}, {"Time_Start": 1904.0, "Time_End": 1910.0, "Text": " There are not, as long as for the first payload, there are no large amount of"}, {"Time_Start": 1910.0, "Time_End": 1913.0, "Text": " amounts of data being sent."}, {"Time_Start": 1913.0, "Time_End": 1920.0, "Text": " And it, this, by doing this, we force and we force and,"}, {"Time_Start": 1920.0, "Time_End": 1925.0, "Text": " network-based intrusion detection system into interpreting the application protocol"}, {"Time_Start": 1925.0, "Time_End": 1935.0, "Text": " to see and detect the changes of my payloads from an original application protocol."}, {"Time_Start": 1935.0, "Time_End": 1944.0, "Text": " And that interpretation will probably, it will definitely increase the complexity of the ideas"}, {"Time_Start": 1944.0, "Time_End": 1949.0, "Text": " and it will probably decrease the capacity and slow down analysis."}, {"Time_Start": 1949.0, "Time_End": 1956.0, "Text": " Have you read through Cesar's ASCII encoding paper?"}, {"Time_Start": 1956.0, "Time_End": 1965.0, "Text": " That can also be used as a counter, if application protocol interpretation by the"}, {"Time_Start": 1965.0, "Time_End": 1969.0, "Text": " network-based intrusion detection system is a countermeasure against this attack."}, {"Time_Start": 1969.0, "Time_End": 1973.0, "Text": " Cesar's Aski encoding can be seen as a counter-counter measure."}, {"Time_Start": 1973.0, "Time_End": 1977.0, "Text": " So you can continue this."}, {"Time_Start": 1977.0, "Time_End": 1979.0, "Text": " By not setting up any new concept,"}, {"Time_Start": 1979.0, "Time_End": 1984.76, "Text": " connections and by returning cleanly without the crash, there will be no log entry."}, {"Time_Start": 1984.76, "Time_End": 1992.64, "Text": " And that will force and host-based intrusion detection system to kind of get some strange behavior"}, {"Time_Start": 1992.64, "Time_End": 1998.56, "Text": " awareness because the server won't function properly, but it won't crash either."}, {"Time_Start": 1998.56, "Time_End": 2008.94, "Text": " And to be able to recognize the difference between those two you need, well, some kind of abnormal behavior detection, and that will"}, {"Time_Start": 2009.0, "Time_End": 2010.0, "Text": " add complexity too."}, {"Time_Start": 2010.0, "Time_End": 2015.0, "Text": " Almost finished."}, {"Time_Start": 2015.0, "Time_End": 2018.0, "Text": " I really recommend you to read this."}, {"Time_Start": 2018.0, "Time_End": 2023.0, "Text": " The first one is a chapter in the book called Hackproofing Your Network"}, {"Time_Start": 2023.0, "Time_End": 2024.0, "Text": " by Greg Hoagland."}, {"Time_Start": 2024.0, "Time_End": 2025.0, "Text": " It's really good."}, {"Time_Start": 2025.0, "Time_End": 2028.0, "Text": " And the second paper I really recommend you to read this"}, {"Time_Start": 2028.0, "Time_End": 2034.0, "Text": " about Windows Buffer Overflows from Frack by Barnaby Jack,"}, {"Time_Start": 2034.0, "Time_End": 2037.0, "Text": " also known as the Dark Spirit."}, {"Time_Start": 2037.0, "Time_End": 2042.0, "Text": " Is any of you guys here?"}, {"Time_Start": 2042.0, "Time_End": 2043.0, "Text": " No."}, {"Time_Start": 2043.0, "Time_End": 2045.0, "Text": " I give you credit anyway."}, {"Time_Start": 2045.0, "Time_End": 2051.0, "Text": " If you have any questions about this, if you want more information, if you want to see a demonstration,"}, {"Time_Start": 2051.0, "Time_End": 2057.0, "Text": " if you want to have a copy of the code or the slides, you can probably get them from the post-Defcom pages,"}, {"Time_Start": 2057.0, "Time_End": 2059.0, "Text": " or you can try to catch me here during the day."}, {"Time_Start": 2059.0, "Time_End": 2062.0, "Text": " I will be here all day and all night, probably."}, {"Time_Start": 2062.0, "Time_End": 2065.0, "Text": " And I'll leave back home for Sweden tomorrow morning."}, {"Time_Start": 2065.0, "Time_End": 2066.0, "Text": " Or you can also drop me from here."}, {"Time_Start": 2066.0, "Time_End": 2069.0, "Text": " So drop me an email at this email address."}, {"Time_Start": 2073.0, "Time_End": 2075.0, "Text": " Any last question?"}, {"Time_Start": 2075.0, "Time_End": 2076.0, "Text": " Yeah."}, {"Time_Start": 2076.0, "Time_End": 2092.0, "Text": " With TCP and U.D.P."}, {"Time_Start": 2092.0, "Time_End": 2094.0, "Text": " and U.P."}, {"Time_Start": 2094.0, "Time_End": 2095.0, "Text": " But I think the concept."}, {"Time_Start": 2095.0, "Time_End": 2096.0, "Text": " But I think the concept is."}, {"Time_Start": 2096.0, "Time_End": 2100.0, "Text": " possible for"}, {"Time_Start": 2104.0, "Time_End": 2107.0, "Text": " Okay, thank you very much for attending and"}, {"Time_Start": 2107.0, "Time_End": 2110.0, "Text": " please stay for the Cisco routers as well."}, {"Time_Start": 2110.0, "Time_End": 2111.0, "Text": " Thank you."}, {"Time_Start": 2111.0, "Time_End": 2112.0, "Text": " Thank you."}]}