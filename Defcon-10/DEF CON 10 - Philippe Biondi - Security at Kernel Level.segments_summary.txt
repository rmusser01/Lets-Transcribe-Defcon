<bulletpoints>
- Introduction: The presentation focuses on security at the kernel level, emphasizing its role in security policies.
- Context and New Security Model: Explaining the need for protection against malicious activities and the importance of confidentiality, integrity, and availability. Introducing a new security model with a smaller perimeter to defend, focusing on protecting the kernel space.
- Defending the Kernel: Discussing the hypothesis of a bug-free interface and strategies to protect the kernel space by blocking entry points and controlling access.
- Protecting Memory, Disks, and Programmable Hardware: Highlighting the need to modify system calls, device calls, and control policies to enforce security policies consistently.
- Linux Security Modules (LSM): Describing LSM as a patch to the Linux kernel, acting as the enforcer component, and allowing various access control policies to be implemented.
- Implementations and Projects: Overview of various projects implementing security at the kernel level, including Openwall, GR Security, LIDS, Medusa DS9, RISBAC, No Mac, Secretin, and Linux Security Modules.
- Openwall: A collection of security-related features, including non-executable user stack protection and Pax patch for buffer overflow protection.
- GR Security: Incorporating Openwall's patches and adding an ACL system, process-based protection, and stack address randomization.
- LIDS (Linux Intrusion Detection System): Provides self-protection, process protection, file protection, and features for online administration and kernel-based alerting.
- Medusa DS9: Features an enforcer component in the kernel and a decider component in user space, allowing for easy implementation of access control policies.
- RASBIC and GFAC: RASBIC is based on the GFAC (Generalized Framework for Access Control) and offers various access control policies, including a malware scanner.
- Low Mark: A unique approach based on low watermark integrity, with rules governing the interaction between high and low-level processes and directories.
- Secretin and Linux Security Modules: Secretin builds on the older Flask architecture, focusing on revocation of rights for running processes. Linux Security Modules provide a framework for implementing access control policies without compiling them as modules.
</bulletpoints>