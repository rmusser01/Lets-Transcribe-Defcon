**Tunneling and Firewalls**

- **Tunneling**: Creating a virtual data path between two computers, potentially using their protocol (e.g. HTTP between two machines for Telnet).
- **Popular tunneling software**: GNU HTTP Tunnel, developed by NoCrew, and various homegrown solutions.
- Tunneling can be used to re-enable restricted services like telnet and ftp by establishing virtual data paths through allowed protocols.
- **How tunneling works**: Encapsulates data into HTTP packets, sends via HTC, received by HTS which tears apart the packet and sends the command locally.
- **Tunneling protocols**: Include tunnel open, data, padding, error, pad one, close, and disconnect.
- **Reasons for tunneling**: Static link programs without source code, limited access to the outside world, and bypassing restrictions set by system administrators.
- **Combating tunneling**: Sniffers, detecting tunneling software signatures, policy explanation, and user education are effective measures.
- **Future of HTTP tunneling**: Includes adding SSL encryption, data compression, extending to other protocols, and improving encoding to evade detection.
- **Drawbacks of tunneling**: Performance issues due to encapsulation overhead, and security concerns if data is sent in clear text.
- **Use cases**: Tunneling can be used to shift ports or send data remotely when only port 80 is available, but it may not work with all proxy configurations.
- **Defense against tunneling**: Network isolation can make it tougher for internal users to initiate tunneling, but outbound tunneling cannot be completely prevented if any ports are open.
- **Best defense**: User education and understanding firewall capabilities and limitations.