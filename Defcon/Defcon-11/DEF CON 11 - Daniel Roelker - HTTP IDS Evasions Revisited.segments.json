{"segments": [{"Time_Start": 0.0, "Time_End": 18.66, "Text": " In case it's a little too early, the talk we're going to, we're having right now is HTTP IDS evasions revisited."}, {"Time_Start": 19.12, "Time_End": 22.12, "Text": " I'm Dan Roker, and I guess we'll get started now a little bit."}, {"Time_Start": 23.0, "Time_End": 24.94, "Text": " You may be asking yourself, who is this guy?"}, {"Time_Start": 25.12, "Time_End": 27.98, "Text": " Well, just a quick background on, you know, what I've done."}, {"Time_Start": 27.98, "Time_End": 33.96, "Text": " Currently I work at Sourcefire Incorporated, basically the corporation behind Snort now."}, {"Time_Start": 34.34, "Time_End": 39.2, "Text": " I came on board with Mark Norton to redesign the Snort engine for high-speed networks."}, {"Time_Start": 39.78, "Time_End": 46.72, "Text": " We came on board, did that in about two months, and you guys might have seen that in the release of Snort 2 in September, October time frame."}, {"Time_Start": 48.54, "Time_End": 57.96, "Text": " What I did after that, basically, is working on some protocol decoders for Snort, most notably a new HTTP decoder that's going to be coming out in the next month."}, {"Time_Start": 57.980000000000004, "Time_End": 63.040000000000006, "Text": " month or two, you know, but don't quote me on that. So, you know, I've been working on a couple"}, {"Time_Start": 63.040000000000006, "Time_End": 68.44, "Text": " of those things. Before that, I was also a lead developer on the Dragon IDS. I did, again, like some"}, {"Time_Start": 68.44, "Time_End": 74.16, "Text": " application protocol decoders and high-speed packet capture event correlation with Randy Taylor."}, {"Time_Start": 74.84, "Time_End": 79.74000000000001, "Text": " So, you know, I've kind of been working with application protocol decoders for a couple years now, two, three years."}, {"Time_Start": 79.94, "Time_End": 84.56, "Text": " So I want to kind of give some of the knowledge I've learned over the last couple years and bring it over to you guys."}, {"Time_Start": 85.16, "Time_End": 87.96000000000001, "Text": " How many of you in the audience are actually involved with?"}, {"Time_Start": 87.98, "Time_End": 93.98, "Text": " with IDS, either in developing IDS, employing IDS, you know, managing IDS, how many people in here?"}, {"Time_Start": 94.72, "Time_End": 100.78, "Text": " All right, how many you guys actually compare the differences between the IDS, is try out different tests, and all right, you're good."}, {"Time_Start": 101.08, "Time_End": 106.68, "Text": " I hope you'll be able to take some information away with you today with some tools that I'll be releasing after the talk."}, {"Time_Start": 107.18, "Time_End": 114.06, "Text": " They're actually probably on the DefCon website now, or if you want to, you can download the most recent versions at IDSresearch.org."}, {"Time_Start": 114.06, "Time_End": 118.62, "Text": " You may be asking yourself who these strange-looking people in the front row seats are."}, {"Time_Start": 119.18, "Time_End": 124.68, "Text": " Well, they work at Sourcefire too, but they have free snore t-shirts available for people afterwards."}, {"Time_Start": 124.82000000000001, "Time_End": 128.74, "Text": " So if you want to, you know, talk to some of these guys up here, you want to raise your hands."}, {"Time_Start": 129.94, "Time_End": 134.68, "Text": " If you didn't bring any snort t-shirts, I'm sure they could, you know, give them your name and mailing address."}, {"Time_Start": 134.78, "Time_End": 135.76, "Text": " I'm sure they can send you some."}, {"Time_Start": 136.18, "Time_End": 139.86, "Text": " So anyway, I just wanted to plug that, so hopefully my expenses will now be paid."}, {"Time_Start": 142.48000000000002, "Time_End": 143.9, "Text": " So before we begin,"}, {"Time_Start": 144.06, "Time_End": 147.5, "Text": " anyone with a laptop or maybe just a really great memory."}, {"Time_Start": 147.5, "Time_End": 153.0, "Text": " What we may want to do here is pull up, if you're running Linux, do a Man Aski to pull up an Aski map."}, {"Time_Start": 153.0, "Time_End": 156.88, "Text": " A lot of the URL encodings that we're going to be doing, it's going to be easier for you"}, {"Time_Start": 156.88, "Time_End": 161.68, "Text": " to reference what we're encoding and all that kind of stuff."}, {"Time_Start": 161.68, "Time_End": 165.78, "Text": " So if you do have something available, if you're just running Windows and you trust the DefCon"}, {"Time_Start": 165.78, "Time_End": 171.64000000000001, "Text": " wireless networks, then you can Google for like an Aski map as well and pull that stuff up."}, {"Time_Start": 171.64000000000001, "Time_End": 174.04, "Text": " So as we actually start going through the different"}, {"Time_Start": 174.06, "Time_End": 178.6, "Text": " URL and coding types will, you know, I think you'll find that pretty handy."}, {"Time_Start": 180.68, "Time_End": 183.8, "Text": " Go through a quick presentation outline here."}, {"Time_Start": 184.5, "Time_End": 188.14000000000001, "Text": " We're going to talk a little bit about the history on HTTP IDS evasions."}, {"Time_Start": 188.74, "Time_End": 189.86, "Text": " Why were they important?"}, {"Time_Start": 190.1, "Time_End": 193.68, "Text": " What tools were developed that, you know, kind of started this all out."}, {"Time_Start": 194.18, "Time_End": 198.34, "Text": " We're going to talk a little bit about evolution of the IDS and HTTP evasions."}, {"Time_Start": 198.98000000000002, "Time_End": 203.28, "Text": " We're going to look at both probably the two main types of IDS is protocol analysis."}, {"Time_Start": 203.28, "Time_End": 209.94, "Text": " IDS is, pattern-mashing IDS, where they started to how they evolved with HTTP evasions"}, {"Time_Start": 209.94, "Time_End": 213.9, "Text": " and where they are now, and where does that actually leave HTTP evasions currently."}, {"Time_Start": 214.7, "Time_End": 218.48, "Text": " Then we're going to talk about two general types of application layer evasions."}, {"Time_Start": 218.86, "Time_End": 223.7, "Text": " I want to kind of talk about the general types because I'm hoping that, for one, they're easier"}, {"Time_Start": 223.7, "Time_End": 227.08, "Text": " to understand than some of the more detailed applications we're going to talk about."}, {"Time_Start": 227.3, "Time_End": 232.06, "Text": " But also, if you understand these general types of application layer evasion, you'll be able to"}, {"Time_Start": 232.06, "Time_End": 236.7, "Text": " do your own IDS evasions, look at protocols yourself, try and figure out how you can"}, {"Time_Start": 236.7, "Time_End": 239.7, "Text": " you know, mangle some of the different options there."}, {"Time_Start": 240.08, "Time_End": 243.58, "Text": " So we're going to talk about these two, and the two we're going to discuss in this presentation"}, {"Time_Start": 243.58, "Time_End": 249.16, "Text": " is invalid protocol parsing, which is anyone familiar with the tool sidestep by Robert Graham,"}, {"Time_Start": 249.92000000000002, "Time_End": 250.5, "Text": " a couple people."}, {"Time_Start": 250.88, "Time_End": 255.54, "Text": " Well, basically, that tool helped bring about this type of application layer evasion."}, {"Time_Start": 256.12, "Time_End": 259.9, "Text": " Basically it works like, you know, if you can fool the IDS into thinking that a certain protocol"}, {"Time_Start": 259.9, "Time_End": 262.04, "Text": " field is like something."}, {"Time_Start": 262.06, "Time_End": 264.34, "Text": " else, then you've effectively evaded the IDS."}, {"Time_Start": 264.48, "Time_End": 271.88, "Text": " Like, for example, if you're parsing the HTTP protocol and you think the HTTP version is actually the URL,"}, {"Time_Start": 272.28000000000003, "Time_End": 276.52, "Text": " then, you know, you're not going to decode it correctly and you're not going to be able to match on malicious URLs."}, {"Time_Start": 277.0, "Time_End": 281.44, "Text": " The second type we're going to talk about is invalid protocol field decoding."}, {"Time_Start": 282.08, "Time_End": 289.32, "Text": " This means basically, like, even if you parse the protocol field correctly, if you don't know what data is actually in that protocol field,"}, {"Time_Start": 289.32, "Time_End": 291.9, "Text": " then you won't be able to find what you're looking for."}, {"Time_Start": 292.06, "Time_End": 296.88, "Text": " For instance, if you're looking at the SNMP protocol and you don't really understand ASN1 encoding,"}, {"Time_Start": 297.22, "Time_End": 299.12, "Text": " then you're not going to be able to match certain things."}, {"Time_Start": 299.86, "Time_End": 304.32, "Text": " Same thing with the URL, you know, if you just do a basic hex encoding on the whole thing,"}, {"Time_Start": 304.54, "Time_End": 308.84000000000003, "Text": " but you're expecting to see plain text, like you're expecting to see CGIB and PHF,"}, {"Time_Start": 308.94, "Time_End": 312.14, "Text": " but instead you're seeing like percent, you know, this, percent that."}, {"Time_Start": 312.24, "Time_End": 313.66, "Text": " You're not going to be able to detect it."}, {"Time_Start": 313.86, "Time_End": 317.34000000000003, "Text": " So that's the general types of application layer evasion that we're going to talk about."}, {"Time_Start": 318.06, "Time_End": 322.02, "Text": " Then we're going to go through the two types and talk about practical applications."}, {"Time_Start": 322.06, "Time_End": 326.64, "Text": " For the protocol field decoding, we're going to talk about nine types of URL encoding."}, {"Time_Start": 327.26, "Time_End": 331.06, "Text": " You know, we're going to start out pretty easy with the hex encoding and just get a little more complex."}, {"Time_Start": 331.7, "Time_End": 335.06, "Text": " Pretty much all these URL encodings, except for two,"}, {"Time_Start": 335.56, "Time_End": 340.98, "Text": " two of the encodings are valid on both Apache and IIS, but the rest are really, thanks to Microsoft."}, {"Time_Start": 342.92, "Time_End": 346.28, "Text": " So a lot of those, it kind of adds a little more complexity into that."}, {"Time_Start": 347.06, "Time_End": 349.34000000000003, "Text": " So we're going to go through all those, give you some examples."}, {"Time_Start": 349.78, "Time_End": 352.04, "Text": " Hopefully you'll be able to take away from the talk."}, {"Time_Start": 352.06, "Time_End": 353.7, "Text": " all these different types of encodings."}, {"Time_Start": 354.12, "Time_End": 356.86, "Text": " But, you know, if you're still a little hungover from last night,"}, {"Time_Start": 357.16, "Time_End": 359.16, "Text": " you can always look at the tools I'm releasing"}, {"Time_Start": 359.16, "Time_End": 361.14, "Text": " because they cover all these encodings as well."}, {"Time_Start": 361.28000000000003, "Time_End": 362.98, "Text": " So, you know, you'll have a little help with that."}, {"Time_Start": 364.12, "Time_End": 367.12, "Text": " From there, we're going to move into the invalid of protocol parsing."}, {"Time_Start": 367.18, "Time_End": 370.4, "Text": " We're going to talk about some new evasions like request pipeline evasions,"}, {"Time_Start": 370.4, "Time_End": 374.18, "Text": " how that works, and we're going to talk about some parameter content encoding evasions."}, {"Time_Start": 374.68, "Time_End": 378.66, "Text": " You know, for those things where you're, you know, accessing, like, the database"}, {"Time_Start": 378.66, "Time_End": 380.26, "Text": " and you have some malicious parameters"}, {"Time_Start": 380.26, "Time_End": 382.04, "Text": " or you're trying to exploit some CGI."}, {"Time_Start": 382.06, "Time_End": 383.92, "Text": " errors, again, in the parameter field."}, {"Time_Start": 384.32, "Time_End": 387.92, "Text": " You know, you want to make sure that the IDS can't see that if you're trying to evade it."}, {"Time_Start": 388.38, "Time_End": 393.18, "Text": " So, you know, this evasion really goes through and helps you with that."}, {"Time_Start": 393.78000000000003, "Time_End": 395.68, "Text": " And then after that, it's basically tool time."}, {"Time_Start": 395.78000000000003, "Time_End": 398.28, "Text": " We'll talk about the different tools that are being released with this talk."}, {"Time_Start": 399.34000000000003, "Time_End": 400.86, "Text": " So I guess let's get us started here."}, {"Time_Start": 401.46, "Time_End": 403.72, "Text": " A little history on HTTP IDS evasions."}, {"Time_Start": 404.12, "Time_End": 407.14, "Text": " What attacks are some of the most common and effective attacks in the matrix?"}, {"Time_Start": 407.58, "Time_End": 411.5, "Text": " Yeah, I know Trinity used an SSH exploit to shut down the emergency power grid,"}, {"Time_Start": 411.5, "Time_End": 412.04, "Text": " but try to."}, {"Time_Start": 412.06, "Time_End": 415.46, "Text": " me these are web attacks come in all forms and sizes you know you just don't"}, {"Time_Start": 415.46, "Time_End": 418.72, "Text": " have to wait around for your favorite web server to come out with a buffer"}, {"Time_Start": 418.72, "Time_End": 422.02, "Text": " overflow for someone to discover that lots of different ways you can do you"}, {"Time_Start": 422.02, "Time_End": 426.88, "Text": " got CGI errors you got database hacking you know got a lot different ways you"}, {"Time_Start": 426.88, "Time_End": 431.08, "Text": " can handle this cross-site scripting attacks all that kind of stuff so web attacks"}, {"Time_Start": 431.08, "Time_End": 435.28, "Text": " so web attacks you know not only do most every like companies governments banks"}, {"Time_Start": 435.28, "Time_End": 439.1, "Text": " they all have some sort of web server available and so these are really some of the"}, {"Time_Start": 439.1, "Time_End": 441.96, "Text": " most common and effective attacks that you can"}, {"Time_Start": 442.06, "Time_End": 445.9, "Text": " you know do and because of this IDS is really really really want to"}, {"Time_Start": 445.9, "Time_End": 449.44, "Text": " catch these things because you know otherwise you look kind of foolish if"}, {"Time_Start": 449.44, "Time_End": 452.72, "Text": " they go into bake-offs and someone runs a you know web attack that they should"}, {"Time_Start": 452.72, "Time_End": 457.0, "Text": " catch but hey guess what I didn't you know most of the web attacks if you've been"}, {"Time_Start": 457.0, "Time_End": 461.26, "Text": " noticed noticing recently when they come out it takes about two days before it gets"}, {"Time_Start": 461.26, "Time_End": 465.16, "Text": " turned into a worm that shuts the internet down for a couple hours so you know we"}, {"Time_Start": 465.16, "Time_End": 469.9, "Text": " want to make sure we can catch those things okay now we're going to talk"}, {"Time_Start": 469.90000000000003, "Time_End": 474.52000000000004, "Text": " about you know a little bit of the tools that help bring about HTTP IDS"}, {"Time_Start": 474.52000000000004, "Time_End": 477.88000000000005, "Text": " evasions can never get through this talk without mentioning Whisker this was"}, {"Time_Start": 477.88000000000005, "Time_End": 482.02000000000004, "Text": " perhaps the most the first and most effective web scanner then employed IDS"}, {"Time_Start": 482.02000000000004, "Time_End": 487.76000000000005, "Text": " evasion techniques I think there's about 10 or so when when Whisker was"}, {"Time_Start": 487.76000000000005, "Time_End": 491.56000000000006, "Text": " released with the IDS evasions it really shut down some IDS companies they're"}, {"Time_Start": 491.56000000000006, "Time_End": 494.98, "Text": " really scrambling to catch the same old attacks they had always caught"}, {"Time_Start": 494.98, "Time_End": 499.88000000000005, "Text": " before you know I did a little work with the Dragon to help with that and"}, {"Time_Start": 499.90000000000003, "Time_End": 504.14000000000004, "Text": " You know, it's just a lot, a lot of the IDS vendors really had to catch up with that."}, {"Time_Start": 504.74, "Time_End": 509.72, "Text": " The Whisker IDS really played off, and I want to make this distinction between Whisker and Side Step."}, {"Time_Start": 509.88000000000005, "Time_End": 516.7800000000001, "Text": " Whisker really played off of either web server quirks are quirks within the IDS's HTP decoders."}, {"Time_Start": 517.1600000000001, "Time_End": 524.1, "Text": " For instance, like one of the Whisker attacks is that you basically embed like a capital HTP slash, you know, version in the URL."}, {"Time_Start": 524.6600000000001, "Time_End": 529.7800000000001, "Text": " That was done in hopes that the IDS would look just for that string HTTP slash and then say,"}, {"Time_Start": 529.9, "Time_End": 533.74, "Text": " why I found that, so I think the URL is here. That falls kind of into the invalid"}, {"Time_Start": 533.74, "Time_End": 537.9, "Text": " protocol parsing evasion we had, you know, I discussed a little bit earlier."}, {"Time_Start": 537.9, "Time_End": 541.9, "Text": " But a lot of the other ones also just had to do with web quirks. Like for instance,"}, {"Time_Start": 541.9, "Time_End": 546.9, "Text": " Apache would accept the tab instead of a space as well to separate the get request and the"}, {"Time_Start": 546.9, "Time_End": 551.38, "Text": " URL and the URL and the HTTP version. So, you know, they're very effective"}, {"Time_Start": 551.38, "Time_End": 556.0, "Text": " attacks, but they're much different than the tool sidestep. I bring up"}, {"Time_Start": 556.0, "Time_End": 559.88, "Text": " sidestep here, even though it's not known for web attacks or HTTP evasion,"}, {"Time_Start": 559.9, "Time_End": 566.9, "Text": " When the tool was released, it really brought about a very good idea and a very"}, {"Time_Start": 566.9, "Time_End": 572.9, "Text": " influential idea in how to evade IDS's. Basically, Robert Graham used the application protocols"}, {"Time_Start": 572.9, "Time_End": 580.9, "Text": " against the IDS's. It wasn't working off of quirks or the actual protocol decoders themselves in the IDS,"}, {"Time_Start": 580.9, "Time_End": 587.9, "Text": " but it actually really delved into the application layer protocol and exploited, I guess I could say that,"}, {"Time_Start": 587.9, "Time_End": 591.9, "Text": " with some of the lesser-known characteristics of that protocol."}, {"Time_Start": 591.9, "Time_End": 598.9, "Text": " The two types of evasions we're going to talk about really kind of stemmed from the side-step type of evasion."}, {"Time_Start": 598.9, "Time_End": 602.9, "Text": " Basically, you know, we got the request pipeline and the parameter encoding,"}, {"Time_Start": 602.9, "Time_End": 607.9, "Text": " and they really come from this because they're utilizing aspects of the HTTP protocol."}, {"Time_Start": 607.9, "Time_End": 612.9, "Text": " Let's see here. So basically moving on."}, {"Time_Start": 612.9, "Time_End": 616.9, "Text": " Evolution of IDS and HTTP evasions. We'll start from the beginning here."}, {"Time_Start": 616.9, "Time_End": 623.5, "Text": " here. You basically have two different types of IDS's, main ones anyway. You got the kind that"}, {"Time_Start": 623.5, "Time_End": 628.5, "Text": " protocol analysis will catch your attack and you got the kind that, say, pattern matching will"}, {"Time_Start": 628.5, "Time_End": 635.9, "Text": " detect what you want to. At the beginning, they behave kind of similar before any evasions"}, {"Time_Start": 635.9, "Time_End": 641.3, "Text": " came out. For instance, you know, URLs at that time weren't encoded with any type of encoding."}, {"Time_Start": 641.3, "Time_End": 645.9, "Text": " So, you know, the protocol analysis IDS would work by parsing the protocol,"}, {"Time_Start": 645.9, "Time_End": 649.9, "Text": " finding the URL and then doing some pattern matching to look for malicious URLs."}, {"Time_Start": 649.9, "Time_End": 653.9, "Text": " Whereas the pattern matching IDS is just like searched the whole payload"}, {"Time_Start": 653.9, "Time_End": 657.9, "Text": " to see if there are any malicious URL contents anywhere in the payload."}, {"Time_Start": 657.9, "Time_End": 662.9, "Text": " However, when the evasions did come out, there was a stark contrast between the two."}, {"Time_Start": 662.9, "Time_End": 667.9, "Text": " The protocol analysis IDS were one step ahead because all of a sudden they had already been parsing the protocol,"}, {"Time_Start": 667.9, "Time_End": 672.9, "Text": " so all they had to do was implement the encoding algorithms to decode those encodings correctly."}, {"Time_Start": 672.9, "Time_End": 675.88, "Text": " Whereas pattern matching IDS is actually had to now"}, {"Time_Start": 675.9, "Time_End": 681.34, "Text": " write a protocol decoder for the protocol being evaded, then had to implement the encoding"}, {"Time_Start": 681.34, "Time_End": 686.42, "Text": " methodologies. And once that was done and given a couple years, the two again converged, and"}, {"Time_Start": 686.42, "Time_End": 691.26, "Text": " they behave very similarly now. So that means that since they behave similarly, we'll be able"}, {"Time_Start": 691.26, "Time_End": 694.4599999999999, "Text": " to use the types of evasions I'm discussing here against both types."}, {"Time_Start": 696.3, "Time_End": 701.42, "Text": " Current state of IDS, HTTP evasions. Where's the technology now? It's been kind of stagnant"}, {"Time_Start": 701.42, "Time_End": 705.18, "Text": " for a couple years. What does that mean for the evasions we're going to talk about?"}, {"Time_Start": 705.9, "Time_End": 709.5799999999999, "Text": " It means basically we can use these against both different types of IDSs."}, {"Time_Start": 709.5799999999999, "Time_End": 711.66, "Text": " So, you know, just kind of keep that in mind."}, {"Time_Start": 711.66, "Time_End": 715.06, "Text": " These should work against, you know, to give you some specific examples, like, you know,"}, {"Time_Start": 715.06, "Time_End": 720.66, "Text": " you could use them against real secure, snort, dragon, any of the other open source"}, {"Time_Start": 720.66, "Time_End": 723.14, "Text": " IDS's as well."}, {"Time_Start": 723.14, "Time_End": 728.62, "Text": " So, all right, so we're going to talk a little bit more now about the two general types of application"}, {"Time_Start": 728.62, "Time_End": 730.66, "Text": " layer of aiding."}, {"Time_Start": 730.66, "Time_End": 735.42, "Text": " Invalid protocol parsing, like I said, that stems from sidestep, and it really, it really,"}, {"Time_Start": 735.42, "Time_End": 742.0999999999999, "Text": " comes from the fact that most IDS's, they're not exactly pros and protocol analysis."}, {"Time_Start": 742.9599999999999, "Time_End": 748.1999999999999, "Text": " What you do for this type of evasion is really research an application protocol."}, {"Time_Start": 748.64, "Time_End": 753.9399999999999, "Text": " Look for areas of the protocol that you think are a little obscure and, you know, test it out"}, {"Time_Start": 753.9399999999999, "Time_End": 756.26, "Text": " against your IDS, see if it actually interprets those correctly."}, {"Time_Start": 757.18, "Time_End": 761.78, "Text": " These are very effective evasions because it's not trivially fixed."}, {"Time_Start": 762.0999999999999, "Time_End": 765.4, "Text": " Basically, like, you know, if one of these comes out, a lot of times IDS has"}, {"Time_Start": 765.4200000000001, "Time_End": 769.3800000000001, "Text": " have to completely redesign and re-implement the protocol decoder because there's some"}, {"Time_Start": 769.3800000000001, "Time_End": 773.2800000000001, "Text": " fundamental flaws in their parsing algorithm."}, {"Time_Start": 773.2800000000001, "Time_End": 775.6, "Text": " So these are very effective."}, {"Time_Start": 775.6, "Time_End": 780.7800000000001, "Text": " The invalid protocol field decoding, so you guys said before, it's basically, you know, even"}, {"Time_Start": 780.7800000000001, "Time_End": 786.8600000000001, "Text": " though IDS parses that field, finds the field correctly, if it doesn't know the data that's"}, {"Time_Start": 786.8600000000001, "Time_End": 789.8000000000001, "Text": " there, then it can't interpret it correctly."}, {"Time_Start": 789.8000000000001, "Time_End": 794.4200000000001, "Text": " For instance, one of the things we'll be talking about is what happens when you do a post-request"}, {"Time_Start": 794.4200000000001, "Time_End": 798.9200000000001, "Text": " and you, you know, encode the post-payload with base 64 encoding."}, {"Time_Start": 799.5400000000001, "Time_End": 804.58, "Text": " Does your IDS, you know, go down to the payload, decode that using a base 64 algorithm,"}, {"Time_Start": 804.72, "Time_End": 805.8000000000001, "Text": " and then match against it?"}, {"Time_Start": 806.0000000000001, "Time_End": 806.82, "Text": " Probably not."}, {"Time_Start": 807.2400000000001, "Time_End": 809.72, "Text": " So that's how the protocol field decoding work."}, {"Time_Start": 809.7800000000001, "Time_End": 810.8000000000001, "Text": " They're both very effective."}, {"Time_Start": 811.7400000000001, "Time_End": 818.1400000000001, "Text": " However, the invalid protocol parsing is probably the more serious of the two because those really, in general,"}, {"Time_Start": 818.1400000000001, "Time_End": 822.6200000000001, "Text": " means some kind of redesign on the IDS's protocol decoder."}, {"Time_Start": 824.4200000000001, "Time_End": 828.1, "Text": " All right, so now we get into the more practical application side of this."}, {"Time_Start": 828.5000000000001, "Time_End": 834.1800000000001, "Text": " If you haven't got that ASCII map out in front of you, you know, don't worry, I'm going to be helping you out a little bit with this."}, {"Time_Start": 836.1400000000001, "Time_End": 837.6200000000001, "Text": " So, you know, we're going to talk about this."}, {"Time_Start": 837.6800000000001, "Time_End": 839.6, "Text": " We're going to try and get through these URL encodings."}, {"Time_Start": 840.1800000000001, "Time_End": 846.44, "Text": " Hopefully, I'm going to try and go through them fairly quickly because they're not the most exciting things for me to talk about or for you to listen to."}, {"Time_Start": 846.44, "Time_End": 850.3000000000001, "Text": " So hopefully you'll be able to get the main gist from the presentation."}, {"Time_Start": 850.3000000000001, "Time_End": 854.2, "Text": " And, again, given what I'm going to bring up in this talk,"}, {"Time_Start": 854.4200000000001, "Time_End": 861.2600000000001, "Text": " You should have the tools to go do additional research on your own and the web and know what to look for and, you know, tools to try out, things like that."}, {"Time_Start": 861.9200000000001, "Time_End": 863.7800000000001, "Text": " So we'll start out right now, I guess."}, {"Time_Start": 864.0600000000001, "Time_End": 869.58, "Text": " First one we're going to start out with, we're going to start out simple and then get more and more complex, is your good old hex encoding."}, {"Time_Start": 869.98, "Time_End": 871.0400000000001, "Text": " It's been around for years."}, {"Time_Start": 871.48, "Time_End": 873.5200000000001, "Text": " It's been an HTTP standard for years."}, {"Time_Start": 873.9000000000001, "Time_End": 878.44, "Text": " Most IDSss all, you know, handle this, and most web servers all handle this as well."}, {"Time_Start": 878.72, "Time_End": 880.6200000000001, "Text": " So this is pretty much a universal encoding."}, {"Time_Start": 881.0200000000001, "Time_End": 882.6, "Text": " Is it that effective against IDS?"}, {"Time_Start": 882.94, "Time_End": 883.6400000000001, "Text": " Not at all."}, {"Time_Start": 883.8800000000001, "Time_End": 884.4000000000001, "Text": " But I want to start."}, {"Time_Start": 884.4200000000001, "Time_End": 888.6400000000001, "Text": " start here because some of the later encodings we're going to talk about utilize this type of encoding."}, {"Time_Start": 889.5000000000001, "Time_End": 895.0600000000001, "Text": " So basically, the concept behind this is you look up in your ASCII map the character you want to encode."}, {"Time_Start": 895.3000000000001, "Time_End": 899.2400000000001, "Text": " You look up the hexadecimal value, not the octal or the decimal, but the hexadecimal."}, {"Time_Start": 899.7, "Time_End": 904.2400000000001, "Text": " And so, for example, you know, what we're going to probably be using throughout this presentation is the capital letter A."}, {"Time_Start": 904.7600000000001, "Time_End": 906.58, "Text": " The hexadecimal value for that is 41."}, {"Time_Start": 907.1600000000001, "Time_End": 912.58, "Text": " So how hex encoding works is in the URL, you escape it with a percent, and then you put the characters"}, {"Time_Start": 912.58, "Time_End": 913.44, "Text": " four in one."}, {"Time_Start": 913.44, "Time_End": 918.62, "Text": " So when that gets sent over to the web server or an IDS intercepts that, it sees the percent"}, {"Time_Start": 918.62, "Time_End": 922.2600000000001, "Text": " 4-1, knows what to do with it, and decodes that into a capital letter A."}, {"Time_Start": 924.2, "Time_End": 927.72, "Text": " Pay attention a little bit to this encoding, though, because we are, like I said, going to use it through"}, {"Time_Start": 927.72, "Time_End": 929.58, "Text": " probably the next four different types of encoding."}, {"Time_Start": 929.58, "Time_End": 933.84, "Text": " So, you know, you guys should probably be familiar with this, especially those of you that, you know,"}, {"Time_Start": 933.86, "Time_End": 934.98, "Text": " are more in the IDS field."}, {"Time_Start": 936.4000000000001, "Time_End": 939.24, "Text": " Next one we're going to talk about here is the double percent hex encoding."}, {"Time_Start": 939.6600000000001, "Time_End": 943.4200000000001, "Text": " You probably saw this with some of the bug tracks that came out."}, {"Time_Start": 943.44, "Time_End": 945.84, "Text": " out about it a couple years ago."}, {"Time_Start": 945.84, "Time_End": 951.32, "Text": " Basically, this is the same as the normal hex encoding, except you're encoding the percent first,"}, {"Time_Start": 951.32, "Time_End": 956.7600000000001, "Text": " and then you follow that percent by the values, the hexadecimal values of the bytes you want"}, {"Time_Start": 956.7600000000001, "Time_End": 957.7600000000001, "Text": " to encode."}, {"Time_Start": 957.7600000000001, "Time_End": 961.96, "Text": " So, for example, if you got that ASCII map out in front of you, you look up percent, its hexadecimal"}, {"Time_Start": 961.96, "Time_End": 963.72, "Text": " value is 25."}, {"Time_Start": 963.72, "Time_End": 967.72, "Text": " So in order to regularly hex encode that, you do a percent 25."}, {"Time_Start": 967.72, "Time_End": 971.4000000000001, "Text": " You then follow that by the, you know, bytes you want to encode."}, {"Time_Start": 971.4000000000001, "Time_End": 973.4200000000001, "Text": " So in this case, A, again, the hex decimal."}, {"Time_Start": 973.44, "Time_End": 979.58, "Text": " values 41. So you got percent 25, 41. And thanks to Microsoft IIS, you got a double"}, {"Time_Start": 979.58, "Time_End": 984.9200000000001, "Text": " decode. So, you know, it goes through it once and then goes through it again. So as you see on the first"}, {"Time_Start": 984.9200000000001, "Time_End": 989.46, "Text": " pass, the percent 25 gets turned into a percent, and then on the second pass, the percent"}, {"Time_Start": 989.46, "Time_End": 997.3000000000001, "Text": " 41 gets turned into an A. Okay, double nibble hex encoding. Again, this was working"}, {"Time_Start": 997.3000000000001, "Time_End": 1003.4200000000001, "Text": " on Microsoft IIS. Basically how this works is each hexadecimal nibble of the"}, {"Time_Start": 1003.44, "Time_End": 1007.5600000000001, "Text": " the byte we want to encode is itself encoded using the normal hex encoding method."}, {"Time_Start": 1007.5600000000001, "Time_End": 1012.72, "Text": " How many do you want to wonder how many encodings I could get in one sentence?"}, {"Time_Start": 1012.72, "Time_End": 1017.1, "Text": " So basically what that means is, you know, to go back to our example with the A, we basically"}, {"Time_Start": 1017.1, "Time_End": 1019.4200000000001, "Text": " got the hexadecimal 41."}, {"Time_Start": 1019.4200000000001, "Time_End": 1024.42, "Text": " So in order to encode this using the double nibble hex encoding, we look up four in the ASCII map,"}, {"Time_Start": 1024.42, "Time_End": 1030.24, "Text": " it's hexadecimal values 34, we look up the one, its hexadecimal values 31, and we encodecode those using"}, {"Time_Start": 1030.24, "Time_End": 1031.72, "Text": " the normal hex encoding."}, {"Time_Start": 1031.72, "Time_End": 1033.42, "Text": " So percent thirty four and percent"}, {"Time_Start": 1033.44, "Time_End": 1039.44, "Text": " And we make sure we put that other percent right out in front of it, so in the second pass, it'll pick that up."}, {"Time_Start": 1039.44, "Time_End": 1045.94, "Text": " So on the first pass, the percent 34 gets turned back into the four, 31 to the one, which leads us with percent"}, {"Time_Start": 1045.94, "Time_End": 1049.44, "Text": " 41, and then percent 41 turns into A."}, {"Time_Start": 1049.44, "Time_End": 1051.44, "Text": " Okay, first nibble hex encoding."}, {"Time_Start": 1051.44, "Time_End": 1053.44, "Text": " Anyone want to guess what web server?"}, {"Time_Start": 1053.44, "Time_End": 1054.44, "Text": " That's right."}, {"Time_Start": 1054.44, "Time_End": 1056.44, "Text": " Microsoft IAS."}, {"Time_Start": 1056.44, "Time_End": 1062.44, "Text": " This encoding is very similar to the double nibble encoding, except the only difference is only the first nipple is encoded."}, {"Time_Start": 1062.44, "Time_End": 1063.44, "Text": " So on this."}, {"Time_Start": 1063.44, "Time_End": 1068.44, "Text": " case, the first nibble of A is a 4, so we encode that with the percent 34, and just leave"}, {"Time_Start": 1068.44, "Time_End": 1070.2, "Text": " the 1 as 1."}, {"Time_Start": 1070.2, "Time_End": 1073.2, "Text": " So you get the percent percent, percent 34, one."}, {"Time_Start": 1073.2, "Time_End": 1080.0, "Text": " Which turns in, first pass, percent 34 turns into 4, leaves of percent 41, which by now,"}, {"Time_Start": 1080.0, "Time_End": 1083.48, "Text": " hopefully everyone knows that percent 41 turns into A."}, {"Time_Start": 1083.48, "Time_End": 1084.96, "Text": " All right."}, {"Time_Start": 1084.96, "Time_End": 1087.64, "Text": " Second nibble hex encoding, IIS."}, {"Time_Start": 1087.64, "Time_End": 1092.0, "Text": " Just like the last one we talked about, except the second nibble is encoded."}, {"Time_Start": 1092.0, "Time_End": 1093.42, "Text": " And the first one is just left alone."}, {"Time_Start": 1093.44, "Time_End": 1098.54, "Text": " got the percent 4 and then the percent 31 because the one that the hexadecimal"}, {"Time_Start": 1098.54, "Time_End": 1104.18, "Text": " value for that's 31 on the first pass the 31 turns into a 1 leaving percent"}, {"Time_Start": 1104.18, "Time_End": 1109.28, "Text": " 41 which leaves that. Okay quick break encoding I'm just going to try to make a"}, {"Time_Start": 1109.28, "Time_End": 1115.28, "Text": " joke here break it up a little bit so anyway I guess I didn't go over so well and we"}, {"Time_Start": 1115.28, "Time_End": 1120.98, "Text": " so anyway but we got out four more URL encodings to go gets a little worse now"}, {"Time_Start": 1120.98, "Time_End": 1123.42, "Text": " before it gets better after these encoding"}, {"Time_Start": 1123.44, "Time_End": 1126.8600000000001, "Text": " then we're going to go into the invalid protocol parsings, which are a little more,"}, {"Time_Start": 1127.56, "Time_End": 1130.3200000000002, "Text": " a little easier to understand and not so much into the bits and the bytes."}, {"Time_Start": 1131.94, "Time_End": 1132.94, "Text": " Okay, UTF8 encoding."}, {"Time_Start": 1133.22, "Time_End": 1135.0800000000002, "Text": " I'm going to try and go through this fairly quickly."}, {"Time_Start": 1135.68, "Time_End": 1139.24, "Text": " If this is the first time you've heard of UTF8 or tried to decode it yourself,"}, {"Time_Start": 1139.64, "Time_End": 1143.6000000000001, "Text": " you're probably not going to get all of it in this presentation, but, you know,"}, {"Time_Start": 1143.76, "Time_End": 1148.0800000000002, "Text": " go to unicode.org, things like that, and you'll be able to learn more about it if you're interested."}, {"Time_Start": 1149.0800000000002, "Time_End": 1153.42, "Text": " Basically, UTF8 is a way to encode values that are greater than a specific."}, {"Time_Start": 1153.44, "Time_End": 1160.3, "Text": " single byte value of 255. So, you know, UTF8, most web servers will accept up to values of"}, {"Time_Start": 1160.3, "Time_End": 1168.1000000000001, "Text": " 65K, 65,000, 535. We're going to talk about two UTF8 byte sequences here."}, {"Time_Start": 1168.2, "Time_End": 1175.46, "Text": " The two-byte sequence. How the UTF8 encoding works is that the first bite in the sequence contains"}, {"Time_Start": 1175.46, "Time_End": 1181.3200000000002, "Text": " the high order bits contain the number of bytes for the whole sequence. So as you see in the"}, {"Time_Start": 1181.32, "Time_End": 1186.58, "Text": " two-byte sequence, the first two high bits are set followed by zero. What that tells the"}, {"Time_Start": 1186.58, "Time_End": 1192.78, "Text": " algorithm is this is a two-byte sequence. The bits after the zero, you know, are part of the value"}, {"Time_Start": 1192.78, "Time_End": 1197.56, "Text": " of what we're going to be decoding. And then with the extension byte after that, has a high-bit"}, {"Time_Start": 1197.56, "Time_End": 1202.6399999999999, "Text": " set followed by a zero, so you have six more bits. You add those together, you get 11 bits total,"}, {"Time_Start": 1202.6399999999999, "Time_End": 1211.1599999999999, "Text": " which a two-byte-U-tf8 sequence will give you a max-execimal value of X-7FFF. 3-byte sequence, very similar."}, {"Time_Start": 1211.32, "Time_End": 1217.4399999999998, "Text": " Again, you basically got the three bits, one, two, three, that tells you it's a three-byte sequence followed by a zero."}, {"Time_Start": 1218.3999999999999, "Time_End": 1222.56, "Text": " So you got four bits in the first one, six bits in the second, six bits in the third."}, {"Time_Start": 1222.9199999999998, "Time_End": 1228.96, "Text": " So together, that gives you 16 bits for a max hexadecimal value of f-ffff."}, {"Time_Start": 1231.06, "Time_End": 1232.6799999999998, "Text": " And the final showdown here."}, {"Time_Start": 1233.1599999999999, "Time_End": 1237.02, "Text": " UTF8 encoding is supported by both the Apache and IIS web servers."}, {"Time_Start": 1237.86, "Time_End": 1241.3, "Text": " You know, kind of break it out of the mold here, not just IAS, but get an Apache in there."}, {"Time_Start": 1241.32, "Time_End": 1250.6799999999998, "Text": " And I just wanted to let you guys know the new UTF8 and Unicode standards don't really allow you to encode Asky characters in multi-byte UTFA sequences."}, {"Time_Start": 1251.22, "Time_End": 1255.98, "Text": " The current versions of Apache now follow this, but I still, I don't think does."}, {"Time_Start": 1256.4399999999998, "Time_End": 1258.26, "Text": " So we're going to do a quick example here."}, {"Time_Start": 1258.56, "Time_End": 1263.06, "Text": " Again, this is going to be our example of A, which turns into, you know, hexadecimal value 41."}, {"Time_Start": 1263.8, "Time_End": 1268.52, "Text": " So what this looks like first in UTF8 is percent C1, percent 8."}, {"Time_Start": 1268.82, "Time_End": 1271.28, "Text": " Remember, any time you want to encode an Asky character,"}, {"Time_Start": 1271.32, "Time_End": 1274.3, "Text": " in a URL, you've got to usually escape it with a percent."}, {"Time_Start": 1274.8, "Time_End": 1281.9199999999998, "Text": " So in this case, the C1 turns into, as you see here, the first byte there, the second bite there."}, {"Time_Start": 1282.72, "Time_End": 1290.74, "Text": " And if you go one more, basically I'm exiting out the bits that are for the UTF8 encoding so you know what to do,"}, {"Time_Start": 1290.74, "Time_End": 1298.04, "Text": " which leaves us then with the 1-0-0-0-0-1, which is a hexadecimal value of 41, which equals A."}, {"Time_Start": 1298.6799999999998, "Time_End": 1301.24, "Text": " I know that's pretty fast, but, you know, if you're really that interesting,"}, {"Time_Start": 1301.32, "Time_End": 1305.34, "Text": " Unicode UTF8, you can, you know, Google your heart out."}, {"Time_Start": 1306.36, "Time_End": 1308.62, "Text": " All right, back to Microsoft IIS again."}, {"Time_Start": 1308.8999999999999, "Time_End": 1311.2, "Text": " Remember how I told you you had to escape bites with percent?"}, {"Time_Start": 1311.62, "Time_End": 1312.2, "Text": " Well, guess what?"}, {"Time_Start": 1312.24, "Time_End": 1313.96, "Text": " You really don't have to do that with Microsoft."}, {"Time_Start": 1314.56, "Time_End": 1317.1399999999999, "Text": " Well, all you really have to do is send the byte."}, {"Time_Start": 1317.1399999999999, "Time_End": 1323.0, "Text": " So, for example, the UTF8 sequence we just talked about, which was C1-8-1."}, {"Time_Start": 1323.8999999999999, "Time_End": 1329.0, "Text": " All you do is you send the bytec1, filed by the byte81, okay?"}, {"Time_Start": 1329.2, "Time_End": 1330.9199999999998, "Text": " And IIS will interpret that."}, {"Time_Start": 1331.32, "Time_End": 1335.7, "Text": " What makes it kind of cool as well is that you can encode the first byte with a percent."}, {"Time_Start": 1335.8999999999999, "Time_End": 1340.58, "Text": " So you could send like percent C1, and then you could send just the bare bite 8-1."}, {"Time_Start": 1341.34, "Time_End": 1348.72, "Text": " You know, a lot of IDSs don't really mix and match these things, so we'll get to a mismatch ID encoding a little bit later."}, {"Time_Start": 1349.2, "Time_End": 1353.3, "Text": " But, you know, that's something to keep in mind because when you mix these encodings up,"}, {"Time_Start": 1353.36, "Time_End": 1355.1599999999999, "Text": " it really works well against different IDSs."}, {"Time_Start": 1357.1, "Time_End": 1358.6, "Text": " All right, percent U-encoding."}, {"Time_Start": 1358.6, "Time_End": 1360.74, "Text": " We're almost done with the encodings."}, {"Time_Start": 1361.32, "Time_End": 1367.3999999999999, "Text": " What this is basically Microsoft's little way of encoding unicode code points of up to 64K."}, {"Time_Start": 1368.52, "Time_End": 1376.9399999999998, "Text": " Basically, its syntax is percent U followed by four bytes, which, you know, is four bytes, which equals basically four nibbles or two bytes."}, {"Time_Start": 1377.78, "Time_End": 1381.34, "Text": " How you kind of encode that is you actually put the unicode value."}, {"Time_Start": 1382.06, "Time_End": 1385.48, "Text": " So, for example, if we want to do A, you know its value is x-testimal 41."}, {"Time_Start": 1385.8799999999999, "Time_End": 1388.74, "Text": " You put zeros in front of that and you end up with a 41 there."}, {"Time_Start": 1390.3, "Time_End": 1391.2, "Text": " Don't get confused."}, {"Time_Start": 1391.32, "Time_End": 1397.24, "Text": " I've seen a lot of people do this, like they see the, for example, like we did the UTF8 encoding with C-181."}, {"Time_Start": 1397.54, "Time_End": 1401.24, "Text": " A lot of people say, oh, well, that's the code point for A."}, {"Time_Start": 1401.4399999999998, "Time_End": 1403.08, "Text": " So I'll just put C-181 in here."}, {"Time_Start": 1403.1799999999998, "Time_End": 1405.22, "Text": " So you'll have like percent use C-181."}, {"Time_Start": 1405.56, "Time_End": 1406.2, "Text": " That's wrong."}, {"Time_Start": 1407.2, "Time_End": 1420.2, "Text": " How, what you really put in here is the actual unicode value, which this is very effective against Microsoft because what they've done for us is with a certain unicode code page"}, {"Time_Start": 1420.2, "Time_End": 1424.52, "Text": " and ask you character, say, A, may map to, like, eight different unicode values."}, {"Time_Start": 1424.76, "Time_End": 1430.94, "Text": " So you'll have, like, the value of 41, 100, 100, 102, 104, et cetera."}, {"Time_Start": 1431.18, "Time_End": 1433.04, "Text": " So you can actually just put that in there."}, {"Time_Start": 1433.14, "Time_End": 1437.02, "Text": " So, like, the same encoding, percent U-0-0-401 equals A."}, {"Time_Start": 1437.02, "Time_End": 1444.9, "Text": " You could also do, like, percent U-0-1-0 also equals A, or percent U-0-1-2 also equals A."}, {"Time_Start": 1445.22, "Time_End": 1446.54, "Text": " So you get a lot of those."}, {"Time_Start": 1447.38, "Time_End": 1449.8, "Text": " You know, you can thank Microsoft for that because we, you know,"}, {"Time_Start": 1450.2, "Time_End": 1455.14, "Text": " given, you know, if you have a different code page as well, the ASCII characters mapped to different code points."}, {"Time_Start": 1455.24, "Time_End": 1457.5800000000002, "Text": " So it's, you know, it's pretty convoluted."}, {"Time_Start": 1459.02, "Time_End": 1460.5800000000002, "Text": " And now we're on the last encoding."}, {"Time_Start": 1460.98, "Time_End": 1464.02, "Text": " This is actually the most interesting one because it's, as I said a little bit before."}, {"Time_Start": 1464.44, "Time_End": 1470.56, "Text": " The mismatch encoding, really, what it does is we take the other eight encodings we just talked about and put them together, you know."}, {"Time_Start": 1470.88, "Time_End": 1474.88, "Text": " So basically, at the end here, you can see I got a little quiz for anyone that's interested."}, {"Time_Start": 1475.3600000000001, "Time_End": 1476.16, "Text": " You can write that down."}, {"Time_Start": 1476.22, "Time_End": 1477.72, "Text": " That translates to one letter."}, {"Time_Start": 1478.74, "Time_End": 1480.18, "Text": " So, you know, give it your best shot."}, {"Time_Start": 1480.2, "Time_End": 1481.74, "Text": " and see what you can translate it down to."}, {"Time_Start": 1482.22, "Time_End": 1487.26, "Text": " And, you know, if you want to double-check with me afterwards or whatever, just come up and, you know, ask me."}, {"Time_Start": 1487.6000000000001, "Time_End": 1494.94, "Text": " But, yeah, so mismatch encodings, they're very effective against IDS's and just, you know, most IDS analysts,"}, {"Time_Start": 1495.38, "Time_End": 1498.14, "Text": " even if they catch the packet, you think they could decode that?"}, {"Time_Start": 1498.3400000000001, "Time_End": 1498.96, "Text": " Probably not."}, {"Time_Start": 1499.44, "Time_End": 1501.1200000000001, "Text": " So anyway, just keep that in mind."}, {"Time_Start": 1502.44, "Time_End": 1504.26, "Text": " All right, so we're done with the encodings now."}, {"Time_Start": 1504.26, "Time_End": 1508.04, "Text": " We're going to be, we're on to the invalid protocol parsing, practical applications."}, {"Time_Start": 1508.5800000000002, "Time_End": 1510.1000000000001, "Text": " To me, these are actually the more interesting."}, {"Time_Start": 1510.2, "Time_End": 1513.8400000000001, "Text": " IDS evasion types because they're a little more general."}, {"Time_Start": 1514.04, "Time_End": 1518.44, "Text": " I think a lot of people can understand them, and they're very, very effective against IDS's."}, {"Time_Start": 1518.52, "Time_End": 1522.2, "Text": " If your IDS doesn't catch it, then they're pretty much going to have to, you know, really think"}, {"Time_Start": 1522.2, "Time_End": 1524.16, "Text": " about how they want to redesign the protocol decoder."}, {"Time_Start": 1524.92, "Time_End": 1529.3, "Text": " So we're going to talk about two types that I mentioned previously, the request pipeline evasions"}, {"Time_Start": 1529.3, "Time_End": 1531.64, "Text": " and the parameter content encoding evasions."}, {"Time_Start": 1532.18, "Time_End": 1534.74, "Text": " And, you know, both these, like I said, are pretty effective."}, {"Time_Start": 1535.46, "Time_End": 1536.24, "Text": " Request Pipeline."}, {"Time_Start": 1536.3400000000001, "Time_End": 1537.52, "Text": " So what is a request pipeline?"}, {"Time_Start": 1537.52, "Time_End": 1538.42, "Text": " Anyone know?"}, {"Time_Start": 1538.68, "Time_End": 1540.18, "Text": " Raise your hand if you, you know, request."}, {"Time_Start": 1540.2, "Time_End": 1546.8, "Text": " pipeline anyone? Okay, well, basically, it's a new feature in HTTP 1.1. It basically allows"}, {"Time_Start": 1546.8, "Time_End": 1553.0800000000002, "Text": " your web client to send multiple requests in a single packet. This is different from the Keep"}, {"Time_Start": 1553.0800000000002, "Time_End": 1557.48, "Text": " Live option because with the Keep Alive, you could send a request with the Keep Alive header,"}, {"Time_Start": 1557.8, "Time_End": 1562.16, "Text": " and the web server will keep that connection over, then, you know, open, so then you can send another"}, {"Time_Start": 1562.16, "Time_End": 1566.98, "Text": " request like a couple minutes later. This is different because you actually send the request in the same"}, {"Time_Start": 1566.98, "Time_End": 1570.18, "Text": " packet. So, you know, as we look at the"}, {"Time_Start": 1570.2, "Time_End": 1576.14, "Text": " that it's actually very effective in evading IDSs. How does it work? Well, most IDSs, they only"}, {"Time_Start": 1576.14, "Time_End": 1582.04, "Text": " assume that one HTTP request packet is going to contain one URL. But with request pipeline"}, {"Time_Start": 1582.04, "Time_End": 1587.8400000000001, "Text": " evasions, that's not the case anymore. You can put as many in there as you want to. So how does this work"}, {"Time_Start": 1587.8400000000001, "Time_End": 1593.38, "Text": " then? For the first couple URL requests, we say, okay, we'll send some pretty benign, you know, benign"}, {"Time_Start": 1593.38, "Time_End": 1599.8, "Text": " requests like we'll do, we'll look at the like slash, the index, we'll look at the content, maybe download the"}, {"Time_Start": 1599.8, "Time_End": 1604.56, "Text": " logo, GIF, or whatever we want to do. And then at the last URL request, you basically put"}, {"Time_Start": 1604.56, "Time_End": 1609.12, "Text": " the malicious URL you want to access. If you leave it in plain text, it's probably not going to"}, {"Time_Start": 1609.12, "Time_End": 1614.22, "Text": " work for you. Because a lot of IDS is at this point, what they do is just do pattern matching still over"}, {"Time_Start": 1614.22, "Time_End": 1619.52, "Text": " the whole packet for certain malicious contents. So what you want to do is just encode that last"}, {"Time_Start": 1619.52, "Time_End": 1624.54, "Text": " malicious URL with your favorite type of encoding. Hex encoding works just fine, you know, and it's"}, {"Time_Start": 1624.54, "Time_End": 1629.52, "Text": " universal for all web servers. So you kind of encode it like that, and most IDESs won't ever"}, {"Time_Start": 1629.52, "Time_End": 1630.86, "Text": " decode that URL."}, {"Time_Start": 1632.42, "Time_End": 1635.06, "Text": " So here's kind of an example here. As you see, we got the"}, {"Time_Start": 1635.06, "Time_End": 1637.9, "Text": " benign request. Always remember, when you're doing"}, {"Time_Start": 1637.9, "Time_End": 1641.42, "Text": " request pipeline, you have to have the HTTP 1.1 version."}, {"Time_Start": 1641.84, "Time_End": 1645.02, "Text": " And because of that, you always have to have the host header, because that's"}, {"Time_Start": 1645.02, "Time_End": 1647.42, "Text": " mandatory in the HTTP 1.1 protocol."}, {"Time_Start": 1647.8799999999999, "Time_End": 1651.3, "Text": " So if you don't put the host in there, odds are the web server is going to say,"}, {"Time_Start": 1651.3799999999999, "Time_End": 1654.32, "Text": " I don't know what you're talking about. So remember to put the host"}, {"Time_Start": 1654.32, "Time_End": 1657.52, "Text": " parameter in there. So as you see, we just access"}, {"Time_Start": 1657.52, "Time_End": 1659.5, "Text": " the index, content.html."}, {"Time_Start": 1659.52, "Time_End": 1662.18, "Text": " and then we basically encode our last one."}, {"Time_Start": 1662.98, "Time_End": 1667.1, "Text": " If an IDS happens to be looking for the content, CGIBIN, PHF,"}, {"Time_Start": 1667.6, "Time_End": 1668.84, "Text": " they're not going to find it there."}, {"Time_Start": 1668.98, "Time_End": 1670.48, "Text": " So they'll just see a bunch of percents."}, {"Time_Start": 1671.02, "Time_End": 1673.1, "Text": " So that's what that encoding turns into,"}, {"Time_Start": 1673.2, "Time_End": 1676.06, "Text": " is CGIBN PHF, and you can access things like that."}, {"Time_Start": 1678.22, "Time_End": 1678.72, "Text": " Okay."}, {"Time_Start": 1684.22, "Time_End": 1686.1399999999999, "Text": " Parameter content encoding evasions."}, {"Time_Start": 1687.02, "Time_End": 1689.12, "Text": " This evasion is particularly effective"}, {"Time_Start": 1689.12, "Time_End": 1689.5, "Text": " when you're doing."}, {"Time_Start": 1689.52, "Time_End": 1692.44, "Text": " doing any sort of parameter type, you know, malicious parameters."}, {"Time_Start": 1692.86, "Time_End": 1696.8799999999999, "Text": " If you're doing database hacking, you know, you're putting in some select statements that"}, {"Time_Start": 1696.8799999999999, "Time_End": 1701.4, "Text": " aren't really that good, like select all credit card numbers or whatever, you know, things"}, {"Time_Start": 1701.4, "Time_End": 1706.3, "Text": " like that, you want to make sure if you're trying to evade an IDS, that that's not in plain text."}, {"Time_Start": 1707.3, "Time_End": 1711.62, "Text": " This also works well for, like, you know, against CGI input errors with the parameters at the end,"}, {"Time_Start": 1711.92, "Time_End": 1715.68, "Text": " or if you're, you know, find an unpatched IIS server, there's still some out there."}, {"Time_Start": 1716.24, "Time_End": 1719.5, "Text": " You know, you can use your command.d.exe with the parameters."}, {"Time_Start": 1719.52, "Time_End": 1725.6, "Text": " types. So how does this one work? Well, instead of doing a Git request and putting"}, {"Time_Start": 1725.6, "Time_End": 1730.6399999999999, "Text": " the parameters after the question mark and encoding that with whatever URL encoding you want"}, {"Time_Start": 1730.6399999999999, "Time_End": 1736.8, "Text": " to do, because most IDSs decode the URL and the parameter URL field, too. So you can't"}, {"Time_Start": 1736.8, "Time_End": 1740.74, "Text": " really get away with that anymore. What you do now is you actually change that get request into"}, {"Time_Start": 1740.74, "Time_End": 1746.6399999999999, "Text": " a post request, and you put the parameters down after the header section into the HTTP payload."}, {"Time_Start": 1747.36, "Time_End": 1749.5, "Text": " So we've moved the parameters now into the payload. So we've moved the parameters now into the payload."}, {"Time_Start": 1749.52, "Time_End": 1751.1399999999999, "Text": " But again, it's still in plain text."}, {"Time_Start": 1751.5, "Time_End": 1755.22, "Text": " So an IDS most likely is going to find that malicious content that it's looking for."}, {"Time_Start": 1755.42, "Time_End": 1759.98, "Text": " So we make it a little tougher by using the content encoding header in the post request"}, {"Time_Start": 1759.98, "Time_End": 1764.26, "Text": " and, you know, picking your favorite type of encoding, like you could either zip it or you could, like,"}, {"Time_Start": 1764.34, "Time_End": 1770.44, "Text": " base 64 encode it, or whatever you want to do, which that, and then run your parameters through base 64"}, {"Time_Start": 1770.44, "Time_End": 1775.1399999999999, "Text": " encoding, like, you know, on whatever you want to do there, and then putting that into the payload."}, {"Time_Start": 1775.7, "Time_End": 1779.4, "Text": " So what an IDS now has to do is say, okay, this is a post request."}, {"Time_Start": 1779.52, "Time_End": 1784.26, "Text": " What type of encoding is it using, and then it goes down to the end of the payload and decodes that."}, {"Time_Start": 1785.12, "Time_End": 1791.22, "Text": " IDS is just don't do that, because right now it'd be very time-consuming and lead to potential DOS attacks against that, you know,"}, {"Time_Start": 1791.22, "Time_End": 1795.52, "Text": " because there's a lot of valid post-traffic and, you know, it's a little scary."}, {"Time_Start": 1795.8, "Time_End": 1797.2, "Text": " So this is what it would kind of look like here."}, {"Time_Start": 1797.26, "Time_End": 1799.5, "Text": " You got the post-CGI bin, PHF."}, {"Time_Start": 1800.44, "Time_End": 1804.06, "Text": " You know, again, people see that pHF and say, oh, it's an attack."}, {"Time_Start": 1804.5, "Time_End": 1809.28, "Text": " But say, for example, you're accessing, like, a database, like Oracle, you can't really write a signature"}, {"Time_Start": 1809.28, "Time_End": 1816.08, "Text": " for Oracle database access because there's a lot of valid traffic going across there."}, {"Time_Start": 1816.2, "Time_End": 1818.16, "Text": " So you'll just get a lot of false positives."}, {"Time_Start": 1818.66, "Time_End": 1822.36, "Text": " So if you're actually accessing a valid resource on the web,"}, {"Time_Start": 1822.72, "Time_End": 1825.08, "Text": " you're not going to be able to really detect this attack."}, {"Time_Start": 1825.72, "Time_End": 1831.42, "Text": " So as you see, we basically set the content encoding, base 64, we set the content length is 15,"}, {"Time_Start": 1831.86, "Time_End": 1835.0, "Text": " and then the parameter sections to CGI to MPH, for an example,"}, {"Time_Start": 1835.0, "Time_End": 1837.12, "Text": " you know, Q alias, whatever you want to do."}, {"Time_Start": 1837.12, "Time_End": 1838.84, "Text": " So, you know, again, IDF."}, {"Time_Start": 1839.28, "Time_End": 1840.3799999999999, "Text": " will be looking for QA, alias."}, {"Time_Start": 1840.48, "Time_End": 1842.62, "Text": " It's not going to find it there in the base 64 encoding."}, {"Time_Start": 1844.52, "Time_End": 1847.8799999999999, "Text": " All right, so that's kind of the more formal part of this talk."}, {"Time_Start": 1848.18, "Time_End": 1852.72, "Text": " Now we're going to talk a little bit about the different tools that there's available for you guys to use."}, {"Time_Start": 1853.2, "Time_End": 1854.42, "Text": " Basically, there's three different ones."}, {"Time_Start": 1854.46, "Time_End": 1858.76, "Text": " An encoder.c, you know, this is going to do all the different encodings we just talked about,"}, {"Time_Start": 1858.82, "Time_End": 1860.06, "Text": " and this is a command line version."}, {"Time_Start": 1860.44, "Time_End": 1865.3, "Text": " It runs on both Windows and, you know, Star Nix, whatever you want to do, Linux, BSD, whatever."}, {"Time_Start": 1866.66, "Time_End": 1869.26, "Text": " And then we got HTTP Chameleon, which was very."}, {"Time_Start": 1869.28, "Time_End": 1871.02, "Text": " was written by Mark Norton, my colleague."}, {"Time_Start": 1871.46, "Time_End": 1875.98, "Text": " He basically wrapped up the functionality and encoder.c was with a really nice Windows"}, {"Time_Start": 1875.98, "Time_End": 1878.26, "Text": " GUI, so, you know, it's okay."}, {"Time_Start": 1878.46, "Time_End": 1882.06, "Text": " I don't, you know, just because you use the GUI doesn't mean you're less elite than anyone else,"}, {"Time_Start": 1882.16, "Time_End": 1886.3, "Text": " but I actually find it pretty useful because it's a little, you know, keeps a lot of the history around,"}, {"Time_Start": 1886.42, "Time_End": 1890.18, "Text": " keeps a lot of different templates that you can use, and hopefully it'll make it a lot more"}, {"Time_Start": 1890.18, "Time_End": 1891.04, "Text": " accessible to everyone."}, {"Time_Start": 1891.74, "Time_End": 1895.18, "Text": " And then the final one we got is the Microsoft Unicodemap.c.c."}, {"Time_Start": 1895.68, "Time_End": 1899.1399999999999, "Text": " What that basically does is you run that on your Windows box,"}, {"Time_Start": 1899.28, "Time_End": 1904.7, "Text": " your IIS server, whatever we want to do, and it dumps all the code pages and the code points that's on your system."}, {"Time_Start": 1905.94, "Time_End": 1910.44, "Text": " You know, maybe just for your information, if you kind of want to know what code pages your system's using,"}, {"Time_Start": 1910.8999999999999, "Time_End": 1920.1, "Text": " this will also be very useful when the new snort HTTP decoder comes out because the new configuration allows you to specify certain code pages"}, {"Time_Start": 1920.1, "Time_End": 1925.74, "Text": " and code points for individual HTTP servers, so you can make sure you can catch the specific attacks."}, {"Time_Start": 1925.74, "Time_End": 1928.8799999999999, "Text": " You know, for instance, to kind of give you an example about this,"}, {"Time_Start": 1929.28, "Time_End": 1935.06, "Text": " A lot of people try to decode, unicode code points to Chinese web servers,"}, {"Time_Start": 1935.18, "Time_End": 1938.8799999999999, "Text": " IIS web servers, using like the American code point mappings."}, {"Time_Start": 1939.34, "Time_End": 1945.02, "Text": " And, you know, that doesn't work because, like, they have a different, A equals different code points on the Chinese web server."}, {"Time_Start": 1945.3999999999999, "Time_End": 1950.44, "Text": " So if, you know, I don't know if any of you guys have, you're administering or watching different web servers,"}, {"Time_Start": 1950.44, "Time_End": 1955.92, "Text": " like saying Hungary or China, America, you know, it's good to know this because a lot of IDS's,"}, {"Time_Start": 1955.92, "Time_End": 1959.26, "Text": " all they do is default to the American code page."}, {"Time_Start": 1959.28, "Time_End": 1961.48, "Text": " and, you know, it's wrong."}, {"Time_Start": 1961.8799999999999, "Time_End": 1963.62, "Text": " So I'm just wanted to bring that up."}, {"Time_Start": 1963.78, "Time_End": 1965.72, "Text": " So we'll talk a little bit now about the tools."}, {"Time_Start": 1965.94, "Time_End": 1967.26, "Text": " Start off with encoder.c."}, {"Time_Start": 1968.08, "Time_End": 1972.2, "Text": " This is a command line tool allows very fine-grained encoding of HTTP URLs."}, {"Time_Start": 1972.8799999999999, "Time_End": 1975.8, "Text": " You can encode, like, each character in a different type of encoding you want."}, {"Time_Start": 1975.8799999999999, "Time_End": 1981.3, "Text": " You can throw in directory reversals, multiple slashes, backslashes, whatever you want to do."}, {"Time_Start": 1982.68, "Time_End": 1986.82, "Text": " You know, also in case you don't have like Netcat on your machine to pipe what this prints out,"}, {"Time_Start": 1987.04, "Time_End": 1989.16, "Text": " across the wire, there is some simple socket support,"}, {"Time_Start": 1989.28, "Time_End": 1994.04, "Text": " in so, you know, you can just port this program over and you'll be able to, you know, do"}, {"Time_Start": 1994.04, "Time_End": 1998.32, "Text": " some research on the web servers or do some IDS testing."}, {"Time_Start": 1998.32, "Time_End": 2003.1, "Text": " And I would suggest, though, if you do run Windows or, you know, like Windows, use the HTTP"}, {"Time_Start": 2003.1, "Time_End": 2004.24, "Text": " Camelion instead."}, {"Time_Start": 2004.24, "Time_End": 2007.28, "Text": " You know, it's a lot more useful, as you'll see, because I'll do a little demonstration here in a little"}, {"Time_Start": 2007.28, "Time_End": 2008.28, "Text": " bit."}, {"Time_Start": 2010.28, "Time_End": 2016.96, "Text": " Okay, encoder.c usage, basically you got your three different ways you can encode text."}, {"Time_Start": 2016.96, "Time_End": 2019.26, "Text": " You can encode a single character by just doing slash a."}, {"Time_Start": 2019.28, "Time_End": 2022.86, "Text": " with a character or the encoding type slash a and encoder."}, {"Time_Start": 2022.86, "Time_End": 2025.2, "Text": " It happens to be ASC encoding or hex encoding."}, {"Time_Start": 2025.8, "Time_End": 2029.86, "Text": " If you want to encode a whole string, you basically just put the string in the braces there."}, {"Time_Start": 2030.56, "Time_End": 2034.7, "Text": " And if you want to do like a code point that's outside the range of a normal ASC character,"}, {"Time_Start": 2034.86, "Time_End": 2040.24, "Text": " like say you want to encode like, you know, 1FF or something, you just kind of put that in there to the code point."}, {"Time_Start": 2040.54, "Time_End": 2042.16, "Text": " Remember, this kind of is like C syntax."}, {"Time_Start": 2042.46, "Time_End": 2048.88, "Text": " So if you're using a hexadecimal value, put a zero lowercase X in front of that value to designate that it's actually a hex decoding."}, {"Time_Start": 2049.28, "Time_End": 2055.52, "Text": " Okay, HTTP Chmellian, written by a colleague Mark Norton with the Windows GUI."}, {"Time_Start": 2055.88, "Time_End": 2056.92, "Text": " I think it's much more usable."}, {"Time_Start": 2057.42, "Time_End": 2061.86, "Text": " And I guess we'll do a quick demonstration here with it so you guys can kind of check this out."}, {"Time_Start": 2063.5800000000004, "Time_End": 2065.86, "Text": " This is pretty much what the GUI looks like here."}, {"Time_Start": 2067.0600000000004, "Time_End": 2070.0800000000004, "Text": " As you can see, got an about box, a help box."}, {"Time_Start": 2070.2000000000003, "Time_End": 2071.6600000000003, "Text": " The help's actually pretty advanced."}, {"Time_Start": 2071.86, "Time_End": 2075.96, "Text": " So, you know, download this at your leisure and go ahead and read different things."}, {"Time_Start": 2076.0, "Time_End": 2077.32, "Text": " It kind of gives you some quick starts."}, {"Time_Start": 2078.0800000000004, "Time_End": 2079.1000000000004, "Text": " How to use different things."}, {"Time_Start": 2079.28, "Time_End": 2084.28, "Text": " things. Save some templates for yourself. It also explains the different types of encodings here."}, {"Time_Start": 2084.28, "Time_End": 2091.28, "Text": " You know, and like for example, you know, first nibbles, slash I, you know, etc., things like that."}, {"Time_Start": 2091.28, "Time_End": 2097.28, "Text": " How it kind of works is this way. You know, we'll take the basic Unicode attack years old."}, {"Time_Start": 2097.28, "Time_End": 2103.28, "Text": " We'll select that one. It kind of comes down here. And this is the basic attack."}, {"Time_Start": 2103.28, "Time_End": 2107.28, "Text": " You know, it's basically a template. So you can decide how you want to encode this one."}, {"Time_Start": 2107.28, "Time_End": 2109.26, "Text": " So for example, you could say, okay,"}, {"Time_Start": 2109.28, "Time_End": 2115.28, "Text": " I think many IDSs will be able to find that and that shouldn't be normal access."}, {"Time_Start": 2115.28, "Time_End": 2118.28, "Text": " So we could do like a short UTFA encoding."}, {"Time_Start": 2118.28, "Time_End": 2120.28, "Text": " So we'll double click that."}, {"Time_Start": 2120.28, "Time_End": 2122.28, "Text": " You know, pops up what I highlighted."}, {"Time_Start": 2122.28, "Time_End": 2125.28, "Text": " You know, I didn't highlight the whole scripts just a little bit of it."}, {"Time_Start": 2125.28, "Time_End": 2128.28, "Text": " And then, you know, click OK, and it puts in the encoding for that."}, {"Time_Start": 2128.28, "Time_End": 2132.28, "Text": " Then, you know, for example, then we got Winn-NT System 32."}, {"Time_Start": 2132.28, "Time_End": 2135.28, "Text": " Let's maybe encode that a little bit, obscure it up a bit."}, {"Time_Start": 2135.28, "Time_End": 2138.28, "Text": " Maybe use double hex encoding for that."}, {"Time_Start": 2138.28, "Time_End": 2139.28, "Text": " Double-click on that."}, {"Time_Start": 2139.28, "Time_End": 2143.28, "Text": " there comes up, you click OK, puts that one in there too."}, {"Time_Start": 2143.28, "Time_End": 2146.28, "Text": " Then at command.dexc, you definitely don't want that in there."}, {"Time_Start": 2146.28, "Time_End": 2152.28, "Text": " So you do this one and maybe do a mismatch encoding on that."}, {"Time_Start": 2152.28, "Time_End": 2155.28, "Text": " And we'll do the, say, okay, fine."}, {"Time_Start": 2155.28, "Time_End": 2157.28, "Text": " All right, so you kind of have that."}, {"Time_Start": 2157.28, "Time_End": 2162.28, "Text": " Then once you're ready, then you click encode, and up comes your encoded URL here."}, {"Time_Start": 2162.28, "Time_End": 2165.28, "Text": " So anyone want to try and read that out for me now?"}, {"Time_Start": 2165.28, "Time_End": 2166.28, "Text": " All right."}, {"Time_Start": 2166.28, "Time_End": 2168.28, "Text": " So basically, you know, you got all that and you're hoping."}, {"Time_Start": 2168.28, "Time_End": 2172.7400000000002, "Text": " and you're hoping now at this point that your IDS actually can encode and decode that."}, {"Time_Start": 2174.0800000000004, "Time_End": 2176.5800000000004, "Text": " So, you know, now you basically put in your HTTP host,"}, {"Time_Start": 2176.6800000000003, "Time_End": 2181.1400000000003, "Text": " and you can send the request, the HTTP response spits out what you got back."}, {"Time_Start": 2181.2200000000003, "Time_End": 2183.2400000000002, "Text": " So, you know, you can tell if it was successful or not."}, {"Time_Start": 2183.7000000000003, "Time_End": 2185.52, "Text": " It's kind of interesting, you know, try it out against, you know,"}, {"Time_Start": 2185.5600000000004, "Time_End": 2189.6800000000003, "Text": " like your home web or like some of your test web servers or whatever to see what you can get."}, {"Time_Start": 2190.0400000000004, "Time_End": 2191.1800000000003, "Text": " So it kind of works like that."}, {"Time_Start": 2191.3, "Time_End": 2193.9, "Text": " The other thing that's kind of nice is, let's see here."}, {"Time_Start": 2196.0400000000004, "Time_End": 2197.5400000000004, "Text": " For example, if you do this,"}, {"Time_Start": 2198.28, "Time_End": 2201.46, "Text": " I'll get this up here, Unicode Explorer."}, {"Time_Start": 2203.7200000000003, "Time_End": 2207.2400000000002, "Text": " I think it saw some problems with the XP here that I'm running,"}, {"Time_Start": 2207.44, "Time_End": 2209.34, "Text": " which, by the way, this is my wife's a laptop."}, {"Time_Start": 2209.6400000000003, "Time_End": 2212.98, "Text": " The company I work with, I guess, I didn't have any laptops available."}, {"Time_Start": 2212.98, "Time_End": 2216.0, "Text": " So, you know, it's mad props to GW Law."}, {"Time_Start": 2217.1000000000004, "Time_End": 2220.6600000000003, "Text": " So, but basically, you got a couple different things here,"}, {"Time_Start": 2221.1000000000004, "Time_End": 2223.5400000000004, "Text": " and see if this will come up here."}, {"Time_Start": 2225.4, "Time_End": 2227.1600000000003, "Text": " Sometimes, sometimes not."}, {"Time_Start": 2228.28, "Time_End": 2230.76, "Text": " Oh, no."}, {"Time_Start": 2231.5600000000004, "Time_End": 2233.0600000000004, "Text": " But, so we got this."}, {"Time_Start": 2233.1200000000003, "Time_End": 2235.5800000000004, "Text": " Now I want to explain, oh, not responding."}, {"Time_Start": 2238.2000000000003, "Time_End": 2241.1600000000003, "Text": " Oh, I just rooted my box."}, {"Time_Start": 2242.9, "Time_End": 2243.5600000000004, "Text": " I'm cool."}, {"Time_Start": 2244.6000000000004, "Time_End": 2245.5600000000004, "Text": " So let's see here."}, {"Time_Start": 2245.84, "Time_End": 2247.0800000000004, "Text": " Okay, wait, Unicode Explorer."}, {"Time_Start": 2247.5, "Time_End": 2250.92, "Text": " So basically what this does here is you got your code pages you can select."}, {"Time_Start": 2251.96, "Time_End": 2254.0600000000004, "Text": " These are all the code pages that are currently on XP."}, {"Time_Start": 2255.2400000000002, "Time_End": 2258.26, "Text": " You got, for example, Latin 1 is what is the D-C."}, {"Time_Start": 2258.28, "Time_End": 2263.34, "Text": " default on all American servers, so click that one."}, {"Time_Start": 2263.6800000000003, "Time_End": 2267.6200000000003, "Text": " And basically, now you can go ahead and go and pick your favorite character you want in code."}, {"Time_Start": 2267.88, "Time_End": 2269.86, "Text": " Remember I was talking about those different values for A?"}, {"Time_Start": 2270.4, "Time_End": 2271.02, "Text": " Well, there you go."}, {"Time_Start": 2271.7200000000003, "Time_End": 2275.2200000000003, "Text": " Not only do you got 0x4, 1, but you got, like, you know, six other ones or whatever."}, {"Time_Start": 2275.6200000000003, "Time_End": 2280.96, "Text": " So, you know, feel free to pick it and, you know, you pick one here, comes up."}, {"Time_Start": 2281.26, "Time_End": 2284.34, "Text": " And then, you know, you basically have, like, a reference as well, you can say,"}, {"Time_Start": 2284.34, "Time_End": 2288.26, "Text": " well, what about what other code pages in the system?"}, {"Time_Start": 2288.28, "Time_End": 2292.34, "Text": " also refer to code point 0102 as A."}, {"Time_Start": 2292.44, "Time_End": 2295.0400000000004, "Text": " So you can kind of scroll down here and say, oh, okay, cool."}, {"Time_Start": 2297.26, "Time_End": 2300.94, "Text": " So, you know, so you guys see what you got that."}, {"Time_Start": 2301.6200000000003, "Time_End": 2305.5800000000004, "Text": " I wanted to also just kind of give you an idea here for the request pipeline."}, {"Time_Start": 2306.0800000000004, "Time_End": 2307.2200000000003, "Text": " Clear these out here."}, {"Time_Start": 2309.0800000000004, "Time_End": 2310.7200000000003, "Text": " Basically, here we go."}, {"Time_Start": 2310.96, "Time_End": 2313.1600000000003, "Text": " I'll actually encode it first because it's a little easier to read."}, {"Time_Start": 2313.5600000000004, "Time_End": 2316.82, "Text": " As you see here, we got the first URL request, normal."}, {"Time_Start": 2318.28, "Time_End": 2323.4, "Text": " We got the second logo.gift, and we got the third CGIBIMPHF."}, {"Time_Start": 2323.5600000000004, "Time_End": 2328.2400000000002, "Text": " Well, remember, I was telling you, don't leave that CGIBNPHF in prints there."}, {"Time_Start": 2328.34, "Time_End": 2333.94, "Text": " So basically, we're just going to take it all and highlight it."}, {"Time_Start": 2334.2400000000002, "Time_End": 2335.98, "Text": " Wait, I don't want that space there."}, {"Time_Start": 2337.32, "Time_End": 2338.0400000000004, "Text": " There we go."}, {"Time_Start": 2338.7000000000003, "Time_End": 2342.0400000000004, "Text": " And then we say, I'll just do a simple hex encoding on this."}, {"Time_Start": 2343.2400000000002, "Time_End": 2344.44, "Text": " Okay, looks good."}, {"Time_Start": 2344.7400000000002, "Time_End": 2345.32, "Text": " Click okay."}, {"Time_Start": 2345.76, "Time_End": 2346.5, "Text": " Then encode it."}, {"Time_Start": 2346.9, "Time_End": 2347.76, "Text": " So we're back here."}, {"Time_Start": 2347.76, "Time_End": 2351.6200000000003, "Text": " Everything looks the same except CGI-I-V-P-HF's gone."}, {"Time_Start": 2352.0400000000004, "Time_End": 2353.6800000000003, "Text": " So that's kind of the idea behind it, all right?"}, {"Time_Start": 2354.5400000000004, "Time_End": 2356.0400000000004, "Text": " So like I said, you know, play around with it."}, {"Time_Start": 2356.1800000000003, "Time_End": 2359.28, "Text": " Send us, you know, if you find something not working or you have some troubles with something."}, {"Time_Start": 2359.7000000000003, "Time_End": 2364.5800000000004, "Text": " We're probably going to be releasing a new version of it that it fix some of the problems in the next week or two."}, {"Time_Start": 2364.6800000000003, "Time_End": 2367.7200000000003, "Text": " So, you know, feel free to check back at IDSresearch.org for the latest."}, {"Time_Start": 2369.84, "Time_End": 2371.0, "Text": " So let's see here."}, {"Time_Start": 2371.8, "Time_End": 2373.44, "Text": " So back to the slideshow."}, {"Time_Start": 2374.94, "Time_End": 2376.88, "Text": " And we're almost done at this point."}, {"Time_Start": 2377.76, "Time_End": 2385.86, "Text": " All right, so the MS Unicode Map.C, this basically, you know, like you saw in the Unicode Explorer that eventually came up,"}, {"Time_Start": 2386.28, "Time_End": 2390.3, "Text": " it basically just tells you what the different code pages are in the code points."}, {"Time_Start": 2391.2000000000003, "Time_End": 2396.98, "Text": " And slide 37, and we're done, maybe a little early, but thanks for being a great audience and not heckling too much."}, {"Time_Start": 2397.5200000000004, "Time_End": 2400.2400000000002, "Text": " You know, download the update tools at ISresearch.org."}, {"Time_Start": 2401.48, "Time_End": 2407.5200000000004, "Text": " And I may be releasing a some, like some code for, basically you'll scan a web server,"}, {"Time_Start": 2407.76, "Time_End": 2412.5400000000004, "Text": " and go through and tell you what type of the encodings work on that web server, you know,"}, {"Time_Start": 2412.5800000000004, "Time_End": 2415.2400000000002, "Text": " so you can test out, make your IDS testing a little easier."}, {"Time_Start": 2415.96, "Time_End": 2417.86, "Text": " So, all right, so questions, anyone?"}, {"Time_Start": 2418.76, "Time_End": 2419.6400000000003, "Text": " I got one right up here."}, {"Time_Start": 2421.1000000000004, "Time_End": 2422.34, "Text": " Yep, good job."}, {"Time_Start": 2423.0600000000004, "Time_End": 2423.38, "Text": " All right."}, {"Time_Start": 2425.38, "Time_End": 2425.86, "Text": " Nice."}, {"Time_Start": 2425.86, "Time_End": 2429.0200000000004, "Text": " You were talking about the SAC-64 coding."}, {"Time_Start": 2429.2000000000003, "Time_End": 2429.42, "Text": " Uh-huh."}, {"Time_Start": 2429.6200000000003, "Time_End": 2432.7200000000003, "Text": " And some of the IDS was good for the whole of this recent."}, {"Time_Start": 2432.88, "Time_End": 2433.1200000000003, "Text": " Yeah."}, {"Time_Start": 2434.2400000000002, "Time_End": 2435.96, "Text": " The XGD code of the new image by."}, {"Time_Start": 2436.36, "Time_End": 2436.5600000000004, "Text": " Right."}, {"Time_Start": 2437.1200000000003, "Time_End": 2437.6800000000003, "Text": " I guess what."}, {"Time_Start": 2437.76, "Time_End": 2438.44, "Text": " I have to find out."}, {"Time_Start": 2439.0, "Time_End": 2443.38, "Text": " I can't really talk too much about it, so I'm sorry, didn't tell me to, you know, yeah, to talk too much about it."}, {"Time_Start": 2443.38, "Time_End": 2445.1400000000003, "Text": " It should be coming out there in the next couple months."}, {"Time_Start": 2445.3, "Time_End": 2448.82, "Text": " So, you know, it's gone through some pretty rigorous testing, so we'll give it a shot."}, {"Time_Start": 2450.1600000000003, "Time_End": 2451.1000000000004, "Text": " In the question here?"}, {"Time_Start": 2452.0200000000004, "Time_End": 2457.7000000000003, "Text": " In a lot of cases, encoding is not something that you would see."}, {"Time_Start": 2459.2000000000003, "Time_End": 2464.3, "Text": " And how much are you looking at doing secretures for encoding?"}, {"Time_Start": 2464.5, "Time_End": 2464.6600000000003, "Text": " Okay."}, {"Time_Start": 2467.76, "Time_End": 2470.88, "Text": " Okay, question was, basically, instead of, like, actually, instead of, like, actually, decoding,"}, {"Time_Start": 2470.88, "Time_End": 2476.88, "Text": " but it's easy enough to tell someone's basically for a coding and odds are that's going to be a neutral totals."}, {"Time_Start": 2477.5200000000004, "Time_End": 2485.6800000000003, "Text": " Okay, question was, basically, instead of, like, actually decoding the URL, could you just basically, you know, try and detect that encoding's been used?"}, {"Time_Start": 2485.9, "Time_End": 2486.6400000000003, "Text": " It's a good question."}, {"Time_Start": 2486.84, "Time_End": 2487.94, "Text": " You definitely can do that."}, {"Time_Start": 2488.1800000000003, "Time_End": 2492.78, "Text": " The only problem with that is that you really won't be able to get the attack that was sent."}, {"Time_Start": 2492.98, "Time_End": 2497.7400000000002, "Text": " You know, you'll get the alert that says, hey, this URL was encoded, but unless you're, like, a decode."}, {"Time_Start": 2497.76, "Time_End": 2501.8, "Text": " expert on, like, URLs, you probably aren't going to know what the, what actual exploit was"}, {"Time_Start": 2501.8, "Time_End": 2503.0800000000004, "Text": " brought about."}, {"Time_Start": 2503.2400000000002, "Time_End": 2506.1000000000004, "Text": " So, you know, we actually want to try and do those decodings if we can."}, {"Time_Start": 2507.1600000000003, "Time_End": 2508.3, "Text": " Okay, question over here."}, {"Time_Start": 2510.3, "Time_End": 2515.0, "Text": " Yeah, yeah."}, {"Time_Start": 2515.1400000000003, "Time_End": 2521.48, "Text": " How is it successful as you can't slide some of the, oh, like, how is ether reel up against that?"}, {"Time_Start": 2521.9, "Time_End": 2525.98, "Text": " Okay, basically the question was, say you capture some of this traffic with Etheriel,"}, {"Time_Start": 2526.38, "Time_End": 2527.7400000000002, "Text": " eetherreel doesn't decode U.R."}, {"Time_Start": 2527.76, "Time_End": 2534.34, "Text": " else. So you're kind of up on your own. Yeah, exactly. Yeah. So, okay, next question."}, {"Time_Start": 2535.6400000000003, "Time_End": 2536.6400000000003, "Text": " Right there in front."}, {"Time_Start": 2540.88, "Time_End": 2546.28, "Text": " Okay, question was, do these encodings work across HTTP tool and to support that? Okay, question was,"}, {"Time_Start": 2546.28, "Time_End": 2552.5200000000004, "Text": " do these encodings work across HTTP? And is there any way that we're going to maybe change the HTTP"}, {"Time_Start": 2552.5200000000004, "Time_End": 2557.6000000000004, "Text": " chameleon tool and to support that? Yeah, we may in the future, and yeah, they definitely work over that."}, {"Time_Start": 2557.76, "Time_End": 2559.96, "Text": " So anyone know what time it is?"}, {"Time_Start": 2560.0, "Time_End": 2561.38, "Text": " I want to make sure I'm not going over time."}, {"Time_Start": 2562.8, "Time_End": 2563.44, "Text": " What is it?"}, {"Time_Start": 2564.7000000000003, "Time_End": 2566.4, "Text": " Oh, okay, so we got some time."}, {"Time_Start": 2567.1200000000003, "Time_End": 2568.2000000000003, "Text": " All right, more questions?"}, {"Time_Start": 2569.1000000000004, "Time_End": 2569.92, "Text": " This one down here?"}, {"Time_Start": 2572.5600000000004, "Time_End": 2578.5600000000004, "Text": " Yeah, yeah, this actually deprecates some of the double decodings for IS, but not the unicode code points."}, {"Time_Start": 2579.0600000000004, "Time_End": 2583.7000000000003, "Text": " So, you know, again, if your IDS doesn't know the different values for the unicode code points,"}, {"Time_Start": 2583.78, "Time_End": 2584.88, "Text": " then you'll be evaded that way."}, {"Time_Start": 2584.92, "Time_End": 2585.82, "Text": " But, yeah, that's a good question."}, {"Time_Start": 2586.5800000000004, "Time_End": 2587.6200000000003, "Text": " By the way, the question,"}, {"Time_Start": 2587.76, "Time_End": 2593.2000000000003, "Text": " is if you use, like, URL scan for the IS web server, does it help you with some of the decodings"}, {"Time_Start": 2593.2000000000003, "Time_End": 2596.6000000000004, "Text": " and not make them all available, and it does not make them all available."}, {"Time_Start": 2597.0200000000004, "Time_End": 2598.6000000000004, "Text": " Question in the back there, I thought we had?"}, {"Time_Start": 2599.82, "Time_End": 2600.0, "Text": " Yeah."}, {"Time_Start": 2604.38, "Time_End": 2606.44, "Text": " I haven't tested against that, so I don't know."}, {"Time_Start": 2606.44, "Time_End": 2612.3, "Text": " He had asked them, does the EI. Web scanner stuff work with this? I'm not sure."}, {"Time_Start": 2614.38, "Time_End": 2617.7400000000002, "Text": " Yeah, URL scan with I actually does deprecate, like, certain."}, {"Time_Start": 2617.76, "Time_End": 2621.32, "Text": " double decodings. So it kind of just leaves you up with the hex encoding, the percent"}, {"Time_Start": 2621.32, "Time_End": 2625.7200000000003, "Text": " you encoding, the U-TF8 encoding, the bare byte encoding, and like, all the multiple"}, {"Time_Start": 2625.7200000000003, "Time_End": 2629.2200000000003, "Text": " unicode code points you can encode. Question down here again?"}, {"Time_Start": 2631.6000000000004, "Time_End": 2641.2000000000003, "Text": " Okay, like in the tool? Okay, a question was, if you find like a really messed up encoded"}, {"Time_Start": 2641.2000000000003, "Time_End": 2645.88, "Text": " URL, you paste it into the tool, and it'll spit out what it was. Not at this point, but that"}, {"Time_Start": 2645.88, "Time_End": 2646.94, "Text": " is a feature we'd like to add."}, {"Time_Start": 2647.76, "Time_End": 2649.1800000000003, "Text": " Okay, a question there too?"}, {"Time_Start": 2652.96, "Time_End": 2659.4, "Text": " I'm not sure. I'm not an expert on my configuring IIS and Apache, you probably could, I'm pretty sure, but I'm not sure about IAS."}, {"Time_Start": 2663.2000000000003, "Time_End": 2666.82, "Text": " Okay, question over here again. I'm trying to get both sides of the room."}, {"Time_Start": 2669.6200000000003, "Time_End": 2677.7400000000002, "Text": " Yeah, actually there is, because say you're trying to access, say, a URL that with a HTML that, like a, you're trying to access a web page that's, like a, you're trying to access a web page that's,"}, {"Time_Start": 2677.76, "Time_End": 2679.2400000000002, "Text": " Arabic characters."}, {"Time_Start": 2679.8, "Time_End": 2681.76, "Text": " The only way you can do that with the URL is actually"}, {"Time_Start": 2681.76, "Time_End": 2683.8, "Text": " encode it using the valid UTF8"}, {"Time_Start": 2683.8, "Time_End": 2685.76, "Text": " encoding. So, for example, you know,"}, {"Time_Start": 2685.78, "Time_End": 2687.76, "Text": " or like Hungarian as well, if you're trying"}, {"Time_Start": 2687.76, "Time_End": 2689.88, "Text": " to use some of the letters that aren't"}, {"Time_Start": 2689.88, "Time_End": 2691.5600000000004, "Text": " in the American alphabet or that are actually"}, {"Time_Start": 2691.5600000000004, "Time_End": 2693.82, "Text": " unicode code points, you would have to encode"}, {"Time_Start": 2693.82, "Time_End": 2696.0600000000004, "Text": " those certain ones in the URL to access it correctly."}, {"Time_Start": 2696.6800000000003, "Time_End": 2697.5800000000004, "Text": " Does that answer your question?"}, {"Time_Start": 2705.9, "Time_End": 2707.7200000000003, "Text": " Yeah, he's wondering, like, if he's"}, {"Time_Start": 2707.76, "Time_End": 2712.92, "Text": " not really too worried about the decodings and, you know, code point and codings, then, you know, yeah,"}, {"Time_Start": 2712.92, "Time_End": 2715.88, "Text": " you can definitely block those at the router or however you want to do that."}, {"Time_Start": 2716.1800000000003, "Time_End": 2716.76, "Text": " Try your best."}, {"Time_Start": 2717.94, "Time_End": 2718.6400000000003, "Text": " Question there?"}, {"Time_Start": 2722.6000000000004, "Time_End": 2725.36, "Text": " What is it?"}, {"Time_Start": 2727.7400000000002, "Time_End": 2728.2200000000003, "Text": " Okay."}, {"Time_Start": 2728.46, "Time_End": 2734.3, "Text": " Question was, have I tested this out against open BSD firewall, the normalization with that?"}, {"Time_Start": 2734.5, "Time_End": 2735.2000000000003, "Text": " No, I haven't."}, {"Time_Start": 2735.2000000000003, "Time_End": 2737.44, "Text": " I doubt they incorporate this, though."}, {"Time_Start": 2737.76, "Time_End": 2740.4, "Text": " So, but, yeah, I'm not really sure on that."}, {"Time_Start": 2741.6000000000004, "Time_End": 2743.1400000000003, "Text": " Okay, question over on this side."}, {"Time_Start": 2747.6000000000004, "Time_End": 2750.96, "Text": " I'm sorry, I didn't really hear you."}, {"Time_Start": 2751.1600000000003, "Time_End": 2754.3, "Text": " What about browser recognition of the code of HTML structures?"}, {"Time_Start": 2754.44, "Time_End": 2755.94, "Text": " Like, things like that."}, {"Time_Start": 2756.0800000000004, "Time_End": 2756.3, "Text": " Okay."}, {"Time_Start": 2756.94, "Time_End": 2757.6600000000003, "Text": " What about them?"}, {"Time_Start": 2758.0400000000004, "Time_End": 2760.86, "Text": " How well the browsers handle these kinds of code?"}, {"Time_Start": 2761.0, "Time_End": 2764.5200000000004, "Text": " Oh, the browsers actually, you know, like when you get sent back,"}, {"Time_Start": 2764.5200000000004, "Time_End": 2767.7000000000003, "Text": " usually the browsers will be able to handle unit coding coding."}, {"Time_Start": 2767.76, "Time_End": 2771.84, "Text": " I've really tested much out against if I actually send all these different types of"}, {"Time_Start": 2771.84, "Time_End": 2772.88, "Text": " encodings to a browser."}, {"Time_Start": 2773.1400000000003, "Time_End": 2774.76, "Text": " I've been more server-based."}, {"Time_Start": 2774.9, "Time_End": 2775.84, "Text": " But I'm not really sure."}, {"Time_Start": 2775.96, "Time_End": 2776.98, "Text": " You're welcome to test that out."}, {"Time_Start": 2779.1800000000003, "Time_End": 2780.2200000000003, "Text": " Okay, question here."}, {"Time_Start": 2785.3, "Time_End": 2786.98, "Text": " Yeah, it definitely is a flag."}, {"Time_Start": 2787.1800000000003, "Time_End": 2791.1600000000003, "Text": " He had asked, or all these different encodings, like if you see them across the wire,"}, {"Time_Start": 2791.6200000000003, "Time_End": 2794.34, "Text": " you know, aren't these things you want to alert on anyway?"}, {"Time_Start": 2794.7000000000003, "Time_End": 2796.5600000000004, "Text": " Yeah, they are definitely things you want to alert on."}, {"Time_Start": 2796.78, "Time_End": 2797.7400000000002, "Text": " But in the same way, in ID."}, {"Time_Start": 2797.76, "Time_End": 2801.1200000000003, "Text": " really should decode these things as well, so you know, like, what's been accessed."}, {"Time_Start": 2801.46, "Time_End": 2805.38, "Text": " Otherwise, like, if you see something like, you know, let's see here."}, {"Time_Start": 2805.5800000000004, "Time_End": 2806.7200000000003, "Text": " Oh, I don't have it up anymore."}, {"Time_Start": 2807.2400000000002, "Time_End": 2811.96, "Text": " But, like, you know, if you see something like that, CGI-I-B-HF string encoded,"}, {"Time_Start": 2812.1600000000003, "Time_End": 2815.5200000000004, "Text": " you're going to have no idea probably, like, what actually was accessed,"}, {"Time_Start": 2815.78, "Time_End": 2818.92, "Text": " and was it a valid URL in your server even, or were you compromised."}, {"Time_Start": 2819.7200000000003, "Time_End": 2820.98, "Text": " So, but, yeah, okay."}, {"Time_Start": 2821.78, "Time_End": 2822.5800000000004, "Text": " More questions."}, {"Time_Start": 2823.92, "Time_End": 2826.1000000000004, "Text": " Okay, and one more after this last question."}, {"Time_Start": 2826.1000000000004, "Time_End": 2826.6600000000003, "Text": " So go ahead."}, {"Time_Start": 2827.76, "Time_End": 2837.3, "Text": " These encodings aren't exploits in and of themselves."}, {"Time_Start": 2837.7200000000003, "Time_End": 2839.1800000000003, "Text": " These are really IDS evasions."}, {"Time_Start": 2839.6800000000003, "Time_End": 2844.84, "Text": " The only solution to these are actually for your IDS to be smart enough to handle all these things."}, {"Time_Start": 2845.2200000000003, "Time_End": 2849.8, "Text": " Otherwise, you're probably not going to be able to handle these correctly,"}, {"Time_Start": 2849.88, "Time_End": 2852.44, "Text": " or even detect them or anything like that."}, {"Time_Start": 2854.2400000000002, "Time_End": 2856.6600000000003, "Text": " Yeah, and we should be out fairly shortly."}, {"Time_Start": 2857.0800000000004, "Time_End": 2857.7400000000002, "Text": " Okay, last question."}, {"Time_Start": 2857.76, "Time_End": 2861.46, "Text": " I'll see if anyone from this side, because I've been answering a lot from this side."}, {"Time_Start": 2861.84, "Time_End": 2862.32, "Text": " All right then."}, {"Time_Start": 2862.6200000000003, "Time_End": 2863.0, "Text": " Right here."}, {"Time_Start": 2863.5800000000004, "Time_End": 2867.1400000000003, "Text": " Did I already ask, did, let me get this guy because he's a new one."}, {"Time_Start": 2867.2000000000003, "Time_End": 2867.6600000000003, "Text": " Go for it."}, {"Time_Start": 2872.26, "Time_End": 2875.26, "Text": " They already do."}, {"Time_Start": 2876.0400000000004, "Time_End": 2876.5800000000004, "Text": " Yeah, Apache."}, {"Time_Start": 2876.78, "Time_End": 2878.5400000000004, "Text": " They already support unicoding codings."}, {"Time_Start": 2879.26, "Time_End": 2880.76, "Text": " So, yes, in URLs."}, {"Time_Start": 2881.0600000000004, "Time_End": 2884.5800000000004, "Text": " But remember, they only use the UTF8 standard that we had talked about."}, {"Time_Start": 2884.92, "Time_End": 2886.78, "Text": " I'm not like the percent you and all that stuff."}, {"Time_Start": 2887.34, "Time_End": 2887.5600000000004, "Text": " All right."}, {"Time_Start": 2887.76, "Time_End": 2890.2200000000003, "Text": " is the question and answers. Thanks a lot of people for coming out."}, {"Time_Start": 2890.3, "Time_End": 2892.5600000000004, "Text": " If you want to talk to me afterwards, just come by."}, {"Time_Start": 2892.96, "Time_End": 2893.86, "Text": " Thanks a lot."}, {"Time_Start": 2894.36, "Time_End": 2894.7400000000002, "Text": " All right."}]}