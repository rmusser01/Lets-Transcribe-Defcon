**Introduction:**
- Speakers: Yaron Brezinov and Noam Moshe from Claroty Team82
- Topic: Exploiting **OPC UA**, a widely-used protocol in **ICS/SCADA** and **IoT** environments.

**OPC UA Overview:**
- **OPC UA** is a popular protocol for data exchange between industrial devices.
- It was created by the **OPC Foundation** to provide a unified way of communication, independent of specific ICS protocols.
- The foundation provides **protocol stacks** and **specifications** to ensure consistent implementation.
- **OPC UA** is used by a wide range of vendors and products, including servers, clients, and protocol gateways.

**Research Methodology:**
- The team conducted a long-term research project on **OPC UA** security.
- They analyzed dozens of **protocol stacks** and products, focusing on core issues in implementations.
- Their approach involved categorizing products based on similar **protocol stacks** to identify vulnerabilities affecting multiple products.
- They built their own **OPC UA client** and various fuzzers to interact with and test different products.
- The research included both automated fuzzing and manual exploration of the **specification** for complex features and mechanisms.

**Vulnerabilities and Exploits:**
- The team discovered multiple denial-of-service, remote code execution, and **XSS** vulnerabilities in various **OPC UA** products.
- They exploited memory management issues, such as chunk flooding and use-after-free, leading to server crashes.
- A critical vulnerability in **PTC Kepware** involved UTF-8 to UTF-16 string conversion, allowing data leakage and remote code execution.
- They also targeted **OPC UA clients**, leveraging XSS vulnerabilities in popular products like **Inductive Automation Ignition** and **Softing Data Feed Edge Aggregators** to achieve remote code execution.
- Chaining multiple vulnerabilities in these clients allowed them to execute arbitrary code and gain full control.

**Exploitation Framework:**
- The team developed an **OPC UA Exploitation Framework** that encompasses their research findings and attack techniques.
- The framework includes proof-of-concept scripts, exploitation techniques, and vulnerability details.
- It is released as open-source to help vendors secure their products and improve the overall security of **OPC UA** implementations.

**Conclusion:**
- The research resulted in the discovery of over 50 vulnerabilities and the development of a comprehensive exploitation framework.
- Close collaboration with vendors ensured responsible disclosure and security improvements in **OPC UA** environments.
- The open-source framework empowers vendors and developers to test and secure their products, enhancing the security posture of **OT** environments.