**Introduction**
- The talk will present a **0-day vulnerability** in **Google Cloud Platform (GCP)** called **GhostToken**
- This vulnerability allows a **malicious app** to become **invisible and unremovable**, giving it indefinite access to a user's account

**Third-Party Apps in Cloud Platforms**
- OAuth 2.0 is an **authorization framework** that enables **third-party apps** to access user data without requiring their password
- Google, as a major cloud service provider, has implemented OAuth 2.0 and requires third-party apps to be linked to a **GCP project**

**The GhostToken Vulnerability**
- The vulnerability is related to how Google handles the **deletion of apps** and the associated **tokens**
- When an app is deleted, it enters a **"pending deletion" state**, during which the associated tokens are mishandled
- An attacker can exploit this by forcing an app into this state, making it **invisible and unremovable** from the user's management page while still having access to their data

**Detection and Prevention**
- Google Workspace administrators can **detect potentially affected apps** and take steps to prevent such vulnerabilities
- Organizations should pay attention to the **implementation details** of OAuth, especially the parts that are not covered in the RFC

**OAuth Framework and Missing Pieces**
- OAuth 2.0 is a **framework** that provides a basic foundation but leaves room for implementers to make decisions
- There are two **missing pieces** in the OAuth framework: the **app registration process** and the **user's app management feature**
- Google's implementation of these missing pieces created the GhostToken vulnerability

**Live Demo**
- The speaker demonstrates the vulnerability by creating a malicious app, obtaining a token, and then deleting and restoring the associated GCP project
- This results in the app being invisible to the user while still allowing the attacker to access their data

**Takeaways and Vision for the Future**
- The vulnerability likely existed for **six years** and could have been exploited without being noticed
- The combination of Google's app registration process and lack of **audit logs** contributed to the vulnerability
- Researchers should pay more attention to OAuth as it is a **rich surface for vulnerability research**
- A **consolidated app registration platform** and **enhanced user management features** could improve security and transparency
- The OAuth RFC should be updated to remove outdated use cases and include specific use cases for **machine-to-machine authorization**