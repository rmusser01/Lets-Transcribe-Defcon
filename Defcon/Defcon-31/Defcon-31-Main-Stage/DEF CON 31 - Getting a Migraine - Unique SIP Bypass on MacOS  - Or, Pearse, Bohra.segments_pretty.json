{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 7.92,
      "Text": "This text was transcribed using whisper model: large-v2\n\n All right, folks, thank you for attending."
    },
    {
      "Time_Start": 7.92,
      "Time_End": 9.64,
      "Text": " This is getting a migraine."
    },
    {
      "Time_Start": 9.64,
      "Time_End": 13.4,
      "Text": " I'm Jonathan, or JBO for short."
    },
    {
      "Time_Start": 13.4,
      "Time_End": 18.240000000000002,
      "Text": " This is Mike or Michael, however you want to call him, and Anurag was unable to come"
    },
    {
      "Time_Start": 18.240000000000002,
      "Time_End": 24.92,
      "Text": " to DEF CON, but still he took an extremely important part in this research."
    },
    {
      "Time_Start": 24.92,
      "Time_End": 28.76,
      "Text": " We're all Microsoft researchers, which is kind of weird, because, like, Microsoft usually"
    },
    {
      "Time_Start": 28.76,
      "Time_End": 32.440000000000005,
      "Text": " do Windows stuff and not Apple stuff."
    },
    {
      "Time_Start": 32.440000000000005,
      "Time_End": 37.400000000000006,
      "Text": " However, we work for Microsoft Defender, and the reason why it's called Microsoft Defender"
    },
    {
      "Time_Start": 37.400000000000006,
      "Time_End": 43.88,
      "Text": " and not Windows Defender is because it runs on platforms that are not Windows, and we"
    },
    {
      "Time_Start": 43.88,
      "Time_End": 50.6,
      "Text": " do Mac, Android, iOS, Linux, those kind of stuff, so this is kind of like a motivation"
    },
    {
      "Time_Start": 50.6,
      "Time_End": 52.2,
      "Text": " that we have."
    },
    {
      "Time_Start": 52.32,
      "Time_End": 60.480000000000004,
      "Text": " This is not a Defender talk, but, I mean, it just shows you where we're coming from."
    },
    {
      "Time_Start": 60.480000000000004,
      "Time_End": 66.9,
      "Text": " The outline for today is talking about some of the MacOS mechanisms, specifically SIP"
    },
    {
      "Time_Start": 66.9,
      "Time_End": 68.76,
      "Text": " and entitlements."
    },
    {
      "Time_Start": 68.76,
      "Time_End": 74.52000000000001,
      "Text": " We're going to talk about how we found a vulnerability by mistake, kind of, how we automated our"
    },
    {
      "Time_Start": 74.52000000000001,
      "Time_End": 77.76,
      "Text": " exploit by means of reverse engineering."
    },
    {
      "Time_Start": 77.76,
      "Time_End": 79.24000000000001,
      "Text": " We'll have a demo."
    },
    {
      "Time_Start": 79.24,
      "Time_End": 82.56,
      "Text": " We'll talk about the implications of what we've done."
    },
    {
      "Time_Start": 82.56,
      "Time_End": 87.36,
      "Text": " We'll talk about Apple's fix and basically fix this, I would say, and then we'll have"
    },
    {
      "Time_Start": 87.36,
      "Time_End": 92.39999999999999,
      "Text": " some conclusions, so let's get to it."
    },
    {
      "Time_Start": 92.39999999999999,
      "Time_End": 94.16,
      "Text": " Some background."
    },
    {
      "Time_Start": 94.16,
      "Time_End": 101.56,
      "Text": " SIP or rootless is a mechanism in MacOS, if you're just unfamiliar with MacOS completely,"
    },
    {
      "Time_Start": 101.56,
      "Time_End": 105.5,
      "Text": " it's a mechanism that limits the capabilities of the super user of root."
    },
    {
      "Time_Start": 105.5,
      "Time_End": 110.58,
      "Text": " If you're coming from a traditional POSIX world, root can do anything, and that's not"
    },
    {
      "Time_Start": 110.58,
      "Time_End": 112.5,
      "Text": " true any more."
    },
    {
      "Time_Start": 112.5,
      "Time_End": 116.58,
      "Text": " In MacOS, even if you're running as root, you can't do a bunch of stuff, including in"
    },
    {
      "Time_Start": 116.58,
      "Time_End": 120.38,
      "Text": " user land, which is kind of foreign to a lot of folks."
    },
    {
      "Time_Start": 120.38,
      "Time_End": 124.14,
      "Text": " What it does is to leverage something called the Apple sandbox in order to protect the"
    },
    {
      "Time_Start": 124.14,
      "Time_End": 126.9,
      "Text": " entire platform."
    },
    {
      "Time_Start": 126.9,
      "Time_End": 131.7,
      "Text": " By default, you can't turn it off without going into recovery OS."
    },
    {
      "Time_Start": 131.7,
      "Time_End": 137.45999999999998,
      "Text": " I won't talk about recovery OS too much today, but generally what it means is that you have"
    },
    {
      "Time_Start": 137.45999999999998,
      "Time_End": 141.42,
      "Text": " to hit a bunch of keys and then reboot."
    },
    {
      "Time_Start": 141.42,
      "Time_End": 145.17999999999998,
      "Text": " You have to have a physical machine, you have to solve the Hellraiser puzzle and stuff like"
    },
    {
      "Time_Start": 145.17999999999998,
      "Time_End": 151.38,
      "Text": " that, so you're not supposed to turn it off at all."
    },
    {
      "Time_Start": 151.38,
      "Time_End": 156.06,
      "Text": " Several organizations, including Microsoft, in our own internal network, actually monitor"
    },
    {
      "Time_Start": 156.1,
      "Time_End": 163.1,
      "Text": " and make sure that SIP is always on as a defense in depth mechanism."
    },
    {
      "Time_Start": 164.46,
      "Time_End": 170.94,
      "Text": " We'd like to think of it just mentally, that's not accurate at all from a technical perspective,"
    },
    {
      "Time_Start": 170.94,
      "Time_End": 177.34,
      "Text": " that it's kind of like SELinux on Linux or protected processes on Windows in the fact"
    },
    {
      "Time_Start": 177.34,
      "Time_End": 183.98000000000002,
      "Text": " that you're admin, but you don't own the machine any more to some extent."
    },
    {
      "Time_Start": 183.98,
      "Time_End": 190.98,
      "Text": " SIP limits certain actions of the root user and all users, really, to, as the name suggests,"
    },
    {
      "Time_Start": 191.1,
      "Time_End": 193.82,
      "Text": " to protect the integrity of the system."
    },
    {
      "Time_Start": 193.82,
      "Time_End": 198.82,
      "Text": " That means there are certain files you can't override, there are kernel operations you"
    },
    {
      "Time_Start": 198.82,
      "Time_End": 205.38,
      "Text": " can't do and so on, and we'll be talking about that more thoroughly in the next couple of"
    },
    {
      "Time_Start": 205.38,
      "Time_End": 208.62,
      "Text": " slides."
    },
    {
      "Time_Start": 208.62,
      "Time_End": 215.62,
      "Text": " SIP itself internally is controlled by NVRAM variables, there's actually more than one,"
    },
    {
      "Time_Start": 216.62,
      "Time_End": 221.62,
      "Text": " but we're going to talk about CSR active config on Intel platform."
    },
    {
      "Time_Start": 221.62,
      "Time_End": 226.82,
      "Text": " In the Apple silicon that runs on ARM, they have a thing called LP SIP 0 that is read"
    },
    {
      "Time_Start": 226.82,
      "Time_End": 233.74,
      "Text": " from the booted device tree, and interestingly enough, because Mac OS, X and U specifically,"
    },
    {
      "Time_Start": 233.78,
      "Time_End": 238.98000000000002,
      "Text": " the kernel is kind of like half open source or like 90% open source, you can find all"
    },
    {
      "Time_Start": 238.98000000000002,
      "Time_End": 245.10000000000002,
      "Text": " the flags in the source code under CSR.h, and I name here just a few, it's not a complete"
    },
    {
      "Time_Start": 245.10000000000002,
      "Time_End": 251.18,
      "Text": " list at all, but you can again kind of imagine what SIP does, so for instance it won't let"
    },
    {
      "Time_Start": 251.18,
      "Time_End": 258.18,
      "Text": " you load unrestricted, you know, just any kernel extensions, which are really drivers,"
    },
    {
      "Time_Start": 258.90000000000003,
      "Time_End": 265.02,
      "Text": " you can't write to certain file system locations, which we'll be talking about today, you can't"
    },
    {
      "Time_Start": 265.02,
      "Time_End": 271.74,
      "Text": " get task ports for a given PID, a task port is basically like open process in Windows"
    },
    {
      "Time_Start": 271.74,
      "Time_End": 278.1,
      "Text": " or P trace in Linux, you can't really debug processes for what it's worth, you can't do"
    },
    {
      "Time_Start": 278.1,
      "Time_End": 283.06,
      "Text": " kernel debugging, you can't do D trace, you can't write NVRAM variables for obvious reasons,"
    },
    {
      "Time_Start": 283.06,
      "Time_End": 289.18,
      "Text": " if you could, you can just change SIP altogether, and there are other flags here as well, but"
    },
    {
      "Time_Start": 289.18,
      "Time_End": 294.14,
      "Text": " the issue that I want to talk about is the fact that it has a certain domino effect."
    },
    {
      "Time_Start": 294.14,
      "Time_End": 300.54,
      "Text": " What I mean by that is that if you have, let's say, an NVRAM variable override, a way to"
    },
    {
      "Time_Start": 300.54,
      "Time_End": 307.62,
      "Text": " bypass the NVRAM variable write protection by SIP, you can bypass SIP, obviously you"
    },
    {
      "Time_Start": 307.62,
      "Time_End": 314.26,
      "Text": " can just override the bit flag in CSR active config, and similarly if you can load an"
    },
    {
      "Time_Start": 314.26,
      "Time_End": 320.34000000000003,
      "Text": " untrusted kernel extension, you can just write a root kit but also bypass SIP, and in fact"
    },
    {
      "Time_Start": 320.34000000000003,
      "Time_End": 327.34000000000003,
      "Text": " any part of SIP you can bypass actually topples the entire domino of SIP, so that's important"
    },
    {
      "Time_Start": 327.34000000000003,
      "Time_End": 331.58,
      "Text": " to note, generally if you were able to bypass one mitigation, you were able to bypass all"
    },
    {
      "Time_Start": 331.58,
      "Time_End": 337.82,
      "Text": " of them, in theory and also not in theory."
    },
    {
      "Time_Start": 337.82,
      "Time_End": 344.34,
      "Text": " A bit about SIP and file system restrictions, if you're a developer or malware author or"
    },
    {
      "Time_Start": 344.34,
      "Time_End": 347.94,
      "Text": " whatever it is, that's probably the first thing that you'd notice when you come across"
    },
    {
      "Time_Start": 347.94,
      "Time_End": 355.38,
      "Text": " SIP is the fact that you can't really write to certain paths in the system, because SIP"
    },
    {
      "Time_Start": 355.38,
      "Time_End": 360.62,
      "Text": " actually prevents you from doing that, again, even if you're running as root."
    },
    {
      "Time_Start": 360.66,
      "Time_End": 367.18,
      "Text": " So SIP really prevents you from modifying any files that either have a specific extended"
    },
    {
      "Time_Start": 367.18,
      "Time_End": 373.78000000000003,
      "Text": " attribute called com.apple.rootless, or are configured in some file system library sandbox"
    },
    {
      "Time_Start": 373.78000000000003,
      "Time_End": 381.62,
      "Text": " config rootless.conf, and that's like a naughty list I guess for files, basically a set of"
    },
    {
      "Time_Start": 381.62,
      "Time_End": 386.54,
      "Text": " files that can't be overwritten, but there are also allow lists for these restrictions"
    },
    {
      "Time_Start": 386.54,
      "Time_End": 391.3,
      "Text": " that override like the rootless.conf, and they're out of scope for this talk, but they're"
    },
    {
      "Time_Start": 391.3,
      "Time_End": 393.42,
      "Text": " well documented."
    },
    {
      "Time_Start": 393.42,
      "Time_End": 399.58000000000004,
      "Text": " Obviously the rootless.conf file is SIP protected by itself, otherwise, again, you'd be able"
    },
    {
      "Time_Start": 399.58000000000004,
      "Time_End": 406.5,
      "Text": " to change it and then do a bunch of stuff, and also you can't really add or delete the"
    },
    {
      "Time_Start": 406.5,
      "Time_End": 410.90000000000003,
      "Text": " com.apple.rootless extended attribute for the same reason, right, if you could add that"
    },
    {
      "Time_Start": 410.90000000000003,
      "Time_End": 415.1,
      "Text": " extended attribute you can create like an undeletable malware for instance, if you could"
    },
    {
      "Time_Start": 415.1,
      "Time_End": 419.82000000000005,
      "Text": " remove that you could bypass SIP because you could modify files that are protected"
    },
    {
      "Time_Start": 419.82000000000005,
      "Time_End": 427.42,
      "Text": " by SIP, so just keep that in mind, and generally like Apple has released a modification to"
    },
    {
      "Time_Start": 427.42,
      "Time_End": 439.62,
      "Text": " the LS command, if you do LS-LO, that's a capital O, an actual O, not a zero, then all"
    },
    {
      "Time_Start": 439.62,
      "Time_End": 444.5,
      "Text": " the files that say restricted are basically files or directories or symlinks or whatever"
    },
    {
      "Time_Start": 444.5,
      "Time_End": 452.54,
      "Text": " they are that basically can't be modified, so that's an example of a restricted file"
    },
    {
      "Time_Start": 452.54,
      "Time_End": 455.02,
      "Text": " for instance."
    },
    {
      "Time_Start": 455.02,
      "Time_End": 462.98,
      "Text": " So how, I mean, that's obvious, right, I mean we have SIP, we basically have a different"
    },
    {
      "Time_Start": 462.98,
      "Time_End": 469.94,
      "Text": " kind of layer in the system if you will, and how does the thing work and how do we enforce"
    },
    {
      "Time_Start": 469.94,
      "Time_End": 472.42,
      "Text": " things in macOS?"
    },
    {
      "Time_Start": 472.42,
      "Time_End": 477.21999999999997,
      "Text": " Some background about entitlements really, in the macOS ecosystem processes are signed,"
    },
    {
      "Time_Start": 477.21999999999997,
      "Time_End": 482.7,
      "Text": " right, and they're granted something called entitlements which are basically capabilities,"
    },
    {
      "Time_Start": 482.7,
      "Time_End": 489.74,
      "Text": " so because entitlements are part of the signature of the process you can't forge them easily"
    },
    {
      "Time_Start": 489.74,
      "Time_End": 493.98,
      "Text": " at least unless you have like a gazillion PS4s and you connect them and I don't know"
    },
    {
      "Time_Start": 493.98,
      "Time_End": 499.64,
      "Text": " find a collision or something, and you can think of entitlements of a way to make a process"
    },
    {
      "Time_Start": 499.64,
      "Time_End": 504.0,
      "Text": " stronger, right, again in terms of capabilities."
    },
    {
      "Time_Start": 504.0,
      "Time_End": 509.84,
      "Text": " And the interesting part is that Apple has private entitlements that they will only grant"
    },
    {
      "Time_Start": 509.84,
      "Time_End": 514.96,
      "Text": " to their own processes and because they sign everything they won't sign your processes"
    },
    {
      "Time_Start": 514.96,
      "Time_End": 519.64,
      "Text": " with those entitlements, these are known as private entitlements and that essentially"
    },
    {
      "Time_Start": 519.64,
      "Time_End": 525.4,
      "Text": " creates like a barrier or a capability-based security layer if you will, because if you're"
    },
    {
      "Time_Start": 525.4,
      "Time_End": 533.36,
      "Text": " able to only run, to only get certain capabilities or entitlements but not the other type of"
    },
    {
      "Time_Start": 533.36,
      "Time_End": 537.4,
      "Text": " entitlements, and Apple are the only ones who can have that entitlement and the entitlements"
    },
    {
      "Time_Start": 537.4,
      "Time_End": 543.24,
      "Text": " are being translated into capabilities by the OS, it basically means that Apple has"
    },
    {
      "Time_Start": 543.24,
      "Time_End": 549.12,
      "Text": " the keys to the kingdom, they control your box, you don't control your box as much anymore"
    },
    {
      "Time_Start": 549.12,
      "Time_End": 553.76,
      "Text": " because you can't get those capabilities, you can't get those entitlements."
    },
    {
      "Time_Start": 553.76,
      "Time_End": 558.72,
      "Text": " And that's something very interesting, especially for us, again, Microsoft Defender, because"
    },
    {
      "Time_Start": 558.72,
      "Time_End": 565.04,
      "Text": " we don't have those capabilities either, right, and you can think about the implications which"
    },
    {
      "Time_Start": 565.04,
      "Time_End": 574.4,
      "Text": " we will be talking about later, for instance, you know, because we can't, let's say, modify"
    },
    {
      "Time_Start": 574.4,
      "Time_End": 579.24,
      "Text": " the com.apple.rootless extender attribute, if there is a file that is naughty and have"
    },
    {
      "Time_Start": 579.24,
      "Time_End": 585.2,
      "Text": " that extender attribute, we're kind of screwed because we can't really delete that file,"
    },
    {
      "Time_Start": 585.2,
      "Time_End": 587.8,
      "Text": " that's just an example."
    },
    {
      "Time_Start": 587.8,
      "Time_End": 592.44,
      "Text": " And there are two very interesting entitlements for SIP file system restrictions, there are"
    },
    {
      "Time_Start": 592.44,
      "Time_End": 598.6800000000001,
      "Text": " actually more, like SIP is very rich, as you can see, but there are the two very interesting"
    },
    {
      "Time_Start": 598.6800000000001,
      "Time_End": 603.6800000000001,
      "Text": " entitlements that I want to talk about today, which are com.apple.rootless install and that"
    },
    {
      "Time_Start": 603.6800000000001,
      "Time_End": 608.4000000000001,
      "Text": " basically bypasses all the SIP file system checks, so if you have a process that has"
    },
    {
      "Time_Start": 608.4000000000001,
      "Time_End": 613.9200000000001,
      "Text": " that entitlement, which is a private entitlement, it can basically bypass all SIP file system"
    },
    {
      "Time_Start": 613.9200000000001,
      "Time_End": 618.0000000000001,
      "Text": " checks, which is really powerful, and then you have something even greater, which is"
    },
    {
      "Time_Start": 618.0000000000001,
      "Time_End": 623.44,
      "Text": " called com.apple.rootless install heritable, which inherits to all child processes the"
    },
    {
      "Time_Start": 623.44,
      "Time_End": 628.08,
      "Text": " com.apple.rootless install, which means that all of the child processes are going to be"
    },
    {
      "Time_Start": 628.08,
      "Time_End": 632.4000000000001,
      "Text": " able to bypass SIP file system enforcements on their own."
    },
    {
      "Time_Start": 632.56,
      "Time_End": 637.8,
      "Text": " Now, if you think about the motivation, why do these things even exist, right, like why"
    },
    {
      "Time_Start": 637.8,
      "Time_End": 643.24,
      "Text": " punching a hole through that security layer, then you have to think about the name, com.apple.rootless"
    },
    {
      "Time_Start": 643.24,
      "Time_End": 648.92,
      "Text": " install, these things are used for installations and updates, for instance, when Apple wants"
    },
    {
      "Time_Start": 648.92,
      "Time_End": 656.1999999999999,
      "Text": " to do an OS update, they basically have to write to certain files, then those files might"
    },
    {
      "Time_Start": 656.1999999999999,
      "Time_End": 662.04,
      "Text": " be protected, and that's the way they do it, they have let's say an updater, that updater"
    },
    {
      "Time_Start": 662.12,
      "Time_End": 667.8,
      "Text": " has those capabilities, and then it's able to do whatever, overwrite arbitrary files"
    },
    {
      "Time_Start": 667.8,
      "Time_End": 674.0799999999999,
      "Text": " and so on, so that's the motivation that Apple has to even having those entitlements, if"
    },
    {
      "Time_Start": 674.0799999999999,
      "Time_End": 676.9599999999999,
      "Text": " that makes sense."
    },
    {
      "Time_Start": 676.9599999999999,
      "Time_End": 683.7199999999999,
      "Text": " So this was all just background. Now, while performing routine malware hunting, we started"
    },
    {
      "Time_Start": 683.7199999999999,
      "Time_End": 690.7199999999999,
      "Text": " noticing a process named drop SIP, and the name itself is suggestive, as you can think,"
    },
    {
      "Time_Start": 691.0400000000001,
      "Time_End": 695.08,
      "Text": " and that seems to be prevalent on many devices, and we were like, oh, cool, we found some"
    },
    {
      "Time_Start": 695.08,
      "Time_End": 701.28,
      "Text": " malware and probably some zero day in the wild, we were very excited, and a closer inspection"
    },
    {
      "Time_Start": 701.28,
      "Time_End": 706.44,
      "Text": " revealed it's an Apple signed binary that runs under the system migration private framework"
    },
    {
      "Time_Start": 706.44,
      "Time_End": 712.6,
      "Text": " directory, and actually drops capabilities that bypass SIP file system checks with an"
    },
    {
      "Time_Start": 712.6,
      "Time_End": 717.96,
      "Text": " API called CS ops, that's a private API that I will be discussing in the next slide, and"
    },
    {
      "Time_Start": 717.96,
      "Time_End": 723.84,
      "Text": " mentally we think that it should have been called drop SIP, but I mean, that's what it"
    },
    {
      "Time_Start": 723.84,
      "Time_End": 730.0400000000001,
      "Text": " is, and it's not malware. That's the entire reversing, that's the entire file actually,"
    },
    {
      "Time_Start": 730.0400000000001,
      "Time_End": 736.2,
      "Text": " so reversing it is not even like a thing. As you can see here, basically what it does,"
    },
    {
      "Time_Start": 736.2,
      "Time_End": 742.0,
      "Text": " that's the main function for all means and purposes, what it does is really call CS ops"
    },
    {
      "Time_Start": 742.16,
      "Time_End": 749.16,
      "Text": " with 12, 12 is CS ops clear installer, which I took the liberty of pasting like the screenshot"
    },
    {
      "Time_Start": 752.68,
      "Time_End": 758.84,
      "Text": " from the X and U source code, which basically removes, as you can see, like this is a not,"
    },
    {
      "Time_Start": 758.84,
      "Time_End": 764.68,
      "Text": " the tilde is a not flag, binary not flag, that removes the CS installer and other stuff"
    },
    {
      "Time_Start": 764.68,
      "Time_End": 771.68,
      "Text": " as well. CS installer is the com Apple rootless install, and CS exec inherits SIP is the rootless"
    },
    {
      "Time_Start": 771.8800000000001,
      "Time_End": 777.6,
      "Text": " install heritable entitlement, by the way, so basically what it does is to remove the"
    },
    {
      "Time_Start": 777.6,
      "Time_End": 782.8000000000001,
      "Text": " installation capabilities or SIP bypassing capabilities of a process, and if it's successful"
    },
    {
      "Time_Start": 782.8000000000001,
      "Time_End": 789.2800000000001,
      "Text": " in doing so, it will basically run exec VE on the command line and arguments that it"
    },
    {
      "Time_Start": 789.2800000000001,
      "Time_End": 796.2800000000001,
      "Text": " got, and that's basically some mean that they have to run a file without having those SIP"
    },
    {
      "Time_Start": 797.12,
      "Time_End": 804.12,
      "Text": " bypassing capabilities, so that's just a motivation, and we were kind of like, we were kind of"
    },
    {
      "Time_Start": 804.48,
      "Time_End": 811.3199999999999,
      "Text": " convinced that drop SIP is legitimate, it's not malware, it's owned by Apple, and basically"
    },
    {
      "Time_Start": 811.3199999999999,
      "Time_End": 815.9599999999999,
      "Text": " what it does is to drop those SIP bypassing capabilities, so this is kind of where our"
    },
    {
      "Time_Start": 815.9599999999999,
      "Time_End": 822.9599999999999,
      "Text": " journey begin. We noticed that the drop SIP process is a child process of system migration"
    },
    {
      "Time_Start": 823.96,
      "Time_End": 829.32,
      "Text": " D, which is a demon, that's why it has a D in the end of its name, and it has the com"
    },
    {
      "Time_Start": 829.32,
      "Time_End": 835.44,
      "Text": " Apple rootless install heritable entitlement, which if you remember from three slides ago,"
    },
    {
      "Time_Start": 835.44,
      "Time_End": 840.84,
      "Text": " basically inherits SIP bypassing capabilities to all its child processes, and that explains"
    },
    {
      "Time_Start": 840.84,
      "Time_End": 845.24,
      "Text": " why drop SIP assumed that it has SIP bypassing capabilities to begin with. I hope that makes"
    },
    {
      "Time_Start": 845.24,
      "Time_End": 851.5600000000001,
      "Text": " sense. And after concluding that drop SIP is legitimate, we basically decided to take"
    },
    {
      "Time_Start": 851.5600000000001,
      "Time_End": 855.8000000000001,
      "Text": " a closer look at what other child processes system migration D has, because it's a very"
    },
    {
      "Time_Start": 855.8000000000001,
      "Time_End": 861.7600000000001,
      "Text": " powerful process, it's able to give all its child processes SIP bypassing capabilities,"
    },
    {
      "Time_Start": 861.7600000000001,
      "Time_End": 868.7600000000001,
      "Text": " just for fun. It depends on your definition of fun. And then this is a screenshot just"
    },
    {
      "Time_Start": 869.5600000000001,
      "Time_End": 876.5600000000001,
      "Text": " showing the entitlements of this system migration D process. You can use code sign, that's the"
    },
    {
      "Time_Start": 877.36,
      "Time_End": 882.6800000000001,
      "Text": " binary that Apple gives you to basically look at the signature, and that includes the entitlements,"
    },
    {
      "Time_Start": 882.6800000000001,
      "Time_End": 888.24,
      "Text": " and as you can see, the set of entitlements, there are three entitlements that start with"
    },
    {
      "Time_Start": 888.24,
      "Time_End": 892.7600000000001,
      "Text": " com Apple rootless, and the second one is com Apple rootless install heritable. I won't"
    },
    {
      "Time_Start": 892.7600000000001,
      "Time_End": 898.5200000000001,
      "Text": " talk about the other two, but they're really interesting if you're into that kind of stuff."
    },
    {
      "Time_Start": 898.5200000000001,
      "Time_End": 903.8000000000001,
      "Text": " Now this is again not a talk about Microsoft and EDR and everything, but any EDR that it's"
    },
    {
      "Time_Start": 903.8000000000001,
      "Time_End": 909.5600000000001,
      "Text": " worth its salt, you can basically ask questions, like, hey, in my organization, give me all"
    },
    {
      "Time_Start": 909.5600000000001,
      "Time_End": 914.36,
      "Text": " the processes that have so and so, right? All the processes that have command line blah"
    },
    {
      "Time_Start": 914.36,
      "Time_End": 920.9200000000001,
      "Text": " and so on. So what we started doing is that, okay, we're Microsoft, we have an EDR, we"
    },
    {
      "Time_Start": 920.9200000000001,
      "Time_End": 926.48,
      "Text": " have tons of data, even from macOS, and then we were like, okay, let's start hunting with"
    },
    {
      "Time_Start": 926.48,
      "Time_End": 931.32,
      "Text": " EDR data, and that's really good, because you have a lot of different environments,"
    },
    {
      "Time_Start": 931.32,
      "Time_End": 936.9200000000001,
      "Text": " a lot of different customers and whatnot, and also internally in Microsoft, we do have"
    },
    {
      "Time_Start": 936.9200000000001,
      "Time_End": 942.36,
      "Text": " folks that run macOS as well, and they also report all the command lines and whatnot internally,"
    },
    {
      "Time_Start": 942.36,
      "Time_End": 948.48,
      "Text": " right? So we were like, okay, give us, dear EDR, please give us all the child processes"
    },
    {
      "Time_Start": 948.48,
      "Time_End": 953.9200000000001,
      "Text": " of system migration D, and we immediately noticed two interesting child processes, which"
    },
    {
      "Time_Start": 953.9200000000001,
      "Time_End": 959.7600000000001,
      "Text": " are bash and pearl, right? These are just command lines, again, these are child processes"
    },
    {
      "Time_Start": 959.76,
      "Time_End": 965.6,
      "Text": " of system migration D, so they're very powerful in terms of C bypassing capabilities. Why"
    },
    {
      "Time_Start": 965.6,
      "Time_End": 972.08,
      "Text": " are those child processes interesting? Well, bash and pearl are interesting, because they're"
    },
    {
      "Time_Start": 972.08,
      "Time_End": 977.76,
      "Text": " interpreters, and interpreters are affected by many things, especially environment variable"
    },
    {
      "Time_Start": 977.76,
      "Time_End": 983.48,
      "Text": " poisonings. Now, in macOS, I won't talk too much about the security mechanisms in macOS,"
    },
    {
      "Time_Start": 983.48,
      "Time_End": 988.88,
      "Text": " but injection in macOS is a real drag. It's not like Windows or Linux, when you can just"
    },
    {
      "Time_Start": 989.0,
      "Time_End": 995.08,
      "Text": " run open process or P trace, and especially bash and pearl are still baked into macOS,"
    },
    {
      "Time_Start": 995.08,
      "Time_End": 1001.36,
      "Text": " and therefore Apple signed and actually are protected by SIP, so you can't get a task"
    },
    {
      "Time_Start": 1001.36,
      "Time_End": 1006.96,
      "Text": " port to those processes, and you can't inject into them, and that's why we needed a different"
    },
    {
      "Time_Start": 1006.96,
      "Time_End": 1012.04,
      "Text": " method of injecting to those processes, and because they're interpreters, they're more"
    },
    {
      "Time_Start": 1012.04,
      "Time_End": 1017.04,
      "Text": " convenient than others. Now, remember, these are processes that are child processes of"
    },
    {
      "Time_Start": 1017.08,
      "Time_End": 1022.44,
      "Text": " system migration D, so the OS does not enforce SIP file system policy checks on them, which"
    },
    {
      "Time_Start": 1022.44,
      "Time_End": 1029.44,
      "Text": " is really helpful. And then I want to talk about environment variables, so we found two"
    },
    {
      "Time_Start": 1029.8000000000002,
      "Time_End": 1036.48,
      "Text": " noteworthy environment variables. These are just man pages of bash and pearl. For bash,"
    },
    {
      "Time_Start": 1036.48,
      "Time_End": 1041.88,
      "Text": " you have environment variable bash underscore env, and apparently, if you have that environment"
    },
    {
      "Time_Start": 1041.88,
      "Time_End": 1046.0800000000002,
      "Text": " variable, you can just, like, write arbitrary commands there, and, like, bash will just"
    },
    {
      "Time_Start": 1046.12,
      "Time_End": 1053.12,
      "Text": " run them, which is good and bad. For pearl, it's not really complicated, but you have"
    },
    {
      "Time_Start": 1053.28,
      "Time_End": 1060.04,
      "Text": " pearl 5 opt for options, and you can also make pearl 5 opt by modifying it. You can"
    },
    {
      "Time_Start": 1060.04,
      "Time_End": 1067.04,
      "Text": " make it run arbitrary pearl commands, which is really great and bad at the same time."
    },
    {
      "Time_Start": 1067.9199999999998,
      "Time_End": 1073.6799999999998,
      "Text": " Now this is, like, I'm doing a sidetrack here. This is a general rant about environment variables."
    },
    {
      "Time_Start": 1073.68,
      "Time_End": 1080.68,
      "Text": " Shellshock happened in 2014, if you guys remember how bad it was. Basically, it was a vulnerability"
    },
    {
      "Time_Start": 1082.52,
      "Time_End": 1088.88,
      "Text": " in bash that was related to the parsing of environment variables and how they're eventually"
    },
    {
      "Time_Start": 1088.88,
      "Time_End": 1094.2,
      "Text": " executing, but it's like we haven't learned a lot about the dangers of environment variables,"
    },
    {
      "Time_Start": 1094.2,
      "Time_End": 1100.16,
      "Text": " and it just took, like, the last couple of years, even this year, like, in different"
    },
    {
      "Time_Start": 1100.5600000000002,
      "Time_End": 1104.8000000000002,
      "Text": " platforms, really. They're not all macOS. Like, if you look at it, like, the first one"
    },
    {
      "Time_Start": 1104.8000000000002,
      "Time_End": 1111.8000000000002,
      "Text": " from 2023 is in Linux, right? In a pseudo binary, in a suite binary, no less, which"
    },
    {
      "Time_Start": 1112.3200000000002,
      "Time_End": 1119.0,
      "Text": " took years to really make secure, and apparently not enough, and you have other cases here"
    },
    {
      "Time_Start": 1119.0,
      "Time_End": 1126.0,
      "Text": " as well, including Linux, including macOS, and other things as well, and that doesn't"
    },
    {
      "Time_Start": 1126.92,
      "Time_End": 1131.92,
      "Text": " even start, like, scratching the surface, because you have other issues that do not"
    },
    {
      "Time_Start": 1131.92,
      "Time_End": 1137.92,
      "Text": " normally get CVEs, like UAC bypasses on Windows, and you can override, like, the window directory,"
    },
    {
      "Time_Start": 1137.92,
      "Time_End": 1143.92,
      "Text": " or cloud credentials that are in environment variables and API keys, like, literally everywhere."
    },
    {
      "Time_Start": 1143.92,
      "Time_End": 1148.92,
      "Text": " So environment variables are very dangerous, and should be, you know, should be taken care"
    },
    {
      "Time_Start": 1148.92,
      "Time_End": 1153.92,
      "Text": " of. And this is where I turn to, like, a lot of"
    },
    {
      "Time_Start": 1153.92,
      "Time_End": 1160.92,
      "Text": " people, and this is where I turn over to Mike to talk about our exploitation strategy."
    },
    {
      "Time_Start": 1161.64,
      "Time_End": 1166.1200000000001,
      "Text": " That man with the flask is a goddamn hero. This is a fantastic tradition. I just wanted"
    },
    {
      "Time_Start": 1166.1200000000001,
      "Time_End": 1172.28,
      "Text": " to say that. So thank you for that. Yeah, so like J.B. was talking about, the environment"
    },
    {
      "Time_Start": 1172.28,
      "Time_End": 1175.88,
      "Text": " variables were the main thing that we went after, environment variable poisoning. So"
    },
    {
      "Time_Start": 1175.88,
      "Time_End": 1182.4,
      "Text": " we went about trying to validate this as a vulnerability that can be exploited by setting"
    },
    {
      "Time_Start": 1182.44,
      "Time_End": 1188.0400000000002,
      "Text": " bash EMV and Perl 5 opt, and from there we put the payload in the appropriate folder,"
    },
    {
      "Time_Start": 1188.0400000000002,
      "Time_End": 1192.48,
      "Text": " and it was just simply a matter of getting system migration D to run one of these two"
    },
    {
      "Time_Start": 1192.48,
      "Time_End": 1196.88,
      "Text": " interpreters, which is a lot easier said than done. It felt like every single combination"
    },
    {
      "Time_Start": 1196.88,
      "Time_End": 1201.8400000000001,
      "Text": " I tried didn't result in bash or Perl being run at the end, which was frustrating, but"
    },
    {
      "Time_Start": 1201.8400000000001,
      "Time_End": 1206.64,
      "Text": " eventually I was able to find the right combination of just creating, like, a single dummy user,"
    },
    {
      "Time_Start": 1206.64,
      "Time_End": 1210.96,
      "Text": " and from there I was able to get Perl to run, and that was, like, 4 a.m. I was talking to"
    },
    {
      "Time_Start": 1210.96,
      "Time_End": 1219.32,
      "Text": " Noorag, who's in India, and he came up with Perl 5 opt exploit, and, yeah, when I finally"
    },
    {
      "Time_Start": 1219.32,
      "Time_End": 1224.0,
      "Text": " got to execute and validate that we got SIP bypass, it was an amazing feeling, and I was"
    },
    {
      "Time_Start": 1224.0,
      "Time_End": 1230.48,
      "Text": " also, like, quite sleep deprived. So, yeah, while we did prove that this is something"
    },
    {
      "Time_Start": 1230.48,
      "Time_End": 1236.56,
      "Text": " that can be exploited, it wasn't perfect, because we required, like, a physical USB"
    },
    {
      "Time_Start": 1236.56,
      "Time_End": 1242.8,
      "Text": " drive to be attached to the device. Migration, as you may or may not know, will log off all"
    },
    {
      "Time_Start": 1242.8,
      "Time_End": 1248.04,
      "Text": " users, requires manual clicking through all the windows, and then, of course, it reboots"
    },
    {
      "Time_Start": 1248.04,
      "Time_End": 1257.44,
      "Text": " at the end, so that's not ideal for a remote attacker. So this was a demo that we sent"
    },
    {
      "Time_Start": 1257.44,
      "Time_End": 1261.52,
      "Text": " to Apple. I'm going to spare you all. I'm not going to make you watch a 15-minute migration"
    },
    {
      "Time_Start": 1261.52,
      "Time_End": 1267.12,
      "Text": " demo of me nammering on about the migration process, but I just want to show a snapshot"
    },
    {
      "Time_Start": 1267.12,
      "Time_End": 1274.8799999999999,
      "Text": " here where at the end we're writing over the Apple kex exclude file, so if you don't know,"
    },
    {
      "Time_Start": 1274.8799999999999,
      "Time_End": 1279.16,
      "Text": " Apple kicked everyone out of the kernel, but there were certain kernel modules that Apple"
    },
    {
      "Time_Start": 1279.16,
      "Time_End": 1286.8,
      "Text": " still allowed to be loaded and executed, and all that's kept in a SIP-protected file called"
    },
    {
      "Time_Start": 1286.8,
      "Time_End": 1292.76,
      "Text": " Apple kex exclude list, so in the demo, I overwrote that file with just the word migraine"
    },
    {
      "Time_Start": 1292.76,
      "Time_End": 1301.0,
      "Text": " as a proof of concept to show that we can control these SIP-protected areas. Okay, so"
    },
    {
      "Time_Start": 1301.0,
      "Time_End": 1307.24,
      "Text": " like I said, the initial demo and everything was pretty ugly, so the main challenges here"
    },
    {
      "Time_Start": 1307.24,
      "Time_End": 1312.2,
      "Text": " were to obviously get rid of all log off, get rid of reboot, we wanted to automate clicking,"
    },
    {
      "Time_Start": 1312.2,
      "Time_End": 1316.64,
      "Text": " so there's no user interaction needed, and obviously we don't want to have a USB of physical"
    },
    {
      "Time_Start": 1316.64,
      "Time_End": 1321.4,
      "Text": " access for this exploit to run, so we began reversing and trying to figure out how we"
    },
    {
      "Time_Start": 1321.4,
      "Time_End": 1327.76,
      "Text": " can make that happen, so there's a top-down approach and a bottom-up. Top-down was a very"
    },
    {
      "Time_Start": 1327.76,
      "Time_End": 1332.52,
      "Text": " disgusting approach where we tried patching the system binaries themselves to get the"
    },
    {
      "Time_Start": 1332.52,
      "Time_End": 1336.88,
      "Text": " behaviour we want. Obviously, naturally, I took the disgusting approach, top-down. Bottom-up"
    },
    {
      "Time_Start": 1336.92,
      "Time_End": 1342.5600000000002,
      "Text": " was the more cleaner approach where we took the private framework that the migration daemon"
    },
    {
      "Time_Start": 1342.5600000000002,
      "Time_End": 1348.8400000000001,
      "Text": " uses and we tried to bend it to our will and call the functionality we need within that"
    },
    {
      "Time_Start": 1348.8400000000001,
      "Time_End": 1354.2,
      "Text": " private framework directly with our own binary. Spoiler alert, neither of these approaches"
    },
    {
      "Time_Start": 1354.2,
      "Time_End": 1362.0800000000002,
      "Text": " worked and we will get into why that is. Okay, so migration, like with most things in Mac,"
    },
    {
      "Time_Start": 1362.08,
      "Time_End": 1368.08,
      "Text": " is not a simple system. It's complex, and it's multiple different processes that communicate"
    },
    {
      "Time_Start": 1368.08,
      "Time_End": 1375.56,
      "Text": " through XPC and IPC to make this happen. We were trying to find some kind of documentation"
    },
    {
      "Time_Start": 1375.56,
      "Time_End": 1380.0,
      "Text": " on migration and how it all works, and, of course, Apple being Apple didn't offer us"
    },
    {
      "Time_Start": 1380.0,
      "Time_End": 1384.3999999999999,
      "Text": " any of that documentation, and we couldn't find anyone who went out doing this and reversing"
    },
    {
      "Time_Start": 1384.3999999999999,
      "Time_End": 1389.32,
      "Text": " it, so as far as we could tell, we're the first ones to do it. So let's get into the"
    },
    {
      "Time_Start": 1389.32,
      "Time_End": 1396.36,
      "Text": " high level of migration. So these blue squares, these are the key processes involved with"
    },
    {
      "Time_Start": 1396.36,
      "Time_End": 1402.62,
      "Text": " migration. You can kind of think of like migration as like a chain, and each link in the chain"
    },
    {
      "Time_Start": 1402.62,
      "Time_End": 1407.96,
      "Text": " calls into the next, and the previous link validates that the previous caller has the"
    },
    {
      "Time_Start": 1407.96,
      "Time_End": 1413.12,
      "Text": " appropriate private entitlement, so an example being migration assistant will call into MV"
    },
    {
      "Time_Start": 1413.12,
      "Time_End": 1416.8,
      "Text": " system administration, but then MV system administration before it goes any further"
    },
    {
      "Time_Start": 1416.8,
      "Time_End": 1423.0,
      "Text": " will validate that it has a com.apple.private.MV system administration entitlement, and system"
    },
    {
      "Time_Start": 1423.0,
      "Time_End": 1426.04,
      "Text": " administration calls in a set-up assistant, and set-up assistant calls into the daemon,"
    },
    {
      "Time_Start": 1426.04,
      "Time_End": 1432.44,
      "Text": " all of which validate the previous caller. Okay, so migration assistant, this is the"
    },
    {
      "Time_Start": 1432.44,
      "Time_End": 1437.3999999999999,
      "Text": " first link in the proverbial chain, and this is what you all are used to using if you've"
    },
    {
      "Time_Start": 1437.3999999999999,
      "Time_End": 1442.48,
      "Text": " ever done migration. It's essentially the set-up wizard for migration where you can"
    },
    {
      "Time_Start": 1442.48,
      "Time_End": 1447.44,
      "Text": " port PC or Mac devices, you can do it over hardware, you can do it over network, all"
    },
    {
      "Time_Start": 1447.44,
      "Time_End": 1451.56,
      "Text": " different options. So with the top-down approach, I wanted to patch this out because the most"
    },
    {
      "Time_Start": 1451.56,
      "Time_End": 1456.48,
      "Text": " annoying thing we had to deal with was the log-out issue. So if you're interested, the"
    },
    {
      "Time_Start": 1456.48,
      "Time_End": 1461.08,
      "Text": " function that migration assistant uses is something called saclo start log-out with"
    },
    {
      "Time_Start": 1461.08,
      "Time_End": 1466.28,
      "Text": " options. Patching that out, unfortunately, didn't work for multiple reasons, and I'll"
    },
    {
      "Time_Start": 1466.28,
      "Time_End": 1473.08,
      "Text": " show you why. Oh, yeah, so this was a little funny thing that JBO noticed. So when you"
    },
    {
      "Time_Start": 1473.08,
      "Time_End": 1479.78,
      "Text": " go from PC to a MacBook, Apple was kind enough to represent the PC as having a blue screen"
    },
    {
      "Time_Start": 1479.78,
      "Time_End": 1488.96,
      "Text": " of death. So well played, Apple. Good job. Okay, so the next link. So migration assistant"
    },
    {
      "Time_Start": 1488.96,
      "Time_End": 1494.6,
      "Text": " will then talk with MV system administration, and like I mentioned, it'll make sure the"
    },
    {
      "Time_Start": 1494.7600000000002,
      "Time_End": 1501.64,
      "Text": " XPC caller has the appropriate entitlement, the MV system administration entitlement."
    },
    {
      "Time_Start": 1501.64,
      "Time_End": 1505.96,
      "Text": " I obviously tried calling MV system administration directly, thinking, oh, we can get around"
    },
    {
      "Time_Start": 1505.96,
      "Time_End": 1512.7600000000002,
      "Text": " the log-out by just making our own binary, and at the bottom here, as you can see, this"
    },
    {
      "Time_Start": 1512.7600000000002,
      "Time_End": 1520.8400000000001,
      "Text": " is the console output of it telling me to fuck off. You might be wondering how does"
    },
    {
      "Time_Start": 1521.1599999999999,
      "Time_End": 1527.36,
      "Text": " migration work? How is a user able to interact with a GUI, even though all the users are"
    },
    {
      "Time_Start": 1527.36,
      "Time_End": 1532.48,
      "Text": " logged out? And the answer to that is there's a hidden user called MV setup user. MV system"
    },
    {
      "Time_Start": 1532.48,
      "Time_End": 1539.3,
      "Text": " administration will essentially use this user for the entire process, so you're not actually"
    },
    {
      "Time_Start": 1539.3,
      "Time_End": 1543.8,
      "Text": " running as your user, you're running as this hidden user. There's no password, so we tried"
    },
    {
      "Time_Start": 1543.8,
      "Time_End": 1548.76,
      "Text": " logging into it and thought we could get away with doing some fun trickery, but those darn"
    },
    {
      "Time_Start": 1548.76,
      "Time_End": 1556.96,
      "Text": " entitlements got us again. Okay, so setup assistant. So the MV system administration"
    },
    {
      "Time_Start": 1556.96,
      "Time_End": 1562.68,
      "Text": " process will eventually call into setup assistant. Setup assistant is like a generic utility"
    },
    {
      "Time_Start": 1562.68,
      "Time_End": 1568.52,
      "Text": " used by a lot of different things in the system. Some examples would be like system upgrade"
    },
    {
      "Time_Start": 1568.52,
      "Time_End": 1575.04,
      "Text": " or accessibility wizard or, of course, migration and a whole lot of other things, and MV system"
    },
    {
      "Time_Start": 1575.04,
      "Time_End": 1580.08,
      "Text": " essentially will talk to setup assistant and it'll put it into the context of migration"
    },
    {
      "Time_Start": 1580.08,
      "Time_End": 1586.44,
      "Text": " and eventually it'll transfer migration assistant into setup assistant context. So that's basically"
    },
    {
      "Time_Start": 1586.44,
      "Time_End": 1592.08,
      "Text": " what's being called after a certain point instead of migration assistant. Of course,"
    },
    {
      "Time_Start": 1592.08,
      "Time_End": 1597.2,
      "Text": " when it does that, it's validating that the entitlement is approved before it continues"
    },
    {
      "Time_Start": 1597.2,
      "Time_End": 1602.6,
      "Text": " to do that. And then from there, setup assistant will talk with the main honcho, which is migration"
    },
    {
      "Time_Start": 1603.0000000000002,
      "Time_End": 1607.8400000000001,
      "Text": " assistant, or daemon, the migration daemon. And it does this with XPC and, of course,"
    },
    {
      "Time_Start": 1607.8400000000001,
      "Time_End": 1612.2400000000002,
      "Text": " the system migration D will validate that the caller has the right entitlement. In this"
    },
    {
      "Time_Start": 1612.2400000000002,
      "Time_End": 1618.2400000000002,
      "Text": " case it would be private.systemmigration.daemon client. By the way, setup assistant is like"
    },
    {
      "Time_Start": 1618.2400000000002,
      "Time_End": 1622.16,
      "Text": " filled with entitlements, so if you're looking for an interesting target, I recommend going"
    },
    {
      "Time_Start": 1622.16,
      "Time_End": 1626.6000000000001,
      "Text": " setup assistant, and if not setup assistant, in their folder there's other like just utility"
    },
    {
      "Time_Start": 1626.6000000000001,
      "Time_End": 1634.0000000000002,
      "Text": " binaries that are ridiculously entitled. So just some homework to do. All right, system"
    },
    {
      "Time_Start": 1634.0000000000002,
      "Time_End": 1641.6000000000001,
      "Text": " migration D. So this was the bottom-up approach that Anurag took. When starting to reverse"
    },
    {
      "Time_Start": 1641.6000000000001,
      "Time_End": 1646.7600000000002,
      "Text": " a system binary, we recommend you start with the XPC handlers for like privilege escalation"
    },
    {
      "Time_Start": 1646.7600000000002,
      "Time_End": 1652.96,
      "Text": " or max services. You can usually find those by opening up the associated plist shown here."
    },
    {
      "Time_Start": 1652.96,
      "Time_End": 1657.04,
      "Text": " This is the migration daemon plist, and there are six max services that we began looking"
    },
    {
      "Time_Start": 1657.04,
      "Time_End": 1662.44,
      "Text": " at. So as we were looking at the migration daemon, it was apparent that this private"
    },
    {
      "Time_Start": 1662.44,
      "Time_End": 1670.16,
      "Text": " framework was being utilized pretty much everywhere, and two key components for this were the object,"
    },
    {
      "Time_Start": 1670.16,
      "Time_End": 1673.68,
      "Text": " the migration object that it uses, along with the start listener for connections function,"
    },
    {
      "Time_Start": 1673.68,
      "Time_End": 1682.76,
      "Text": " which is how it handles like a callback for valid XPC requests. Okay, so when it does"
    },
    {
      "Time_Start": 1682.76,
      "Time_End": 1688.92,
      "Text": " receive a valid migration request, system migration D will create a file in the location"
    },
    {
      "Time_Start": 1688.92,
      "Time_End": 1698.16,
      "Text": " library slash system migration slash queue, and in there is all the associated metadata"
    },
    {
      "Time_Start": 1698.16,
      "Time_End": 1703.28,
      "Text": " for the migration request itself, and it stores them at that location. So we thought, okay,"
    },
    {
      "Time_Start": 1703.8799999999999,
      "Time_End": 1709.36,
      "Text": " well, we will just create a file there, and we can bypass log out by just putting a valid"
    },
    {
      "Time_Start": 1709.36,
      "Time_End": 1713.36,
      "Text": " migration file there. Of course, it's protected, so we couldn't do that. Only system migration"
    },
    {
      "Time_Start": 1713.36,
      "Time_End": 1721.3999999999999,
      "Text": " D can modify, create, or delete files at that location. So anyone who has done migration"
    },
    {
      "Time_Start": 1721.3999999999999,
      "Time_End": 1725.8,
      "Text": " can tell you that there is at least one reboot, if not multiple reboots, and the way the system"
    },
    {
      "Time_Start": 1725.8,
      "Time_End": 1731.0,
      "Text": " can keep track of what the current migration request is, is it takes one of the specified"
    },
    {
      "Time_Start": 1731.0,
      "Time_End": 1738.2,
      "Text": " files and it renames it to in-flight at the same location that's protected. All right,"
    },
    {
      "Time_Start": 1738.2,
      "Time_End": 1742.16,
      "Text": " so why did our approaches fail? Well, like I mentioned several times, the entitlements"
    },
    {
      "Time_Start": 1742.16,
      "Time_End": 1747.12,
      "Text": " were the big thing, so any time we tried talking directly with MVSystem Administration or the"
    },
    {
      "Time_Start": 1747.12,
      "Time_End": 1751.48,
      "Text": " daemon itself, we couldn't get very far because they validate that the caller has the appropriate"
    },
    {
      "Time_Start": 1751.48,
      "Time_End": 1758.02,
      "Text": " private entitlement. Also, on newer Apple Silicon devices, while there are workarounds"
    },
    {
      "Time_Start": 1758.02,
      "Time_End": 1764.34,
      "Text": " for this, if you try to patch a system binary, the kernel will prevent it from running,"
    },
    {
      "Time_Start": 1764.34,
      "Time_End": 1769.34,
      "Text": " which is the code for that shown right here. So, yes, we basically couldn't directly access"
    },
    {
      "Time_Start": 1769.34,
      "Time_End": 1780.58,
      "Text": " system migration D, and, yes, so even though we were dejected and our two approaches failed,"
    },
    {
      "Time_Start": 1780.58,
      "Time_End": 1785.3,
      "Text": " we started thinking maybe there is a way that we can cut out migration assistant and just"
    },
    {
      "Time_Start": 1785.3,
      "Time_End": 1791.1,
      "Text": " talk with setup assistant directly, and we had an in-house tool that we created that"
    },
    {
      "Time_Start": 1791.1,
      "Time_End": 1795.1399999999999,
      "Text": " will log all events in the system, even through multiple reboots, and store them as a buffer"
    },
    {
      "Time_Start": 1795.1399999999999,
      "Time_End": 1800.06,
      "Text": " of files, if you will, and we noticed that when setup assistant was executed, it passed"
    },
    {
      "Time_Start": 1800.06,
      "Time_End": 1806.3,
      "Text": " a flag called dash minibuddy yes, so we thought, well, maybe there's other flags that we can"
    },
    {
      "Time_Start": 1806.3,
      "Time_End": 1812.1,
      "Text": " pass setup assistant directly to create the migration behaviour so we can prevent the"
    },
    {
      "Time_Start": 1812.1000000000001,
      "Time_End": 1818.8200000000002,
      "Text": " logout to begin with. As we looked into reversing the setup assistant, we did realise there"
    },
    {
      "Time_Start": 1818.8200000000002,
      "Time_End": 1824.0600000000002,
      "Text": " were other parameters being used, and we will show that right here. This is the main handler"
    },
    {
      "Time_Start": 1824.0600000000002,
      "Time_End": 1829.46,
      "Text": " for minibuddy yes. If you call setup assistant directly, it's a generic accessibility wizard"
    },
    {
      "Time_Start": 1829.46,
      "Time_End": 1835.5400000000002,
      "Text": " that comes up. While none of these parameters gave us migration, it was encouraging because"
    },
    {
      "Time_Start": 1835.5400000000002,
      "Time_End": 1840.3000000000002,
      "Text": " some of them would have completely different behaviours and different windows, so we figured"
    },
    {
      "Time_Start": 1840.94,
      "Time_End": 1846.8999999999999,
      "Text": " there might be something to this passing setup assistant parameter to get this to run migration."
    },
    {
      "Time_Start": 1846.8999999999999,
      "Time_End": 1850.1599999999999,
      "Text": " While the main function didn't have what we wanted, we looked further and found a function"
    },
    {
      "Time_Start": 1850.1599999999999,
      "Time_End": 1855.86,
      "Text": " called use debug parameters, and in there is a parameter it handles called dash MB debug,"
    },
    {
      "Time_Start": 1855.86,
      "Time_End": 1860.74,
      "Text": " and when we used that, we were super excited to see that the old familiar migration windows"
    },
    {
      "Time_Start": 1860.74,
      "Time_End": 1866.22,
      "Text": " were up and, yes, we were excited because that means no logout needed. If you bypass"
    },
    {
      "Time_Start": 1866.26,
      "Time_End": 1873.26,
      "Text": " migration assistant, you bypass logging out. So, yes, while it was great to see migration,"
    },
    {
      "Time_Start": 1873.82,
      "Time_End": 1877.58,
      "Text": " it still was a bit of a problem with automating because there were so many frivolous windows"
    },
    {
      "Time_Start": 1877.58,
      "Time_End": 1881.54,
      "Text": " and extra things that made it difficult to use Apple script to click through, so we found"
    },
    {
      "Time_Start": 1881.54,
      "Time_End": 1886.3600000000001,
      "Text": " that if you use MB debug in conjunction with resume buddy yes, it has a lean migration"
    },
    {
      "Time_Start": 1886.3600000000001,
      "Time_End": 1892.5,
      "Text": " process that we were able to pretty trivially automate with Apple script. For people who"
    },
    {
      "Time_Start": 1892.5,
      "Time_End": 1899.02,
      "Text": " don't know, Apple script can click through various windows as if a user is clicking it,"
    },
    {
      "Time_Start": 1899.02,
      "Time_End": 1905.7,
      "Text": " kind of like auto it for windows, and we were able to use that to automate going through"
    },
    {
      "Time_Start": 1905.7,
      "Time_End": 1912.7,
      "Text": " the process without any user interaction. Okay. So we got around the physical USB device"
    },
    {
      "Time_Start": 1913.06,
      "Time_End": 1919.78,
      "Text": " by creating a small one gigabyte time machine backup, like a partition on the hard drive."
    },
    {
      "Time_Start": 1919.78,
      "Time_End": 1922.74,
      "Text": " You might be thinking one gigabyte doesn't sound small, but anyone who's done time machine"
    },
    {
      "Time_Start": 1922.74,
      "Time_End": 1926.86,
      "Text": " can tell you one gigabyte is really small for a time machine. And from there, it's the"
    },
    {
      "Time_Start": 1926.86,
      "Time_End": 1931.74,
      "Text": " same steps we talked about where we're poisoning the environment variables, setting the payload,"
    },
    {
      "Time_Start": 1931.74,
      "Time_End": 1936.86,
      "Text": " and we just run Apple script, and Apple script will then run setup assistant with the appropriate"
    },
    {
      "Time_Start": 1936.86,
      "Time_End": 1942.82,
      "Text": " parameters. All right. So this is a demo we want to show you guys. So this is all real"
    },
    {
      "Time_Start": 1942.82,
      "Time_End": 1948.26,
      "Text": " time. I just showed, like, the first five lines of the Apple Kexex fluid file, and we're"
    },
    {
      "Time_Start": 1948.26,
      "Time_End": 1951.66,
      "Text": " going to run it, and then at the end, you'll see that the Apple Kexex fluid file, which"
    },
    {
      "Time_Start": 1951.66,
      "Time_End": 1958.74,
      "Text": " is SIP protected, will be overwritten with the word migraine. All right. So I'm just"
    },
    {
      "Time_Start": 1958.74,
      "Time_End": 1962.62,
      "Text": " showing this as restricted, which means it's SIP protected, and we're calling OSA script,"
    },
    {
      "Time_Start": 1962.62,
      "Time_End": 1967.1,
      "Text": " which is Apple script, and from here, it's calling setup assistant. This is the time"
    },
    {
      "Time_Start": 1967.1,
      "Time_End": 1971.98,
      "Text": " machine backup we talked about, the one gigabyte time machine backup, and, yeah, it's going"
    },
    {
      "Time_Start": 1971.98,
      "Time_End": 1978.22,
      "Text": " to find the right window and click through everything automatically. Kind of hard to"
    },
    {
      "Time_Start": 1978.22,
      "Time_End": 1981.98,
      "Text": " tell, but it basically deselected everything except for the dummy user I created, and from"
    },
    {
      "Time_Start": 1981.98,
      "Time_End": 1986.3,
      "Text": " here, my exploit is going to run it, and then we kill the migration daemon before it can"
    },
    {
      "Time_Start": 1986.3,
      "Time_End": 1992.98,
      "Text": " reboot. And as you can see, migraine is now overwritten the Apple Kexex fluid, and it"
    },
    {
      "Time_Start": 1992.98,
      "Time_End": 2011.58,
      "Text": " is SIP protected. All right. So you might be asking, well, who cares? Well, SIP is,"
    },
    {
      "Time_Start": 2011.58,
      "Time_End": 2015.8,
      "Text": " like most security mitigations, it's a double-edged sword, and it's really great for protecting"
    },
    {
      "Time_Start": 2015.8,
      "Time_End": 2020.34,
      "Text": " users from themselves and deleting files they shouldn't delete to cause unrecoverable system"
    },
    {
      "Time_Start": 2020.3400000000001,
      "Time_End": 2026.66,
      "Text": " states. It's also great for preventing kernel access or rootkits, but the problem is once"
    },
    {
      "Time_Start": 2026.66,
      "Time_End": 2031.2400000000002,
      "Text": " an attacker gets past that layer, they can do things that are extremely difficult to"
    },
    {
      "Time_Start": 2031.2400000000002,
      "Time_End": 2035.2800000000002,
      "Text": " handle if you're like an AV product or an endpoint product. Some of these examples would"
    },
    {
      "Time_Start": 2035.2800000000002,
      "Time_End": 2039.7,
      "Text": " be like you can create undeletable malware in folders that even if you have every entitlement"
    },
    {
      "Time_Start": 2039.7,
      "Time_End": 2044.46,
      "Text": " that you need as a third-party vendor, you can't delete it. Obviously, you can also get"
    },
    {
      "Time_Start": 2044.46,
      "Time_End": 2048.1400000000003,
      "Text": " a kernel extension execution, like I talked about, which is essentially going to be a"
    },
    {
      "Time_Start": 2048.14,
      "Time_End": 2054.62,
      "Text": " rootkit in this scenario. And it can even bypass other security layers in macOS, an"
    },
    {
      "Time_Start": 2054.62,
      "Time_End": 2060.44,
      "Text": " example being like TCC. So that means an attacker could listen on your microphone or watch your"
    },
    {
      "Time_Start": 2060.44,
      "Time_End": 2065.62,
      "Text": " camera and you aren't notified and you have no idea. All right. So I'm going to hand this"
    },
    {
      "Time_Start": 2065.62,
      "Time_End": 2070.42,
      "Text": " back over to JBO to talk about their fix and our attempts to thwart it."
    },
    {
      "Time_Start": 2071.42,
      "Time_End": 2082.26,
      "Text": " All right. Thanks, Mike. So we disclosed that bug to Apple back in May 2023, and, you know,"
    },
    {
      "Time_Start": 2082.26,
      "Time_End": 2088.82,
      "Text": " there was a bit of like back and forth because it's not a very trivial exploit, but eventually"
    },
    {
      "Time_Start": 2088.82,
      "Time_End": 2095.1800000000003,
      "Text": " they kind of were able to reproduce it, and they fixed it in their beta, and we were asked"
    },
    {
      "Time_Start": 2095.18,
      "Time_End": 2100.62,
      "Text": " to assess their fix, their beta version. So we were like, okay, let's like run the beta"
    },
    {
      "Time_Start": 2100.62,
      "Time_End": 2105.2599999999998,
      "Text": " version and see what's up. And the first thing that we noticed was something that I like to"
    },
    {
      "Time_Start": 2105.2599999999998,
      "Time_End": 2110.4199999999996,
      "Text": " call a brutal fix, which I think that no other company in the world can do really, which is"
    },
    {
      "Time_Start": 2110.4199999999996,
      "Time_End": 2115.8199999999997,
      "Text": " basically saying something like, oh, no more global event variables. And that's pretty"
    },
    {
      "Time_Start": 2115.8199999999997,
      "Time_End": 2121.8199999999997,
      "Text": " amazing because they kill an entire like bug class just by doing that. And as you can see"
    },
    {
      "Time_Start": 2121.82,
      "Time_End": 2129.42,
      "Text": " here, I basically try to use launch CTL set env, which is the proper way of setting an"
    },
    {
      "Time_Start": 2129.42,
      "Time_End": 2135.1800000000003,
      "Text": " environment variable in launch D, and basically telling me, like, we couldn't set the"
    },
    {
      "Time_Start": 2135.1800000000003,
      "Time_End": 2141.5800000000004,
      "Text": " environment variable. Yeah. Because and it's not permitted because of SIP. So now, you"
    },
    {
      "Time_Start": 2141.5800000000004,
      "Time_End": 2146.42,
      "Text": " know, with all the things that SIP enforces, it also now enforces the fact that we can't"
    },
    {
      "Time_Start": 2146.42,
      "Time_End": 2152.66,
      "Text": " really touch environment variables, which kind of like sucks and rocks at the same time. Note"
    },
    {
      "Time_Start": 2152.86,
      "Time_End": 2159.1,
      "Text": " that this kind of enforcement happens at launch D. It doesn't happen at launch CTL for"
    },
    {
      "Time_Start": 2159.1,
      "Time_End": 2164.66,
      "Text": " obvious reasons. Otherwise, anyone would be able to bypass it. So that's fix number one. And"
    },
    {
      "Time_Start": 2164.66,
      "Time_End": 2169.02,
      "Text": " then we were like, okay, we don't really need to affect all of the environment variables in the"
    },
    {
      "Time_Start": 2169.02,
      "Time_End": 2174.86,
      "Text": " system. We just need to affect system migration D, which is like one process in the in the"
    },
    {
      "Time_Start": 2174.86,
      "Time_End": 2180.98,
      "Text": " system. Yes, it is a daemon. So it's a it's a child process of launch D. That's why setting the"
    },
    {
      "Time_Start": 2180.98,
      "Time_End": 2186.9,
      "Text": " environment variables to launch D works to begin with. But then can we do something else? And"
    },
    {
      "Time_Start": 2186.92,
      "Time_End": 2193.1400000000003,
      "Text": " launch daemons in Mac OS are described as you could see earlier by a plist file. That's the"
    },
    {
      "Time_Start": 2193.1400000000003,
      "Time_End": 2201.06,
      "Text": " thing that Mike showed with all the different Mac Mac services. And those plist files kind of"
    },
    {
      "Time_Start": 2201.06,
      "Time_End": 2207.74,
      "Text": " like have a way to, to define environment variables as well. Now, the plist file for system"
    },
    {
      "Time_Start": 2207.74,
      "Time_End": 2213.9,
      "Text": " migration D sits in a directory that is also SIP protected. So you see how that won't work. But we"
    },
    {
      "Time_Start": 2213.9,
      "Time_End": 2219.98,
      "Text": " were like, okay, let's define a new launch daemon. And, you know, we don't have to put it in the"
    },
    {
      "Time_Start": 2219.98,
      "Time_End": 2225.9,
      "Text": " plist file in a SIP protected directory, and basically run the thing. And it supports"
    },
    {
      "Time_Start": 2225.9,
      "Time_End": 2231.3,
      "Text": " environment variables. So that's good. And I don't want to talk too much about it. But basically,"
    },
    {
      "Time_Start": 2231.3,
      "Time_End": 2237.86,
      "Text": " there is a technology called launch constraints, which makes sure that things run, things that are"
    },
    {
      "Time_Start": 2237.86,
      "Time_End": 2243.06,
      "Text": " supposed to run by Apple are only ran by Apple. In this case, what it enforces is that the Mac"
    },
    {
      "Time_Start": 2243.06,
      "Time_End": 2251.5,
      "Text": " services that you guys saw, those six Mac services are actually owned by by a file that was launched"
    },
    {
      "Time_Start": 2251.5,
      "Time_End": 2258.06,
      "Text": " from the SIP bypass, the SIP protected directory. So launch constraints, make sure that we can't"
    },
    {
      "Time_Start": 2258.06,
      "Time_End": 2264.86,
      "Text": " hijack any system launch daemons definitions ever, which is another cool thing and pretty, pretty"
    },
    {
      "Time_Start": 2264.86,
      "Time_End": 2272.18,
      "Text": " new in Mac OS, that technology. In here, you can see our attempts. Basically, that's the plist file"
    },
    {
      "Time_Start": 2272.18,
      "Time_End": 2278.06,
      "Text": " that we created. This is a copy paste from the system, the original system migration D. The only"
    },
    {
      "Time_Start": 2278.06,
      "Time_End": 2284.82,
      "Text": " difference is that I had to name it a bit different. So now it's named com.jbo.apple, and doesn't"
    },
    {
      "Time_Start": 2284.82,
      "Time_End": 2290.98,
      "Text": " really shouldn't really affect anything. And the other part is is this part where I basically try to"
    },
    {
      "Time_Start": 2290.98,
      "Time_End": 2297.54,
      "Text": " set the environment variables, specifically Perl 5 opt. Now, again, this works, but but doesn't work"
    },
    {
      "Time_Start": 2297.54,
      "Time_End": 2303.54,
      "Text": " really because they're really the system migration D basically gets killed by by the OS because of"
    },
    {
      "Time_Start": 2303.54,
      "Time_End": 2313.54,
      "Text": " that thing. So no, no dice. And then the third fix, which are the third attempt that we had really, is"
    },
    {
      "Time_Start": 2313.54,
      "Time_End": 2318.86,
      "Text": " that we were like, Okay, can we do something that doesn't have environment variables? Because we"
    },
    {
      "Time_Start": 2318.86,
      "Time_End": 2324.82,
      "Text": " noticed, again, those are Perl scripts, and Perl scripts sometimes have dependencies, can we find a"
    },
    {
      "Time_Start": 2324.82,
      "Time_End": 2330.74,
      "Text": " strong dependency in the Perl scripts. And as you can see, in the right part, whoops, as you can see, in"
    },
    {
      "Time_Start": 2330.7400000000002,
      "Time_End": 2336.42,
      "Text": " the right part, you have used strict and then use file, file base name, those are basically imports,"
    },
    {
      "Time_Start": 2336.42,
      "Time_End": 2344.42,
      "Text": " just like imports in, I don't know, in Python or whatever. And the file base name file is really"
    },
    {
      "Time_Start": 2344.42,
      "Time_End": 2349.1400000000003,
      "Text": " translated to a directory in the file system. And base name is going to be looked, looked after base"
    },
    {
      "Time_Start": 2349.1400000000003,
      "Time_End": 2356.5800000000004,
      "Text": " name.pm, specifically, which is the Perl module. And Perl has dependencies and the lookup order. And"
    },
    {
      "Time_Start": 2356.58,
      "Time_End": 2365.2599999999998,
      "Text": " the lookup order, you can print it with the at INC Perl variable, as you can see here. And these are"
    },
    {
      "Time_Start": 2365.2999999999997,
      "Time_End": 2374.66,
      "Text": " this is the search order. The interesting part is that the the legitimate base file, file base name,"
    },
    {
      "Time_Start": 2374.66,
      "Time_End": 2381.54,
      "Text": " sorry, lives under system library Perl 5.30, which is which is protected, it's under slash system. But"
    },
    {
      "Time_Start": 2381.54,
      "Time_End": 2387.62,
      "Text": " then the first two directories at least are not C protected. So we were like, okay, let's create slash"
    },
    {
      "Time_Start": 2387.62,
      "Time_End": 2394.34,
      "Text": " library Perl 5.30 file base name dot PM with arbitrary contents. And, you know, trigger Perl without"
    },
    {
      "Time_Start": 2394.34,
      "Time_End": 2400.82,
      "Text": " poisoning any environment variables, and have it basically run our arbitrary commands, which works and"
    },
    {
      "Time_Start": 2400.82,
      "Time_End": 2408.94,
      "Text": " doesn't work. It works. But we were able to infect Perl, but not for C bypassing purposes. The reason for"
    },
    {
      "Time_Start": 2408.94,
      "Time_End": 2415.5,
      "Text": " that is because Apple also had a tactical fix. If you remember that drop sip binary that we started the"
    },
    {
      "Time_Start": 2415.5,
      "Time_End": 2422.14,
      "Text": " talk with, well, what Apple is now doing is basically dropping C bypassing capabilities before launching"
    },
    {
      "Time_Start": 2422.14,
      "Time_End": 2427.98,
      "Text": " those scripts, which is kind of like a tactical fix, but it works because you can't do anything. Even if you"
    },
    {
      "Time_Start": 2427.98,
      "Time_End": 2434.62,
      "Text": " affect Perl, it doesn't have the C bypassing capabilities anymore. So you can't use that for bypassing"
    },
    {
      "Time_Start": 2434.62,
      "Time_End": 2444.02,
      "Text": " sip. It's a cool way to persist in an Perl intensive environment, but not good for this exploit at least. So"
    },
    {
      "Time_Start": 2444.02,
      "Time_End": 2452.7,
      "Text": " that's that's the end really. The vulnerabilities was assigned with CV 2023 32369. Apple has really made an"
    },
    {
      "Time_Start": 2452.7,
      "Time_End": 2459.7,
      "Text": " amazing impression on us. Those are solid fixes. And, you know, besides the tactical fix, which is good, like the"
    },
    {
      "Time_Start": 2459.7000000000003,
      "Time_End": 2464.6600000000003,
      "Text": " other two fixes, the launch constraints, and the fact that there are no more environment variables is really"
    },
    {
      "Time_Start": 2464.6600000000003,
      "Time_End": 2470.9800000000005,
      "Text": " interesting, because these are solid fixes in terms that they kill entire bug classes. They don't just kill our"
    },
    {
      "Time_Start": 2470.9800000000005,
      "Time_End": 2478.78,
      "Text": " exploit, they kill future exploit. And as I hope you were able to see, there are tons of exploits that rely on"
    },
    {
      "Time_Start": 2478.82,
      "Time_End": 2486.0600000000004,
      "Text": " environment variable poisoning and stuff like that. Besides that, Apple has granted a really nice bounty money,"
    },
    {
      "Time_Start": 2486.1,
      "Time_End": 2493.2999999999997,
      "Text": " which we donated to charity. If you don't know that, by the way, and you get bounty from one of these big companies, you"
    },
    {
      "Time_Start": 2493.2999999999997,
      "Time_End": 2500.1,
      "Text": " can ask them to donate to charity and they will usually double that amount. So donate to charity if you I mean, if"
    },
    {
      "Time_Start": 2500.1,
      "Time_End": 2507.2999999999997,
      "Text": " you're into that, and we wish to thank Apple for for everything here. And it is our point of view that with Apple"
    },
    {
      "Time_Start": 2507.2999999999997,
      "Time_End": 2512.42,
      "Text": " moving everything to user land and creating separate security layers, as you could have seen with all the"
    },
    {
      "Time_Start": 2512.42,
      "Time_End": 2520.66,
      "Text": " entitlements and stuff like that. And they're basically killing kernel extensions and whatnot. So, you know, there"
    },
    {
      "Time_Start": 2520.66,
      "Time_End": 2529.2200000000003,
      "Text": " are like the peasants and Apple and in the OS at least. And because they have the keys to the kingdom, we believe that"
    },
    {
      "Time_Start": 2529.2200000000003,
      "Time_End": 2535.7000000000003,
      "Text": " similar bypasses will basically shake the Mac OS ecosystem. Because again, in this case, we were lucky that we are the"
    },
    {
      "Time_Start": 2535.7000000000003,
      "Time_End": 2541.46,
      "Text": " ones who found it. But if you know, there is some malware author that finds something like that, they can create"
    },
    {
      "Time_Start": 2542.14,
      "Time_End": 2548.42,
      "Text": " undeliverable malware and stuff like that. And no one will be able to do anything besides Apple, which might be too late."
    },
    {
      "Time_Start": 2549.46,
      "Time_End": 2553.62,
      "Text": " So I think that's pretty much it. Well, thank you so much."
    }
  ]
}