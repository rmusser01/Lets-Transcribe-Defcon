{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 1.0,
      "Text": "This text was transcribed using whisper model: large-v2\n\n Excellent."
    },
    {
      "Time_Start": 1.0,
      "Time_End": 2.0,
      "Text": " Hey."
    },
    {
      "Time_Start": 2.0,
      "Time_End": 3.0,
      "Text": " Hello, everyone."
    },
    {
      "Time_Start": 3.0,
      "Time_End": 4.0,
      "Text": " Thank you for joining me."
    },
    {
      "Time_Start": 4.0,
      "Time_End": 5.0,
      "Text": " How's everyone doing?"
    },
    {
      "Time_Start": 5.0,
      "Time_End": 6.0,
      "Text": " Cool."
    },
    {
      "Time_Start": 6.0,
      "Time_End": 7.0,
      "Text": " Yeah."
    },
    {
      "Time_Start": 7.0,
      "Time_End": 11.0,
      "Text": " Welcome to my talk, LLMs at the Forefront."
    },
    {
      "Time_Start": 11.0,
      "Time_End": 15.08,
      "Text": " And basically we're using LLMs to fuzz Python and kind of showing you some tricks and cool"
    },
    {
      "Time_Start": 15.08,
      "Time_End": 18.080000000000002,
      "Text": " strategies and stuff like that."
    },
    {
      "Time_Start": 18.080000000000002,
      "Time_End": 22.48,
      "Text": " Or a better title is ChatGBT, write me some fuzz tests for this source code."
    },
    {
      "Time_Start": 22.48,
      "Time_End": 23.48,
      "Text": " Yeah."
    },
    {
      "Time_Start": 23.48,
      "Time_End": 24.96,
      "Text": " So let's go ahead and get started."
    },
    {
      "Time_Start": 24.96,
      "Time_End": 29.04,
      "Text": " To kind of go through the agenda, right, we're going to start off with an introduction and"
    },
    {
      "Time_Start": 29.04,
      "Time_End": 35.839999999999996,
      "Text": " motivation, you know, to myself and, like, what was the whole entire motivation for this"
    },
    {
      "Time_Start": 35.839999999999996,
      "Time_End": 36.839999999999996,
      "Text": " talk?"
    },
    {
      "Time_Start": 36.839999999999996,
      "Time_End": 38.96,
      "Text": " Like, why I was interested in it and where it kind of really started."
    },
    {
      "Time_Start": 38.96,
      "Time_End": 44.48,
      "Text": " We're going to go some, like, brief background info on LLMs and fuzzing."
    },
    {
      "Time_Start": 44.48,
      "Time_End": 48.120000000000005,
      "Text": " And then I'm going to introduce my tool, which really combines LLMs and fuzzing."
    },
    {
      "Time_Start": 48.120000000000005,
      "Time_End": 50.519999999999996,
      "Text": " Give you a quick run through how it works."
    },
    {
      "Time_Start": 50.519999999999996,
      "Time_End": 54.44,
      "Text": " Then we're going to talk about some of the cool vulnerabilities and cool fuzzers that"
    },
    {
      "Time_Start": 54.44,
      "Time_End": 55.44,
      "Text": " it created."
    },
    {
      "Time_Start": 55.44,
      "Time_End": 61.92,
      "Text": " And then kind of end it off with a summary and discuss some of the future research directions."
    },
    {
      "Time_Start": 61.92,
      "Time_End": 62.92,
      "Text": " Right on."
    },
    {
      "Time_Start": 62.92,
      "Time_End": 63.92,
      "Text": " So yeah."
    },
    {
      "Time_Start": 63.92,
      "Time_End": 64.92,
      "Text": " About me."
    },
    {
      "Time_Start": 64.92,
      "Time_End": 65.92,
      "Text": " My name is X."
    },
    {
      "Time_Start": 65.92,
      "Time_End": 66.92,
      "Text": " Xavier."
    },
    {
      "Time_Start": 66.92,
      "Time_End": 67.92,
      "Text": " I'm a vulnerability researcher."
    },
    {
      "Time_Start": 67.92,
      "Time_End": 73.24,
      "Text": " And I think an important part is that I'm not an AI or ML expert."
    },
    {
      "Time_Start": 73.24,
      "Time_End": 81.36,
      "Text": " I'm an offset guy who just likes exploring, you know, new, cool techniques to find bugs."
    },
    {
      "Time_Start": 81.36,
      "Time_End": 87.0,
      "Text": " And outside of security stuff, I enjoy base, techno, and, like, bicycles, you know?"
    },
    {
      "Time_Start": 87.0,
      "Time_End": 88.0,
      "Text": " So yeah."
    },
    {
      "Time_Start": 88.0,
      "Time_End": 90.0,
      "Text": " So let's start off with the motivation, right?"
    },
    {
      "Time_Start": 90.0,
      "Time_End": 93.03999999999999,
      "Text": " This really started, I guess, because at the beginning of the year, there was, like, a"
    },
    {
      "Time_Start": 93.03999999999999,
      "Time_End": 94.2,
      "Text": " huge meme, right?"
    },
    {
      "Time_Start": 94.2,
      "Time_End": 96.76,
      "Text": " Like LLM slash chat GPT."
    },
    {
      "Time_Start": 96.76,
      "Time_End": 98.4,
      "Text": " They're taking over software dev, right?"
    },
    {
      "Time_Start": 98.4,
      "Time_End": 101.76,
      "Text": " Like, there are going to be no more software devs."
    },
    {
      "Time_Start": 101.76,
      "Time_End": 105.52,
      "Text": " And I wanted to explore, like, its potential for, like, offset."
    },
    {
      "Time_Start": 105.52,
      "Time_End": 106.52,
      "Text": " And is it real?"
    },
    {
      "Time_Start": 106.52,
      "Time_End": 107.52,
      "Text": " Is it legit?"
    },
    {
      "Time_Start": 107.52,
      "Time_End": 109.03999999999999,
      "Text": " Like, how much can we do?"
    },
    {
      "Time_Start": 109.03999999999999,
      "Time_End": 110.68,
      "Text": " So I explored, like, multiple paths, right?"
    },
    {
      "Time_Start": 111.0,
      "Time_End": 113.88000000000001,
      "Text": " I used LLMs for, you know, basic CTFs."
    },
    {
      "Time_Start": 113.88000000000001,
      "Time_End": 115.80000000000001,
      "Text": " I tried to do some, like, cryptography stuff."
    },
    {
      "Time_Start": 115.80000000000001,
      "Time_End": 118.72000000000001,
      "Text": " I'm talking, like, simple, even, like, Caesar Cypher type things."
    },
    {
      "Time_Start": 118.72000000000001,
      "Time_End": 120.96000000000001,
      "Text": " And it wasn't really that great."
    },
    {
      "Time_Start": 120.96000000000001,
      "Time_End": 126.94000000000001,
      "Text": " I found that the best thing it was LLMs were good at was, like, code generation, right?"
    },
    {
      "Time_Start": 126.94000000000001,
      "Time_End": 130.52,
      "Text": " So I wrote a blog post in, like, February that first explored this."
    },
    {
      "Time_Start": 130.52,
      "Time_End": 134.48000000000002,
      "Text": " I started writing, starting to use it to write some fuzzers."
    },
    {
      "Time_Start": 134.48000000000002,
      "Time_End": 136.16,
      "Text": " And this is kind of where the idea exploded."
    },
    {
      "Time_Start": 136.16,
      "Time_End": 137.44,
      "Text": " I had really good success."
    },
    {
      "Time_Start": 137.44,
      "Time_End": 139.08,
      "Text": " I found a lot of bugs."
    },
    {
      "Time_Start": 139.08,
      "Time_End": 141.20000000000002,
      "Text": " So I decided to expand it."
    },
    {
      "Time_Start": 141.20000000000002,
      "Time_End": 144.72,
      "Text": " And, you know, besides kind of showing you the cool bugs and cool fuzzers, I really want"
    },
    {
      "Time_Start": 144.72,
      "Time_End": 150.36,
      "Text": " to inspire everyone here to just kind of explore these cutting edge tools and techniques, right?"
    },
    {
      "Time_Start": 150.36,
      "Time_End": 156.8,
      "Text": " I think as a security person, it's pretty easy to get jaded and be, like, oh, this is"
    },
    {
      "Time_Start": 156.8,
      "Time_End": 160.68,
      "Text": " not as cool, not as interesting, but I think there's a lot of potential in all these types"
    },
    {
      "Time_Start": 160.68,
      "Time_End": 161.68,
      "Text": " of things."
    },
    {
      "Time_Start": 161.68,
      "Time_End": 162.68,
      "Text": " Yeah."
    },
    {
      "Time_Start": 162.68,
      "Time_End": 167.8,
      "Text": " So let me give you a brief, very brief intro into, like, LLMs, right?"
    },
    {
      "Time_Start": 167.8,
      "Time_End": 169.4,
      "Text": " They're large language models, right?"
    },
    {
      "Time_Start": 169.4,
      "Time_End": 174.32000000000002,
      "Text": " And many people use the word LLM and AI, like, interchangeably, but it's really just a machine"
    },
    {
      "Time_Start": 174.32000000000002,
      "Time_End": 176.8,
      "Text": " learning neural network."
    },
    {
      "Time_Start": 176.8,
      "Time_End": 180.56,
      "Text": " And they're trained on, like, a wide range of corpus, you know, from the internet."
    },
    {
      "Time_Start": 180.56,
      "Time_End": 183.98000000000002,
      "Text": " I'm talking about, like, Wikipedia, GitHub, Reddit, et cetera."
    },
    {
      "Time_Start": 183.98000000000002,
      "Time_End": 188.20000000000002,
      "Text": " And they work by predicting the next most likely token in a sequence."
    },
    {
      "Time_Start": 188.20000000000002,
      "Time_End": 191.84,
      "Text": " So it doesn't really have, like, a traditional knowledge database."
    },
    {
      "Time_Start": 191.84,
      "Time_End": 196.52,
      "Text": " It's just getting what is most likely next."
    },
    {
      "Time_Start": 196.52,
      "Time_End": 200.0,
      "Text": " And this creates some really, like, interesting challenges to work with, which, you know,"
    },
    {
      "Time_Start": 200.0,
      "Time_End": 204.44,
      "Text": " I'll kind of describe how I approached it and how, like, we can kind of, like, combat"
    },
    {
      "Time_Start": 204.44,
      "Time_End": 210.16000000000003,
      "Text": " this, like, operating model."
    },
    {
      "Time_Start": 210.16000000000003,
      "Time_End": 214.8,
      "Text": " But since it kind of works by predicting the next most likely token in a sequence, you"
    },
    {
      "Time_Start": 214.8,
      "Time_End": 219.36,
      "Text": " know, without, like, specifically teaching LLMs things, they're able to learn, you know,"
    },
    {
      "Time_Start": 219.36,
      "Time_End": 223.64000000000001,
      "Text": " language syntax, context, and even a little bit of, like, semantic understanding, right?"
    },
    {
      "Time_Start": 223.64000000000001,
      "Time_End": 226.68,
      "Text": " So it's really powerful."
    },
    {
      "Time_Start": 226.68,
      "Time_End": 232.64000000000001,
      "Text": " And I'm going to be using primarily open API, open AI models, which are 3.5 and 4."
    },
    {
      "Time_Start": 232.64000000000001,
      "Time_End": 236.64000000000001,
      "Text": " But, I mean, Google has BARD, Meta has open sourced."
    },
    {
      "Time_Start": 236.64000000000001,
      "Time_End": 238.32000000000002,
      "Text": " I mean, there are many more open source ones."
    },
    {
      "Time_Start": 238.32000000000002,
      "Time_End": 243.4,
      "Text": " And I'll kind of talk about some of these different models and how, like, how they actually"
    },
    {
      "Time_Start": 243.4,
      "Time_End": 245.64000000000001,
      "Text": " work and how they kind of compare to open AI."
    },
    {
      "Time_Start": 245.64000000000001,
      "Time_End": 250.88000000000002,
      "Text": " But for me, personally, I found that open AI's models were the best at cogeneration."
    },
    {
      "Time_Start": 250.88000000000002,
      "Time_End": 252.4,
      "Text": " Yeah."
    },
    {
      "Time_Start": 252.4,
      "Time_End": 254.64000000000001,
      "Text": " So first of all, let's go into, like, some of the limitations."
    },
    {
      "Time_Start": 254.64000000000001,
      "Time_End": 258.28000000000003,
      "Text": " You know, I kind of mentioned it, that they struggle with factual accuracy, right?"
    },
    {
      "Time_Start": 258.28000000000003,
      "Time_End": 260.96,
      "Text": " They don't know facts the way that humans do."
    },
    {
      "Time_Start": 260.96,
      "Time_End": 264.74,
      "Text": " They just generate the responses based on, like, patterns."
    },
    {
      "Time_Start": 264.74,
      "Time_End": 267.16,
      "Text": " So this means that they can hallucinate details, right?"
    },
    {
      "Time_Start": 267.16,
      "Time_End": 269.72,
      "Text": " Or create APIs that don't exist."
    },
    {
      "Time_Start": 269.72,
      "Time_End": 275.88,
      "Text": " I saw many instances where the code has a function, like, parse headers, right?"
    },
    {
      "Time_Start": 275.88,
      "Time_End": 276.88,
      "Text": " Or parse requests."
    },
    {
      "Time_Start": 276.88,
      "Time_End": 282.8,
      "Text": " And it will make up an API that's, like, parse cookies, because that sounds like it exists."
    },
    {
      "Time_Start": 282.8,
      "Time_End": 284.84,
      "Text": " So that's, like, one of the big challenges."
    },
    {
      "Time_Start": 284.84,
      "Time_End": 288.84,
      "Text": " It really loves to hallucinate things."
    },
    {
      "Time_Start": 288.84,
      "Time_End": 292.92,
      "Text": " Another, like, really hard challenge is just the prompt context limitations, right?"
    },
    {
      "Time_Start": 292.92,
      "Time_End": 298.92,
      "Text": " So when we say prompt, we're talking about the conversation, like, your text and what"
    },
    {
      "Time_Start": 298.92,
      "Time_End": 300.12,
      "Text": " it sends back, right?"
    },
    {
      "Time_Start": 300.12,
      "Time_End": 302.04,
      "Text": " That's what we mean by prompt."
    },
    {
      "Time_Start": 302.20000000000005,
      "Time_End": 308.8,
      "Text": " And while there are limitations and they are expanding, like, OpenAI now has 32K tokens."
    },
    {
      "Time_Start": 308.8,
      "Time_End": 310.72,
      "Text": " That is still kind of limited."
    },
    {
      "Time_Start": 310.72,
      "Time_End": 316.04,
      "Text": " For Python code, 32,000 tokens is about 2,000 lines of code."
    },
    {
      "Time_Start": 316.04,
      "Time_End": 319.64000000000004,
      "Text": " So while it can get maybe, like, a source code file, there's, like, no way for it to"
    },
    {
      "Time_Start": 319.64000000000004,
      "Time_End": 321.28000000000003,
      "Text": " get a whole repo."
    },
    {
      "Time_Start": 321.28000000000003,
      "Time_End": 325.16,
      "Text": " And there are techniques to, like, combat that, right?"
    },
    {
      "Time_Start": 325.16,
      "Time_End": 327.6,
      "Text": " Like, you may have heard of, like, vector databases."
    },
    {
      "Time_Start": 328.28000000000003,
      "Time_End": 332.68,
      "Text": " What these things do is they chunk up data into, like, small portions and then create"
    },
    {
      "Time_Start": 332.68,
      "Time_End": 338.88,
      "Text": " a data structure so you can, like, quickly parse through and find what you're looking"
    },
    {
      "Time_Start": 338.88,
      "Time_End": 339.88,
      "Text": " for."
    },
    {
      "Time_Start": 339.88,
      "Time_End": 344.56,
      "Text": " But I found for code in particular, it's not as powerful and it's not as good."
    },
    {
      "Time_Start": 344.56,
      "Time_End": 347.24,
      "Text": " Because functions, like, call each other functions."
    },
    {
      "Time_Start": 347.24,
      "Time_End": 352.04,
      "Text": " So even if you use it in, like, a vector database and you search for something, it might find"
    },
    {
      "Time_Start": 352.04,
      "Time_End": 355.56,
      "Text": " something that's not particularly relevant or a function that's being used somewhere"
    },
    {
      "Time_Start": 355.6,
      "Time_End": 356.6,
      "Text": " else."
    },
    {
      "Time_Start": 356.6,
      "Time_End": 357.6,
      "Text": " But not, like, the main function."
    },
    {
      "Time_Start": 357.6,
      "Time_End": 359.2,
      "Text": " So I just kind of wanted to add that."
    },
    {
      "Time_Start": 359.2,
      "Time_End": 362.8,
      "Text": " I mean, some people say we don't really need vector databases."
    },
    {
      "Time_Start": 362.8,
      "Time_End": 365.64,
      "Text": " Eventually, like, the context will grow."
    },
    {
      "Time_Start": 365.64,
      "Time_End": 372.08,
      "Text": " But at least for this kind of project, I thought vector databases were not, like, as useful"
    },
    {
      "Time_Start": 372.08,
      "Time_End": 375.12,
      "Text": " as people say they are."
    },
    {
      "Time_Start": 375.12,
      "Time_End": 376.32,
      "Text": " So but there are many strengths, too."
    },
    {
      "Time_Start": 376.32,
      "Time_End": 378.6,
      "Text": " The first, of course, is, like, code, right?"
    },
    {
      "Time_Start": 378.6,
      "Time_End": 382.56,
      "Text": " LLMs are very adept at understanding and generating code."
    },
    {
      "Time_Start": 382.56,
      "Time_End": 390.04,
      "Text": " But it's up to us individually to actually verify the correctness and test the output."
    },
    {
      "Time_Start": 390.04,
      "Time_End": 392.6,
      "Text": " Another, like, big, like, strength is scalability, right?"
    },
    {
      "Time_Start": 392.6,
      "Time_End": 397.74,
      "Text": " They can handle a large amount of tasks and kind of fix themselves."
    },
    {
      "Time_Start": 397.74,
      "Time_End": 400.96,
      "Text": " So you just tell it to do something, it will happily write the code and do it."
    },
    {
      "Time_Start": 400.96,
      "Time_End": 403.4,
      "Text": " I think it's like an intern or junior dev, right?"
    },
    {
      "Time_Start": 403.4,
      "Time_End": 407.44,
      "Text": " It will happily churn out code and try anything you ask it for."
    },
    {
      "Time_Start": 407.44,
      "Time_End": 411.66,
      "Text": " Even if it doesn't, like, fully understand why it's performing this task, it's just happy"
    },
    {
      "Time_Start": 411.66,
      "Time_End": 414.78000000000003,
      "Text": " to write code and be, like, all right, here's my strategy, here's my plan."
    },
    {
      "Time_Start": 414.78000000000003,
      "Time_End": 415.82000000000005,
      "Text": " This is how I would do it."
    },
    {
      "Time_Start": 415.82000000000005,
      "Time_End": 418.02000000000004,
      "Text": " Even though it has, like, no idea."
    },
    {
      "Time_Start": 418.02000000000004,
      "Time_End": 423.70000000000005,
      "Text": " So because of that, I found that it's best used by domain experts to, like, build tools."
    },
    {
      "Time_Start": 423.70000000000005,
      "Time_End": 426.90000000000003,
      "Text": " Another thing that I've had, like, great success with is, like, data parsing, right?"
    },
    {
      "Time_Start": 426.90000000000003,
      "Time_End": 431.54,
      "Text": " Like, we can copy some JSON and say write a script to extract these and order them like"
    },
    {
      "Time_Start": 431.54,
      "Time_End": 432.98,
      "Text": " this, and it will do it."
    },
    {
      "Time_Start": 432.98,
      "Time_End": 434.26000000000005,
      "Text": " Another great thing is, like, regex."
    },
    {
      "Time_Start": 434.26000000000005,
      "Time_End": 438.22,
      "Text": " Hey, write me a regex to find this, and it will just do phenomenal."
    },
    {
      "Time_Start": 439.06,
      "Time_End": 441.74,
      "Text": " There are many strengths."
    },
    {
      "Time_Start": 441.74,
      "Time_End": 446.86,
      "Text": " But kind of, like, to drill down on this code, I want to say it's not good at code review."
    },
    {
      "Time_Start": 446.86,
      "Time_End": 451.86,
      "Text": " So even, like, the most contrived, like, you know, buffer overflow, like, C. I'm talking"
    },
    {
      "Time_Start": 451.86,
      "Time_End": 454.3,
      "Text": " about, like, basic day one CTF stuff."
    },
    {
      "Time_Start": 454.3,
      "Time_End": 456.62,
      "Text": " It will completely miss it."
    },
    {
      "Time_Start": 456.62,
      "Time_End": 461.02000000000004,
      "Text": " And there's been other research here where people put, like, vulnerable code snippets"
    },
    {
      "Time_Start": 461.02000000000004,
      "Time_End": 464.34000000000003,
      "Text": " and try to find bugs, but it just completely misses it."
    },
    {
      "Time_Start": 464.34000000000003,
      "Time_End": 471.22,
      "Text": " So the way you kind of have to approach these tools is ask for what the code is doing."
    },
    {
      "Time_Start": 471.22,
      "Time_End": 474.1,
      "Text": " Like, there's, like, there's website prompts."
    },
    {
      "Time_Start": 474.1,
      "Time_End": 475.82000000000005,
      "Text": " Ghidor has many extensions."
    },
    {
      "Time_Start": 475.82000000000005,
      "Time_End": 478.50000000000006,
      "Text": " And it's never find the XSS in a code."
    },
    {
      "Time_Start": 478.50000000000006,
      "Time_End": 481.00000000000006,
      "Text": " It's more find the syncs, right?"
    },
    {
      "Time_Start": 481.00000000000006,
      "Time_End": 482.34000000000003,
      "Text": " It's never find the bug."
    },
    {
      "Time_Start": 482.34000000000003,
      "Time_End": 485.38000000000005,
      "Text": " It's find the functions that are parsing it, right?"
    },
    {
      "Time_Start": 485.38000000000005,
      "Time_End": 492.98,
      "Text": " So it's very particular in being able to get a general idea, but once you get, like, really"
    },
    {
      "Time_Start": 493.38,
      "Time_End": 497.14000000000004,
      "Text": " in depth, it kind of loses its track, and LLMs are not good at that at all."
    },
    {
      "Time_Start": 497.14000000000004,
      "Time_End": 499.02000000000004,
      "Text": " Yeah, so that's kind of LLMs."
    },
    {
      "Time_Start": 499.02000000000004,
      "Time_End": 500.34000000000003,
      "Text": " Just a brief intro, right?"
    },
    {
      "Time_Start": 500.34000000000003,
      "Time_End": 501.34000000000003,
      "Text": " So fuzzing."
    },
    {
      "Time_Start": 501.34000000000003,
      "Time_End": 507.02000000000004,
      "Text": " I'm sure many people here know fuzzing, but I'm just going to give you, like, a brief"
    },
    {
      "Time_Start": 507.02000000000004,
      "Time_End": 508.06,
      "Text": " description of it, right?"
    },
    {
      "Time_Start": 508.06,
      "Time_End": 510.54,
      "Text": " So it's a security testing technique."
    },
    {
      "Time_Start": 510.54,
      "Time_End": 513.78,
      "Text": " It sends random data to programs, and you're kind of looking for any, like, divergent or"
    },
    {
      "Time_Start": 513.78,
      "Time_End": 515.26,
      "Text": " unexpected behavior."
    },
    {
      "Time_Start": 515.26,
      "Time_End": 519.46,
      "Text": " Now, generally, they use it primarily for, like, memory-managed software, right?"
    },
    {
      "Time_Start": 519.46,
      "Time_End": 522.96,
      "Text": " Because a crash means we can write an exploit and get it to do whatever we want."
    },
    {
      "Time_Start": 522.96,
      "Time_End": 527.6800000000001,
      "Text": " So, you know, some of you might be asking, like, why even fuzz Python, right?"
    },
    {
      "Time_Start": 527.6800000000001,
      "Time_End": 528.6800000000001,
      "Text": " It's memory-safe."
    },
    {
      "Time_Start": 528.6800000000001,
      "Time_End": 530.6800000000001,
      "Text": " What can we achieve with it, right?"
    },
    {
      "Time_Start": 530.6800000000001,
      "Time_End": 536.44,
      "Text": " Well, we still get, like, a large, a wide range of, like, types of Python bugs, right?"
    },
    {
      "Time_Start": 536.44,
      "Time_End": 540.5600000000001,
      "Text": " I'm also personally part of the kind of people that think that fuzzing should be part of"
    },
    {
      "Time_Start": 540.5600000000001,
      "Time_End": 543.62,
      "Text": " the SDLC, just like QA and unit tests, right?"
    },
    {
      "Time_Start": 543.62,
      "Time_End": 546.84,
      "Text": " It just makes your programs more resilient, just like anything else."
    },
    {
      "Time_Start": 546.84,
      "Time_End": 549.52,
      "Text": " Fuzzing is, I think, something that needs to be integrated for everything."
    },
    {
      "Time_Start": 549.52,
      "Time_End": 553.24,
      "Text": " So this really helps."
    },
    {
      "Time_Start": 553.24,
      "Time_End": 558.48,
      "Text": " And then some secondary reasons as to why I use Python and why I chose Python specifically."
    },
    {
      "Time_Start": 558.48,
      "Time_End": 563.42,
      "Text": " Because it's honestly the language that open AI models understand best."
    },
    {
      "Time_Start": 563.42,
      "Time_End": 567.06,
      "Text": " There's also kind of a new-ish fuzzer called Atheris."
    },
    {
      "Time_Start": 567.06,
      "Time_End": 568.06,
      "Text": " So it's native."
    },
    {
      "Time_Start": 568.06,
      "Time_End": 569.1999999999999,
      "Text": " It's integrated."
    },
    {
      "Time_Start": 569.1999999999999,
      "Time_End": 570.88,
      "Text": " It's a native Python fuzzer."
    },
    {
      "Time_Start": 570.88,
      "Time_End": 575.5799999999999,
      "Text": " And since it's fairly new, there's not, like, a huge corpus of training data."
    },
    {
      "Time_Start": 575.58,
      "Time_End": 580.1800000000001,
      "Text": " So I felt like this was a good opportunity to, like, really test the capabilities of"
    },
    {
      "Time_Start": 580.1800000000001,
      "Time_End": 581.1800000000001,
      "Text": " it."
    },
    {
      "Time_Start": 581.1800000000001,
      "Time_End": 586.1,
      "Text": " Versus if my thinking was if I use something like C, there's just so many fuzzing examples,"
    },
    {
      "Time_Start": 586.1,
      "Time_End": 587.1,
      "Text": " right?"
    },
    {
      "Time_Start": 587.1,
      "Time_End": 588.1,
      "Text": " LiveFuzzer, AFL."
    },
    {
      "Time_Start": 588.1,
      "Time_End": 589.98,
      "Text": " The internet is full of them."
    },
    {
      "Time_Start": 589.98,
      "Time_End": 592.0600000000001,
      "Text": " So you can't really test the capabilities."
    },
    {
      "Time_Start": 592.0600000000001,
      "Time_End": 597.48,
      "Text": " If I use Python, and in many of these Pythons, libraries don't even have fuzz tests."
    },
    {
      "Time_Start": 597.48,
      "Time_End": 602.32,
      "Text": " So just like a great green field project where we can write fuzzers for things that don't"
    },
    {
      "Time_Start": 602.32,
      "Time_End": 606.96,
      "Text": " exist and find bugs for things that have never been tested at all."
    },
    {
      "Time_Start": 606.96,
      "Time_End": 608.88,
      "Text": " So that's kind of why I chose it."
    },
    {
      "Time_Start": 608.88,
      "Time_End": 612.8000000000001,
      "Text": " This is another slide of, like, specific Python bug types."
    },
    {
      "Time_Start": 612.8000000000001,
      "Time_End": 614.44,
      "Text": " There's all types of things."
    },
    {
      "Time_Start": 614.44,
      "Time_End": 616.5200000000001,
      "Text": " Some of these hit the lower-level libraries."
    },
    {
      "Time_Start": 616.5200000000001,
      "Time_End": 618.8000000000001,
      "Text": " A lot of them are, like, best practices."
    },
    {
      "Time_Start": 618.8000000000001,
      "Time_End": 620.6,
      "Text": " A lot of, like, denial service."
    },
    {
      "Time_Start": 620.6,
      "Time_End": 624.72,
      "Text": " You know, if we can crash a program, that's very common."
    },
    {
      "Time_Start": 624.72,
      "Time_End": 626.8800000000001,
      "Text": " It's very easy to accomplish."
    },
    {
      "Time_Start": 626.8800000000001,
      "Time_End": 628.5600000000001,
      "Text": " Yeah."
    },
    {
      "Time_Start": 628.5600000000001,
      "Time_End": 631.2800000000001,
      "Text": " So now we know fuzzing and we know LLMs."
    },
    {
      "Time_Start": 632.28,
      "Time_End": 636.52,
      "Text": " How can we combine them to, like, get our goals better, right?"
    },
    {
      "Time_Start": 636.52,
      "Time_End": 639.88,
      "Text": " First of all, it's, like, the pair of programming abilities."
    },
    {
      "Time_Start": 639.88,
      "Time_End": 643.1999999999999,
      "Text": " It just allows me to write so much more code."
    },
    {
      "Time_Start": 643.1999999999999,
      "Time_End": 645.16,
      "Text": " I think that's one of the big strengths."
    },
    {
      "Time_Start": 645.16,
      "Time_End": 648.76,
      "Text": " It's like a force multiplier for, like, software development."
    },
    {
      "Time_Start": 648.76,
      "Time_End": 655.16,
      "Text": " Whether you use the chat box, Copilot, or I personally, I'm a big fan of this SGPT repel."
    },
    {
      "Time_Start": 655.16,
      "Time_End": 660.9599999999999,
      "Text": " So it allows you to use GPT in a repel format where you can, like, interactively code inside."
    },
    {
      "Time_Start": 661.0,
      "Time_End": 664.36,
      "Text": " It's kind of like a IPython terminal."
    },
    {
      "Time_Start": 664.36,
      "Time_End": 668.8000000000001,
      "Text": " So you can, like, write code, test it, and then, you know, copy that in there."
    },
    {
      "Time_Start": 668.8000000000001,
      "Time_End": 673.52,
      "Text": " But kind of a note is always use the API."
    },
    {
      "Time_Start": 673.52,
      "Time_End": 678.32,
      "Text": " I found that when I'm trying to do things through, like, Copilot or the chat box, oftentimes"
    },
    {
      "Time_Start": 678.32,
      "Time_End": 682.84,
      "Text": " I would get a warning error where it would be, like, I see that you're trying to do some,"
    },
    {
      "Time_Start": 682.84,
      "Time_End": 683.9200000000001,
      "Text": " like, software hacking."
    },
    {
      "Time_Start": 683.9200000000001,
      "Time_End": 686.0,
      "Text": " It's illegal."
    },
    {
      "Time_Start": 686.0,
      "Time_End": 689.72,
      "Text": " So once you start using the API, those, like, warning signs are off."
    },
    {
      "Time_Start": 689.72,
      "Time_End": 693.26,
      "Text": " So really, always use the API."
    },
    {
      "Time_Start": 693.26,
      "Time_End": 695.8000000000001,
      "Text": " So besides coding, you know, it's great at fuzz test."
    },
    {
      "Time_Start": 695.8000000000001,
      "Time_End": 696.8000000000001,
      "Text": " And I'll show you."
    },
    {
      "Time_Start": 696.8000000000001,
      "Time_End": 697.8000000000001,
      "Text": " It gets the whole function."
    },
    {
      "Time_Start": 697.8000000000001,
      "Time_End": 698.8000000000001,
      "Text": " We put it in."
    },
    {
      "Time_Start": 698.8000000000001,
      "Time_End": 702.28,
      "Text": " It adds it kind of mimics the functionality, creates error messages."
    },
    {
      "Time_Start": 702.28,
      "Time_End": 703.28,
      "Text": " It's really good."
    },
    {
      "Time_Start": 703.28,
      "Time_End": 709.52,
      "Text": " And third kind of, like, benefit is just the unlimited scalability, right?"
    },
    {
      "Time_Start": 709.52,
      "Time_End": 712.6,
      "Text": " Generally when we're fuzzing, we're kind of limited by person cycles because we have to"
    },
    {
      "Time_Start": 712.6,
      "Time_End": 716.72,
      "Text": " dig in the code, try to find, like, paths that are particularly vulnerable."
    },
    {
      "Time_Start": 716.72,
      "Time_End": 722.0,
      "Text": " If we're using something like LLMs which have unlimited scalability, like, there is no reason"
    },
    {
      "Time_Start": 722.0,
      "Time_End": 724.8000000000001,
      "Text": " to kind of find these high potential functions."
    },
    {
      "Time_Start": 724.8000000000001,
      "Time_End": 727.64,
      "Text": " I just let it rip on the entire repo and let it go."
    },
    {
      "Time_Start": 727.64,
      "Time_End": 730.5600000000001,
      "Text": " And we'll see, like, how that works exactly."
    },
    {
      "Time_Start": 730.5600000000001,
      "Time_End": 731.5600000000001,
      "Text": " Yeah."
    },
    {
      "Time_Start": 731.5600000000001,
      "Time_End": 736.94,
      "Text": " And I kind of integrated all these ideas straight into this tool called fuzz forest."
    },
    {
      "Time_Start": 736.94,
      "Time_End": 742.5600000000001,
      "Text": " And it uses LLMs to, like, install it, to parse the source code, create the fuzz test,"
    },
    {
      "Time_Start": 742.5600000000001,
      "Time_End": 747.72,
      "Text": " fix the nonrunning ones, and it even allows us to triage the crashes."
    },
    {
      "Time_Start": 747.72,
      "Time_End": 748.72,
      "Text": " And here's a link."
    },
    {
      "Time_Start": 748.72,
      "Time_End": 750.6400000000001,
      "Text": " Hopefully you all find it useful."
    },
    {
      "Time_Start": 750.6400000000001,
      "Time_End": 751.6400000000001,
      "Text": " Use it."
    },
    {
      "Time_Start": 751.6400000000001,
      "Time_End": 757.2800000000001,
      "Text": " Because personally I'm a big believer in writing your custom tools for all of your needs, for"
    },
    {
      "Time_Start": 757.2800000000001,
      "Time_End": 758.2800000000001,
      "Text": " your different assessments."
    },
    {
      "Time_Start": 758.2800000000001,
      "Time_End": 762.8000000000001,
      "Text": " So I hope you take inspiration, use these ideas, fork the code, whatever you need."
    },
    {
      "Time_Start": 762.8000000000001,
      "Time_End": 765.8000000000001,
      "Text": " It's for the community, basically."
    },
    {
      "Time_Start": 765.8000000000001,
      "Time_End": 767.2,
      "Text": " Okay."
    },
    {
      "Time_Start": 767.2,
      "Time_End": 771.8800000000001,
      "Text": " So this is what I generally consider like a fuzzing engagement process, right?"
    },
    {
      "Time_Start": 771.92,
      "Time_End": 773.84,
      "Text": " I kind of divide it into three sections, right?"
    },
    {
      "Time_Start": 773.84,
      "Time_End": 775.06,
      "Text": " There's the recon."
    },
    {
      "Time_Start": 775.06,
      "Time_End": 776.76,
      "Text": " We're kind of learning about the repo."
    },
    {
      "Time_Start": 776.76,
      "Time_End": 780.4,
      "Text": " We're understanding the code base and trying to find these critical code paths, which are"
    },
    {
      "Time_Start": 780.4,
      "Time_End": 784.56,
      "Text": " usually, you know, parse functions, stuff like that."
    },
    {
      "Time_Start": 784.56,
      "Time_End": 788.16,
      "Text": " The second kind of major portion is writing and running these."
    },
    {
      "Time_Start": 788.16,
      "Time_End": 791.64,
      "Text": " So we kind of have to run them, make sure they're getting good coverage, you know, either"
    },
    {
      "Time_Start": 791.64,
      "Time_End": 795.8,
      "Text": " adjust them, fix them, and let them run for a long period of time."
    },
    {
      "Time_Start": 795.8,
      "Time_End": 798.76,
      "Text": " And then finally is we're triaging the crashes, right?"
    },
    {
      "Time_Start": 798.76,
      "Time_End": 800.6,
      "Text": " We're seeing the security impact."
    },
    {
      "Time_Start": 800.6,
      "Time_End": 805.8000000000001,
      "Text": " We're reporting the vulns, if there are vulns, and giving them to the teams on how to fix"
    },
    {
      "Time_Start": 805.8000000000001,
      "Time_End": 806.8000000000001,
      "Text": " them, right?"
    },
    {
      "Time_Start": 806.8000000000001,
      "Time_End": 810.4,
      "Text": " So this is generally what I consider the three stages of an engagement process that I try"
    },
    {
      "Time_Start": 810.4,
      "Time_End": 817.32,
      "Text": " to integrate into my tool."
    },
    {
      "Time_Start": 817.32,
      "Time_End": 818.96,
      "Text": " So the first is this recon, right?"
    },
    {
      "Time_Start": 818.96,
      "Time_End": 823.0,
      "Text": " Now, like I say here, usually hackers would be limited by their capacity to understand."
    },
    {
      "Time_Start": 823.0,
      "Time_End": 827.48,
      "Text": " And it's great if we have unlimited time, but generally we're on a time limit."
    },
    {
      "Time_Start": 827.48,
      "Time_End": 832.76,
      "Text": " So we're looking for the most critical paths, doing the important things, but, you know,"
    },
    {
      "Time_Start": 832.76,
      "Time_End": 839.5600000000001,
      "Text": " since we're kind of offloading this thing to GPT, and it's great, I simply extract all"
    },
    {
      "Time_Start": 839.5600000000001,
      "Time_End": 841.08,
      "Text": " functions in the code and let it run."
    },
    {
      "Time_Start": 841.08,
      "Time_End": 849.88,
      "Text": " As you can see here in my little code snippet, I create a SQL IDB, and this fuzz recon class,"
    },
    {
      "Time_Start": 849.88,
      "Time_End": 856.2,
      "Text": " it essentially goes through and it uses the AST tool to extract every single function,"
    },
    {
      "Time_Start": 856.2,
      "Time_End": 861.24,
      "Text": " every single name, except for, you know, I don't include test functions."
    },
    {
      "Time_Start": 861.24,
      "Time_End": 864.6800000000001,
      "Text": " I don't do, like, a main function, you know, but generally we're grabbing every single"
    },
    {
      "Time_Start": 864.6800000000001,
      "Time_End": 869.2,
      "Text": " function from the code and storing it inside this SQLite database."
    },
    {
      "Time_Start": 869.2,
      "Time_End": 873.6800000000001,
      "Text": " So now that we have this SQLite database, we can generate full tests."
    },
    {
      "Time_Start": 873.6800000000001,
      "Time_End": 877.88,
      "Text": " As you can see here, we can generate, like, a fuzz test for every function, but if you"
    },
    {
      "Time_Start": 877.88,
      "Time_End": 882.48,
      "Text": " want to get a little more, like, specific, we can do functions."
    },
    {
      "Time_Start": 882.48,
      "Time_End": 887.4,
      "Text": " I added some helper functions, like contain string for parse, for load, file name, and"
    },
    {
      "Time_Start": 887.4,
      "Time_End": 889.4,
      "Text": " these are all fuzzy matches, too."
    },
    {
      "Time_Start": 889.4,
      "Time_End": 894.76,
      "Text": " So if your file name is parse XML, you know, responses or something, it'll find it."
    },
    {
      "Time_Start": 894.76,
      "Time_End": 897.6,
      "Text": " So we can, you know, these are fuzzy."
    },
    {
      "Time_Start": 897.6,
      "Time_End": 901.88,
      "Text": " And then once we have, like, the functions that we're looking for, right, these kind"
    },
    {
      "Time_Start": 901.88,
      "Time_End": 906.36,
      "Text": " of extractive functions, we can do the generate fuzz test, and this is where the cool part"
    },
    {
      "Time_Start": 906.36,
      "Time_End": 907.36,
      "Text": " is, right?"
    },
    {
      "Time_Start": 907.36,
      "Time_End": 911.96,
      "Text": " So when we get this generate fuzz, we send it over to the prompt, and this was the part"
    },
    {
      "Time_Start": 911.96,
      "Time_End": 916.48,
      "Text": " that I really struggled with, and this was, like, the real meat of it."
    },
    {
      "Time_Start": 916.48,
      "Time_End": 922.84,
      "Text": " For our prompt, as I kind of mentioned before, our prompt is what we tell the LLM to do,"
    },
    {
      "Time_Start": 922.84,
      "Time_End": 926.64,
      "Text": " and you know, with all our context and all our info, but also what it sends back."
    },
    {
      "Time_Start": 926.64,
      "Time_End": 930.1600000000001,
      "Text": " And this is what we mean by limited by the token context, right?"
    },
    {
      "Time_Start": 930.1600000000001,
      "Time_End": 934.2,
      "Text": " Like, if we could just send everything over there, it would write it correctly, but it"
    },
    {
      "Time_Start": 934.2,
      "Time_End": 935.4000000000001,
      "Text": " kind of makes it up."
    },
    {
      "Time_Start": 935.4000000000001,
      "Time_End": 940.12,
      "Text": " So I found that for our prompts, we have to add very specific examples."
    },
    {
      "Time_Start": 940.12,
      "Time_End": 946.04,
      "Text": " So I start off my prompt with a basic atheris, which is the fuzzer example code."
    },
    {
      "Time_Start": 946.04,
      "Time_End": 951.08,
      "Text": " I have to put in the API information, because if not, it would, like, create random APIs."
    },
    {
      "Time_Start": 951.08,
      "Time_End": 957.04,
      "Text": " Another more complex atheris example, and then, like, some important directives."
    },
    {
      "Time_Start": 957.04,
      "Time_End": 960.44,
      "Text": " And you'll see, like, these directives, without it, it was not working."
    },
    {
      "Time_Start": 960.44,
      "Time_End": 964.08,
      "Text": " And then finally, I kind of ended off with the right fuzzer for this and this."
    },
    {
      "Time_Start": 964.08,
      "Time_End": 965.44,
      "Text": " And there's a link to the GitHub."
    },
    {
      "Time_Start": 965.44,
      "Time_End": 969.52,
      "Text": " In total, this whole prompt, which we'll see in the next slide, is about 100 lines, or"
    },
    {
      "Time_Start": 969.52,
      "Time_End": 971.96,
      "Text": " 1,300 tokens."
    },
    {
      "Time_Start": 971.96,
      "Time_End": 973.92,
      "Text": " Yeah."
    },
    {
      "Time_Start": 973.92,
      "Time_End": 974.92,
      "Text": " So here's the prompt."
    },
    {
      "Time_Start": 974.92,
      "Time_End": 976.56,
      "Text": " And here's the beginning of the prompt, right?"
    },
    {
      "Time_Start": 976.56,
      "Time_End": 980.8,
      "Text": " So I start off with a generic, like, fuzz example, as you can see right here."
    },
    {
      "Time_Start": 980.8,
      "Time_End": 984.96,
      "Text": " This is just taken straight from, like, the docs, you know, page one of the docs."
    },
    {
      "Time_Start": 984.96,
      "Time_End": 988.96,
      "Text": " So that the LLM kind of understands what it's doing."
    },
    {
      "Time_Start": 988.96,
      "Time_End": 994.24,
      "Text": " And then down here, I actually decided to paste in the entire, like, API reference."
    },
    {
      "Time_Start": 994.24,
      "Time_End": 996.96,
      "Text": " And you can see here, there's, like, consume bytes, consume Unicode."
    },
    {
      "Time_Start": 997.32,
      "Time_End": 1002.4000000000001,
      "Text": " And the reason I decided to paste it was because if I didn't, the LLM would just kind of create"
    },
    {
      "Time_Start": 1002.4000000000001,
      "Time_End": 1008.2,
      "Text": " it'd be, like, you know, consume string or, you know, consume bytes."
    },
    {
      "Time_Start": 1008.2,
      "Time_End": 1013.08,
      "Text": " Things that don't necessarily exist in the API that just sound like exist."
    },
    {
      "Time_Start": 1013.08,
      "Time_End": 1018.8000000000001,
      "Text": " So I had to add this context, or it wouldn't work."
    },
    {
      "Time_Start": 1018.8000000000001,
      "Time_End": 1021.4000000000001,
      "Text": " And then I added another more complex example."
    },
    {
      "Time_Start": 1021.4000000000001,
      "Time_End": 1025.74,
      "Text": " This uses this kind of, like, mutation technique from libfuzzer."
    },
    {
      "Time_Start": 1025.74,
      "Time_End": 1028.22,
      "Text": " So it's kind of for more complex, like, data formats."
    },
    {
      "Time_Start": 1028.22,
      "Time_End": 1033.98,
      "Text": " And again, this was also another example just to reinforce to the LLM, like, hey, this is"
    },
    {
      "Time_Start": 1033.98,
      "Time_End": 1037.3,
      "Text": " how a more complex example is."
    },
    {
      "Time_Start": 1037.3,
      "Time_End": 1041.46,
      "Text": " But you know, an interesting thing here is, like, you see this note, the importance always"
    },
    {
      "Time_Start": 1041.46,
      "Time_End": 1047.34,
      "Text": " used that there is when I was initially, like, creating these fuzz tests, it would consistently"
    },
    {
      "Time_Start": 1047.34,
      "Time_End": 1049.38,
      "Text": " skip this instrument all."
    },
    {
      "Time_Start": 1049.38,
      "Time_End": 1053.58,
      "Text": " So it would kind of write a fuzz test, but it wouldn't have the proper, like, instrumentation."
    },
    {
      "Time_Start": 1053.58,
      "Time_End": 1056.46,
      "Text": " So I found that you have to give, like, specific directives."
    },
    {
      "Time_Start": 1056.46,
      "Time_End": 1059.58,
      "Text": " Like, use instrument all before calling main."
    },
    {
      "Time_Start": 1059.58,
      "Time_End": 1062.26,
      "Text": " And then I put an example in there."
    },
    {
      "Time_Start": 1062.26,
      "Time_End": 1066.26,
      "Text": " I also put another, like, directive."
    },
    {
      "Time_Start": 1066.26,
      "Time_End": 1071.6999999999998,
      "Text": " Before using, because it would keep writing tests, and it would keep triggering, like,"
    },
    {
      "Time_Start": 1071.6999999999998,
      "Time_End": 1072.6999999999998,
      "Text": " attribute errors."
    },
    {
      "Time_Start": 1072.6999999999998,
      "Time_End": 1075.78,
      "Text": " Because, like, you know, like, one of the main weaknesses, like I said, it would try"
    },
    {
      "Time_Start": 1075.78,
      "Time_End": 1076.78,
      "Text": " to make things up."
    },
    {
      "Time_Start": 1076.78,
      "Time_End": 1079.08,
      "Text": " So it would be, like, oh, this function sounds like it fits."
    },
    {
      "Time_Start": 1079.08,
      "Time_End": 1086.28,
      "Text": " So I found that by adding this second important statement, make sure before using any attributes,"
    },
    {
      "Time_Start": 1086.28,
      "Time_End": 1089.6399999999999,
      "Text": " methods, or functions, make sure they exist and are accessible, right?"
    },
    {
      "Time_Start": 1089.6399999999999,
      "Time_End": 1092.56,
      "Text": " So try to avoid triggering an attribute error."
    },
    {
      "Time_Start": 1092.56,
      "Time_End": 1097.3999999999999,
      "Text": " And just putting in that sentence, like, up the completion rate, like, significantly."
    },
    {
      "Time_Start": 1097.3999999999999,
      "Time_End": 1103.0,
      "Text": " So it goes to that tendency that you oftentimes have to remind, like, I know I specified it"
    },
    {
      "Time_Start": 1103.0,
      "Time_End": 1108.96,
      "Text": " before, but you kind of have to tell the LLM, hey, don't forget that you have to use variables"
    },
    {
      "Time_Start": 1109.04,
      "Time_End": 1110.04,
      "Text": " that actually exist."
    },
    {
      "Time_Start": 1110.04,
      "Time_End": 1113.8,
      "Text": " And it will kind of trigger and be like, okay, gotcha."
    },
    {
      "Time_Start": 1113.8,
      "Time_End": 1119.88,
      "Text": " And then the very last line is where I would paste in the function name and the source code."
    },
    {
      "Time_Start": 1119.88,
      "Time_End": 1127.52,
      "Text": " And this whole prompt is sent to our, the LLM, which returns, like, Python code."
    },
    {
      "Time_Start": 1127.52,
      "Time_End": 1131.88,
      "Text": " And this Python code, I just give a quick helper function where I, like, run it just"
    },
    {
      "Time_Start": 1131.88,
      "Time_End": 1133.24,
      "Text": " for two runs, right?"
    },
    {
      "Time_Start": 1133.24,
      "Time_End": 1138.52,
      "Text": " So it creates a file, it runs it, and if it's successful, I sort in a database, like, runs"
    },
    {
      "Time_Start": 1138.52,
      "Time_End": 1139.52,
      "Text": " true."
    },
    {
      "Time_Start": 1139.52,
      "Time_End": 1146.84,
      "Text": " Else, I get, like, a runs false, and I send it to this LLM agent loop."
    },
    {
      "Time_Start": 1146.84,
      "Time_End": 1150.86,
      "Text": " Or it, like, I call this, like, the fix fuzz test code, right?"
    },
    {
      "Time_Start": 1150.86,
      "Time_End": 1155.28,
      "Text": " So all of them that are marked as runs false, they're sent to this function, and it uses"
    },
    {
      "Time_Start": 1155.28,
      "Time_End": 1158.6,
      "Text": " this idea called an LLM agent loop."
    },
    {
      "Time_Start": 1158.6,
      "Time_End": 1162.6,
      "Text": " Now there's this tool that some people may have heard of called, like, lang chain, which"
    },
    {
      "Time_Start": 1162.6,
      "Time_End": 1164.6,
      "Text": " uses this concept of an agent loop."
    },
    {
      "Time_Start": 1164.6000000000001,
      "Time_End": 1169.5200000000002,
      "Text": " And what an agent loop is, it's that, it's kind of like a self-learning technique, right?"
    },
    {
      "Time_Start": 1169.5200000000002,
      "Time_End": 1174.68,
      "Text": " So you send the stuff to the LLM and say, like, here's the directive, here was the output"
    },
    {
      "Time_Start": 1174.68,
      "Time_End": 1178.2400000000002,
      "Text": " from that directive, move on to this next step."
    },
    {
      "Time_Start": 1178.2400000000002,
      "Time_End": 1182.0000000000002,
      "Text": " And for us, it's quite a simple step of, like, fix the code, right?"
    },
    {
      "Time_Start": 1182.0000000000002,
      "Time_End": 1184.6000000000001,
      "Text": " And here's the basic structure of this."
    },
    {
      "Time_Start": 1184.6000000000001,
      "Time_End": 1189.16,
      "Text": " We send the code, the non-running code, and the output to the LLM and say, you need to"
    },
    {
      "Time_Start": 1189.16,
      "Time_End": 1191.16,
      "Text": " fix this."
    },
    {
      "Time_Start": 1191.16,
      "Time_End": 1192.44,
      "Text": " It returns new code."
    },
    {
      "Time_Start": 1192.44,
      "Time_End": 1193.5200000000002,
      "Text": " We run that again."
    },
    {
      "Time_Start": 1193.52,
      "Time_End": 1199.2,
      "Text": " And if it works, we save it, else we send the updated code and the updated output back"
    },
    {
      "Time_Start": 1199.2,
      "Time_End": 1205.48,
      "Text": " to the LLM, and it keeps running until it runs without errors."
    },
    {
      "Time_Start": 1205.48,
      "Time_End": 1210.52,
      "Text": " From my experience, I put a limit of five, and that has, as you can see, we'll see later"
    },
    {
      "Time_Start": 1210.52,
      "Time_End": 1216.4,
      "Text": " in the stats, but that fixes about, like, 85% of our fuzzers."
    },
    {
      "Time_Start": 1216.4,
      "Time_End": 1217.74,
      "Text": " You can have a higher limit."
    },
    {
      "Time_Start": 1217.74,
      "Time_End": 1221.92,
      "Text": " Sometimes I try it out with, like, 10 or 20, but if it doesn't work, if it doesn't fix"
    },
    {
      "Time_Start": 1221.92,
      "Time_End": 1226.24,
      "Text": " itself within five, I find that it's not going to fix itself."
    },
    {
      "Time_Start": 1226.24,
      "Time_End": 1228.76,
      "Text": " It just doesn't really understand what's going on."
    },
    {
      "Time_Start": 1228.76,
      "Time_End": 1229.76,
      "Text": " Okay."
    },
    {
      "Time_Start": 1229.76,
      "Time_End": 1232.96,
      "Text": " Now, here are some of the actual tests."
    },
    {
      "Time_Start": 1232.96,
      "Time_End": 1236.92,
      "Text": " Now, the cool part is that I have never used, like, Twisted, right?"
    },
    {
      "Time_Start": 1236.92,
      "Time_End": 1239.28,
      "Text": " So these tests were all completely..."
    },
    {
      "Time_Start": 1239.28,
      "Time_End": 1241.6000000000001,
      "Text": " These harnesses were all written by the LLM."
    },
    {
      "Time_Start": 1241.6000000000001,
      "Time_End": 1245.8200000000002,
      "Text": " I don't know much about these, but we can already see that it's being very smart, right?"
    },
    {
      "Time_Start": 1245.8200000000002,
      "Time_End": 1251.64,
      "Text": " We're doing this FTP, and in the consume Unicode, like, the LLM knows to use, like, the sys"
    },
    {
      "Time_Start": 1251.64,
      "Time_End": 1252.64,
      "Text": " dot max size."
    },
    {
      "Time_Start": 1252.64,
      "Time_End": 1254.1200000000001,
      "Text": " I didn't specify that."
    },
    {
      "Time_Start": 1254.1200000000001,
      "Time_End": 1258.5200000000002,
      "Text": " It just kind of knows, like, this is what the fuzz test should be, and, you know, I"
    },
    {
      "Time_Start": 1258.5200000000002,
      "Time_End": 1265.1200000000001,
      "Text": " looked at the parse QS code, and there is, like, a value error catch here."
    },
    {
      "Time_Start": 1265.1200000000001,
      "Time_End": 1266.6000000000001,
      "Text": " So the fuzzer was..."
    },
    {
      "Time_Start": 1266.6000000000001,
      "Time_End": 1271.24,
      "Text": " Or the LLM was smart enough to be, like..."
    },
    {
      "Time_Start": 1271.24,
      "Time_End": 1275.92,
      "Text": " The code itself is trying to catch these value errors, so we don't need to, like, trigger,"
    },
    {
      "Time_Start": 1275.92,
      "Time_End": 1276.92,
      "Text": " you know..."
    },
    {
      "Time_Start": 1276.92,
      "Time_End": 1280.94,
      "Text": " We'll just pass them on, so that way we're not, like, getting these false positives by"
    },
    {
      "Time_Start": 1280.94,
      "Time_End": 1282.5800000000002,
      "Text": " triggering these value errors."
    },
    {
      "Time_Start": 1282.5800000000002,
      "Time_End": 1284.46,
      "Text": " The fuzzer itself was, like, okay."
    },
    {
      "Time_Start": 1284.46,
      "Time_End": 1286.22,
      "Text": " If we hit that, that's already accounted for."
    },
    {
      "Time_Start": 1286.22,
      "Time_End": 1287.22,
      "Text": " Let's just continue."
    },
    {
      "Time_Start": 1287.22,
      "Time_End": 1290.5,
      "Text": " But let's see some of these cooler ones, right?"
    },
    {
      "Time_Start": 1290.5,
      "Time_End": 1292.06,
      "Text": " This was, like, a Babel parse state."
    },
    {
      "Time_Start": 1292.06,
      "Time_End": 1296.2,
      "Text": " Babel is another super popular Python library."
    },
    {
      "Time_Start": 1296.2,
      "Time_End": 1300.3400000000001,
      "Text": " As we can see here, like, the locale and format, it wrote all of these things itself."
    },
    {
      "Time_Start": 1300.3400000000001,
      "Time_End": 1303.22,
      "Text": " And, again, I just want to stress that I didn't write any of this code."
    },
    {
      "Time_Start": 1303.22,
      "Time_End": 1306.94,
      "Text": " This was all returned to me from the LLM."
    },
    {
      "Time_Start": 1306.94,
      "Time_End": 1308.74,
      "Text": " You know, so it creates these great functions."
    },
    {
      "Time_Start": 1308.74,
      "Time_End": 1312.3,
      "Text": " It actually allows you to put, like, the locale and the format."
    },
    {
      "Time_Start": 1312.3,
      "Time_End": 1315.42,
      "Text": " And, again, this unknown locale error."
    },
    {
      "Time_Start": 1315.42,
      "Time_End": 1321.9,
      "Text": " It's a custom error-catching thing from the code, and it just integrates it."
    },
    {
      "Time_Start": 1321.9,
      "Time_End": 1323.18,
      "Text": " This one was pretty cool."
    },
    {
      "Time_Start": 1323.18,
      "Time_End": 1324.18,
      "Text": " This is, like, Boto3."
    },
    {
      "Time_Start": 1324.18,
      "Time_End": 1328.34,
      "Text": " It's another super popular Python library."
    },
    {
      "Time_Start": 1328.34,
      "Time_End": 1330.7,
      "Text": " You know, so it kind of creates this..."
    },
    {
      "Time_Start": 1330.7,
      "Time_End": 1333.78,
      "Text": " The buckets, the keys with all this, like, you know, fuzz data."
    },
    {
      "Time_Start": 1333.78,
      "Time_End": 1337.06,
      "Text": " But I thought the most interesting part was that..."
    },
    {
      "Time_Start": 1337.06,
      "Time_End": 1339.46,
      "Text": " Check out that regular expression part right here."
    },
    {
      "Time_Start": 1339.46,
      "Time_End": 1348.3,
      "Text": " It actually wrote a regex to make sure that we're, like, abiding by the S3, like, standard"
    },
    {
      "Time_Start": 1348.3,
      "Time_End": 1349.3,
      "Text": " format."
    },
    {
      "Time_Start": 1349.3,
      "Time_End": 1350.3,
      "Text": " Right?"
    },
    {
      "Time_Start": 1350.3,
      "Time_End": 1351.3,
      "Text": " So it's really powerful."
    },
    {
      "Time_Start": 1351.3,
      "Time_End": 1354.58,
      "Text": " And another thing is you can kind of see these comments at the very top."
    },
    {
      "Time_Start": 1354.58,
      "Time_End": 1358.94,
      "Text": " This was one of the functions that did not run initially, but it was sent to the fixed"
    },
    {
      "Time_Start": 1358.94,
      "Time_End": 1359.94,
      "Text": " code."
    },
    {
      "Time_Start": 1359.94,
      "Time_End": 1364.86,
      "Text": " So every time it's run through the fixed code, it actually adds its own comments to say,"
    },
    {
      "Time_Start": 1364.86,
      "Time_End": 1366.7,
      "Text": " like, what it updated, right?"
    },
    {
      "Time_Start": 1367.3400000000001,
      "Time_End": 1369.6200000000001,
      "Text": " So, like, for the initial run, it didn't actually import RE."
    },
    {
      "Time_Start": 1369.6200000000001,
      "Time_End": 1370.6200000000001,
      "Text": " It just said..."
    },
    {
      "Time_Start": 1370.6200000000001,
      "Time_End": 1373.18,
      "Text": " Which is the regular expression library."
    },
    {
      "Time_Start": 1373.18,
      "Time_End": 1375.38,
      "Text": " So when it fixed it, it imported it, right?"
    },
    {
      "Time_Start": 1375.38,
      "Time_End": 1376.82,
      "Text": " And then..."
    },
    {
      "Time_Start": 1376.82,
      "Time_End": 1382.3400000000001,
      "Text": " So it's, like, even the fixing, like, functionality is, like, really amazing."
    },
    {
      "Time_Start": 1382.3400000000001,
      "Time_End": 1386.3400000000001,
      "Text": " So it'll import itself, and it's just really powerful."
    },
    {
      "Time_Start": 1386.3400000000001,
      "Time_End": 1388.6000000000001,
      "Text": " This was actually my favorite one right here."
    },
    {
      "Time_Start": 1388.6000000000001,
      "Time_End": 1390.94,
      "Text": " This was from the Python cryptography library."
    },
    {
      "Time_Start": 1390.94,
      "Time_End": 1393.1000000000001,
      "Text": " And again, I didn't write any of this."
    },
    {
      "Time_Start": 1393.1000000000001,
      "Time_End": 1394.1000000000001,
      "Text": " The LLM did."
    },
    {
      "Time_Start": 1394.1000000000001,
      "Time_End": 1397.38,
      "Text": " It knows to use, like, different key sizes."
    },
    {
      "Time_Start": 1397.38,
      "Time_End": 1399.42,
      "Text": " Try different hashing algorithms."
    },
    {
      "Time_Start": 1399.42,
      "Time_End": 1402.14,
      "Text": " But what I think is one of the coolest parts..."
    },
    {
      "Time_Start": 1402.14,
      "Time_End": 1403.14,
      "Text": " Oops."
    },
    {
      "Time_Start": 1403.14,
      "Time_End": 1404.14,
      "Text": " My bad."
    },
    {
      "Time_Start": 1404.14,
      "Time_End": 1409.7800000000002,
      "Text": " One of the coolest parts is towards the end, it actually makes a comment about an RFC,"
    },
    {
      "Time_Start": 1409.7800000000002,
      "Time_End": 1410.7800000000002,
      "Text": " as you can see there."
    },
    {
      "Time_Start": 1410.7800000000002,
      "Time_End": 1411.7800000000002,
      "Text": " And it says..."
    },
    {
      "Time_Start": 1411.7800000000002,
      "Time_End": 1414.5000000000002,
      "Text": " The DSA signature is a pair of two integers."
    },
    {
      "Time_Start": 1414.5000000000002,
      "Time_End": 1419.0400000000002,
      "Text": " And it tells you how you can verify it by decoding the signature."
    },
    {
      "Time_Start": 1419.0400000000002,
      "Time_End": 1422.5400000000002,
      "Text": " And then it actually integrates that into the fuzzer."
    },
    {
      "Time_Start": 1422.54,
      "Time_End": 1424.3,
      "Text": " Which, you know, is..."
    },
    {
      "Time_Start": 1424.3,
      "Time_End": 1429.78,
      "Text": " As someone who's not familiar with cryptography, the fact that it's able to reference RFCs"
    },
    {
      "Time_Start": 1429.78,
      "Time_End": 1435.22,
      "Text": " and write code that actually asserts these values, to me, was, like, amazing."
    },
    {
      "Time_Start": 1435.22,
      "Time_End": 1439.1399999999999,
      "Text": " There's no way I would have been able to do this myself, you know?"
    },
    {
      "Time_Start": 1439.1399999999999,
      "Time_End": 1441.58,
      "Text": " Yeah."
    },
    {
      "Time_Start": 1441.58,
      "Time_End": 1442.58,
      "Text": " So these were some of the functions."
    },
    {
      "Time_Start": 1442.58,
      "Time_End": 1444.86,
      "Text": " So you're probably wondering, like, you know, where are the vulns?"
    },
    {
      "Time_Start": 1444.86,
      "Time_End": 1446.22,
      "Text": " How much stuff did we find?"
    },
    {
      "Time_Start": 1446.22,
      "Time_End": 1451.34,
      "Text": " Well, in total, as you can see here, it's, like, linked, and we have a little bit more"
    },
    {
      "Time_Start": 1451.34,
      "Time_End": 1452.3799999999999,
      "Text": " info than what's here."
    },
    {
      "Time_Start": 1452.3799999999999,
      "Time_End": 1455.78,
      "Text": " But we have 72 unique findings."
    },
    {
      "Time_Start": 1455.78,
      "Time_End": 1458.86,
      "Text": " And when I say findings, I don't mean, like, vulns."
    },
    {
      "Time_Start": 1458.86,
      "Time_End": 1463.3,
      "Text": " I say 72, like, unique bugs, crashes."
    },
    {
      "Time_Start": 1463.3,
      "Time_End": 1465.0,
      "Text": " Not all of them have security impacts."
    },
    {
      "Time_Start": 1465.0,
      "Time_End": 1468.1,
      "Text": " Some of them are more, like, good programming practice."
    },
    {
      "Time_Start": 1468.1,
      "Time_End": 1470.1399999999999,
      "Text": " But I was able to..."
    },
    {
      "Time_Start": 1470.1399999999999,
      "Time_End": 1471.1399999999999,
      "Text": " So far..."
    },
    {
      "Time_Start": 1471.1399999999999,
      "Time_End": 1472.22,
      "Text": " I mean, I'm still triaging them all."
    },
    {
      "Time_Start": 1472.22,
      "Time_End": 1479.1399999999999,
      "Text": " But so far, about, like, 32 real legitimate security impact findings."
    },
    {
      "Time_Start": 1479.14,
      "Time_End": 1481.0600000000002,
      "Text": " And here are, like, some of the cool ones, right?"
    },
    {
      "Time_Start": 1481.0600000000002,
      "Time_End": 1484.7800000000002,
      "Text": " Yeah, you can see it highlighted there."
    },
    {
      "Time_Start": 1484.7800000000002,
      "Time_End": 1485.7800000000002,
      "Text": " Some of these, like..."
    },
    {
      "Time_Start": 1485.7800000000002,
      "Time_End": 1486.98,
      "Text": " This is an HTTP library."
    },
    {
      "Time_Start": 1486.98,
      "Time_End": 1489.7,
      "Text": " We get, like, overflow errors for the C stuff."
    },
    {
      "Time_Start": 1489.7,
      "Time_End": 1495.5800000000002,
      "Text": " We get some easy stuff, like Unicode escape errors."
    },
    {
      "Time_Start": 1495.5800000000002,
      "Time_End": 1496.5800000000002,
      "Text": " These were..."
    },
    {
      "Time_Start": 1496.5800000000002,
      "Time_End": 1498.8600000000001,
      "Text": " Like, Flask is this web app framework."
    },
    {
      "Time_Start": 1498.8600000000001,
      "Time_End": 1500.7800000000002,
      "Text": " And this causes, like, a straight-up system exit."
    },
    {
      "Time_Start": 1500.7800000000002,
      "Time_End": 1504.74,
      "Text": " So as long as you send this one request to Flask, and everything's kind of routed to"
    },
    {
      "Time_Start": 1504.74,
      "Time_End": 1507.96,
      "Text": " the routes command, it, like, makes it crash."
    },
    {
      "Time_Start": 1507.96,
      "Time_End": 1513.88,
      "Text": " This NumPy, we're able to cause memory errors, which is a scientific computing thing in NumPy."
    },
    {
      "Time_Start": 1513.88,
      "Time_End": 1515.6000000000001,
      "Text": " These are the security impact ones."
    },
    {
      "Time_Start": 1515.6000000000001,
      "Time_End": 1519.8400000000001,
      "Text": " But there are some that are not security impact, but are just good programming practice."
    },
    {
      "Time_Start": 1519.8400000000001,
      "Time_End": 1524.28,
      "Text": " This PIL is the pillow imaging library."
    },
    {
      "Time_Start": 1524.28,
      "Time_End": 1527.3600000000001,
      "Text": " So on this decode one, we get a decompression bomb error."
    },
    {
      "Time_Start": 1527.3600000000001,
      "Time_End": 1531.68,
      "Text": " Because it says we have this huge pixel-sized image, but it's really just a recursion bug"
    },
    {
      "Time_Start": 1531.68,
      "Time_End": 1535.2,
      "Text": " that makes it crash."
    },
    {
      "Time_Start": 1535.2,
      "Time_End": 1536.92,
      "Text": " And this has error catching for it."
    },
    {
      "Time_Start": 1536.92,
      "Time_End": 1538.6000000000001,
      "Text": " But, you know, it's still pretty cool."
    },
    {
      "Time_Start": 1538.6000000000001,
      "Time_End": 1543.44,
      "Text": " And then this SciPy, we have, like, a local variable FS reference before assignment."
    },
    {
      "Time_Start": 1543.44,
      "Time_End": 1546.68,
      "Text": " Which is one of those more just, like, good coding practice things."
    },
    {
      "Time_Start": 1546.68,
      "Time_End": 1549.3200000000002,
      "Text": " Even though it can make your program crash, right?"
    },
    {
      "Time_Start": 1549.3200000000002,
      "Time_End": 1550.44,
      "Text": " And there's many, many more."
    },
    {
      "Time_Start": 1550.44,
      "Time_End": 1552.8000000000002,
      "Text": " But these are just some of, like, the..."
    },
    {
      "Time_Start": 1552.8000000000002,
      "Time_End": 1555.72,
      "Text": " Just to kind of show you, like, the type of things that I found, right?"
    },
    {
      "Time_Start": 1555.72,
      "Time_End": 1561.0,
      "Text": " And as you can see on this library field, I mean, we got bugs in Botocore and Django,"
    },
    {
      "Time_Start": 1561.0,
      "Time_End": 1563.28,
      "Text": " Flask, a bunch of stuff in NumPy."
    },
    {
      "Time_Start": 1563.28,
      "Time_End": 1567.04,
      "Text": " You know, pretty much every, like, popular Python library, we were able to, like, make"
    },
    {
      "Time_Start": 1567.04,
      "Time_End": 1570.48,
      "Text": " crash or make misbehave somehow."
    },
    {
      "Time_Start": 1570.48,
      "Time_End": 1572.8799999999999,
      "Text": " Which is really great."
    },
    {
      "Time_Start": 1572.8799999999999,
      "Time_End": 1581.52,
      "Text": " Yeah, so I kind of did this analysis with two different, like, models."
    },
    {
      "Time_Start": 1581.52,
      "Time_End": 1582.52,
      "Text": " And some more models."
    },
    {
      "Time_Start": 1582.52,
      "Time_End": 1583.52,
      "Text": " Which I'll kind of, like, describe later."
    },
    {
      "Time_Start": 1583.52,
      "Time_End": 1587.24,
      "Text": " But the OpenAI models were, like I said, the best."
    },
    {
      "Time_Start": 1587.24,
      "Time_End": 1589.96,
      "Text": " So as you can see here, the 3.5, it's significantly..."
    },
    {
      "Time_Start": 1589.96,
      "Time_End": 1592.74,
      "Text": " I tested against the same 20 libraries."
    },
    {
      "Time_Start": 1592.74,
      "Time_End": 1598.06,
      "Text": " So the 3.5, it cost 0.02 cents per 1,000 tokens."
    },
    {
      "Time_Start": 1598.06,
      "Time_End": 1605.0,
      "Text": " So we were able to create 365 fuzzers, and 172 were able to run."
    },
    {
      "Time_Start": 1605.0,
      "Time_End": 1609.26,
      "Text": " So for the initial run, we had about 47% that were actually able to run."
    },
    {
      "Time_Start": 1609.26,
      "Time_End": 1612.34,
      "Text": " And this cost 29 cents in total."
    },
    {
      "Time_Start": 1612.34,
      "Time_End": 1619.98,
      "Text": " For the GPT-4, hitting the exact same 20 libraries, it created 405, but only 29% were able to"
    },
    {
      "Time_Start": 1619.98,
      "Time_End": 1620.98,
      "Text": " run."
    },
    {
      "Time_Start": 1621.22,
      "Time_End": 1623.34,
      "Text": " So I did a lot of triaging on this and trying to figure it out."
    },
    {
      "Time_Start": 1623.34,
      "Time_End": 1628.7,
      "Text": " And I think it's because GPT-4 just created many more complex examples."
    },
    {
      "Time_Start": 1628.7,
      "Time_End": 1630.98,
      "Text": " Think about the past cryptography one."
    },
    {
      "Time_Start": 1630.98,
      "Time_End": 1633.42,
      "Text": " Those were exclusively to GPT-4."
    },
    {
      "Time_Start": 1633.42,
      "Time_End": 1636.64,
      "Text": " Versus, like, the ParseQS one was a 3.5."
    },
    {
      "Time_Start": 1636.64,
      "Time_End": 1642.22,
      "Text": " So from my analysis, the four were much more complex."
    },
    {
      "Time_Start": 1642.22,
      "Time_End": 1645.8600000000001,
      "Text": " And that's why they didn't run during the initial creation of it."
    },
    {
      "Time_Start": 1645.8600000000001,
      "Time_End": 1649.18,
      "Text": " They needed to import more libraries and stuff like that."
    },
    {
      "Time_Start": 1649.18,
      "Time_End": 1655.46,
      "Text": " But after I ran the five-try-fix loop, the 3.5 was able to fix a significant number."
    },
    {
      "Time_Start": 1655.46,
      "Time_End": 1659.54,
      "Text": " It got up to 75% for a total cost of 42 cents."
    },
    {
      "Time_Start": 1659.54,
      "Time_End": 1664.18,
      "Text": " Versus the four, it actually managed to fix more after that loop."
    },
    {
      "Time_Start": 1664.18,
      "Time_End": 1670.22,
      "Text": " So we got about 86% were actually able to run and fuzz and get continuous coverage."
    },
    {
      "Time_Start": 1670.22,
      "Time_End": 1671.22,
      "Text": " Like decent coverage."
    },
    {
      "Time_Start": 1671.22,
      "Time_End": 1675.54,
      "Text": " I also wanted to get over hundreds of paths covered."
    },
    {
      "Time_Start": 1675.54,
      "Time_End": 1679.74,
      "Text": " So if they didn't reach at least 100 paths, I would just cut them off there and send them"
    },
    {
      "Time_Start": 1679.74,
      "Time_End": 1682.3,
      "Text": " again to fix fuzz tests."
    },
    {
      "Time_Start": 1682.3,
      "Time_End": 1688.3,
      "Text": " But anyway, as you can see here, the 3.5, just for 71 cents total, we were able to get"
    },
    {
      "Time_Start": 1688.3,
      "Time_End": 1690.74,
      "Text": " 46 unique crashes."
    },
    {
      "Time_Start": 1690.74,
      "Time_End": 1696.1399999999999,
      "Text": " For the four, it cost about $50, but we were able to get 65 crashes."
    },
    {
      "Time_Start": 1696.1399999999999,
      "Time_End": 1698.98,
      "Text": " Many of them converged and they were the same."
    },
    {
      "Time_Start": 1698.98,
      "Time_End": 1703.82,
      "Text": " The GPT-4 were often more complex, but they usually crashed in some of the same parts"
    },
    {
      "Time_Start": 1703.82,
      "Time_End": 1705.02,
      "Text": " as 3.5."
    },
    {
      "Time_Start": 1705.02,
      "Time_End": 1709.28,
      "Text": " So there were unique ones, but just because we're kind of targeting these greenfield projects"
    },
    {
      "Time_Start": 1709.28,
      "Time_End": 1717.66,
      "Text": " that don't have a lot of fuzzers to them, they found many of the same bugs."
    },
    {
      "Time_Start": 1717.66,
      "Time_End": 1723.34,
      "Text": " So basically, for $50, you can write fuzzers and get a lot of volums out of here, which"
    },
    {
      "Time_Start": 1723.34,
      "Time_End": 1731.18,
      "Text": " is definitely cheaper than any software dev or hacker, pentester, et cetera."
    },
    {
      "Time_Start": 1732.0600000000002,
      "Time_End": 1733.78,
      "Text": " Another part is these other models."
    },
    {
      "Time_Start": 1733.78,
      "Time_End": 1740.22,
      "Text": " I keep talking about open AI models, and you're probably wondering why would I use these exclusively?"
    },
    {
      "Time_Start": 1740.22,
      "Time_End": 1746.0600000000002,
      "Text": " Isn't there others like Salesforce, Repelit, this hugging face star coder and stuff like"
    },
    {
      "Time_Start": 1746.0600000000002,
      "Time_End": 1747.0600000000002,
      "Text": " that?"
    },
    {
      "Time_Start": 1747.0600000000002,
      "Time_End": 1749.02,
      "Text": " Because you can run these locally on your machine."
    },
    {
      "Time_Start": 1749.02,
      "Time_End": 1750.02,
      "Text": " Are they as powerful?"
    },
    {
      "Time_Start": 1750.02,
      "Time_End": 1752.26,
      "Text": " And honestly, no, not yet."
    },
    {
      "Time_Start": 1752.26,
      "Time_End": 1755.54,
      "Text": " These were some of the model comparisons for the same one."
    },
    {
      "Time_Start": 1755.54,
      "Time_End": 1759.6200000000001,
      "Text": " As you can see, the star coder, it doesn't even make sense, honestly."
    },
    {
      "Time_Start": 1759.6200000000001,
      "Time_End": 1764.3000000000002,
      "Text": " It just doesn't import the correct libraries or anything like that."
    },
    {
      "Time_Start": 1764.3000000000002,
      "Time_End": 1770.5800000000002,
      "Text": " The Salesforce one as well, it's going dev, view, random, RB, and it kind of imports this."
    },
    {
      "Time_Start": 1770.5800000000002,
      "Time_End": 1775.8400000000001,
      "Text": " We're using the exact same prompt, but it's still like, I don't know what to do with this"
    },
    {
      "Time_Start": 1775.8400000000001,
      "Time_End": 1776.98,
      "Text": " or how to use it at all."
    },
    {
      "Time_Start": 1776.98,
      "Time_End": 1783.7,
      "Text": " So open AI models are just, at least in my experience, just a level above, at least for"
    },
    {
      "Time_Start": 1783.7,
      "Time_End": 1788.22,
      "Text": " code generation and understanding."
    },
    {
      "Time_Start": 1788.22,
      "Time_End": 1796.22,
      "Text": " So the next steps in this, I'm currently reporting all the bugs and notifying all the teams."
    },
    {
      "Time_Start": 1796.22,
      "Time_End": 1797.38,
      "Text": " That's going really well."
    },
    {
      "Time_Start": 1797.38,
      "Time_End": 1803.1000000000001,
      "Text": " The next steps, of course, are to add some JavaScript functionality, because that's the"
    },
    {
      "Time_Start": 1803.1000000000001,
      "Time_End": 1807.38,
      "Text": " second language that open AI understands best."
    },
    {
      "Time_Start": 1807.38,
      "Time_End": 1811.06,
      "Text": " So that's kind of the big project that's next."
    },
    {
      "Time_Start": 1811.06,
      "Time_End": 1816.54,
      "Text": " I also did a little bit of testing on improving existing fuzzers."
    },
    {
      "Time_Start": 1816.54,
      "Time_End": 1820.58,
      "Text": " So I did very minimal of where I would get an existing Chrome fuzzer or a Linux kernel"
    },
    {
      "Time_Start": 1820.58,
      "Time_End": 1827.5,
      "Text": " fuzzer that are in C, and basically tell the LM, here's an existing fuzzer."
    },
    {
      "Time_Start": 1827.5,
      "Time_End": 1830.58,
      "Text": " Try to improve it."
    },
    {
      "Time_Start": 1830.58,
      "Time_End": 1836.62,
      "Text": " For this, I had some limited success, so I think I just need to..."
    },
    {
      "Time_Start": 1836.62,
      "Time_End": 1841.6599999999999,
      "Text": " One of the main goals is to improve the prompts to get more coverage."
    },
    {
      "Time_Start": 1841.6599999999999,
      "Time_End": 1846.06,
      "Text": " A big part of it is kind of figuring out these prompts, knowing what to ask for, knowing"
    },
    {
      "Time_Start": 1846.06,
      "Time_End": 1847.3,
      "Text": " how to ask for it."
    },
    {
      "Time_Start": 1847.3,
      "Time_End": 1848.3,
      "Text": " It's really weird."
    },
    {
      "Time_Start": 1848.3,
      "Time_End": 1849.3,
      "Text": " It's like incantations."
    },
    {
      "Time_Start": 1849.3,
      "Time_End": 1850.3799999999999,
      "Text": " You don't know what's..."
    },
    {
      "Time_Start": 1850.3799999999999,
      "Time_End": 1854.58,
      "Text": " You're just kind of waving things and hoping it gives you a right answer."
    },
    {
      "Time_Start": 1854.58,
      "Time_End": 1858.78,
      "Text": " Second goal is integrate out-of-the-box usage of different models, especially when they"
    },
    {
      "Time_Start": 1858.78,
      "Time_End": 1859.78,
      "Text": " get better."
    },
    {
      "Time_Start": 1859.78,
      "Time_End": 1862.7,
      "Text": " This is kind of low priority, because as we saw, these different models, they're just"
    },
    {
      "Time_Start": 1862.7,
      "Time_End": 1865.02,
      "Text": " not up to snuff."
    },
    {
      "Time_Start": 1865.02,
      "Time_End": 1870.1799999999998,
      "Text": " I want to improve the coverage and analytics, but I think a big improvement is this unit"
    },
    {
      "Time_Start": 1870.1799999999998,
      "Time_End": 1871.1799999999998,
      "Text": " test."
    },
    {
      "Time_Start": 1871.1799999999998,
      "Time_End": 1875.7,
      "Text": " I'd like to modify it to write a unit test for these functions, especially to catch these"
    },
    {
      "Time_Start": 1875.74,
      "Time_End": 1877.66,
      "Text": " crashes."
    },
    {
      "Time_Start": 1877.66,
      "Time_End": 1883.8600000000001,
      "Text": " I know that this is a worthwhile investment of time, because while I was performing this"
    },
    {
      "Time_Start": 1883.8600000000001,
      "Time_End": 1887.9,
      "Text": " research throughout the beginning of the year and through summer, GitHub announced their"
    },
    {
      "Time_Start": 1887.9,
      "Time_End": 1894.1000000000001,
      "Text": " program CopilotX, which is supposed to integrate itself into the code base and list automatic"
    },
    {
      "Time_Start": 1894.1000000000001,
      "Time_End": 1898.46,
      "Text": " unit test creation as a major feature."
    },
    {
      "Time_Start": 1898.46,
      "Time_End": 1903.26,
      "Text": " As you can see, this kind of test creation is really what excels at."
    },
    {
      "Time_Start": 1903.26,
      "Time_End": 1909.62,
      "Text": " That's one of their main selling points for this really expensive CopilotX project."
    },
    {
      "Time_Start": 1909.62,
      "Time_End": 1911.78,
      "Text": " It's something that we can do very easily."
    },
    {
      "Time_Start": 1911.78,
      "Time_End": 1912.94,
      "Text": " We're writing fuzzers."
    },
    {
      "Time_Start": 1912.94,
      "Time_End": 1918.66,
      "Text": " Unit tests are just kind of like a small modification to that."
    },
    {
      "Time_Start": 1918.66,
      "Time_End": 1924.22,
      "Text": " This just ended off with this implication for AI, for security people."
    },
    {
      "Time_Start": 1924.22,
      "Time_End": 1929.02,
      "Text": " We keep hearing that chatGBT will eliminate software devs."
    },
    {
      "Time_Start": 1929.02,
      "Time_End": 1931.02,
      "Text": " Will it end security professionals too?"
    },
    {
      "Time_Start": 1931.62,
      "Time_End": 1933.82,
      "Text": " No to either of those."
    },
    {
      "Time_Start": 1933.82,
      "Time_End": 1937.26,
      "Text": " Not only is it not good at finding bugs, it can't even write bug-free code."
    },
    {
      "Time_Start": 1937.26,
      "Time_End": 1942.1399999999999,
      "Text": " Often from the test, it had bugs in it."
    },
    {
      "Time_Start": 1942.1399999999999,
      "Time_End": 1943.74,
      "Text": " In fact, I actually think the opposite."
    },
    {
      "Time_Start": 1943.74,
      "Time_End": 1946.62,
      "Text": " There's increasing software creation because of these tools."
    },
    {
      "Time_Start": 1946.62,
      "Time_End": 1950.66,
      "Text": " I know many people that are using it to write easy scripts."
    },
    {
      "Time_Start": 1950.66,
      "Time_End": 1954.74,
      "Text": " More people are creating more software, so there's just going to be more opportunities"
    },
    {
      "Time_Start": 1954.74,
      "Time_End": 1957.3,
      "Text": " for these bugs to be introduced."
    },
    {
      "Time_Start": 1957.3799999999999,
      "Time_End": 1964.26,
      "Text": " The trend, as has been throughout the history of offset, is that the bugs will become more"
    },
    {
      "Time_Start": 1964.26,
      "Time_End": 1967.4199999999998,
      "Text": " subtle and harder to find."
    },
    {
      "Time_Start": 1967.4199999999998,
      "Time_End": 1971.82,
      "Text": " They're going to keep popping up, but it's just going to be more difficult."
    },
    {
      "Time_Start": 1971.82,
      "Time_End": 1977.98,
      "Text": " I put a link here to this famous paper called The Art and Science and Engineering of Fuzzing."
    },
    {
      "Time_Start": 1977.98,
      "Time_End": 1979.8999999999999,
      "Text": " I think it holds very true."
    },
    {
      "Time_Start": 1979.8999999999999,
      "Time_End": 1984.62,
      "Text": " Sure, the LLMs may be able to abstract some of this engineering, but it's really more"
    },
    {
      "Time_Start": 1984.62,
      "Time_End": 1985.62,
      "Text": " than that."
    },
    {
      "Time_Start": 1985.94,
      "Time_End": 1992.22,
      "Text": " It's knowing how to set it, the art of it, in order to get the good coverage and find"
    },
    {
      "Time_Start": 1992.22,
      "Time_End": 1993.22,
      "Text": " these bugs."
    },
    {
      "Time_Start": 1993.22,
      "Time_End": 1994.22,
      "Text": " Don't worry, guys."
    },
    {
      "Time_Start": 1994.22,
      "Time_End": 2000.7800000000002,
      "Text": " We're still going to have jobs for a couple of years."
    },
    {
      "Time_Start": 2000.7800000000002,
      "Time_End": 2006.8200000000002,
      "Text": " Then basically, to go along with the DEF CON theme, what we really have to do is we really"
    },
    {
      "Time_Start": 2006.8200000000002,
      "Time_End": 2007.8200000000002,
      "Text": " have to adapt."
    },
    {
      "Time_Start": 2007.8200000000002,
      "Time_End": 2011.46,
      "Text": " I feel we have to adapt to this new tech and ride the wave into the future."
    },
    {
      "Time_Start": 2011.46,
      "Time_End": 2013.0200000000002,
      "Text": " There's always going to be new things."
    },
    {
      "Time_Start": 2013.02,
      "Time_End": 2017.18,
      "Text": " Like I said, as security people, we're super jaded because everything is new."
    },
    {
      "Time_Start": 2017.18,
      "Time_End": 2021.02,
      "Text": " We just see the same things pop up."
    },
    {
      "Time_Start": 2021.02,
      "Time_End": 2025.22,
      "Text": " I feel like we have to use these tools to their best potential and use them to the best"
    },
    {
      "Time_Start": 2025.22,
      "Time_End": 2028.3799999999999,
      "Text": " of our abilities and ride the wave into the future."
    },
    {
      "Time_Start": 2028.3799999999999,
      "Time_End": 2029.3799999999999,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2029.3799999999999,
      "Time_End": 2037.02,
      "Text": " Here are the different blog posts that really talk about this stuff in detail."
    },
    {
      "Time_Start": 2037.02,
      "Time_End": 2039.26,
      "Text": " I'm actually going through the code."
    },
    {
      "Time_Start": 2039.26,
      "Time_End": 2042.98,
      "Text": " I show actual code snippets of the agent loops and stuff like this."
    },
    {
      "Time_Start": 2043.94,
      "Time_End": 2048.22,
      "Text": " These slides are more at a high level, but if you really want to dig deep, go into these"
    },
    {
      "Time_Start": 2048.22,
      "Time_End": 2050.26,
      "Text": " blog posts."
    },
    {
      "Time_Start": 2050.26,
      "Time_End": 2055.18,
      "Text": " These are a really good prompt course that I use throughout my research."
    },
    {
      "Time_Start": 2055.18,
      "Time_End": 2061.26,
      "Text": " These were other blog posts that really helped formulate this idea."
    },
    {
      "Time_Start": 2061.26,
      "Time_End": 2063.58,
      "Text": " I talked to some of these people."
    },
    {
      "Time_Start": 2063.58,
      "Time_End": 2066.98,
      "Text": " They just gave me good feedback to really make this and really find all the different"
    },
    {
      "Time_Start": 2066.98,
      "Time_End": 2067.98,
      "Text": " bugs."
    },
    {
      "Time_Start": 2067.98,
      "Time_End": 2068.98,
      "Text": " That's it."
    },
    {
      "Time_Start": 2068.98,
      "Time_End": 2069.98,
      "Text": " Thank you, guys."
    },
    {
      "Time_Start": 2069.98,
      "Time_End": 2070.98,
      "Text": " Awesome."
    },
    {
      "Time_Start": 2070.98,
      "Time_End": 2071.98,
      "Text": " Awesome."
    },
    {
      "Time_Start": 2071.98,
      "Time_End": 2072.98,
      "Text": " Nice."
    },
    {
      "Time_Start": 2072.98,
      "Time_End": 2073.98,
      "Text": " Yeah."
    },
    {
      "Time_Start": 2073.98,
      "Time_End": 2074.98,
      "Text": " Does anyone have any questions?"
    },
    {
      "Time_Start": 2074.98,
      "Time_End": 2075.98,
      "Text": " We have a mic over there."
    },
    {
      "Time_Start": 2075.98,
      "Time_End": 2076.98,
      "Text": " A mic right here?"
    },
    {
      "Time_Start": 2076.98,
      "Time_End": 2077.98,
      "Text": " Yep."
    },
    {
      "Time_Start": 2077.98,
      "Time_End": 2078.98,
      "Text": " We've got to get back."
    },
    {
      "Time_Start": 2078.98,
      "Time_End": 2090.26,
      "Text": " All right, sorry."
    },
    {
      "Time_Start": 2090.26,
      "Time_End": 2093.62,
      "Text": " I really appreciated your breakdown on total cost."
    },
    {
      "Time_Start": 2093.62,
      "Time_End": 2100.32,
      "Text": " I'm wondering if maybe not quite yet or if it's kind of in your plan to explore what"
    },
    {
      "Time_Start": 2100.32,
      "Time_End": 2104.2000000000003,
      "Text": " it looks like to automatically generate and try to automatically fix these things up to"
    },
    {
      "Time_Start": 2104.2000000000003,
      "Time_End": 2106.88,
      "Text": " a certain budget."
    },
    {
      "Time_Start": 2106.88,
      "Time_End": 2113.2000000000003,
      "Text": " Because right now, especially with GPT 3.5, it looks like it would end up being more cost-effective,"
    },
    {
      "Time_Start": 2113.2000000000003,
      "Time_End": 2116.38,
      "Text": " especially for a team that's maybe got to be budget-conscious to get a lot of fuzzing"
    },
    {
      "Time_Start": 2116.38,
      "Time_End": 2118.92,
      "Text": " done when they only care about, let's say, the bottom 80%."
    },
    {
      "Time_Start": 2118.92,
      "Time_End": 2122.92,
      "Text": " I don't know if that's something that you've already explored or..."
    },
    {
      "Time_Start": 2122.92,
      "Time_End": 2124.96,
      "Text": " Yeah, definitely."
    },
    {
      "Time_Start": 2124.96,
      "Time_End": 2132.2400000000002,
      "Text": " If you want mass scale, the way I see it is 3.5 is solid, but the 4 just gives you"
    },
    {
      "Time_Start": 2132.2400000000002,
      "Time_End": 2135.48,
      "Text": " such a higher level just for a small additional cost."
    },
    {
      "Time_Start": 2135.48,
      "Time_End": 2139.52,
      "Text": " I mean, 50 bucks is not that much, but I do agree with you."
    },
    {
      "Time_Start": 2139.52,
      "Time_End": 2143.2,
      "Text": " I think if you want just a quick and dirty, 3.5 is what you can do."
    },
    {
      "Time_Start": 2143.2,
      "Time_End": 2144.2,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2144.2,
      "Time_End": 2145.2,
      "Text": " Hi."
    },
    {
      "Time_Start": 2145.2,
      "Time_End": 2153.2400000000002,
      "Text": " I saw you had the comparison of the review-win ratio between 3.5 and 4, and I'm wondering,"
    },
    {
      "Time_Start": 2153.2400000000002,
      "Time_End": 2158.48,
      "Text": " for the ones that made it, did 3.5 take more iterations to fix something than 4?"
    },
    {
      "Time_Start": 2158.48,
      "Time_End": 2161.84,
      "Text": " Did 4 fix it in one try more than 3.5?"
    },
    {
      "Time_Start": 2161.84,
      "Time_End": 2162.84,
      "Text": " Yes."
    },
    {
      "Time_Start": 2162.84,
      "Time_End": 2171.92,
      "Text": " Actually, 3.5 often hit the 5 limit, very often, versus the 4, it almost always fixed"
    },
    {
      "Time_Start": 2171.92,
      "Time_End": 2172.92,
      "Text": " it."
    },
    {
      "Time_Start": 2172.92,
      "Time_End": 2173.92,
      "Text": " All of these were..."
    },
    {
      "Time_Start": 2173.92,
      "Time_End": 2181.28,
      "Text": " The 80% were within the 4, oftentimes within the 2 or 3, versus the 3.5, it always hit"
    },
    {
      "Time_Start": 2181.28,
      "Time_End": 2182.28,
      "Text": " the 5."
    },
    {
      "Time_Start": 2182.28,
      "Time_End": 2186.6000000000004,
      "Text": " When it fixed them, it would always hit the 5."
    },
    {
      "Time_Start": 2186.6000000000004,
      "Time_End": 2190.0400000000004,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2190.0400000000004,
      "Time_End": 2194.5400000000004,
      "Text": " One of the concerns raised at a lot of presentations with LLMs is that they can't really describe"
    },
    {
      "Time_Start": 2194.5400000000004,
      "Time_End": 2198.4,
      "Text": " the method by which they arrived at their result, and maybe that's going to get better"
    },
    {
      "Time_Start": 2198.4,
      "Time_End": 2199.4,
      "Text": " over time."
    },
    {
      "Time_Start": 2199.4,
      "Time_End": 2204.7000000000003,
      "Text": " In fuzzing, we're usually concerned about documenting the process as much as possible"
    },
    {
      "Time_Start": 2204.7000000000003,
      "Time_End": 2211.1200000000003,
      "Text": " so we can replicate the crash or error consistently, or pass the context to your devs so that they"
    },
    {
      "Time_Start": 2211.12,
      "Time_End": 2214.92,
      "Text": " can hopefully patch out the edge cases as much as they can."
    },
    {
      "Time_Start": 2214.92,
      "Time_End": 2218.3599999999997,
      "Text": " So I'd be worried that you end up with a really cool fuzzing capability, but it's a black"
    },
    {
      "Time_Start": 2218.3599999999997,
      "Time_End": 2220.3199999999997,
      "Text": " box to everyone that's using it."
    },
    {
      "Time_Start": 2220.3199999999997,
      "Time_End": 2223.68,
      "Text": " So what recommendations do you have for the audience in regards to documenting your process"
    },
    {
      "Time_Start": 2223.68,
      "Time_End": 2228.12,
      "Text": " as you're forging your prompts and working through creating these?"
    },
    {
      "Time_Start": 2228.12,
      "Time_End": 2229.3599999999997,
      "Text": " Yeah, absolutely."
    },
    {
      "Time_Start": 2229.3599999999997,
      "Time_End": 2234.08,
      "Text": " That's a great question."
    },
    {
      "Time_Start": 2234.08,
      "Time_End": 2235.48,
      "Text": " I try to do this with all my work."
    },
    {
      "Time_Start": 2235.48,
      "Time_End": 2237.44,
      "Text": " I try to be driven by metrics, right?"
    },
    {
      "Time_Start": 2237.44,
      "Time_End": 2243.12,
      "Text": " So every single test case, I put it in a separate directory, and it's not here in this"
    },
    {
      "Time_Start": 2243.12,
      "Time_End": 2244.12,
      "Text": " code snippet."
    },
    {
      "Time_Start": 2244.12,
      "Time_End": 2245.7200000000003,
      "Text": " It is in the blog post."
    },
    {
      "Time_Start": 2245.7200000000003,
      "Time_End": 2252.8,
      "Text": " But we save all the run output into a specifically formatted .json file, which we later are able"
    },
    {
      "Time_Start": 2252.8,
      "Time_End": 2256.0,
      "Text": " to triage, because that's a very good point."
    },
    {
      "Time_Start": 2256.0,
      "Time_End": 2261.0,
      "Text": " I also work by creating a directory for every single fuzz test and stuff like that so that"
    },
    {
      "Time_Start": 2261.0,
      "Time_End": 2263.7200000000003,
      "Text": " we know exactly where it's at."
    },
    {
      "Time_Start": 2263.7200000000003,
      "Time_End": 2267.2400000000002,
      "Text": " But yeah, basically log every single thing in the JSON format."
    },
    {
      "Time_Start": 2268.0400000000004,
      "Time_End": 2273.5600000000004,
      "Text": " Have you found that some libraries or some types of functions, it has better intuition"
    },
    {
      "Time_Start": 2273.5600000000004,
      "Time_End": 2276.5600000000004,
      "Text": " on how it writes fuzzing functions for?"
    },
    {
      "Time_Start": 2276.5600000000004,
      "Time_End": 2277.5600000000004,
      "Text": " Yes, definitely."
    },
    {
      "Time_Start": 2277.5600000000004,
      "Time_End": 2283.1200000000003,
      "Text": " If it's well used, if it's like a request library, we'll get a lot of bugs, and it'll"
    },
    {
      "Time_Start": 2283.1200000000003,
      "Time_End": 2287.5200000000004,
      "Text": " be able to write, like the cryptography, it was able to write really good, intricate tests."
    },
    {
      "Time_Start": 2287.5200000000004,
      "Time_End": 2295.44,
      "Text": " But if it's a library that's not as popular, like say this IO HTTP, which is not as, there's"
    },
    {
      "Time_Start": 2295.44,
      "Time_End": 2300.52,
      "Text": " not just as much stuff out there, it doesn't really know how to use it."
    },
    {
      "Time_Start": 2300.52,
      "Time_End": 2304.4,
      "Text": " So we'd get a lot of those attribute errors, because there's just not enough info for it"
    },
    {
      "Time_Start": 2304.4,
      "Time_End": 2306.68,
      "Text": " to use."
    },
    {
      "Time_Start": 2306.68,
      "Time_End": 2313.08,
      "Text": " Did you experiment with the temperature settings, or did you always use the default .7 parameter?"
    },
    {
      "Time_Start": 2313.08,
      "Time_End": 2320.76,
      "Text": " No, I actually found that if you go a little bit, if you increase it more, like .7 was"
    },
    {
      "Time_Start": 2320.76,
      "Time_End": 2326.6800000000003,
      "Text": " decent, but if you increase it specifically towards like the .9 and higher, that's when"
    },
    {
      "Time_Start": 2326.6800000000003,
      "Time_End": 2329.2400000000002,
      "Text": " you start getting these really cool, interesting fuzzers."
    },
    {
      "Time_Start": 2329.2400000000002,
      "Time_End": 2330.92,
      "Text": " So that's one of the main things, yeah."
    },
    {
      "Time_Start": 2330.92,
      "Time_End": 2335.2000000000003,
      "Text": " Did you find an increase in hallucinations by increasing the temperature?"
    },
    {
      "Time_Start": 2335.2000000000003,
      "Time_End": 2336.44,
      "Text": " Yes, definitely."
    },
    {
      "Time_Start": 2336.44,
      "Time_End": 2341.44,
      "Text": " So after I increased the temperature, that's when I had to add like those attribute reminders,"
    },
    {
      "Time_Start": 2341.44,
      "Time_End": 2343.2000000000003,
      "Text": " because it would just kind of make it up out of nowhere."
    },
    {
      "Time_Start": 2343.2000000000003,
      "Time_End": 2345.6000000000004,
      "Text": " So yes, I tried to combat that, yeah."
    },
    {
      "Time_Start": 2345.6000000000004,
      "Time_End": 2346.6000000000004,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2346.6000000000004,
      "Time_End": 2347.6000000000004,
      "Text": " Hello."
    },
    {
      "Time_Start": 2347.92,
      "Time_End": 2353.3199999999997,
      "Text": " More of a kudos, but from creating vulnerability, exploits and fuzzing from manually, that looks"
    },
    {
      "Time_Start": 2353.3199999999997,
      "Time_End": 2355.4,
      "Text": " like it's going to save a lot of time."
    },
    {
      "Time_Start": 2355.4,
      "Time_End": 2360.14,
      "Text": " And I can concur with you with vendors who release products into production that are"
    },
    {
      "Time_Start": 2360.14,
      "Time_End": 2361.2799999999997,
      "Text": " very easily crashed."
    },
    {
      "Time_Start": 2361.2799999999997,
      "Time_End": 2364.24,
      "Text": " I've had a few vendors reach out to me to help them fix them, and I said no."
    },
    {
      "Time_Start": 2364.24,
      "Time_End": 2365.88,
      "Text": " I just alerted them, right?"
    },
    {
      "Time_Start": 2365.88,
      "Time_End": 2368.64,
      "Text": " But it's very, I agree with everything you're saying, so thank you."
    },
    {
      "Time_Start": 2368.64,
      "Time_End": 2369.64,
      "Text": " Yeah, cheers."
    },
    {
      "Time_Start": 2369.64,
      "Time_End": 2374.6,
      "Text": " Yeah, luckily people are like open to fixing it, but yeah, definitely."
    },
    {
      "Time_Start": 2374.6,
      "Time_End": 2380.0,
      "Text": " In your talk, you mentioned that integrating lang chains isn't worth it, and I was curious"
    },
    {
      "Time_Start": 2380.0,
      "Time_End": 2386.3199999999997,
      "Text": " what your routines for like stitching automation around these processes was like and your approach"
    },
    {
      "Time_Start": 2386.3199999999997,
      "Time_End": 2387.3199999999997,
      "Text": " to that."
    },
    {
      "Time_Start": 2387.3199999999997,
      "Time_End": 2388.3199999999997,
      "Text": " Yeah, definitely."
    },
    {
      "Time_Start": 2388.3199999999997,
      "Time_End": 2390.44,
      "Text": " Yeah, we could."
    },
    {
      "Time_Start": 2390.44,
      "Time_End": 2391.44,
      "Text": " So basically-"
    },
    {
      "Time_Start": 2391.44,
      "Time_End": 2392.44,
      "Text": " I'll be here for the sidebar."
    },
    {
      "Time_Start": 2392.44,
      "Time_End": 2393.44,
      "Text": " Yeah, yeah."
    },
    {
      "Time_Start": 2393.44,
      "Time_End": 2394.44,
      "Text": " For exactly."
    },
    {
      "Time_Start": 2394.44,
      "Time_End": 2396.2,
      "Text": " Basically, lang chain is just a really complex library."
    },
    {
      "Time_Start": 2396.2,
      "Time_End": 2404.04,
      "Text": " So it integrates these tools like Python and stuff like that, but in my experience, it's"
    },
    {
      "Time_Start": 2404.04,
      "Time_End": 2407.08,
      "Text": " like importing a gigantic library to do a small task."
    },
    {
      "Time_Start": 2407.08,
      "Time_End": 2412.2,
      "Text": " So I found that it's better just to like implement your own small loop with these specific tools,"
    },
    {
      "Time_Start": 2412.2,
      "Time_End": 2417.12,
      "Text": " because it has like a Python interpreter, but it's so wieldy and it tries to do everything."
    },
    {
      "Time_Start": 2417.12,
      "Time_End": 2423.56,
      "Text": " It tries to like instrument it and stuff that just writing a basic like Python run tool"
    },
    {
      "Time_Start": 2423.56,
      "Time_End": 2425.02,
      "Text": " is like much more effective."
    },
    {
      "Time_Start": 2425.02,
      "Time_End": 2429.48,
      "Text": " It may be better if you have like some crazy huge project, but I found that lang chain"
    },
    {
      "Time_Start": 2429.48,
      "Time_End": 2432.64,
      "Text": " is just too much stuff for something simple."
    },
    {
      "Time_Start": 2433.3599999999997,
      "Time_End": 2434.3599999999997,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2434.3599999999997,
      "Time_End": 2436.4,
      "Text": " That was a great talk, by the way."
    },
    {
      "Time_Start": 2436.4,
      "Time_End": 2437.4,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2437.4,
      "Time_End": 2446.08,
      "Text": " So have you experimented doing this with maybe an API interface or fuzzing an API interface"
    },
    {
      "Time_Start": 2446.08,
      "Time_End": 2453.12,
      "Text": " or a web interface where you describe its inputs and outputs and try to write tests"
    },
    {
      "Time_Start": 2453.12,
      "Time_End": 2454.96,
      "Text": " around that?"
    },
    {
      "Time_Start": 2454.96,
      "Time_End": 2456.6,
      "Text": " Similar, right?"
    },
    {
      "Time_Start": 2456.6,
      "Time_End": 2460.92,
      "Text": " So you can put an API and it kind of understands it."
    },
    {
      "Time_Start": 2460.92,
      "Time_End": 2464.44,
      "Text": " I had some good success with like OAuth systems."
    },
    {
      "Time_Start": 2464.44,
      "Time_End": 2469.96,
      "Text": " So I'd like paste the documentation of an OAuth system and it would be able to do like"
    },
    {
      "Time_Start": 2469.96,
      "Time_End": 2473.04,
      "Text": " the token exchanges and stuff like that."
    },
    {
      "Time_Start": 2473.04,
      "Time_End": 2480.88,
      "Text": " So it works limitedly like that, but if you were able to put like an open API like spec,"
    },
    {
      "Time_Start": 2480.88,
      "Time_End": 2485.2000000000003,
      "Text": " it doesn't really know how to, it can write requests, but if you wanted to do something"
    },
    {
      "Time_Start": 2485.2000000000003,
      "Time_End": 2491.84,
      "Text": " a little bit more complex like switch requests or put binary data into them, it doesn't really"
    },
    {
      "Time_Start": 2491.84,
      "Time_End": 2492.84,
      "Text": " know that."
    },
    {
      "Time_Start": 2492.84,
      "Time_End": 2498.4,
      "Text": " So simple things that exist, yes, but just open like REST APIs, no."
    },
    {
      "Time_Start": 2498.4,
      "Time_End": 2500.36,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2500.36,
      "Time_End": 2506.4,
      "Text": " It sounds like you really care about the quality of software in the world."
    },
    {
      "Time_Start": 2506.4,
      "Time_End": 2508.84,
      "Text": " What is the next step for your project?"
    },
    {
      "Time_Start": 2508.84,
      "Time_End": 2513.1200000000003,
      "Text": " Like are you going to release this in a way that projects can use automated style?"
    },
    {
      "Time_Start": 2513.1200000000003,
      "Time_End": 2514.6000000000004,
      "Text": " Yeah, definitely."
    },
    {
      "Time_Start": 2514.6,
      "Time_End": 2515.6,
      "Text": " It's all open source now."
    },
    {
      "Time_Start": 2515.6,
      "Time_End": 2521.56,
      "Text": " So right now I'm currently submitting all the bugs to like the Python devs and the next"
    },
    {
      "Time_Start": 2521.56,
      "Time_End": 2523.56,
      "Text": " step is like JavaScript stuff."
    },
    {
      "Time_Start": 2523.56,
      "Time_End": 2529.96,
      "Text": " So I'd like to get, maybe if I can do it to like Google's OSS somehow, but that's to be"
    },
    {
      "Time_Start": 2529.96,
      "Time_End": 2530.96,
      "Text": " determined."
    },
    {
      "Time_Start": 2530.96,
      "Time_End": 2534.2799999999997,
      "Text": " Right now I'm just like reporting all the bugs and stuff like that, but I would like"
    },
    {
      "Time_Start": 2534.2799999999997,
      "Time_End": 2536.16,
      "Text": " to."
    },
    {
      "Time_Start": 2536.16,
      "Time_End": 2539.56,
      "Text": " Thank you for taking all the questions."
    },
    {
      "Time_Start": 2539.56,
      "Time_End": 2543.2799999999997,
      "Text": " Have you found or do you think there's any chance, since you're feeding in the full function"
    },
    {
      "Time_Start": 2543.36,
      "Time_End": 2550.2000000000003,
      "Text": " body code, is there a chance that's limiting the fuzzer's ability to write good tests because"
    },
    {
      "Time_Start": 2550.2000000000003,
      "Time_End": 2551.76,
      "Text": " Python is untyped?"
    },
    {
      "Time_Start": 2551.76,
      "Time_End": 2556.76,
      "Text": " Is it restricting the tests it applies versus just having the function signature?"
    },
    {
      "Time_Start": 2556.76,
      "Time_End": 2558.1800000000003,
      "Text": " You know, that's a good question."
    },
    {
      "Time_Start": 2558.1800000000003,
      "Time_End": 2564.2000000000003,
      "Text": " So initially I would kind of paste in some like documentation as well, right?"
    },
    {
      "Time_Start": 2564.2000000000003,
      "Time_End": 2565.2000000000003,
      "Text": " So that way it knows it."
    },
    {
      "Time_Start": 2565.2000000000003,
      "Time_End": 2575.2000000000003,
      "Text": " But if you notice some of these here, it does use a little too like, since these things"
    },
    {
      "Time_Start": 2575.2000000000003,
      "Time_End": 2580.6800000000003,
      "Text": " do exist, it's able to like know like Unicode and stuff like that, but I did struggle with"
    },
    {
      "Time_Start": 2580.6800000000003,
      "Time_End": 2581.6800000000003,
      "Text": " that."
    },
    {
      "Time_Start": 2581.6800000000003,
      "Time_End": 2585.1600000000003,
      "Text": " So I kind of experimented with adding like specific documentation of types, especially"
    },
    {
      "Time_Start": 2585.1600000000003,
      "Time_End": 2590.28,
      "Text": " for the NumPy and that was able to get like good success, but it is something that is"
    },
    {
      "Time_Start": 2590.28,
      "Time_End": 2591.28,
      "Text": " very difficult."
    },
    {
      "Time_Start": 2591.28,
      "Time_End": 2592.76,
      "Text": " So I'm kind of struggling with that."
    },
    {
      "Time_Start": 2592.76,
      "Time_End": 2596.6400000000003,
      "Text": " But I find that just the doc links work pretty well."
    },
    {
      "Time_Start": 2596.6400000000003,
      "Time_End": 2597.6400000000003,
      "Text": " But it is hard."
    },
    {
      "Time_Start": 2597.6400000000003,
      "Time_End": 2598.6400000000003,
      "Text": " It's very hard."
    },
    {
      "Time_Start": 2598.6400000000003,
      "Time_End": 2599.6400000000003,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2599.6400000000003,
      "Time_End": 2600.6400000000003,
      "Text": " Awesome."
    },
    {
      "Time_Start": 2600.6400000000003,
      "Time_End": 2601.6400000000003,
      "Text": " Thank you very much, everyone."
    },
    {
      "Time_Start": 2601.6400000000003,
      "Time_End": 2602.6400000000003,
      "Text": " Oh, yeah."
    },
    {
      "Time_Start": 2602.6400000000003,
      "Time_End": 2603.6400000000003,
      "Text": " Infinite forest."
    },
    {
      "Time_Start": 2603.6400000000003,
      "Time_End": 2604.6400000000003,
      "Text": " Yeah."
    },
    {
      "Time_Start": 2604.6400000000003,
      "Time_End": 2605.6400000000003,
      "Text": " And infinite forest is where all the cool stuff is."
    },
    {
      "Time_Start": 2605.6400000000003,
      "Time_End": 2606.6400000000003,
      "Text": " Thank you very much."
    },
    {
      "Time_Start": 2606.6400000000003,
      "Time_End": 2607.6400000000003,
      "Text": " Awesome."
    },
    {
      "Time_Start": 2607.6400000000003,
      "Time_End": 2607.6600000000003,
      "Text": " Thank you."
    }
  ]
}