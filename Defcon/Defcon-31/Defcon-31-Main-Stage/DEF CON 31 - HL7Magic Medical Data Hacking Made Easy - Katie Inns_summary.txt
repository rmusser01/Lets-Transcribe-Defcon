**Introduction**
- Emphasis on the importance of **security testing** for **internet-connected medical devices** to prevent **severe impacts** such as the **prescription of incorrect drugs**.
- Modern healthcare protocols like **FHIR** use **HTTP** for communication, making security testing straightforward.
- However, older protocols like **HL7** are more prevalent in the industry and pose challenges due to their bespoke nature.

**Healthcare Technology and Data Protection**
- Technology has been used in healthcare for a long time, with X-rays dating back to 1985 and medical record systems from the 1960s.
- The focus is on protecting individuals and their data, especially with the increasing use of connected devices.
- Various devices in a hospital environment, such as patient monitors and data centers, can be potential access points for attackers.

**HL7 Protocol**
- **HL7 (Health Level Seven)** is a common protocol for communicating patient data, designed in **1979**.
- The most widely used version is **HL7 version 2**, which is not backward compatible with version 3.
- HL7 messages are typically transported through the **Minimal Lower Layer Protocol (MLLP)** but can also be sent via **FTP** or **SMTP**.
- These messages are communicated in **clear text**, posing security risks.

**HL7 Message Structure**
- HL7 messages are composed of multiple **segments**, each starting with a three-letter code and separated by pipe characters.
- The first segment is usually the **message header**, containing information like the **message type** (e.g., admissions, discharges, transfers) and relevant details.
- Other common segments include the **event segment** (indicating when and where the message was sent), **patient identifier**, **next of kin**, and **allergen information**.
- Not all segments are mandatory, but specific fields within a segment are required if it is present.

**Vulnerabilities in HL7**
- HL7 often lacks authentication measures, allowing unauthorized individuals to send messages if they are on the same network and use the correct format.
- Messages can be **amended** or **intercepted**, leading to potential data breaches and person-in-the-middle attacks.
- Denial-of-service attacks are possible due to the typically low maximum number of connections allowed by servers or middleware applications.
- The impact of these vulnerabilities can be severe, including changing allergen information and leading to incorrect drug prescriptions or worse.

**Challenges in Testing HL7**
- HL7 does not run on a specific port, making it challenging to identify its usage through fingerprinting mechanisms like **NMAP**.
- Port scanning medical devices is not recommended as they are often legacy systems that cannot handle such scans without experiencing denial of service.
- HL7 messages are usually sent in clear text, but some devices offer the option to enable encryption (e.g., through a checkbox in settings).

**Intercepting HL7 Messages**
- Intercepting HL7 messages is difficult due to the non-standard nature of the protocol.
- Tools like **Wireshark** can be used to capture packets containing HL7 data, but the messages themselves are not easily readable.
- Existing tools for testing medical protocols like HL7 have limitations, such as not being released or lacking certain functionalities.

**HL7Magic Tool**
- **HL7Magic** is a tool developed to provide security testers with an easier method for intercepting and modifying HL7 messages.
- It was designed as a **Burp Suite extension** to leverage existing functionality and improve the testing process.
- HL7Magic uses the **HL7 API Python library** to pass messages and dynamically store their contents.
- The tool converts HL7 messages into a **JSON format**, making it easier for testers to read and modify the data.

**HL7Magic Demonstrations**
- The first demo uses an emulator acting as a medical device, sending a test message through a **man-in-the-middle relay** to Burp Suite.
- The message is intercepted, and the contents are converted into a readable JSON format, allowing for modifications (e.g., changing patient names).
- The second demo uses an actual medical device, a **Philips SureSigns patient monitor**, to send HL7 messages.
- HL7Magic successfully intercepts and converts the messages, demonstrating its effectiveness in working with real-world medical equipment.

**Conclusion**
- HL7 remains the most widely used protocol in the healthcare industry and requires secure configuration to mitigate vulnerabilities.
- HL7Magic provides an easy method for testing medical devices using HL7, allowing testers to proxy traffic through Burp Suite and read/amend messages effortlessly.
- Future plans for HL7Magic include adding support for additional protocols like **FHIR**, potential fuzzing integration, and open-sourcing the tool for collaboration and improvements.