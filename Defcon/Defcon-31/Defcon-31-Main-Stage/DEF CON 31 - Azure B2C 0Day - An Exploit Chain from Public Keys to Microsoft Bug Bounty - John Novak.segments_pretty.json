{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 4.84,
      "Text": "This text was transcribed using whisper model: large-v2\n\n someone's got to come up with a hacker handle for him before the end of the session. So think"
    },
    {
      "Time_Start": 4.84,
      "Time_End": 12.84,
      "Text": " on that while he talks. All right, thanks. Can you hear me? Cool. All right. All right,"
    },
    {
      "Time_Start": 12.84,
      "Time_End": 18.5,
      "Text": " welcome. So this talk describes a vulnerability in Azure B2C as the title sort of implies. It"
    },
    {
      "Time_Start": 18.5,
      "Time_End": 25.3,
      "Text": " lets you impersonate basically any user and any tenant that uses Azure B2C. It has been"
    },
    {
      "Time_Start": 25.3,
      "Time_End": 29.580000000000002,
      "Text": " fixed in a couple different ways. There's some lingering remediations that I'll get to talk"
    },
    {
      "Time_Start": 29.580000000000002,
      "Time_End": 35.46,
      "Text": " about in a little bit. So my name is John Novak, as he was saying. I'm a technical director at"
    },
    {
      "Time_Start": 35.46,
      "Time_End": 42.08,
      "Text": " Praetorian. Most of the time I do security assessments for IoT, mobile, cloud, different"
    },
    {
      "Time_Start": 42.08,
      "Time_End": 47.660000000000004,
      "Text": " product security assessments. I do have a background in math and crypto, and I'd say I have a knack"
    },
    {
      "Time_Start": 47.660000000000004,
      "Time_End": 52.96,
      "Text": " for identifying what sort of good crypto looks like in common implementations. And this one"
    },
    {
      "Time_Start": 53.62,
      "Time_End": 61.620000000000005,
      "Text": " definitely falls in that category. So to get this out of the way at the beginning, I sort of"
    },
    {
      "Time_Start": 61.620000000000005,
      "Time_End": 66.2,
      "Text": " believe that demonstration of security vulnerabilities is really vital for actually getting"
    },
    {
      "Time_Start": 66.2,
      "Time_End": 72.2,
      "Text": " somebody to fix something, right? Many CVEs are theoretical, but demonstrating them is key"
    },
    {
      "Time_Start": 72.2,
      "Time_End": 78.12,
      "Text": " for getting remediation. The neat thing about a crypto vulnerability is that I can prove to"
    },
    {
      "Time_Start": 78.16000000000001,
      "Time_End": 84.08,
      "Text": " you that this is a vulnerability without actually telling you how I did it. In this case, I can"
    },
    {
      "Time_Start": 84.08,
      "Time_End": 91.46000000000001,
      "Text": " provide a token, which is in this QR code here, which is signed by Microsoft with a key that I"
    },
    {
      "Time_Start": 91.46000000000001,
      "Time_End": 97.46000000000001,
      "Text": " don't control, but the contents are all values that I do control. And in particular, like the"
    },
    {
      "Time_Start": 97.46000000000001,
      "Time_End": 104.0,
      "Text": " email address field in the token is one that's not owned by me. In this case, a token like this"
    },
    {
      "Time_Start": 104.04,
      "Time_End": 108.84,
      "Text": " one could be used to enumerate all bug bounty submissions to Microsoft through their web"
    },
    {
      "Time_Start": 108.84,
      "Time_End": 114.84,
      "Text": " portal and only using sort of the email address of a victim. All right, so before I get into the"
    },
    {
      "Time_Start": 118.26,
      "Time_End": 124.18,
      "Text": " weeds of this vulnerability, I wanted to quickly dive into some sort of background info on"
    },
    {
      "Time_Start": 124.18,
      "Time_End": 130.46,
      "Text": " crypto, JWTs, and Azure BTC in particular. So when most people think of cryptography or"
    },
    {
      "Time_Start": 130.5,
      "Time_End": 137.04000000000002,
      "Text": " encryption, they think of AES or symmetric encryption. And basically, in this mode, you have a"
    },
    {
      "Time_Start": 137.04000000000002,
      "Time_End": 142.0,
      "Text": " secret key that is used to encrypt plain text, and the same secret key is used to decrypt"
    },
    {
      "Time_Start": 142.0,
      "Time_End": 148.0,
      "Text": " ciphertext. The sort of cons of this are that you sort of need to negotiate the secret key in"
    },
    {
      "Time_Start": 150.26000000000002,
      "Time_End": 156.72,
      "Text": " advance, so both parties need to sort of have it. This does provide confidentiality. In some"
    },
    {
      "Time_Start": 156.72,
      "Time_End": 162.72,
      "Text": " cases, it provides integrity in the sense that some block cipher algorithms can be modified"
    },
    {
      "Time_Start": 165.06,
      "Time_End": 171.02,
      "Text": " in transit so that you might not know exactly that the cipher has not been sort of modified by"
    },
    {
      "Time_Start": 171.02,
      "Time_End": 176.42,
      "Text": " someone in transit. Commercially, for this talk, asymmetric encryption is done with"
    },
    {
      "Time_Start": 176.42,
      "Time_End": 182.46,
      "Text": " asymmetric algorithms like RSA or elliptic curves. In this setup, you encrypt with a public"
    },
    {
      "Time_Start": 182.5,
      "Time_End": 187.70000000000002,
      "Text": " key, and then decrypt with a private key. And there's reasons you'd want to do this, right? You"
    },
    {
      "Time_Start": 187.70000000000002,
      "Time_End": 192.62,
      "Text": " say, for example, you have email or GPG or something set up. You want anyone with a public key"
    },
    {
      "Time_Start": 192.62,
      "Time_End": 198.62,
      "Text": " to send you a message that only you with the private key can decrypt. So in this way, because"
    },
    {
      "Time_Start": 200.5,
      "Time_End": 204.34,
      "Text": " it's sort of constructed in this way, there is essentially no integrity in the encryption,"
    },
    {
      "Time_Start": 204.34,
      "Time_End": 208.54000000000002,
      "Text": " right? You don't know who sent you the message unless it's been signed sort of out of band of"
    },
    {
      "Time_Start": 208.54,
      "Time_End": 214.78,
      "Text": " this method. So that sort of plays a big piece in this vulnerability. So building on"
    },
    {
      "Time_Start": 214.78,
      "Time_End": 220.38,
      "Text": " encryption types, when most people think of JWTs or JSON web tokens, they think of this"
    },
    {
      "Time_Start": 220.38,
      "Time_End": 227.16,
      "Text": " construct, a signed blob. So essentially there's a header, some plain text text in there, and"
    },
    {
      "Time_Start": 227.16,
      "Time_End": 232.04,
      "Text": " then a signature on the end. These definitely have integrity. You can't modify the contents"
    },
    {
      "Time_Start": 232.04,
      "Time_End": 236.45999999999998,
      "Text": " without invalidating the signature. But there's no sort of confidentiality, right? I can just"
    },
    {
      "Time_Start": 236.46,
      "Time_End": 243.42000000000002,
      "Text": " read the contents. Another variant of JWTs are what's called a JSON web encryption or"
    },
    {
      "Time_Start": 243.42000000000002,
      "Time_End": 249.42000000000002,
      "Text": " JWE. And essentially this is an encrypted version of the same token. The first block there is"
    },
    {
      "Time_Start": 251.70000000000002,
      "Time_End": 255.96,
      "Text": " just sort of header values, which tells you which algorithms are used. And the rest is all"
    },
    {
      "Time_Start": 255.96,
      "Time_End": 261.96000000000004,
      "Text": " sort of pieces of the encryption. Based on which encryption algorithm you use, this will or"
    },
    {
      "Time_Start": 262.28,
      "Time_End": 268.73999999999995,
      "Text": " will not have integrity. And in particular, if you use asymmetric encryption, there's"
    },
    {
      "Time_Start": 268.73999999999995,
      "Time_End": 274.15999999999997,
      "Text": " essentially no integrity because anyone with the public key could construct an encrypted token"
    },
    {
      "Time_Start": 274.15999999999997,
      "Time_End": 280.15999999999997,
      "Text": " and use it. All right. So Azure B2C is sort of the basis of this talk. It is a service developed"
    },
    {
      "Time_Start": 281.16,
      "Time_End": 287.16,
      "Text": " by Microsoft. B2C stands for business to consumer. And essentially what it does is you can"
    },
    {
      "Time_Start": 293.52000000000004,
      "Time_End": 297.02000000000004,
      "Text": " offload all of the authentication and session management and everything else from what"
    },
    {
      "Time_Start": 297.02000000000004,
      "Time_End": 303.02000000000004,
      "Text": " you're developing onto this Microsoft service. You can set up log in flows to do things like"
    },
    {
      "Time_Start": 304.48,
      "Time_End": 308.86,
      "Text": " log in, password resets, that sort of thing. You can integrate with Twitter, Facebook, Google"
    },
    {
      "Time_Start": 308.90000000000003,
      "Time_End": 313.22,
      "Text": " log ins. There's a lot of documentation out there. I'm not going to repeat. But if you're"
    },
    {
      "Time_Start": 313.22,
      "Time_End": 320.26,
      "Text": " interested, go take a look. So when you're configuring your B2C tenant, you set up an"
    },
    {
      "Time_Start": 320.26,
      "Time_End": 325.86,
      "Text": " application. An application is really something like a single page app, a native app, like a"
    },
    {
      "Time_Start": 325.86,
      "Time_End": 331.48,
      "Text": " mobile or desktop app. There are several fields you have to fill in. And on the right here, you"
    },
    {
      "Time_Start": 331.48,
      "Time_End": 336.48,
      "Text": " can see that this is what it looks like in the Azure portal. You can see you specify like your"
    },
    {
      "Time_Start": 336.52000000000004,
      "Time_End": 342.52000000000004,
      "Text": " OAuth flows, your redirect URIs, that sort of thing. To set up the user flows that go along"
    },
    {
      "Time_Start": 346.14000000000004,
      "Time_End": 351.18,
      "Text": " with applications, you can use something called the identity experience framework."
    },
    {
      "Time_Start": 351.18,
      "Time_End": 357.18,
      "Text": " Microsoft, essentially what you do is you provide a bunch of XML syntax user flows, upload them"
    },
    {
      "Time_Start": 358.88,
      "Time_End": 364.48,
      "Text": " to your Azure portal instance, and then they're used to sort of configure how users log in."
    },
    {
      "Time_Start": 364.98,
      "Time_End": 370.1,
      "Text": " You enter your email, you enter your password, MFA, whatever you have. There are various"
    },
    {
      "Time_Start": 370.1,
      "Time_End": 375.3,
      "Text": " starter packs and sort of community developed samples that you can go online on GitHub and"
    },
    {
      "Time_Start": 375.3,
      "Time_End": 379.68,
      "Text": " download and install. And in particular, there's a tutorial, which I'm going to get to in a"
    },
    {
      "Time_Start": 379.68,
      "Time_End": 386.1,
      "Text": " minute, which talks about signing and encryption keys and how to set up these policies. So in"
    },
    {
      "Time_Start": 386.1,
      "Time_End": 391.84000000000003,
      "Text": " the image here, this is just set up using the basic starter pack, which has things like"
    },
    {
      "Time_Start": 391.84000000000003,
      "Time_End": 397.46000000000004,
      "Text": " profile editing, password resets, sign up, sign in, that sort of thing."
    },
    {
      "Time_Start": 397.46000000000004,
      "Time_End": 403.46000000000004,
      "Text": " All right, so who uses B2C? Once you configure it, you set your sort of tenant name, and"
    },
    {
      "Time_Start": 405.16,
      "Time_End": 411.70000000000005,
      "Text": " every B2C tenant is a subdomain off of B2CLogin.com. So you don't get a unique certificate,"
    },
    {
      "Time_Start": 411.70000000000005,
      "Time_End": 416.88000000000005,
      "Text": " so you can't look at certificate transparency logs, but you can just Google online and find"
    },
    {
      "Time_Start": 416.92,
      "Time_End": 421.78,
      "Text": " services, which will just enumerate all subdomains of this one. It turns out that"
    },
    {
      "Time_Start": 421.78,
      "Time_End": 428.12,
      "Text": " Microsoft also has, publicly on their website, they have these customer success stories,"
    },
    {
      "Time_Start": 428.12,
      "Time_End": 435.0,
      "Text": " which sort of pronounce which popular organizations are actually using their service. So"
    },
    {
      "Time_Start": 435.0,
      "Time_End": 440.5,
      "Text": " just from their website, there is a healthcare provider in the UK, a university in Japan, a"
    },
    {
      "Time_Start": 440.54,
      "Time_End": 447.54,
      "Text": " manufacturer in the US, a government ID service for a country of 5 million, and even in my"
    },
    {
      "Time_Start": 447.54,
      "Time_End": 452.54,
      "Text": " own personal life, I noticed that my own power company actually uses Azure B2C, so it sort of"
    },
    {
      "Time_Start": 452.54,
      "Time_End": 460.04,
      "Text": " seems to be all over the place. All right, so part one of this vulnerability is going to be in"
    },
    {
      "Time_Start": 460.04,
      "Time_End": 465.28,
      "Text": " this next section, and it all started basically when I started reading the documentation,"
    },
    {
      "Time_Start": 465.32000000000005,
      "Time_End": 472.02000000000004,
      "Text": " right? So, as I mentioned, they have this getting started, and what you see here on the"
    },
    {
      "Time_Start": 472.02000000000004,
      "Time_End": 477.68,
      "Text": " right is just a screenshot of their documentation, and if you see it, it says to set up a"
    },
    {
      "Time_Start": 477.68,
      "Time_End": 482.98,
      "Text": " signing key with type RSA and usage signature, and then an encryption key with type RSA and"
    },
    {
      "Time_Start": 482.98,
      "Time_End": 487.82000000000005,
      "Text": " type encryption. And so, knowing a bit about asymmetric encryption, this sort of struck me as"
    },
    {
      "Time_Start": 487.82000000000005,
      "Time_End": 493.90000000000003,
      "Text": " a little strange, and so I began to dig deeper. On the left here is a screenshot of what it"
    },
    {
      "Time_Start": 493.90000000000003,
      "Time_End": 498.56000000000006,
      "Text": " looks like in the Azure portal when you're setting it up, so it's just like a click box,"
    },
    {
      "Time_Start": 498.56000000000006,
      "Time_End": 506.40000000000003,
      "Text": " auto-generate your keys sort of thing. So once you set it up, your environment gets sort of"
    },
    {
      "Time_Start": 506.40000000000003,
      "Time_End": 511.28000000000003,
      "Text": " configured with this OAuth login flow, and I'll step through it briefly here, right? So you"
    },
    {
      "Time_Start": 511.28000000000003,
      "Time_End": 516.2800000000001,
      "Text": " have, you get your login page, then you post your, yeah, you post your credentials, like your"
    },
    {
      "Time_Start": 517.28,
      "Time_End": 524.02,
      "Text": " email, password, MFA, that sort of thing. Once you've completed your authentication, you get a"
    },
    {
      "Time_Start": 524.02,
      "Time_End": 528.86,
      "Text": " code, you submit that to the token endpoint there, and it will, once it's validated, it'll"
    },
    {
      "Time_Start": 528.86,
      "Time_End": 534.1999999999999,
      "Text": " provide you with an ID token and a refresh token. And then at some point, you know, later in"
    },
    {
      "Time_Start": 534.1999999999999,
      "Time_End": 538.56,
      "Text": " your session, say when your ID token is expired, you can present your refresh token again and"
    },
    {
      "Time_Start": 538.56,
      "Time_End": 545.4399999999999,
      "Text": " get a new ID token and a new refresh token. The format of the ID token is a JWS, signed with"
    },
    {
      "Time_Start": 545.44,
      "Time_End": 551.6,
      "Text": " that signing key that you configured before, and the format of the refresh token is a JWE,"
    },
    {
      "Time_Start": 551.6,
      "Time_End": 559.6,
      "Text": " encrypted with that encryption key you set up for. So when you generate keys automatically"
    },
    {
      "Time_Start": 559.6,
      "Time_End": 567.6,
      "Text": " using their getting started documentation, what you find is that it looks like this in the"
    },
    {
      "Time_Start": 567.6,
      "Time_End": 571.8000000000001,
      "Text": " Azure portal. So if you're the admin for your portal and you log in and sort of look at all the"
    },
    {
      "Time_Start": 571.8000000000001,
      "Time_End": 577.6200000000001,
      "Text": " keys, you'll see the two keys on the right here, the token signing key and the token encryption"
    },
    {
      "Time_Start": 577.6200000000001,
      "Time_End": 584.1200000000001,
      "Text": " key. You can't actually export these, and what you're actually viewing is just the public"
    },
    {
      "Time_Start": 584.1200000000001,
      "Time_End": 591.6200000000001,
      "Text": " content, right, not the private key part of it. If you instead try to generate an AES key, which"
    },
    {
      "Time_Start": 591.6200000000001,
      "Time_End": 594.8000000000001,
      "Text": " is a symmetric one instead of the asymmetric one, you'd get something that looks like this"
    },
    {
      "Time_Start": 594.8000000000001,
      "Time_End": 599.7600000000001,
      "Text": " screenshot on the bottom. Very similar, but again, the actual key portion of that is not listed"
    },
    {
      "Time_Start": 599.76,
      "Time_End": 607.12,
      "Text": " in the portal, and you can't export it. So it turns out that running through the sort of"
    },
    {
      "Time_Start": 607.12,
      "Time_End": 614.26,
      "Text": " default setup, if you chose secret keys instead, and then once everything was set up, you"
    },
    {
      "Time_Start": 614.26,
      "Time_End": 619.46,
      "Text": " logged in with a new user, you would get to this error page. It sort of suggests, the error"
    },
    {
      "Time_Start": 619.46,
      "Time_End": 625.38,
      "Text": " message there says encryption key must be 256-bit key. So it seems like what happens is on"
    },
    {
      "Time_Start": 625.38,
      "Time_End": 630.16,
      "Text": " the back end, the auto generation function is generating a key of, say, 128 bits or"
    },
    {
      "Time_Start": 630.16,
      "Time_End": 634.16,
      "Text": " something like that, but then when it's generating your token, it's expecting a key of a"
    },
    {
      "Time_Start": 634.16,
      "Time_End": 639.16,
      "Text": " different size. So basically, if a user on the street wanted to just use this out of the"
    },
    {
      "Time_Start": 639.16,
      "Time_End": 643.46,
      "Text": " box, they would hit this error message and say, you know, what the heck's happening? So it"
    },
    {
      "Time_Start": 643.46,
      "Time_End": 651.38,
      "Text": " seems unlikely that anyone actually uses symmetric keys in practice. However, instead of"
    },
    {
      "Time_Start": 651.38,
      "Time_End": 656.38,
      "Text": " the auto generation function, they do have an option for generating a key locally and"
    },
    {
      "Time_Start": 656.38,
      "Time_End": 662.0,
      "Text": " uploading it to your environment. So in this way, you can know what your key is for your"
    },
    {
      "Time_Start": 662.0,
      "Time_End": 667.26,
      "Text": " environment, set it up, and this is great for vuln research in particular because I can, you"
    },
    {
      "Time_Start": 667.26,
      "Time_End": 675.26,
      "Text": " know, decrypt my own tokens with the keys that I know about. All right. So diving a little"
    },
    {
      "Time_Start": 675.26,
      "Time_End": 682.18,
      "Text": " bit deeper here. So when you go through a log and flow with this open ID scope, you will get"
    },
    {
      "Time_Start": 682.18,
      "Time_End": 687.88,
      "Text": " an ID token returned to you. And as I mentioned before, this is signed with the signing key"
    },
    {
      "Time_Start": 687.88,
      "Time_End": 692.52,
      "Text": " you configured. When you go through a log and flow with offline access, you will get a"
    },
    {
      "Time_Start": 692.52,
      "Time_End": 700.22,
      "Text": " refresh token similarly encrypted with the token encryption key that you configured. If you"
    },
    {
      "Time_Start": 700.22,
      "Time_End": 705.14,
      "Text": " look at the, putting the ID token aside, if you look at the refresh token, you will notice"
    },
    {
      "Time_Start": 705.14,
      "Time_End": 710.84,
      "Text": " that it has some headers in the first sort of block there, but it doesn't have all of them. It"
    },
    {
      "Time_Start": 710.84,
      "Time_End": 714.88,
      "Text": " doesn't, in particular, doesn't have the algorithms that are used to encrypt the token, but it"
    },
    {
      "Time_Start": 714.88,
      "Time_End": 722.88,
      "Text": " does have like the key ID and the sort of deflate method in there. So in my own, you know, test"
    },
    {
      "Time_Start": 722.88,
      "Time_End": 730.1800000000001,
      "Text": " setup, I can upload my own key, I can go through my log and flow, get my tokens, decrypt them"
    },
    {
      "Time_Start": 730.1800000000001,
      "Time_End": 735.84,
      "Text": " with the key that I know about, and sort of do a little trial and error to figure out what the"
    },
    {
      "Time_Start": 735.84,
      "Time_End": 741.5600000000001,
      "Text": " algorithms were, right? So it turns out it's what you might expect, RSAOAEP for the outer"
    },
    {
      "Time_Start": 741.5600000000001,
      "Time_End": 748.4200000000001,
      "Text": " layer of the JWE encryption, and then AS256 bit GCM. And then once you've done all that"
    },
    {
      "Time_Start": 748.4200000000001,
      "Time_End": 754.8000000000001,
      "Text": " decryption, the actual contents are just compressed with Zlib. One thing you do notice is"
    },
    {
      "Time_Start": 754.8000000000001,
      "Time_End": 759.5000000000001,
      "Text": " that once you've, you know, gone through all those layers, you'll notice that it's not"
    },
    {
      "Time_Start": 759.5000000000001,
      "Time_End": 765.8800000000001,
      "Text": " actually a nested JWT. And this is a concept where essentially you have a signed token, and"
    },
    {
      "Time_Start": 765.8800000000001,
      "Time_End": 770.96,
      "Text": " then you encrypt that signed token so that you have a signed blob inside of your encrypted"
    },
    {
      "Time_Start": 770.96,
      "Time_End": 776.8800000000001,
      "Text": " blob. So without being nested, there's essentially no integrity, right? I could, I could"
    },
    {
      "Time_Start": 776.8800000000001,
      "Time_End": 783.8800000000001,
      "Text": " craft my own token. And so this is roughly speaking what the two tokens look like. So if I"
    },
    {
      "Time_Start": 783.88,
      "Time_End": 788.72,
      "Text": " go ahead and decrypt my refresh token, it looks something like the field on the left. I've"
    },
    {
      "Time_Start": 788.72,
      "Time_End": 793.68,
      "Text": " formatted it nicely so you could see it. But essentially, when you have a refresh token of"
    },
    {
      "Time_Start": 793.68,
      "Time_End": 800.8,
      "Text": " this type and submit it in the, to the token endpoint, you'll get an ID token corresponding"
    },
    {
      "Time_Start": 800.8,
      "Time_End": 805.26,
      "Text": " to the values in your refresh token. So in bold here, I have a couple fields which are"
    },
    {
      "Time_Start": 805.26,
      "Time_End": 811.3,
      "Text": " modified, and essentially it's showing that, you know, if I modify some fields in my refresh"
    },
    {
      "Time_Start": 811.3000000000001,
      "Time_End": 816.6800000000001,
      "Text": " token, they're actually reflected in my ID token. These don't have, these values don't"
    },
    {
      "Time_Start": 816.6800000000001,
      "Time_End": 820.6,
      "Text": " actually have to match whatever's on my account. It could match anything I wanted. You can"
    },
    {
      "Time_Start": 820.6,
      "Time_End": 824.5200000000001,
      "Text": " see I changed my name there. I added some extra parameters that may or may not mean"
    },
    {
      "Time_Start": 824.5200000000001,
      "Time_End": 832.5200000000001,
      "Text": " something to, you know, whatever environment I'm working in. So as I've said, with the known"
    },
    {
      "Time_Start": 832.94,
      "Time_End": 839.44,
      "Text": " format and a public RSA key, I can essentially encrypt and generate and encrypt a refresh"
    },
    {
      "Time_Start": 839.44,
      "Time_End": 845.24,
      "Text": " token with any contents I want, submit it to the token endpoint, and get an ID token. It"
    },
    {
      "Time_Start": 845.24,
      "Time_End": 850.7,
      "Text": " should be noted that this public key is actually just exposed in the Azure portal only to"
    },
    {
      "Time_Start": 850.7,
      "Time_End": 858.7,
      "Text": " these three user roles, the fairly, you know, privileged admin roles. And so the sort of"
    },
    {
      "Time_Start": 858.7,
      "Time_End": 866.2800000000001,
      "Text": " first step of this attack chain, you essentially lop off the whole authentication flow. If"
    },
    {
      "Time_Start": 866.28,
      "Time_End": 871.6999999999999,
      "Text": " you have some, say, unknown means to recover this public key, but then using what I just"
    },
    {
      "Time_Start": 871.6999999999999,
      "Time_End": 879.4599999999999,
      "Text": " showed, you can generate your refresh token, submit it, and get a new ID token. So I went"
    },
    {
      "Time_Start": 879.4599999999999,
      "Time_End": 884.62,
      "Text": " ahead, you know, I did a whole bunch of this research about two, two and a half years ago,"
    },
    {
      "Time_Start": 884.62,
      "Time_End": 889.78,
      "Text": " submitted it to the Microsoft Security Response Center, and my submission at the time"
    },
    {
      "Time_Start": 889.78,
      "Time_End": 893.66,
      "Text": " mentioned that, you know, you need this public key, and there's, you know, you can get it with"
    },
    {
      "Time_Start": 893.6999999999999,
      "Time_End": 898.28,
      "Text": " this read-only role, but it's really, it's hard, it's not exposed in any other way, right? It's"
    },
    {
      "Time_Start": 898.28,
      "Time_End": 903.8399999999999,
      "Text": " not on, like, some secret endpoint I could just query. And so after a little bit of back and"
    },
    {
      "Time_Start": 903.8399999999999,
      "Time_End": 910.3,
      "Text": " forth, they closed this issue with essentially no action taken in April. Personally, I'd sort"
    },
    {
      "Time_Start": 910.3,
      "Time_End": 915.5,
      "Text": " of argue that if your security depends on hiding a secret key or a public key, then it really"
    },
    {
      "Time_Start": 915.5,
      "Time_End": 921.8,
      "Text": " isn't secure, right? You're just hiding something that should be public. And, you know, going a"
    },
    {
      "Time_Start": 921.8000000000001,
      "Time_End": 926.1400000000001,
      "Text": " step further, in instances, you know, on security assessments, oftentimes we'll get source"
    },
    {
      "Time_Start": 926.1400000000001,
      "Time_End": 930.98,
      "Text": " code for our clients, right? And we want to make sure that even with source code access, there"
    },
    {
      "Time_Start": 930.98,
      "Time_End": 934.72,
      "Text": " shouldn't be anything like hard-coded keys or backdoors or whatever, right? Similarly, in"
    },
    {
      "Time_Start": 934.72,
      "Time_End": 939.4000000000001,
      "Text": " cloud environments, I'd argue that getting read-only access to a cloud environment, you"
    },
    {
      "Time_Start": 939.4000000000001,
      "Time_End": 943.3000000000001,
      "Text": " shouldn't be able to do things like read your database or, you know, read keys or elevate"
    },
    {
      "Time_Start": 943.3000000000001,
      "Time_End": 951.1,
      "Text": " privileges or anything else. So that's sort of my two cents here. So if that was the end of"
    },
    {
      "Time_Start": 951.1,
      "Time_End": 955.6,
      "Text": " the story, I probably wouldn't be here talking at DEF CON. But there is a part two to this"
    },
    {
      "Time_Start": 955.6,
      "Time_End": 961.78,
      "Text": " story. And in particular, it's a side channel attack. So really what I'm, the objective here is"
    },
    {
      "Time_Start": 961.78,
      "Time_End": 966.4,
      "Text": " to recover the public key, right? We have all the other pieces of this attack chain. All we"
    },
    {
      "Time_Start": 966.4,
      "Time_End": 974.4,
      "Text": " need is this public key. So for RSA, the public key is, the public components of RSA are N, a"
    },
    {
      "Time_Start": 975.4,
      "Time_End": 982.34,
      "Text": " modulus of 2048 bits, and then E, your exponent. So for all intents and purposes, you know,"
    },
    {
      "Time_Start": 982.34,
      "Time_End": 989.04,
      "Text": " 99% of RSA implementations have a fixed E value. So we'll just say that's known. But the"
    },
    {
      "Time_Start": 989.04,
      "Time_End": 994.74,
      "Text": " modulus is really what we want to figure out and recover. Another thing we know is that anytime"
    },
    {
      "Time_Start": 994.74,
      "Time_End": 1000.34,
      "Text": " you encrypt something, you get a ciphertext. And that ciphertext is necessarily going to be less"
    },
    {
      "Time_Start": 1000.34,
      "Time_End": 1005.98,
      "Text": " than N based on the math that's involved in RSA. So you can get, you know, a rough lower bound"
    },
    {
      "Time_Start": 1005.98,
      "Time_End": 1011.62,
      "Text": " for what N is. It's, you know, it's not very practical. It would take an enormous amount of"
    },
    {
      "Time_Start": 1011.62,
      "Time_End": 1019.08,
      "Text": " samples to actually recover something. But, you know, it's a stepping stone here. So what do I"
    },
    {
      "Time_Start": 1019.08,
      "Time_End": 1025.22,
      "Text": " have here? I have, when I have a refresh token and I'm submitting it to this B2C endpoint,"
    },
    {
      "Time_Start": 1025.22,
      "Time_End": 1029.98,
      "Text": " effectively what's happening at some level, right, is it's going to call decrypt RSA with a"
    },
    {
      "Time_Start": 1029.98,
      "Time_End": 1035.6200000000001,
      "Text": " ciphertext that I get to control and then the other components of my RSA key, right, the N and"
    },
    {
      "Time_Start": 1035.6200000000001,
      "Time_End": 1043.42,
      "Text": " the D exponent. So essentially I can feed in whatever ciphertext I want. Looking at what"
    },
    {
      "Time_Start": 1043.42,
      "Time_End": 1048.98,
      "Text": " decrypt RSA is, you know, at 10,000 foot view, it effectively does these sort of math"
    },
    {
      "Time_Start": 1048.98,
      "Time_End": 1054.68,
      "Text": " operations. It computes your plain text based off your ciphertext raised to the power of D. It"
    },
    {
      "Time_Start": 1054.68,
      "Time_End": 1063.3200000000002,
      "Text": " then verifies the OAEP padding, which involves doing a SHA hash on your plain text. If that is"
    },
    {
      "Time_Start": 1063.3200000000002,
      "Time_End": 1068.28,
      "Text": " verified, then it'll return your plain text. Otherwise it's just going to, you know, chuck out"
    },
    {
      "Time_Start": 1068.28,
      "Time_End": 1074.52,
      "Text": " an error and say, you know, you provided some ciphertext that didn't match. It turns out that"
    },
    {
      "Time_Start": 1074.52,
      "Time_End": 1080.8400000000001,
      "Text": " this is somewhat computationally expensive. The modular exponentiation and the hash both"
    },
    {
      "Time_Start": 1080.84,
      "Time_End": 1088.9599999999998,
      "Text": " take, you know, non-negligible CPU time to compute. So suppose there is a crypto library that"
    },
    {
      "Time_Start": 1088.9599999999998,
      "Time_End": 1096.48,
      "Text": " does this, right? Since we know the ciphertext is going to be less than our value N, why not just"
    },
    {
      "Time_Start": 1096.48,
      "Time_End": 1101.08,
      "Text": " add an if statement at the top that says if your ciphertext is too big, just error out, right?"
    },
    {
      "Time_Start": 1101.08,
      "Time_End": 1107.32,
      "Text": " Don't do the rest of the decryption. Save yourself some time and, you know, return the error."
    },
    {
      "Time_Start": 1107.3999999999999,
      "Time_End": 1113.0,
      "Text": " This shouldn't actually expose any sort of information because, again, N is supposed to be a"
    },
    {
      "Time_Start": 1113.0,
      "Time_End": 1118.76,
      "Text": " public value. And so there's no sort of crypto bug in any library that's out there just based on"
    },
    {
      "Time_Start": 1118.76,
      "Time_End": 1125.48,
      "Text": " this. However, what you do get is you get a time differential, right? So if I am providing a"
    },
    {
      "Time_Start": 1125.48,
      "Time_End": 1132.76,
      "Text": " ciphertext that is greater or less than N, this decrypt function is going to return in one of two"
    },
    {
      "Time_Start": 1132.76,
      "Time_End": 1138.84,
      "Text": " different times, right? And so based on if I can observe the timing difference, I could see"
    },
    {
      "Time_Start": 1138.84,
      "Time_End": 1155.16,
      "Text": " what \u2011\u2011 I could glean some information about what N actually is. All right. So I did this. I"
    },
    {
      "Time_Start": 1155.16,
      "Time_End": 1162.2,
      "Text": " took a JWE with a cipher encryption key of 2 to the 2047 and then one with 2 to the 2048."
    },
    {
      "Time_Start": 1162.92,
      "Time_End": 1168.92,
      "Text": " I knew these values would be both less than and then greater than N. I submitted both of these"
    },
    {
      "Time_Start": 1168.92,
      "Time_End": 1175.0,
      "Text": " tokens to my B2C token end point and then, you know, observed the response time and compared."
    },
    {
      "Time_Start": 1176.1200000000001,
      "Time_End": 1182.28,
      "Text": " One thing I will note that you're trying to observe a time that is sort of very small here,"
    },
    {
      "Time_Start": 1182.28,
      "Time_End": 1188.28,
      "Text": " right? So doing this over my home laptop, over my Wi\u2011Fi network, all the way across the"
    },
    {
      "Time_Start": 1188.28,
      "Time_End": 1194.04,
      "Text": " internet to the end point is going to introduce a lot of jitter in your timing, right? So I tried"
    },
    {
      "Time_Start": 1194.04,
      "Time_End": 1199.08,
      "Text": " to reduce this as much as possible doing things like, you know, say running on Azure cloud"
    },
    {
      "Time_Start": 1199.08,
      "Time_End": 1205.24,
      "Text": " infrastructure, right? Just shorten the distance between where my code is and where the end point"
    },
    {
      "Time_Start": 1205.24,
      "Time_End": 1211.32,
      "Text": " is. I also tried to avoid some load balancing by fixing IP addresses so that I wasn't hitting"
    },
    {
      "Time_Start": 1211.32,
      "Time_End": 1216.44,
      "Text": " different B2C token end points every time I submitted a request. And then other things like"
    },
    {
      "Time_Start": 1216.44,
      "Time_End": 1223.24,
      "Text": " pipelining your TLS session and stuff like that. So what you find is that with these two"
    },
    {
      "Time_Start": 1224.04,
      "Time_End": 1232.28,
      "Text": " values, I submitted 2,000 requests of each type and plotted them. And essentially what you see"
    },
    {
      "Time_Start": 1232.28,
      "Time_End": 1239.4,
      "Text": " is that the cipher text that is smaller is in blue here and the larger one is in red. And you'll note"
    },
    {
      "Time_Start": 1239.4,
      "Time_End": 1244.6000000000001,
      "Text": " that the curve for the blue one is just ever so slightly to the right of the other one, right?"
    },
    {
      "Time_Start": 1244.6000000000001,
      "Time_End": 1249.3200000000002,
      "Text": " And this really means that there is a timing differential and it is observable even across"
    },
    {
      "Time_Start": 1249.3200000000002,
      "Time_End": 1255.96,
      "Text": " the internet to these token end points. These graphs are very close together, right? They're"
    },
    {
      "Time_Start": 1255.96,
      "Time_End": 1263.88,
      "Text": " kind of noisy. But it is there and it is within reach for a sort of timing attack. In this"
    },
    {
      "Time_Start": 1263.88,
      "Time_End": 1270.68,
      "Text": " instance, I recorded the averages at 28.1 and 26.8 milliseconds. If you ran this at home, it"
    },
    {
      "Time_Start": 1270.68,
      "Time_End": 1279.0,
      "Text": " might differ based on where you're running from. So let's generalize, right? We have a timing"
    },
    {
      "Time_Start": 1279.0,
      "Time_End": 1287.16,
      "Text": " attack that tells you if you're greater or less than a certain value as any sort of undergraduate"
    },
    {
      "Time_Start": 1287.16,
      "Time_End": 1293.72,
      "Text": " computer science major will tell you. Why not use a binary search, right? So you take this timing"
    },
    {
      "Time_Start": 1293.72,
      "Time_End": 1297.64,
      "Text": " differential, you submit a bunch of samples starting with an upper and lower bound and a"
    },
    {
      "Time_Start": 1297.64,
      "Time_End": 1305.88,
      "Text": " midpoint and then you make some judgment call on if the time of your midpoint closer matches your"
    },
    {
      "Time_Start": 1305.88,
      "Time_End": 1311.16,
      "Text": " upper or your lower bound and then you sort of shorten your search space by half, right? And then"
    },
    {
      "Time_Start": 1311.16,
      "Time_End": 1317.48,
      "Text": " you repeat. So essentially, this sort of timing attack based on this fact lets you recover one"
    },
    {
      "Time_Start": 1317.48,
      "Time_End": 1325.0800000000002,
      "Text": " bit of your public key for each round. So again, I did this on an environment that I did not"
    },
    {
      "Time_Start": 1325.08,
      "Time_End": 1333.32,
      "Text": " control. Because you're running a timing attack, each of these rounds is not fully reliable, right?"
    },
    {
      "Time_Start": 1335.3999999999999,
      "Time_End": 1340.36,
      "Text": " There are going to be instances where you do your timing attack and you actually guess"
    },
    {
      "Time_Start": 1340.36,
      "Time_End": 1346.04,
      "Text": " incorrectly where the midpoint was. So I had to build in some logic for backtracking and"
    },
    {
      "Time_Start": 1347.8,
      "Time_End": 1352.6799999999998,
      "Text": " assuming, you know, backing it one step up in my binary search so that I didn't just go down a"
    },
    {
      "Time_Start": 1352.68,
      "Time_End": 1357.4,
      "Text": " rabbit hole that was incorrect. Additionally, the azure token endpoint has rate limiting so I"
    },
    {
      "Time_Start": 1357.4,
      "Time_End": 1364.76,
      "Text": " couldn't just spam it with requests as fast as I wanted to. But all in all, I implemented"
    },
    {
      "Time_Start": 1364.76,
      "Time_End": 1371.5600000000002,
      "Text": " this attack and ran it on an environment that I did not control and it recovered about 50-55 bits"
    },
    {
      "Time_Start": 1371.5600000000002,
      "Time_End": 1379.4,
      "Text": " an hour. This may seem slow, however, refresh tokens probably are valid for something on the"
    },
    {
      "Time_Start": 1379.4,
      "Time_End": 1385.3200000000002,
      "Text": " order of 90 days and so, you know, the keys associated with those are likely valid for"
    },
    {
      "Time_Start": 1385.3200000000002,
      "Time_End": 1390.44,
      "Text": " something like years, right? So even if your attack takes a day and a half for a key that"
    },
    {
      "Time_Start": 1390.44,
      "Time_End": 1398.0400000000002,
      "Text": " lasts a year, I think that's perfectly reasonable. This graph here is the sort of attack in action as"
    },
    {
      "Time_Start": 1398.0400000000002,
      "Time_End": 1404.2800000000002,
      "Text": " I implemented it. You see in the zoomed in part there, the jitter is essentially the backtracking"
    },
    {
      "Time_Start": 1404.28,
      "Time_End": 1410.76,
      "Text": " and then the little gaps that are in there are the rate limiting that I was hitting."
    },
    {
      "Time_Start": 1413.8,
      "Time_End": 1419.8799999999999,
      "Text": " So there we go. The attack is sort of complete now. I have this timing attack that I can recover"
    },
    {
      "Time_Start": 1419.8799999999999,
      "Time_End": 1426.68,
      "Text": " this public key. I can generate a refresh token with any user details and then I can post this"
    },
    {
      "Time_Start": 1426.68,
      "Time_End": 1433.32,
      "Text": " refresh token and get back an ID token with whatever I want, right? So essentially, again,"
    },
    {
      "Time_Start": 1433.32,
      "Time_End": 1442.2,
      "Text": " I can use this to compromise any B2C tenant that I like. So going back to the very beginning here,"
    },
    {
      "Time_Start": 1442.2,
      "Time_End": 1448.6,
      "Text": " demonstration, right? When you, if, you know, I'm sure some of you in the audience have submitted"
    },
    {
      "Time_Start": 1448.6,
      "Time_End": 1453.48,
      "Text": " vulnerabilities to Microsoft. When you do that, you likely went through the Microsoft Security"
    },
    {
      "Time_Start": 1453.48,
      "Time_End": 1461.6399999999999,
      "Text": " Response Center. When you go to the login page, you'll notice that it is this msrcweb.b2clogin.com."
    },
    {
      "Time_Start": 1461.64,
      "Time_End": 1468.68,
      "Text": " So essentially, Microsoft is using B2C as their authentication service for submitting"
    },
    {
      "Time_Start": 1468.68,
      "Time_End": 1474.3600000000001,
      "Text": " vulnerabilities to their platform. So it seems like a perfect target. It doesn't, it's a Microsoft"
    },
    {
      "Time_Start": 1474.3600000000001,
      "Time_End": 1478.5200000000002,
      "Text": " property. It's not going to violate their sort of terms of service, right? But it's going to"
    },
    {
      "Time_Start": 1478.5200000000002,
      "Time_End": 1483.4,
      "Text": " demonstrate that I can do something on a live environment that isn't my own."
    },
    {
      "Time_Start": 1484.3600000000001,
      "Time_End": 1497.16,
      "Text": " So, so as I mentioned, you just, you know, you go through this login flow. If you, it's basically"
    },
    {
      "Time_Start": 1497.16,
      "Time_End": 1501.96,
      "Text": " as easy as if you're, you know, if you run your session through a proxy like burp or something,"
    },
    {
      "Time_Start": 1502.52,
      "Time_End": 1508.1200000000001,
      "Text": " and then just observe all the back and forth, you'll see basically all the components of the"
    },
    {
      "Time_Start": 1508.1200000000001,
      "Time_End": 1517.24,
      "Text": " login flow you need, right? The, all of the artifacts that are part of it, right? And how"
    },
    {
      "Time_Start": 1517.24,
      "Time_End": 1522.8400000000001,
      "Text": " you get the refresh token at the end. So there's really no guesswork in how to set up the OAuth"
    },
    {
      "Time_Start": 1522.8400000000001,
      "Time_End": 1527.0800000000002,
      "Text": " login flow in a custom environment. You don't really need that. You can just sort of replay"
    },
    {
      "Time_Start": 1527.0800000000002,
      "Time_End": 1535.0800000000002,
      "Text": " requests as necessary. So, right, I ran this stack. I recovered the public key for this msrc"
    },
    {
      "Time_Start": 1535.08,
      "Time_End": 1542.04,
      "Text": " key ID. I used the known format to make a refresh token for a victim that I did not control. I"
    },
    {
      "Time_Start": 1542.04,
      "Time_End": 1547.0,
      "Text": " encrypted the contents, sent it to their token endpoint, and then got back an ID token for that"
    },
    {
      "Time_Start": 1547.8,
      "Time_End": 1554.12,
      "Text": " fake victim user. And so here we are back at the beginning again. This is one of a couple"
    },
    {
      "Time_Start": 1554.12,
      "Time_End": 1559.48,
      "Text": " ID tokens I was playing around with. If you look at the actual contents in there, the email address"
    },
    {
      "Time_Start": 1559.48,
      "Time_End": 1565.88,
      "Text": " is alice.bob.example.com. I don't own that domain, don't have access to that account, nor do I"
    },
    {
      "Time_Start": 1565.88,
      "Time_End": 1572.3600000000001,
      "Text": " actually think it's a bug bounty researcher. And I also, for kicks, added an additional parameter,"
    },
    {
      "Time_Start": 1572.3600000000001,
      "Time_End": 1578.3600000000001,
      "Text": " defcon31, in there just to show that you can just inject whatever sort of claims you would want"
    },
    {
      "Time_Start": 1578.3600000000001,
      "Time_End": 1585.48,
      "Text": " into your ID token. So if you're sitting in the audience and want to verify this, I haven't"
    },
    {
      "Time_Start": 1585.48,
      "Time_End": 1590.84,
      "Text": " checked today. But I believe that the public key associated with these ID tokens is still the same"
    },
    {
      "Time_Start": 1591.48,
      "Time_End": 1596.2,
      "Text": " and you can just view it online and decode it and validate that this is a real token."
    },
    {
      "Time_Start": 1598.2,
      "Time_End": 1605.32,
      "Text": " So what do you do with these tokens, right? Well, on this domain, probably one of the most"
    },
    {
      "Time_Start": 1605.88,
      "Time_End": 1611.4,
      "Text": " interesting things you want to do is list vulnerability reports, right? So I went through"
    },
    {
      "Time_Start": 1611.4,
      "Time_End": 1620.0400000000002,
      "Text": " the legwork of constructing an ID token with the smallest set of claims that I needed"
    },
    {
      "Time_Start": 1620.68,
      "Time_End": 1628.2800000000002,
      "Text": " to list vulnerabilities for a user. So I can't zoom in here, but if you look at the decoded section,"
    },
    {
      "Time_Start": 1628.2800000000002,
      "Time_End": 1633.3200000000002,
      "Text": " there are actually a bunch of the fields are zeroed out, essentially meaning that I can craft"
    },
    {
      "Time_Start": 1633.3200000000002,
      "Time_End": 1640.44,
      "Text": " the token, just put in dummy values for a couple of them, and it'll still validate for it and you"
    },
    {
      "Time_Start": 1640.44,
      "Time_End": 1646.28,
      "Text": " can use it for any account. There are a couple non-random values in there I'll grant. However,"
    },
    {
      "Time_Start": 1646.28,
      "Time_End": 1651.0,
      "Text": " again, if you just look at your sort of burp history as you're running this attack, you'll see"
    },
    {
      "Time_Start": 1651.0,
      "Time_End": 1655.8,
      "Text": " that the audience and tenant ID values are just, they're in public information, right? They're in"
    },
    {
      "Time_Start": 1655.8,
      "Time_End": 1662.04,
      "Text": " like client-side JavaScript, URL headers or HTTP headers, stuff like that. So they're not hidden"
    },
    {
      "Time_Start": 1662.04,
      "Time_End": 1672.6,
      "Text": " values to find, they're actually just public. So I could essentially use this to list any"
    },
    {
      "Time_Start": 1673.56,
      "Time_End": 1679.32,
      "Text": " vulnerability submissions knowing only a user's email account, right? Likely these are things like"
    },
    {
      "Time_Start": 1679.96,
      "Time_End": 1683.56,
      "Text": " Windows, Azure Exchange, zero days that people have submitted that are not yet patched."
    },
    {
      "Time_Start": 1684.2,
      "Time_End": 1687.8799999999999,
      "Text": " I'm sure that as with any bug bounty program, there's a bunch of junk submissions that are in"
    },
    {
      "Time_Start": 1687.88,
      "Time_End": 1694.8400000000001,
      "Text": " there that you'd have to wade through, but knowing if you wanted to use this in new security"
    },
    {
      "Time_Start": 1694.8400000000001,
      "Time_End": 1701.5600000000002,
      "Text": " researcher's email, odds are you could have used it at the time. For this environment, you could"
    },
    {
      "Time_Start": 1701.5600000000002,
      "Time_End": 1706.1200000000001,
      "Text": " have also done things like change their payment processor ID, so essentially stolen all the"
    },
    {
      "Time_Start": 1706.1200000000001,
      "Time_End": 1710.68,
      "Text": " bounties they would have gotten, but I'm sure that would have been picked up as they wouldn't"
    },
    {
      "Time_Start": 1710.68,
      "Time_End": 1722.92,
      "Text": " have gotten paid. Okay, so how does this story end? So really the crux of this issue is the"
    },
    {
      "Time_Start": 1722.92,
      "Time_End": 1729.0800000000002,
      "Text": " crypto vulnerability, right? It does seem sort of a bit silly to me to devise a side channel attack"
    },
    {
      "Time_Start": 1729.0800000000002,
      "Time_End": 1734.3600000000001,
      "Text": " to recover a public value that should have been public in the first place, but I think in this"
    },
    {
      "Time_Start": 1734.3600000000001,
      "Time_End": 1741.2400000000002,
      "Text": " case it was very critical to do this to get the issue understood and taken seriously, right?"
    },
    {
      "Time_Start": 1742.44,
      "Time_End": 1748.8400000000001,
      "Text": " And in general, I sort of believe that crypto vulnerabilities and misuse can often be"
    },
    {
      "Time_Start": 1748.8400000000001,
      "Time_End": 1752.8400000000001,
      "Text": " misunderstood. People will see it and say, oh, that's just some crypto bug that's theoretical,"
    },
    {
      "Time_Start": 1752.8400000000001,
      "Time_End": 1759.64,
      "Text": " never going to be able to do it. I wrote a blog post which talks about essentially part one of"
    },
    {
      "Time_Start": 1759.64,
      "Time_End": 1768.2800000000002,
      "Text": " this talk, not the side channel attack. It's on our company blog. I'd say at this point,"
    },
    {
      "Time_Start": 1769.0800000000002,
      "Time_End": 1777.0800000000002,
      "Text": " my recommendation to users of Azure B2C would be to, instead of using that RSA asymmetric"
    },
    {
      "Time_Start": 1777.0800000000002,
      "Time_End": 1782.0400000000002,
      "Text": " encryption, switch to the secret encryption with AES. I believe Microsoft is still working on it,"
    },
    {
      "Time_Start": 1782.0400000000002,
      "Time_End": 1786.3600000000001,
      "Text": " but I think they're going to put out a change that should make it sort of straightforward to make"
    },
    {
      "Time_Start": 1786.3600000000001,
      "Time_End": 1792.2800000000002,
      "Text": " that change. And if you do that, essentially that lack of integrity that you get with asymmetric"
    },
    {
      "Time_Start": 1792.2800000000002,
      "Time_End": 1797.3200000000002,
      "Text": " encryption can just be replaced with the integrity you do get with symmetric encryption so that it"
    },
    {
      "Time_Start": 1797.3200000000002,
      "Time_End": 1804.92,
      "Text": " would sort of negate this altogether. Long term, I think my suggestion to Microsoft was to use"
    },
    {
      "Time_Start": 1805.5600000000002,
      "Time_End": 1812.44,
      "Text": " nested JWTs, as I mentioned earlier. I recognize that it's a sort of hard engineering problem"
    },
    {
      "Time_Start": 1813.4,
      "Time_End": 1819.0800000000002,
      "Text": " and changing the structure of something that sort of underpins your whole authentication flow is not"
    },
    {
      "Time_Start": 1819.0800000000002,
      "Time_End": 1826.04,
      "Text": " an easy change, right? So at the very least, if I was remitting this bug myself, it would"
    },
    {
      "Time_Start": 1826.04,
      "Time_End": 1831.88,
      "Text": " essentially invalidate all keys for all sessions for all users, right? And so the usability alone"
    },
    {
      "Time_Start": 1831.88,
      "Time_End": 1837.88,
      "Text": " would be sort of horrendous. But I think long term, that's what you need to do. And I believe"
    },
    {
      "Time_Start": 1837.88,
      "Time_End": 1844.5200000000002,
      "Text": " Microsoft is working toward doing something analogous to nested JWTs for their platform."
    },
    {
      "Time_Start": 1846.3600000000001,
      "Time_End": 1855.5600000000002,
      "Text": " So disclosure part two, right? So in July 22, 2022, about a year ago, I discovered the"
    },
    {
      "Time_Start": 1855.5600000000002,
      "Time_End": 1862.0400000000002,
      "Text": " Sinai channel attack and disclosed it to Microsoft. There was a period of"
    },
    {
      "Time_Start": 1863.0,
      "Time_End": 1871.8,
      "Text": " not great responses for a little while. But I did manage to talk to the team and get them to"
    },
    {
      "Time_Start": 1871.8,
      "Time_End": 1878.52,
      "Text": " validate the issue. And the first of two fixes was put in place in December 2022. And essentially"
    },
    {
      "Time_Start": 1878.52,
      "Time_End": 1886.52,
      "Text": " what that fix does is that now if you submit a token that is invalid of any format, your HTTP"
    },
    {
      "Time_Start": 1886.52,
      "Time_End": 1893.0,
      "Text": " request will essentially just get dropped. The connection will hang. It won't return. And so"
    },
    {
      "Time_Start": 1893.0,
      "Time_End": 1897.56,
      "Text": " essentially what happens is you get no timing information, right? So there's no timing attack"
    },
    {
      "Time_Start": 1898.68,
      "Time_End": 1903.8,
      "Text": " to recover that key in the first place. This is a good sort of stopgap measure because it sort of"
    },
    {
      "Time_Start": 1905.0,
      "Time_End": 1910.44,
      "Text": " negates the attack as I described it. But it doesn't go as far as putting all the nested"
    },
    {
      "Time_Start": 1910.44,
      "Time_End": 1918.04,
      "Text": " stuff in place. That second part was planned for February 2023. But there were some engineering"
    },
    {
      "Time_Start": 1918.04,
      "Time_End": 1923.3200000000002,
      "Text": " complications as I sort of as I understand it. I really don't know a lot of details about those."
    },
    {
      "Time_Start": 1923.3200000000002,
      "Time_End": 1930.92,
      "Text": " But that fix wasn't quite put into place in February. This is sort of the disclosure timeline"
    },
    {
      "Time_Start": 1930.92,
      "Time_End": 1940.04,
      "Text": " from July to February when I published that blog post. You can look at the slides in your"
    },
    {
      "Time_Start": 1940.04,
      "Time_End": 1944.6,
      "Text": " own time on the DEF CON media server. But essentially it shows sort of back and forth"
    },
    {
      "Time_Start": 1944.6,
      "Time_End": 1952.68,
      "Text": " and what was happening with different parties at Microsoft. The risk rating for this vulnerability"
    },
    {
      "Time_Start": 1952.68,
      "Time_End": 1959.8,
      "Text": " was assigned important, not critical. I personally argue that if all you need is sort of tenant"
    },
    {
      "Time_Start": 1959.8,
      "Time_End": 1964.52,
      "Text": " details and an email address and what you get out of it is full compromise of a victim, that's going"
    },
    {
      "Time_Start": 1964.52,
      "Time_End": 1970.44,
      "Text": " to be a critical vulnerability. It doesn't seem like just something important. But I digress."
    },
    {
      "Time_Start": 1971.0,
      "Time_End": 1977.96,
      "Text": " It was also categorized as info disclosure, not elevation of privilege. Surely, yes,"
    },
    {
      "Time_Start": 1977.96,
      "Time_End": 1984.6,
      "Text": " a public key was disclosed. So maybe by definition that is the right way to categorize it. But again,"
    },
    {
      "Time_Start": 1984.6,
      "Time_End": 1989.6399999999999,
      "Text": " I sort of argue that you're recovering a key that you can use to grant yourself privileges"
    },
    {
      "Time_Start": 1989.64,
      "Time_End": 1996.3600000000001,
      "Text": " to anything you want. So maybe it falls into the latter category. Unfortunately,"
    },
    {
      "Time_Start": 1998.2,
      "Time_End": 2003.0800000000002,
      "Text": " at disclosure time, Microsoft had two bug bounty programs that might have applied."
    },
    {
      "Time_Start": 2003.8000000000002,
      "Time_End": 2007.88,
      "Text": " There was the Microsoft Azure bounty program and the Microsoft Identity bounty program."
    },
    {
      "Time_Start": 2007.88,
      "Time_End": 2013.8000000000002,
      "Text": " So it turns out this bug was not eligible for the Azure one because it is an identity service."
    },
    {
      "Time_Start": 2014.68,
      "Time_End": 2020.84,
      "Text": " It also turns out it's not eligible for the Identity program because this bdclogin.com was"
    },
    {
      "Time_Start": 2020.84,
      "Time_End": 2027.96,
      "Text": " not in scope for that program. So despite being a somewhat important bug for this service that"
    },
    {
      "Time_Start": 2027.96,
      "Time_End": 2033.72,
      "Text": " they're using internally, it is ineligible for any bounty program. So it was not rewarded."
    },
    {
      "Time_Start": 2034.6,
      "Time_End": 2039.1599999999999,
      "Text": " I will say to Microsoft's credit and some lengthy back and forth I've had with them since,"
    },
    {
      "Time_Start": 2039.16,
      "Time_End": 2044.92,
      "Text": " they have added Azure B2C to their Identity program in the intervening time in July or June"
    },
    {
      "Time_Start": 2044.92,
      "Time_End": 2051.4,
      "Text": " a couple months ago. But bounties are not sort of retroactive. So it's not going to get paid out."
    },
    {
      "Time_Start": 2055.56,
      "Time_End": 2061.56,
      "Text": " So the last slide here on Microsoft, there are some lingering remediations I mentioned."
    },
    {
      "Time_Start": 2061.88,
      "Time_End": 2068.84,
      "Text": " The first fix that I mentioned in December was kind of narrow, right? It was cutting off"
    },
    {
      "Time_Start": 2070.44,
      "Time_End": 2076.84,
      "Text": " just the timing attack itself. So it's unclear if there are other artifacts in that session"
    },
    {
      "Time_Start": 2076.84,
      "Time_End": 2082.6,
      "Text": " that you could use to still recover a key, right? If they're terminating a connection or whatever,"
    },
    {
      "Time_Start": 2082.6,
      "Time_End": 2089.7999999999997,
      "Text": " right? And I was sort of inspired by James Kettle's talk this morning, talking about his tools to do"
    },
    {
      "Time_Start": 2089.8,
      "Time_End": 2095.0800000000004,
      "Text": " similar things. So it may be possible to get around this mitigation. But I haven't really"
    },
    {
      "Time_Start": 2095.0800000000004,
      "Time_End": 2102.84,
      "Text": " found any way. I also haven't checked quite yet today, but I think they are actually going to"
    },
    {
      "Time_Start": 2104.1200000000003,
      "Time_End": 2109.96,
      "Text": " encourage users to use the secret key generation instead of the public key or the RSA key"
    },
    {
      "Time_Start": 2109.96,
      "Time_End": 2116.2000000000003,
      "Text": " generation. And as I mentioned, the new sign element in the refresh tokens isn't quite"
    },
    {
      "Time_Start": 2116.2,
      "Time_End": 2119.56,
      "Text": " implemented yet, but I think they're still working toward that."
    },
    {
      "Time_Start": 2122.2799999999997,
      "Time_End": 2129.72,
      "Text": " Okay. So just for the DEF CON audience here. So most of this talk is focused on an identity"
    },
    {
      "Time_Start": 2129.72,
      "Time_End": 2134.9199999999996,
      "Text": " service for Microsoft. But looking at other vendors and other OAuth implementations,"
    },
    {
      "Time_Start": 2135.56,
      "Time_End": 2145.0,
      "Text": " you might find similar things. So AWS has a AWS Cognito. It's a service very similar to"
    },
    {
      "Time_Start": 2145.0,
      "Time_End": 2151.8,
      "Text": " Azure B2C. It is an identity service. It has a similar login flow. You get a refresh token."
    },
    {
      "Time_Start": 2151.8,
      "Time_End": 2157.08,
      "Text": " And if you decode the headers, you'll actually notice that the encryption algorithm is, again,"
    },
    {
      "Time_Start": 2157.08,
      "Time_End": 2165.4,
      "Text": " RSA OAEP. I wouldn't put this up here if I thought this was really a bug, but it is interesting that"
    },
    {
      "Time_Start": 2166.04,
      "Time_End": 2174.12,
      "Text": " they use this. I don't have the same introspection in AWS that I do in Azure, particularly I can't"
    },
    {
      "Time_Start": 2174.68,
      "Time_End": 2178.8399999999997,
      "Text": " specify my own keys and upload them and use them. So I can't actually see what the contents are,"
    },
    {
      "Time_Start": 2178.8399999999997,
      "Time_End": 2185.0,
      "Text": " but external indicators suggest that they're actually using nested JWTs, so they're likely"
    },
    {
      "Time_Start": 2185.0,
      "Time_End": 2191.72,
      "Text": " not a \u2011\u2011 it's likely not an issue for AWS. But it is interesting that they have designed a very"
    },
    {
      "Time_Start": 2191.7200000000003,
      "Time_End": 2198.5200000000004,
      "Text": " similar flow to what you see in Azure. That's all I got."
    },
    {
      "Time_Start": 2198.5200000000004,
      "Time_End": 2200.5200000000004,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2209.0800000000004,
      "Time_End": 2212.44,
      "Text": " Yeah, I have a little time, so I'll take some questions, or if you want to find me after,"
    },
    {
      "Time_Start": 2212.44,
      "Time_End": 2217.0000000000005,
      "Text": " that's fine as well. So we have some mics here. If you have questions, please line up at the mics."
    },
    {
      "Time_Start": 2217.96,
      "Time_End": 2221.96,
      "Text": " Go ahead. Hold on. I think they got to heat it. Give us a thumbs up, thumbs down."
    },
    {
      "Time_Start": 2221.96,
      "Time_End": 2229.96,
      "Text": " Thumbs up? Try it now. Okay."
    },
    {
      "Time_Start": 2229.96,
      "Time_End": 2231.96,
      "Text": " I'm not touching it, because there's somebody."
    },
    {
      "Time_Start": 2231.96,
      "Time_End": 2233.96,
      "Text": " Hello? Okay."
    },
    {
      "Time_Start": 2233.96,
      "Time_End": 2235.96,
      "Text": " There you go. Go ahead."
    },
    {
      "Time_Start": 2235.96,
      "Time_End": 2237.96,
      "Text": " Go ahead."
    },
    {
      "Time_Start": 2237.96,
      "Time_End": 2239.96,
      "Text": " Go ahead."
    },
    {
      "Time_Start": 2239.96,
      "Time_End": 2241.96,
      "Text": " Go ahead."
    },
    {
      "Time_Start": 2241.96,
      "Time_End": 2243.96,
      "Text": " Go ahead."
    },
    {
      "Time_Start": 2243.96,
      "Time_End": 2245.96,
      "Text": " Go ahead."
    },
    {
      "Time_Start": 2245.96,
      "Time_End": 2247.96,
      "Text": " Okay."
    },
    {
      "Time_Start": 2247.96,
      "Time_End": 2249.96,
      "Text": " Have you tested this \u2011\u2011"
    },
    {
      "Time_Start": 2249.96,
      "Time_End": 2251.96,
      "Text": " We can't hear you. Cut over to that mic."
    },
    {
      "Time_Start": 2251.96,
      "Time_End": 2253.96,
      "Text": " Go ahead. You."
    },
    {
      "Time_Start": 2253.96,
      "Time_End": 2255.96,
      "Text": " Go ahead."
    },
    {
      "Time_Start": 2255.96,
      "Time_End": 2259.96,
      "Text": " Have you tested this functionality against anything else besides the B2C?"
    },
    {
      "Time_Start": 2259.96,
      "Time_End": 2265.96,
      "Text": " So Microsoft, for other things like the Microsoft online.com, they have a different"
    },
    {
      "Time_Start": 2265.96,
      "Time_End": 2271.96,
      "Text": " OAuth flow that is completely segmented. It looks like a different code base, right, from B2C."
    },
    {
      "Time_Start": 2271.96,
      "Time_End": 2277.96,
      "Text": " So it seems different in that respect. I haven't scoured the internet for every service,"
    },
    {
      "Time_Start": 2277.96,
      "Time_End": 2279.96,
      "Text": " but I've looked at a couple, yeah."
    },
    {
      "Time_Start": 2279.96,
      "Time_End": 2281.96,
      "Text": " Take a look at the Azure shared tenants."
    },
    {
      "Time_Start": 2281.96,
      "Time_End": 2283.96,
      "Text": " All right."
    },
    {
      "Time_Start": 2283.96,
      "Time_End": 2285.96,
      "Text": " Hello."
    },
    {
      "Time_Start": 2285.96,
      "Time_End": 2295.96,
      "Text": " I saw a couple of references to the MSRC kid, and I was wondering if you managed to meet them"
    },
    {
      "Time_Start": 2295.96,
      "Time_End": 2297.96,
      "Text": " as a result of the disclosure."
    },
    {
      "Time_Start": 2297.96,
      "Time_End": 2299.96,
      "Text": " If I what?"
    },
    {
      "Time_Start": 2299.96,
      "Time_End": 2301.96,
      "Text": " The MSRC kid?"
    },
    {
      "Time_Start": 2301.96,
      "Time_End": 2303.96,
      "Text": " Yeah."
    },
    {
      "Time_Start": 2303.96,
      "Time_End": 2305.96,
      "Text": " I wondered if you managed to meet them as a result of the disclosure."
    },
    {
      "Time_Start": 2305.96,
      "Time_End": 2307.96,
      "Text": " Oh, yes. Yeah, he had a fun and interesting name there."
    },
    {
      "Time_Start": 2307.96,
      "Time_End": 2311.96,
      "Text": " This is a fantastic vulnerability. I've done a lot of research into OpenID Connect-based"
    },
    {
      "Time_Start": 2311.96,
      "Time_End": 2315.96,
      "Text": " vulnerabilities, and the cryptography is especially interesting."
    },
    {
      "Time_Start": 2315.96,
      "Time_End": 2321.96,
      "Text": " You know, we've moved over the past five years into a world where people are no longer entirely"
    },
    {
      "Time_Start": 2321.96,
      "Time_End": 2325.96,
      "Text": " homerolling their crypto, but taking it from off the shelf JWK configurations."
    },
    {
      "Time_Start": 2325.96,
      "Time_End": 2327.96,
      "Text": " Yep."
    },
    {
      "Time_Start": 2327.96,
      "Time_End": 2333.96,
      "Text": " As a result, now we have generally applicable crypto vulnerabilities without having to meet"
    },
    {
      "Time_Start": 2333.96,
      "Time_End": 2337.96,
      "Text": " an engineer and ask them, you know, how did you think you put this crypto system together?"
    },
    {
      "Time_Start": 2337.96,
      "Time_End": 2339.96,
      "Text": " Yeah, exactly."
    },
    {
      "Time_Start": 2339.96,
      "Time_End": 2341.96,
      "Text": " I just thought it was super interesting."
    },
    {
      "Time_Start": 2341.96,
      "Time_End": 2343.96,
      "Text": " Thanks."
    },
    {
      "Time_Start": 2343.96,
      "Time_End": 2345.96,
      "Text": " Yeah, right."
    },
    {
      "Time_Start": 2345.96,
      "Time_End": 2347.96,
      "Text": " Going after the one implementation that rules a bunch of different applications is going"
    },
    {
      "Time_Start": 2347.96,
      "Time_End": 2349.96,
      "Text": " to get you a beer bang for your buck for sure."
    },
    {
      "Time_Start": 2349.96,
      "Time_End": 2351.96,
      "Text": " I did have one question that wasn't a joke or a compliment, though."
    },
    {
      "Time_Start": 2351.96,
      "Time_End": 2353.96,
      "Text": " Okay."
    },
    {
      "Time_Start": 2353.96,
      "Time_End": 2359.96,
      "Text": " I've done some timing attack-based attacks, and they seem very rudimentary by comparison."
    },
    {
      "Time_Start": 2359.96,
      "Time_End": 2361.96,
      "Text": " You mentioned the backtracking."
    },
    {
      "Time_Start": 2361.96,
      "Time_End": 2365.96,
      "Text": " Could you elaborate on what backtracking means in the context of the attack?"
    },
    {
      "Time_Start": 2365.96,
      "Time_End": 2369.96,
      "Text": " Yeah, I sort of kind of made it up as I went along."
    },
    {
      "Time_Start": 2369.96,
      "Time_End": 2375.96,
      "Text": " But essentially, as I was running the attack and I noticed that there was no actual timing"
    },
    {
      "Time_Start": 2375.96,
      "Time_End": 2381.96,
      "Text": " differential in this current round that I was on, it seemed likely that a lack of any"
    },
    {
      "Time_Start": 2381.96,
      "Time_End": 2387.96,
      "Text": " timing differential meant that all of my high, mid, and low points were all in this"
    },
    {
      "Time_Start": 2387.96,
      "Time_End": 2391.96,
      "Text": " either all higher than N or less than N."
    },
    {
      "Time_Start": 2391.96,
      "Time_End": 2393.96,
      "Text": " I see."
    },
    {
      "Time_Start": 2393.96,
      "Time_End": 2397.96,
      "Text": " Basically, using a crude measurement for just detecting that I'm no longer progressing,"
    },
    {
      "Time_Start": 2397.96,
      "Time_End": 2399.96,
      "Text": " right?"
    },
    {
      "Time_Start": 2399.96,
      "Time_End": 2401.96,
      "Text": " I need to go backwards."
    },
    {
      "Time_Start": 2401.96,
      "Time_End": 2403.96,
      "Text": " Yeah, the confidence mathematics is very annoying to have to deal with when you're doing a timing"
    },
    {
      "Time_Start": 2403.96,
      "Time_End": 2405.96,
      "Text": " attack."
    },
    {
      "Time_Start": 2405.96,
      "Time_End": 2407.96,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2407.96,
      "Time_End": 2409.96,
      "Text": " Yeah, thank you."
    },
    {
      "Time_Start": 2409.96,
      "Time_End": 2411.96,
      "Text": " Thank you."
    }
  ]
}