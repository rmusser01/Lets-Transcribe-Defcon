**Speaker Introduction:**
- Day job: Works for a boutique pen test company called SecConsult, primarily in Europe and Asia.
- Night job: Open-source developer under the alias ScalSec.
- Notable projects: PyPyCats, AIOSMB, MSLDAP, Octopon.

**Talk Overview:**
- **Spooky Authentication at a Distance**: A novel technique allowing remote authentication as a local user on a compromised machine without elevated privileges.
- **No Initial Point of Compromise Required**: The technique focuses on leveraging the compromised user's privileges to access servers and resources within the network.
- **Practical Applications**: Demonstrating the potential impact, including performing a no-interaction, full domain takeover using a malicious peripheral in a restricted environment.

**Windows Authentication Protocols:**
- **Overview**: Modern authentication protocols involve key exchange, providing encryption and decryption capabilities for subsequent communications.
- **Generic Network Protocol**: Version negotiation, authentication protocol negotiation, authentication, and shared secret establishment.
- **LDAP Case Study**: Supports various authentication methods, including Sicily (raw NTLM), SASL (with Espinego and GSS API), and external (MTLS-based authentication).

**Authentication Protocols in Detail:**
- **NTLM**: Negotiation, authentication, and challenge messages exchanged between client and server, resulting in a shared secret for encryption and integrity protection.
- **Espinego**: An authentication protocol selector that supports LDAP, Kerberos, and potentially other sub-protocols; provides integrity protection against downgrade attacks.
- **Kerberos**: Simpler than NTLM, with the complexity on the server-side; involves ticket exchange and shared secret establishment.
- **SMB Encryption/Decryption**: Microsoft's approach involves obtaining the shared secret from LSS, using SSPI for programmatic access.

**SSPI (Security Support Provider Interface):**
- **Purpose**: Facilitates interaction with LSS, providing a set of APIs for acquiring credentials, initializing security contexts, querying context attributes, and encrypting/decrypting messages.
- **Key Points**: Acquire Credential Handle, Initialize Security Context, Query Context Attributes, Encrypt Message, and Decrypt Message are the critical APIs for implementing authentication.

**Remote Authentication via RPC:**
- **Idea**: Wrap the SSPI APIs in an RPC, allowing remote invocation and enabling authentication on the attacker's machine using the victim's credentials.
- **Challenge**: Retrieving the IV (Initialization Vector) for Kerberos mutual authentication, which is not directly accessible via the Query Context Attributes API.
- **Solution**: Utilizing the Encrypt Message API to obtain the IV by encrypting a random message and unwrapping the response token.

**Use Cases and Demonstration:**
- **Proof of Concept**: Executing the proxy binary on the victim machine, authenticating to the main controller from another machine, and performing operations like listing shares and downloading files.
- **Raspberry Pi Attack Tool**: Creating a pawn-everything toolkit by combining the proxy with a Raspberry Pi, HID keyboard emulation, and USB Ethernet functionality.
- **Air-gapped Networks**: The proxy, when executed, connects back to the Raspberry Pi, providing authentication context and enabling domain enumeration and Kerberos attacks.

**Future Research and Shout-outs:**
- **Ethical Chaos**: Created a tool that hooks into processes on the attacker's machine, intercepting SSPI calls, which could be integrated with the presented technique.
- **Additional API Calls**: Exploring PQ and Windows Hello certificate-based services to extend the proxy's capabilities.
- **Open-source Tools**: WS net dash dot net (the proxy), Octopon (the attack tool), and other projects mentioned are available for further exploration.