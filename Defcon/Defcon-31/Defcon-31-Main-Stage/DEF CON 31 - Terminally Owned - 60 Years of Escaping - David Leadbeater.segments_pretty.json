{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 10.4,
      "Text": "This text was transcribed using whisper model: large-v2\n\n Thank you. So, hello, DEF CON. I'm David. I'm here to talk about terminals. I actually"
    },
    {
      "Time_Start": 10.4,
      "Time_End": 14.280000000000001,
      "Text": " came through four terminals on the way here from the other side of the world. My flight"
    },
    {
      "Time_Start": 14.280000000000001,
      "Time_End": 21.16,
      "Text": " got rerouted, so that was four airport terminals. But that's not what I'm here to talk about."
    },
    {
      "Time_Start": 21.16,
      "Time_End": 27.6,
      "Text": " I'm from G Research. I work for our open source team. We're not a security research company."
    },
    {
      "Time_Start": 27.6,
      "Time_End": 33.08,
      "Text": " We're a quantitative research company, and we predict things. So, we use a lot of machine"
    },
    {
      "Time_Start": 33.08,
      "Time_End": 39.24,
      "Text": " learning, AI, but we also use a lot of infrastructure underneath that. So, our open source team"
    },
    {
      "Time_Start": 39.24,
      "Time_End": 43.480000000000004,
      "Text": " aims to improve the infrastructure we use. We contribute some projects on top of that"
    },
    {
      "Time_Start": 43.480000000000004,
      "Time_End": 49.64,
      "Text": " infrastructure. We use things like Kubernetes. But we also use terminals, and that's what"
    },
    {
      "Time_Start": 49.64,
      "Time_End": 54.96,
      "Text": " I'm here to talk about today. So, what is a terminal? Well, first of all, we need to"
    },
    {
      "Time_Start": 54.96,
      "Time_End": 61.04,
      "Text": " go back in time. So, we're going to go back to the 1960s, and what are terminals built"
    },
    {
      "Time_Start": 61.04,
      "Time_End": 69.96000000000001,
      "Text": " on? ASCII, American Standard Code for Information Interchange. We've all heard of it. Do we"
    },
    {
      "Time_Start": 69.96000000000001,
      "Time_End": 75.64,
      "Text": " know it that well? Probably, maybe. There's some strange things in it that are legacy."
    },
    {
      "Time_Start": 75.64,
      "Time_End": 83.48,
      "Text": " We take it for granted. This very slide has ASCII on it. To give it its full name, American"
    },
    {
      "Time_Start": 83.48,
      "Time_End": 92.56,
      "Text": " Standards Association X3.4-1963. That looks like this. So, this is the ASCII standard"
    },
    {
      "Time_Start": 92.56,
      "Time_End": 100.56,
      "Text": " code. Now, if you look closely at this, it's got seven bits. It's got this large unassigned"
    },
    {
      "Time_Start": 100.56,
      "Time_End": 108.12,
      "Text": " range. It's got an escape. That's what a lot of this talk is about. There's also something"
    },
    {
      "Time_Start": 108.12,
      "Time_End": 115.0,
      "Text": " called WIU, which is who are you? And that's a way of asking the terminal on the other"
    },
    {
      "Time_Start": 115.0,
      "Time_End": 121.16000000000001,
      "Text": " end what it is. And a lot of this talk will talk about that. So, from the early days of"
    },
    {
      "Time_Start": 121.16000000000001,
      "Time_End": 127.2,
      "Text": " the ASCII standard, replies were something that were a key part of it. So, in this case,"
    },
    {
      "Time_Start": 127.2,
      "Time_End": 133.52,
      "Text": " you sent a single character, WIU, and in response, the other end would probably respond with"
    },
    {
      "Time_Start": 133.52,
      "Time_End": 143.44,
      "Text": " RU. It turns out this is all a bit vague because later on, ASCII changed, and in 1967,"
    },
    {
      "Time_Start": 143.44,
      "Time_End": 151.88,
      "Text": " they added, well, lower case, which was quite key. They also moved escape. So, now, if you"
    },
    {
      "Time_Start": 151.88,
      "Time_End": 158.0,
      "Text": " look closely at this table, all the control sequences are on the left two columns except"
    },
    {
      "Time_Start": 158.08,
      "Time_End": 163.2,
      "Text": " delete, which is actually an interesting legacy and one of those facts that I really like."
    },
    {
      "Time_Start": 163.2,
      "Time_End": 168.52,
      "Text": " So, delete is where it is because on a punch card, if you punch out all the holes, you"
    },
    {
      "Time_Start": 168.52,
      "Time_End": 174.88,
      "Text": " delete a character. So, sort of legacy things that we still have in ASCII are designed like"
    },
    {
      "Time_Start": 174.88,
      "Time_End": 179.96,
      "Text": " that for a reason. It's one of those legacy things that doesn't hurt but is kind of amusing."
    },
    {
      "Time_Start": 179.96,
      "Time_End": 186.6,
      "Text": " So, there's a few other details about ASCII. It only defines seven bits, as I said, although"
    },
    {
      "Time_Start": 186.64,
      "Time_End": 193.84,
      "Text": " interestingly, two years after this, in 1969, Vint Cerf wrote RFC 20, and that basically"
    },
    {
      "Time_Start": 193.84,
      "Time_End": 199.72,
      "Text": " said that the internet should use ASCII, but it also said that it should use eight-bit"
    },
    {
      "Time_Start": 199.72,
      "Time_End": 204.56,
      "Text": " characters, which is, you know, what we expect these days, but that RFC actually defines"
    },
    {
      "Time_Start": 204.56,
      "Time_End": 208.44,
      "Text": " that the eighth bit should just always be zero. So, they hadn't yet actually defined"
    },
    {
      "Time_Start": 208.44,
      "Time_End": 213.07999999999998,
      "Text": " what the eighth bit was, but they were leaving room for expansion. So, there's a lot of"
    },
    {
      "Time_Start": 213.08,
      "Time_End": 218.16000000000003,
      "Text": " sort of history here, and if you're interested in character encodings, there's some references"
    },
    {
      "Time_Start": 218.16000000000003,
      "Time_End": 225.0,
      "Text": " for this talk. There's books on it. IBM were very involved in it, and some other things."
    },
    {
      "Time_Start": 225.0,
      "Time_End": 232.0,
      "Text": " So, 60 years ago, there were some proposals on ESCAPE. So, before ASCII was even officially"
    },
    {
      "Time_Start": 232.8,
      "Time_End": 239.4,
      "Text": " published as a standard, Bob Bemer, who was an employee of IBM, wrote an article in Communications"
    },
    {
      "Time_Start": 239.4,
      "Time_End": 245.04,
      "Text": " of the ACM called A Proposal for Character Code Compatibility, which is a bit of a wordy"
    },
    {
      "Time_Start": 245.04,
      "Time_End": 249.84,
      "Text": " thing, but basically it was saying we've got this single character set, but what are we"
    },
    {
      "Time_Start": 249.84,
      "Time_End": 254.84,
      "Text": " going to do if we need to put international characters in and so on, and that was where"
    },
    {
      "Time_Start": 254.84,
      "Time_End": 261.48,
      "Text": " ESCAPE was defined as a mechanism that allowed basically to say something different is coming"
    },
    {
      "Time_Start": 261.48,
      "Time_End": 268.48,
      "Text": " after this point. And, you know, everyone here who's done freaking or anything knows"
    },
    {
      "Time_Start": 269.8,
      "Time_End": 275.56,
      "Text": " how great in-band signaling is. So, basically this is in-band signaling, and so the second"
    },
    {
      "Time_Start": 275.56,
      "Time_End": 282.56,
      "Text": " reference is from 1963, and that was written by someone at AT&T, you know, so they really"
    },
    {
      "Time_Start": 283.20000000000005,
      "Time_End": 288.52000000000004,
      "Text": " loved in-band signaling, and so this was a proposed discipline for the use of ESCAPE,"
    },
    {
      "Time_Start": 288.52,
      "Time_End": 293.28,
      "Text": " and this was kind of the first time that what ESCAPE might mean was defined, and it's"
    },
    {
      "Time_Start": 293.28,
      "Time_End": 296.4,
      "Text": " very interesting to sort of go back at the history of this, and one of the key things"
    },
    {
      "Time_Start": 296.4,
      "Time_End": 303.4,
      "Text": " it actually defines is not what ESCAPE does, but how it is parsed essentially, and so it"
    },
    {
      "Time_Start": 303.44,
      "Time_End": 310.0,
      "Text": " says that particular letters or symbols after ESCAPE will either continue the ESCAPE sequence"
    },
    {
      "Time_Start": 310.0,
      "Time_End": 317.0,
      "Text": " or end it, and that later becomes relevant. So, what was ASCII actually used in? So, in"
    },
    {
      "Time_Start": 318.0,
      "Time_End": 324.4,
      "Text": " 1963, the teletype model 33 was released, and this was one of the first devices to use"
    },
    {
      "Time_Start": 324.4,
      "Time_End": 330.68,
      "Text": " ASCII. It's kind of lost to history exactly what was using it, but, you know, this was"
    },
    {
      "Time_Start": 330.68,
      "Time_End": 336.64,
      "Text": " a thing you could type into, and it was used in the development of UNIX, so sitting down"
    },
    {
      "Time_Start": 336.64,
      "Time_End": 343.64,
      "Text": " here, this is 1972, Ken Thompson is sitting down, and Dennis Ritchie is standing up. Ken"
    },
    {
      "Time_Start": 344.03999999999996,
      "Time_End": 351.03999999999996,
      "Text": " is sitting at a teletypewriter, or a TTY, so this UNIX machine has two TTYs. We still"
    },
    {
      "Time_Start": 352.4,
      "Time_End": 356.76,
      "Text": " call them TTYs, but they're not that device any more. They're something quite different,"
    },
    {
      "Time_Start": 356.76,
      "Time_End": 363.76,
      "Text": " but this is where terminals started. So, in 1976, Leah Siegler released the ADM3A. Now,"
    },
    {
      "Time_Start": 367.24,
      "Time_End": 372.0,
      "Text": " this wasn't the first glass terminal. That was released by Datapoint in the early 70s,"
    },
    {
      "Time_Start": 372.0,
      "Time_End": 376.36,
      "Text": " but this was one of the first affordable terminals, at least at the time, in kit form."
    },
    {
      "Time_Start": 376.36,
      "Time_End": 383.04,
      "Text": " It cost under a thousand US dollars. And the University of California at Berkeley standardised"
    },
    {
      "Time_Start": 383.04,
      "Time_End": 390.04,
      "Text": " on these for various uses, and Bill Joy had one of these. If we look closely at the keyboard,"
    },
    {
      "Time_Start": 391.6,
      "Time_End": 395.84,
      "Text": " on the very left-hand side are the configuration options, so you open a panel and change dip"
    },
    {
      "Time_Start": 396.04,
      "Time_End": 402.04,
      "Text": " switches to adjust the speed and other things like that. But if you look very closely at"
    },
    {
      "Time_Start": 402.04,
      "Time_End": 408.16,
      "Text": " the H, J, K and L keys, you see they've got arrows, and if you're a Vim user, you might"
    },
    {
      "Time_Start": 408.16,
      "Time_End": 414.64000000000004,
      "Text": " be familiar with what those do. So, this terminal was used by Bill Joy in the development of"
    },
    {
      "Time_Start": 414.64000000000004,
      "Time_End": 419.64000000000004,
      "Text": " the X editor, which had a mode called VI, and as we all know, the rest is history. So,"
    },
    {
      "Time_Start": 419.64000000000004,
      "Time_End": 424.76000000000005,
      "Text": " this was the first device that was used to develop the visual editor that we now know"
    },
    {
      "Time_Start": 424.76,
      "Time_End": 430.24,
      "Text": " on Unix. And there's another Unix reference here. If you look at the top right-hand side,"
    },
    {
      "Time_Start": 430.24,
      "Time_End": 436.15999999999997,
      "Text": " the home button has a tilde on it, and that's what the home directory is these days. Exactly"
    },
    {
      "Time_Start": 436.15999999999997,
      "Time_End": 440.28,
      "Text": " whether this is the exact reason that that is the case, people think so, but it's kind"
    },
    {
      "Time_Start": 440.28,
      "Time_End": 446.71999999999997,
      "Text": " of lost in time. But, yes, there's definitely a lot of Unix history here. But why is this"
    },
    {
      "Time_Start": 446.71999999999997,
      "Time_End": 451.0,
      "Text": " also interesting? Well, this was also one of the first terminals that let you position"
    },
    {
      "Time_Start": 451.0,
      "Time_End": 456.04,
      "Text": " the cursor anywhere on the screen. This is from the manual, which someone has kindly"
    },
    {
      "Time_Start": 456.04,
      "Time_End": 461.8,
      "Text": " preserved, and it basically says that the escape key can be used in conjunction with"
    },
    {
      "Time_Start": 461.8,
      "Time_End": 466.92,
      "Text": " character keys to position the cursor anywhere on the screen. So, rather than just moving"
    },
    {
      "Time_Start": 466.92,
      "Time_End": 471.24,
      "Text": " the cursor up and down, you can say, I want it, you know, five rows down, two across,"
    },
    {
      "Time_Start": 471.24,
      "Time_End": 477.16,
      "Text": " whatever it is, which lets you essentially implement any kind of editor or a visual application"
    },
    {
      "Time_Start": 477.16,
      "Time_End": 481.64000000000004,
      "Text": " at least as far as you can go visually in a terminal. And this was one of the first"
    },
    {
      "Time_Start": 481.64000000000004,
      "Time_End": 487.16,
      "Text": " devices to support this kind of thing. Some of the earlier terminals only supported moving"
    },
    {
      "Time_Start": 487.16,
      "Time_End": 492.52000000000004,
      "Text": " up and down, so it was more inefficient, especially over at the time people were using 300 board"
    },
    {
      "Time_Start": 492.52000000000004,
      "Time_End": 497.32000000000005,
      "Text": " modems to talk to things. So, if you imagine you have to send multiple characters to move"
    },
    {
      "Time_Start": 497.32000000000005,
      "Time_End": 503.6,
      "Text": " the cursor around, you can literally see the cursor move. So, the interesting thing in"
    },
    {
      "Time_Start": 503.6,
      "Time_End": 507.28000000000003,
      "Text": " this document is actually somewhere in the middle. It says this operation may also be"
    },
    {
      "Time_Start": 507.28000000000003,
      "Time_End": 513.64,
      "Text": " initiated by the host computer. So, the user can type this as an escape sequence, or the"
    },
    {
      "Time_Start": 513.64,
      "Time_End": 517.28,
      "Text": " computer can basically say, position this where I want on the screen. And basically"
    },
    {
      "Time_Start": 517.28,
      "Time_End": 529.28,
      "Text": " that makes VI possible. So, in 1978, the VT100 was released, and this was really continuing"
    },
    {
      "Time_Start": 529.6,
      "Time_End": 535.28,
      "Text": " the introduction of more and more features into terminals. But the interesting thing"
    },
    {
      "Time_Start": 535.28,
      "Time_End": 539.68,
      "Text": " about the VT100 is it was one of the first terminals to implement this standard, which"
    },
    {
      "Time_Start": 539.68,
      "Time_End": 549.68,
      "Text": " is known as X3.64-1979. But many people know this simply as ANSI. So, we'll get to what"
    },
    {
      "Time_Start": 549.68,
      "Time_End": 556.28,
      "Text": " that means. But to give it its full name, additional controls for use with American"
    },
    {
      "Time_Start": 556.28,
      "Time_End": 560.8,
      "Text": " National Standard Code for Information Interchange. So, basically this was, as I said earlier,"
    },
    {
      "Time_Start": 560.8,
      "Time_End": 565.24,
      "Text": " there was a working group on escape. That working group turned into this standard. There"
    },
    {
      "Time_Start": 565.24,
      "Time_End": 569.9599999999999,
      "Text": " were some other details along the way, but this was the final product. The standard was"
    },
    {
      "Time_Start": 569.9599999999999,
      "Time_End": 576.56,
      "Text": " actually released in 1979. So, the VT100 was built in development of that standard, and"
    },
    {
      "Time_Start": 576.56,
      "Time_End": 581.88,
      "Text": " OpTec actually released it before the standard was released. So, very close together development."
    },
    {
      "Time_Start": 581.88,
      "Time_End": 587.0,
      "Text": " I haven't looked that closely at the history there, but it's quite interesting. But what"
    },
    {
      "Time_Start": 587.0,
      "Time_End": 593.88,
      "Text": " does a VT100 give us? So, it gives us escape sequences like this. So, I'm using C star"
    },
    {
      "Time_Start": 593.88,
      "Time_End": 598.8,
      "Text": " strings here. So, slash E is the escape character, and then the other things you see are just"
    },
    {
      "Time_Start": 598.8,
      "Time_End": 605.0,
      "Text": " the symbols you expect them to be. So, like I said, a particular sequence is defined."
    },
    {
      "Time_Start": 605.32,
      "Time_End": 612.36,
      "Text": " So, here the left bracket opens a particular kind of escape sequence. Then you can have"
    },
    {
      "Time_Start": 612.36,
      "Time_End": 619.08,
      "Text": " numbers, semicolons, and then usually a letter ends the sequence. So, here the top one sets"
    },
    {
      "Time_Start": 619.08,
      "Time_End": 624.76,
      "Text": " the top and bottom margins, which is a deck specific one based on the name. The bottom"
    },
    {
      "Time_Start": 624.76,
      "Time_End": 629.4,
      "Text": " two are positioning the cursor, and those are ANSI standard ones. They don't have a"
    },
    {
      "Time_Start": 629.4,
      "Time_End": 636.6,
      "Text": " deck prefix to the name. So, we can actually just demo this. So, like on a VT100 emulator,"
    },
    {
      "Time_Start": 636.6,
      "Time_End": 642.6,
      "Text": " we can just in a command line, we can run print F, and this will do something. Sorry,"
    },
    {
      "Time_Start": 647.16,
      "Time_End": 655.16,
      "Text": " this bit is not. So, I'm actually using OpenBSD to demo this. So, here I am just logging in"
    },
    {
      "Time_Start": 655.4,
      "Time_End": 663.4,
      "Text": " as you do, but a console is a VT100 emulator, and here I can just type print F, and I've"
    },
    {
      "Time_Start": 663.8,
      "Time_End": 667.52,
      "Text": " now limited myself to the top ten lines of the screen. So, if I type clear, you can now"
    },
    {
      "Time_Start": 667.52,
      "Time_End": 673.52,
      "Text": " see I'm still hitting enter, but I don't go further down the screen, but I can use an"
    },
    {
      "Time_Start": 673.52,
      "Time_End": 678.8399999999999,
      "Text": " escape sequence to move further down the screen. So, I've now moved myself outside that restricted"
    },
    {
      "Time_Start": 678.8399999999999,
      "Time_End": 684.4,
      "Text": " region using the deck escape sequence. Now I can move 2,000 lines up. So, OpenBSD just"
    },
    {
      "Time_Start": 684.4,
      "Time_End": 690.4,
      "Text": " rebooted when I moved 2,000 lines down then. So, what just happened? So, have you tried"
    },
    {
      "Time_Start": 697.28,
      "Time_End": 703.28,
      "Text": " forcing an unexpected reboot? So, that was a present day OpenBSD bug. It resulted in"
    },
    {
      "Time_Start": 703.28,
      "Time_End": 709.28,
      "Text": " this reliability fix in early 2023, and I found that basically the VT100 emulation,"
    },
    {
      "Time_Start": 717.9599999999999,
      "Time_End": 722.36,
      "Text": " which was originally written for NetBSD in 1998, I don't think anyone had ever really"
    },
    {
      "Time_Start": 722.36,
      "Time_End": 728.12,
      "Text": " audited it. So, basically, yeah, you asked it to move around the screen, and there was"
    },
    {
      "Time_Start": 728.12,
      "Time_End": 734.28,
      "Text": " some kind of, it was basically just a bounds checking error, as it says there. I later"
    },
    {
      "Time_Start": 734.28,
      "Time_End": 738.04,
      "Text": " found another bug, so there was a further reliability fix while I was writing this talk."
    },
    {
      "Time_Start": 738.04,
      "Time_End": 745.08,
      "Text": " I was like, that's strange. So, it turns out also if you look at those escape sequences,"
    },
    {
      "Time_Start": 745.08,
      "Time_End": 748.76,
      "Text": " I said you can have numbers and semicolons and things. It turns out if you just send"
    },
    {
      "Time_Start": 748.76,
      "Time_End": 755.64,
      "Text": " four gigabytes of semicolons, you overflowed something. Both of these will either cause"
    },
    {
      "Time_Start": 755.64,
      "Time_End": 760.92,
      "Text": " a kernel panic or a reboot, depending on exactly how they're arranged. I don't believe"
    },
    {
      "Time_Start": 760.92,
      "Time_End": 767.6,
      "Text": " they're exploitable further. I'm sure someone might prove me wrong, but I would expect that"
    },
    {
      "Time_Start": 767.6,
      "Time_End": 773.6,
      "Text": " address randomization and other recent additions to kernels limit a lot of this, and also"
    },
    {
      "Time_Start": 778.28,
      "Time_End": 782.28,
      "Text": " on a 64-bit system, you're probably far enough away and you can't actually set more than"
    },
    {
      "Time_Start": 782.28,
      "Time_End": 787.88,
      "Text": " 32-bit parameters. So, maybe a 32-bit system without any address randomization might be"
    },
    {
      "Time_Start": 787.88,
      "Time_End": 791.8,
      "Text": " exploitable. So, you know, if you went back to when this code was written in 1998 and"
    },
    {
      "Time_Start": 791.8,
      "Time_End": 795.48,
      "Text": " found this bug, it would probably be far more interesting than it is right now, but no one"
    },
    {
      "Time_Start": 795.48,
      "Time_End": 800.3199999999999,
      "Text": " found it then, fortunately or unfortunately. I mean, it's interesting that this bug has"
    },
    {
      "Time_Start": 800.3199999999999,
      "Time_End": 808.3199999999999,
      "Text": " existed in OpenBSD and NetBSD for, you know, 25 years, but there you go. So, let's go to"
    },
    {
      "Time_Start": 808.5200000000001,
      "Time_End": 814.5200000000001,
      "Text": " the 1980s now. PCs. So, DOS 2.0 introduced a driver called ANSI.SYS. And actually, this"
    },
    {
      "Time_Start": 820.96,
      "Time_End": 828.0,
      "Text": " is a screenshot from PCJS.org, which is an awesome web-based PC emulator, and it actually"
    },
    {
      "Time_Start": 828.0,
      "Time_End": 832.4000000000001,
      "Text": " is quite a faithful emulation of PCs. It's not just like trying to make sure that XXX"
    },
    {
      "Time_Start": 832.4000000000001,
      "Time_End": 837.72,
      "Text": " works. It really does have the IBM BIOS and some other things. So, you can go there, type"
    },
    {
      "Time_Start": 837.76,
      "Time_End": 842.96,
      "Text": " in those commands, and if you see at the bottom where I've typed CLS and piped it to more,"
    },
    {
      "Time_Start": 842.96,
      "Time_End": 848.9200000000001,
      "Text": " that's actually something that is built into DOS. If you type CLS and it's not directly"
    },
    {
      "Time_Start": 848.9200000000001,
      "Time_End": 853.48,
      "Text": " connected to the screen, then it will output the escape sequence. In this case, I've not"
    },
    {
      "Time_Start": 853.48,
      "Time_End": 860.48,
      "Text": " actually rebooted after I've said to load ANSI.SYS. So, this is the default DOS behavior."
    },
    {
      "Time_Start": 860.9200000000001,
      "Time_End": 867.6800000000001,
      "Text": " You just see the escape character on the screen. If you do this on the PCJS emulator, you reboot,"
    },
    {
      "Time_Start": 867.6800000000001,
      "Time_End": 881.6800000000001,
      "Text": " and it will actually run that code. So, that's how that works. Unfortunately, I have minor"
    },
    {
      "Time_Start": 881.6800000000001,
      "Time_End": 886.08,
      "Text": " technical issues. I mean, this particular demo is not going to work. So, I was going"
    },
    {
      "Time_Start": 886.08,
      "Time_End": 896.08,
      "Text": " to demo what happens with ANSI.SYS on a more recent DOS. So, basically, bulletin boards"
    },
    {
      "Time_Start": 896.08,
      "Time_End": 903.88,
      "Text": " and things use ANSI.SYS, and it was kind of awesome, you know, combined with this particular"
    },
    {
      "Time_Start": 903.88,
      "Time_End": 912.2800000000001,
      "Text": " IBM code page. This is IBM code page 437. So, I mentioned what ASCII is, but if we look"
    },
    {
      "Time_Start": 912.2800000000001,
      "Time_End": 918.7800000000001,
      "Text": " at the second half of this, there's some custom characters, and then these are the IBM PC"
    },
    {
      "Time_Start": 918.78,
      "Time_End": 926.38,
      "Text": " specific characters, and these combined with the escape sequences that the ANSI.SYS driver"
    },
    {
      "Time_Start": 926.38,
      "Time_End": 932.18,
      "Text": " gives you allows you to do art like this. This was taken from a Dreams of Insanity bulletin"
    },
    {
      "Time_Start": 932.18,
      "Time_End": 941.5799999999999,
      "Text": " board, the intro to it, and you can find this online on textfiles.com or other places. So,"
    },
    {
      "Time_Start": 941.5799999999999,
      "Time_End": 945.98,
      "Text": " how you can actually view this on a modern computer is you can actually use icon to convert"
    },
    {
      "Time_Start": 945.98,
      "Time_End": 951.88,
      "Text": " from IBM code page 437, and then you can pipe it to PV, which is a command line tool"
    },
    {
      "Time_Start": 951.88,
      "Time_End": 957.38,
      "Text": " that can do various pipe-like things on Unix, and in this case, I'm asking it to slow down"
    },
    {
      "Time_Start": 957.38,
      "Time_End": 961.98,
      "Text": " enough that it behaves like a 28K modem, and if you run that, unfortunately, the demo is"
    },
    {
      "Time_Start": 961.98,
      "Time_End": 969.98,
      "Text": " not working for reasons, but basically, you'll see the output just below it, and what that"
    },
    {
      "Time_Start": 969.98,
      "Time_End": 976.38,
      "Text": " actually looks like when you look at it in a raw form is something like this. So, you"
    },
    {
      "Time_Start": 976.38,
      "Time_End": 982.58,
      "Text": " can see the text is actually sort of here and here, but there's all these control characters"
    },
    {
      "Time_Start": 982.58,
      "Time_End": 986.1800000000001,
      "Text": " here. So, it's kind of hard if you actually just open this in an editor to see what it's"
    },
    {
      "Time_Start": 986.1800000000001,
      "Time_End": 991.58,
      "Text": " doing, and that, of course, brings us to a potential attack. So, there's something called"
    },
    {
      "Time_Start": 991.58,
      "Time_End": 998.38,
      "Text": " ANSI bombs. Now, the ANSI.SYS driver had a special ability to redefine keys. So, if you"
    },
    {
      "Time_Start": 998.48,
      "Time_End": 1004.38,
      "Text": " could write something to someone's screen, you could redefine keys. Now, what I'm showing"
    },
    {
      "Time_Start": 1004.38,
      "Time_End": 1011.18,
      "Text": " there is actually still detected by some antiviruses. That is a real virus, and it basically"
    },
    {
      "Time_Start": 1011.18,
      "Time_End": 1016.28,
      "Text": " says for particular keys, redefine them. So, if you type this to the screen like it tells"
    },
    {
      "Time_Start": 1016.28,
      "Time_End": 1020.58,
      "Text": " you to, you do type help.txt, which is for those who have forgotten how DOS works, that's"
    },
    {
      "Time_Start": 1020.58,
      "Time_End": 1025.18,
      "Text": " the same as cat to the screen, basically. So, raw cat is a bad idea. Raw type is a bad"
    },
    {
      "Time_Start": 1025.18,
      "Time_End": 1032.5800000000002,
      "Text": " idea on DOS a long time ago. So, anyway, you do that, and then you hit enter, and what"
    },
    {
      "Time_Start": 1032.5800000000002,
      "Time_End": 1038.5800000000002,
      "Text": " that actually expands to is a Dell tree. So, if we just go back, each one of these, the"
    },
    {
      "Time_Start": 1038.5800000000002,
      "Time_End": 1050.0800000000002,
      "Text": " first sort of part of the sequence is which character to redefine. Sorry about that. So,"
    },
    {
      "Time_Start": 1050.1799999999998,
      "Time_End": 1056.48,
      "Text": " that's which character to redefine. And it's if we go right back to the ANSI table, which"
    },
    {
      "Time_Start": 1056.48,
      "Time_End": 1062.8799999999999,
      "Text": " I won't do right now, but you'll see that my favorite one here is so 27 is escape. We'll"
    },
    {
      "Time_Start": 1062.8799999999999,
      "Time_End": 1067.28,
      "Text": " talk about that a bit later. Eight is a good one. That's backspace. So, you think you've"
    },
    {
      "Time_Start": 1067.28,
      "Time_End": 1073.78,
      "Text": " made a mistake, and then you press backspace, and this silly basically this is a prank."
    },
    {
      "Time_Start": 1074.78,
      "Time_End": 1083.18,
      "Text": " Bombs are always a prank. But anyway, it redefines certain keys if you cat this to your"
    },
    {
      "Time_Start": 1083.18,
      "Time_End": 1086.98,
      "Text": " screen, and maybe you don't immediately realize this. There were many different variants of"
    },
    {
      "Time_Start": 1086.98,
      "Time_End": 1091.28,
      "Text": " this. Like some were sort of weird, and you maybe didn't even touch that key. So, you"
    },
    {
      "Time_Start": 1091.28,
      "Time_End": 1097.58,
      "Text": " didn't know it happened, and then later on, you randomly press it. So, this wasn't really"
    },
    {
      "Time_Start": 1097.58,
      "Time_End": 1101.8799999999999,
      "Text": " considered a real security thing back in the day, but it's kind of amusing because it's a"
    },
    {
      "Time_Start": 1101.98,
      "Time_End": 1107.18,
      "Text": " predecessor to some of the things I'm going to get to. So, yeah, probably bad deleting your"
    },
    {
      "Time_Start": 1107.18,
      "Time_End": 1113.18,
      "Text": " C drive. And this works. As you can see here, this was on DOS 622. I demoed this, but it"
    },
    {
      "Time_Start": 1113.18,
      "Time_End": 1118.68,
      "Text": " worked all the way back to DOS 2 if you loaded the ANSI sys driver, which not everyone did,"
    },
    {
      "Time_Start": 1118.68,
      "Time_End": 1122.68,
      "Text": " and there were also secure versions of the ANSI sys driver, but obviously this was the"
    },
    {
      "Time_Start": 1122.68,
      "Time_End": 1129.88,
      "Text": " 90s and the 80s, so CVEs weren't really a thing and stuff like that. So, you know, some"
    },
    {
      "Time_Start": 1129.88,
      "Time_End": 1135.88,
      "Text": " of these attacks that I'm talking about are older than you may realize. So, let's go to the"
    },
    {
      "Time_Start": 1138.88,
      "Time_End": 1144.88,
      "Text": " 90s. So, this was from Frack in 1994, and it's a utility called Flash.C. And so it says"
    },
    {
      "Time_Start": 1148.88,
      "Time_End": 1154.88,
      "Text": " here it's intended to quickly mess up a user's terminal by issuing a talk request and sending"
    },
    {
      "Time_Start": 1154.88,
      "Time_End": 1160.88,
      "Text": " special characters and it says it's really nasty. So, let's have a look at what that actually"
    },
    {
      "Time_Start": 1160.88,
      "Time_End": 1166.88,
      "Text": " is. So, it sends these evil strings. So, I won't go into exactly what they all do, but one"
    },
    {
      "Time_Start": 1168.38,
      "Time_End": 1174.68,
      "Text": " of the ones that I mentioned earlier was the limiting to the top ten lines of the screen."
    },
    {
      "Time_Start": 1174.68,
      "Time_End": 1178.5800000000002,
      "Text": " Well, this is limiting you to the top three lines of the screen. So, already that's quite"
    },
    {
      "Time_Start": 1178.5800000000002,
      "Time_End": 1182.5800000000002,
      "Text": " annoying because you've got a really large terminal and you can only see three lines. It"
    },
    {
      "Time_Start": 1182.58,
      "Time_End": 1188.58,
      "Text": " also inverts the background color. One of them is a deck specific sequence that sends a test"
    },
    {
      "Time_Start": 1189.6799999999998,
      "Time_End": 1196.3799999999999,
      "Text": " pattern to the screen, which basically means it fills the screen with ease. So, yeah. But"
    },
    {
      "Time_Start": 1196.3799999999999,
      "Time_End": 1202.08,
      "Text": " just a quick aside, because if you looked at this, you see that says slash 033. So, that's"
    },
    {
      "Time_Start": 1202.08,
      "Time_End": 1208.08,
      "Text": " octal. So, 033 is actually 27 in character numbers in decimal. So, there are many ways to"
    },
    {
      "Time_Start": 1209.08,
      "Time_End": 1215.08,
      "Text": " represent escape. I've already in this presentation shown three at the top. But you can also use"
    },
    {
      "Time_Start": 1219.8799999999999,
      "Time_End": 1224.8799999999999,
      "Text": " JSON and stocks talk mentioned that you probably should escape certain outputs of the screen"
    },
    {
      "Time_Start": 1224.8799999999999,
      "Time_End": 1232.08,
      "Text": " using that. So, yeah. You can do that in JSON. If you're writing stuff in Go, then it doesn't"
    },
    {
      "Time_Start": 1232.08,
      "Time_End": 1238.8799999999999,
      "Text": " do C style strings. So, slash X1B and in some cases just slash 27. And we'll get to some"
    },
    {
      "Time_Start": 1238.8799999999999,
      "Time_End": 1243.8799999999999,
      "Text": " other variants on this in a moment. But, yeah. So, if you see this in various different forms,"
    },
    {
      "Time_Start": 1243.8799999999999,
      "Time_End": 1250.8799999999999,
      "Text": " just be aware that, like, there are many ways to represent escape. So, hello, DEF CON. This"
    },
    {
      "Time_Start": 1250.8799999999999,
      "Time_End": 1256.8799999999999,
      "Text": " is a BT520. My dog also says hi. So, November 1995, this was released. Now, Windows 95 was"
    },
    {
      "Time_Start": 1257.68,
      "Time_End": 1263.68,
      "Text": " actually released before this. So, this was newish tech for the time. It did some fancy"
    },
    {
      "Time_Start": 1267.18,
      "Time_End": 1271.88,
      "Text": " things. But in the terminal world, it was new. In the real computer world, most people were"
    },
    {
      "Time_Start": 1271.88,
      "Time_End": 1278.0800000000002,
      "Text": " actually using X terms. And if we go back to this flash.C, it says in the middle that it's"
    },
    {
      "Time_Start": 1278.0800000000002,
      "Time_End": 1284.0800000000002,
      "Text": " actually expecting to target an X term. But let's just be time appropriate here. So, what"
    },
    {
      "Time_Start": 1284.08,
      "Time_End": 1290.3799999999999,
      "Text": " happens if we simulate receiving flash.C terminal DOS attack? Oops. Okay. So, this is"
    },
    {
      "Time_Start": 1314.3799999999999,
      "Time_End": 1317.58,
      "Text": " I'm just going to have to switch inputs. This is going to be a bit crazy. I thought I had"
    },
    {
      "Time_Start": 1317.58,
      "Time_End": 1323.58,
      "Text": " this video copy. Okay. That works. Yeah. So, sorry. This flickers both because the video"
    },
    {
      "Time_Start": 1324.08,
      "Time_End": 1330.08,
      "Text": " recording of this is kind of bad, but also there's an issue with the projector. But what"
    },
    {
      "Time_Start": 1345.58,
      "Time_End": 1352.08,
      "Text": " happens is the screen goes blank anyway. So, this is kind of annoying. So, if you send this"
    },
    {
      "Time_Start": 1352.08,
      "Time_End": 1357.28,
      "Text": " to a real terminal, a reboot of it takes several seconds. So, you literally send escape and C"
    },
    {
      "Time_Start": 1357.28,
      "Time_End": 1361.8799999999999,
      "Text": " and the real terminal breaks. If we remove the escape and C and we send that, then we see"
    },
    {
      "Time_Start": 1361.8799999999999,
      "Time_End": 1366.28,
      "Text": " roughly what we would have seen in X term or another terminal. So, it starts flashing a lot"
    },
    {
      "Time_Start": 1366.28,
      "Time_End": 1374.28,
      "Text": " and inverts the background. And now when we start typing, we also see our characters are not"
    },
    {
      "Time_Start": 1374.28,
      "Time_End": 1379.58,
      "Text": " the normal characters. So, there's a deck special alphabet that is designed for box drawing"
    },
    {
      "Time_Start": 1379.58,
      "Time_End": 1385.58,
      "Text": " and things. A bit like we saw the PC had its own. So, yeah. We then reset and we can see"
    },
    {
      "Time_Start": 1387.28,
      "Time_End": 1392.6799999999998,
      "Text": " what happened. But notice reset didn't reset the fact that the screen was inverted. So, this"
    },
    {
      "Time_Start": 1392.6799999999998,
      "Time_End": 1397.8799999999999,
      "Text": " really messed up your terminal. Send these things to the terminal and it's kind of broken. So,"
    },
    {
      "Time_Start": 1397.8799999999999,
      "Time_End": 1403.8799999999999,
      "Text": " yeah. So, let's go to 2003. So, H.D. Moore did some research and published this article"
    },
    {
      "Time_Start": 1404.88,
      "Time_End": 1410.88,
      "Text": " in BugTrack and Full Disclosure at the time. Terminal emulated security issues. And now this"
    },
    {
      "Time_Start": 1413.18,
      "Time_End": 1418.68,
      "Text": " is some of the first proper research. CVEs were still relatively new at the time. That's in"
    },
    {
      "Time_Start": 1418.68,
      "Time_End": 1425.18,
      "Text": " quotes because it was rather than CVEs, it was actually CANs. It's just going to go blank for a"
    },
    {
      "Time_Start": 1425.18,
      "Time_End": 1431.18,
      "Text": " second. So, these were CANs. And they later became CVEs. So, this is kind of interesting."
    },
    {
      "Time_Start": 1433.88,
      "Time_End": 1440.88,
      "Text": " Is that going to come back? Let me just type XRNR commands for a moment. There we go. So,"
    },
    {
      "Time_Start": 1464.88,
      "Time_End": 1471.38,
      "Text": " this was among the first published CVEs. And so, one of the ones in here is about window title"
    },
    {
      "Time_Start": 1471.38,
      "Time_End": 1476.5800000000002,
      "Text": " reporting. So, I've mentioned this in some previous talks. So, sorry if you've seen that"
    },
    {
      "Time_Start": 1476.5800000000002,
      "Time_End": 1483.0800000000002,
      "Text": " before. But I think it's important to repeat some of this. So, what does this look like? So,"
    },
    {
      "Time_Start": 1483.0800000000002,
      "Time_End": 1488.3000000000002,
      "Text": " if we print something to the screen, like I showed before, you can print escape sequences to"
    },
    {
      "Time_Start": 1488.3000000000002,
      "Time_End": 1492.3400000000001,
      "Text": " change positions on the screen and move things around. This is a special escape sequence to"
    },
    {
      "Time_Start": 1492.34,
      "Time_End": 1497.9599999999998,
      "Text": " set the title. So, your shell prompt will often include the command to set the title, for"
    },
    {
      "Time_Start": 1497.9599999999998,
      "Time_End": 1503.9599999999998,
      "Text": " example. So, what if we set it to calc EXE? Well, that's not bad. But some terminals have a"
    },
    {
      "Time_Start": 1505.84,
      "Time_End": 1512.26,
      "Text": " special sequence to ask for a reply of what the title is. So, you ask for what the title is, it"
    },
    {
      "Time_Start": 1512.26,
      "Time_End": 1518.26,
      "Text": " replies with what the title is. And so, then this looks something a bit like this."
    },
    {
      "Time_Start": 1523.26,
      "Time_End": 1529.26,
      "Text": " Which one are we doing? This one. So, yeah. So, we do something like this and calc EXE opens"
    },
    {
      "Time_Start": 1532.22,
      "Time_End": 1538.22,
      "Text": " back here. So, it's literally that simple. But, yeah. So, this is interesting. This wasn't an"
    },
    {
      "Time_Start": 1538.84,
      "Time_End": 1544.84,
      "Text": " old vulnerability. I just ran that against Con AMU, which is a Windows terminal. So, that"
    },
    {
      "Time_Start": 1554.76,
      "Time_End": 1562.06,
      "Text": " vulnerability from X term also exists on Con AMU and Swift term and WES term. The Con AMU"
    },
    {
      "Time_Start": 1562.3999999999999,
      "Time_End": 1568.8999999999999,
      "Text": " one is the most concerning, though. Because actually what I did back here, if you look"
    },
    {
      "Time_Start": 1568.8999999999999,
      "Time_End": 1574.8999999999999,
      "Text": " closely, I put a slash X zero D, which is also known as carry for return. So, in this case, I"
    },
    {
      "Time_Start": 1576.6,
      "Time_End": 1581.6,
      "Text": " didn't have to press enter. The terminal pressed enter for me. And that makes these attacks"
    },
    {
      "Time_Start": 1581.6,
      "Time_End": 1586.86,
      "Text": " much more scary. It's either before you had to social engineer the user into pressing enter"
    },
    {
      "Time_Start": 1586.8600000000001,
      "Time_End": 1592.8600000000001,
      "Text": " somehow. But it turns out actually you don't always have to do that. So, there are other"
    },
    {
      "Time_Start": 1595.44,
      "Time_End": 1600.4,
      "Text": " ways to deliver this. I use print F. Obviously a user running print F is a bit like someone in"
    },
    {
      "Time_Start": 1600.4,
      "Time_End": 1606.7800000000002,
      "Text": " a JavaScript console. Ask them to open the JavaScript console and attack themselves. But you"
    },
    {
      "Time_Start": 1606.7800000000002,
      "Time_End": 1611.8600000000001,
      "Text": " can run curl on things. And curl is just like catting something to the screen. So, here I have"
    },
    {
      "Time_Start": 1611.9,
      "Time_End": 1617.9,
      "Text": " an evil example.com. When you query it and get it with curl, it says I am good. You pipe it to"
    },
    {
      "Time_Start": 1620.2,
      "Time_End": 1624.44,
      "Text": " the shell and it says I am evil. And down at the bottom I've piped it to cat minus V so you can"
    },
    {
      "Time_Start": 1624.44,
      "Time_End": 1628.94,
      "Text": " see what's happening. And actually there's a comment and then a lot of backspace"
    },
    {
      "Time_Start": 1628.94,
      "Time_End": 1634.94,
      "Text": " characters. So, basically what you see is I am good when you cat it. But what the shell sees is"
    },
    {
      "Time_Start": 1635.94,
      "Time_End": 1642.28,
      "Text": " I am evil followed by a comment. So, you can basically make the user run one, see that they're"
    },
    {
      "Time_Start": 1642.28,
      "Time_End": 1646.28,
      "Text": " going to run one thing and then run something different. This is actually kind of interesting"
    },
    {
      "Time_Start": 1646.28,
      "Time_End": 1651.94,
      "Text": " because some recent attacks in the past year were called Trojan source where people used"
    },
    {
      "Time_Start": 1651.94,
      "Time_End": 1657.3600000000001,
      "Text": " Unicode to achieve similar effects in text editors. So, these kind of things have been"
    },
    {
      "Time_Start": 1657.3600000000001,
      "Time_End": 1662.8600000000001,
      "Text": " possible in basically anywhere you have text. Sometimes text is not just pure ASCII. There are"
    },
    {
      "Time_Start": 1662.8600000000001,
      "Time_End": 1668.7,
      "Text": " other things in it. Escape characters, Unicode, right to left overrides, other things. So,"
    },
    {
      "Time_Start": 1668.7,
      "Time_End": 1674.7,
      "Text": " these things can apply in various ways. So, cat minus V is considered good. In the 80s,"
    },
    {
      "Time_Start": 1678.5200000000002,
      "Time_End": 1683.0800000000002,
      "Text": " the original Unix people from Bell Labs wrote an article called cat minus V considered"
    },
    {
      "Time_Start": 1683.0800000000002,
      "Time_End": 1686.6200000000001,
      "Text": " harmful because they thought that cat shouldn't actually have any command line options and it"
    },
    {
      "Time_Start": 1686.6200000000001,
      "Time_End": 1691.66,
      "Text": " should be its own thing which is kind of amusing. But cat minus V is a good idea. Anything"
    },
    {
      "Time_Start": 1691.66,
      "Time_End": 1696.24,
      "Text": " that can potentially write raw text to your terminal is harmful. So, you can pipe it to cat"
    },
    {
      "Time_Start": 1696.24,
      "Time_End": 1701.8200000000002,
      "Text": " minus V and see what's happening. Alternatively, the program itself, if it expects to print to"
    },
    {
      "Time_Start": 1701.8200000000002,
      "Time_End": 1708.78,
      "Text": " a terminal, should just do the escaping itself. So, if you use curl, what else can we do?"
    },
    {
      "Time_Start": 1708.78,
      "Time_End": 1715.0800000000002,
      "Text": " Well, it's always DNS, isn't it? So, this is a bit crazy. But it turns out you can put lots of"
    },
    {
      "Time_Start": 1715.0800000000002,
      "Time_End": 1720.16,
      "Text": " things in DNS. So, the easy place to do this is text records. I can put stuff in text"
    },
    {
      "Time_Start": 1720.16,
      "Time_End": 1725.78,
      "Text": " records. But it turns out I can also, in many cases, put funny characters just in the host"
    },
    {
      "Time_Start": 1725.78,
      "Time_End": 1732.48,
      "Text": " name itself. The interesting thing about that is depending what libc you're running, it may"
    },
    {
      "Time_Start": 1732.48,
      "Time_End": 1737.9,
      "Text": " or may not resolve. So, what I'm sort of proposing is a slightly crazy delivery method here"
    },
    {
      "Time_Start": 1737.9,
      "Time_End": 1742.98,
      "Text": " is someone finds out that they can't access this host, but someone else says they can, so"
    },
    {
      "Time_Start": 1742.98,
      "Time_End": 1749.0800000000002,
      "Text": " they start debugging it. And it turns out that on Alpine, you can ping the relevant host"
    },
    {
      "Time_Start": 1749.08,
      "Time_End": 1758.36,
      "Text": " because it does follow the C name chain to the crazy thing. But glibc doesn't. And actually,"
    },
    {
      "Time_Start": 1758.36,
      "Time_End": 1764.28,
      "Text": " I due to unrelated vulnerability, I actually made OpenBSD change their behavior. So,"
    },
    {
      "Time_Start": 1764.28,
      "Time_End": 1770.6999999999998,
      "Text": " OpenBSD older versions for about 7.3, this does work. Newer versions, it doesn't. You can"
    },
    {
      "Time_Start": 1770.6999999999998,
      "Time_End": 1774.58,
      "Text": " also use this to tell the difference between macOS and Windows potentially. So, I reckon there's"
    },
    {
      "Time_Start": 1774.6599999999999,
      "Time_End": 1781.32,
      "Text": " some fun things there. Anyway, that's kind of an aside. So, what can we do with this?"
    },
    {
      "Time_Start": 1781.32,
      "Time_End": 1793.32,
      "Text": " So, Windows Terminal, it turns out, supports some kind of music thing. So, yeah. Let's see if"
    },
    {
      "Time_Start": 1793.32,
      "Time_End": 1802.32,
      "Text": " we can make this work. That's not going to work because I don't have any sound."
    },
    {
      "Time_Start": 1804.58,
      "Time_End": 1819.08,
      "Text": " Yeah. Okay. So, yeah. Because I've changed a device here, that sound output is not going to work."
    },
    {
      "Time_Start": 1819.08,
      "Time_End": 1825.86,
      "Text": " But anyway, so you run that in Windows, and it turns out it starts playing music here."
    },
    {
      "Time_Start": 1825.86,
      "Time_End": 1832.74,
      "Text": " Which is kind of fun. But what did I just actually show you? Well, I showed you that if you"
    },
    {
      "Time_Start": 1832.74,
      "Time_End": 1839.94,
      "Text": " run NS lookup, then it actually just writes raw things to the screen. So, it turns out if you"
    },
    {
      "Time_Start": 1839.94,
      "Time_End": 1845.02,
      "Text": " actually have another bug, say, for example, you have a bug in a tool called commander, which"
    },
    {
      "Time_Start": 1845.02,
      "Time_End": 1855.02,
      "Text": " actually is based on con EMU that I just spoke about. So, here we are. We just do an NS lookup"
    },
    {
      "Time_Start": 1855.46,
      "Time_End": 1863.46,
      "Text": " on con EMU dot lab. So, yeah. The interesting thing about this is I previously disclosed this"
    },
    {
      "Time_Start": 1869.1,
      "Time_End": 1876.22,
      "Text": " as a bug. But actually, this still works on the fixed version. I had a bit of a discussion"
    },
    {
      "Time_Start": 1876.22,
      "Time_End": 1881.94,
      "Text": " with the author of con EMU about this. But if you look very closely, I'm using control O"
    },
    {
      "Time_Start": 1881.94,
      "Time_End": 1888.74,
      "Text": " here rather than pressing enter. So, it turns out what the author did to fix this originally"
    },
    {
      "Time_Start": 1888.74,
      "Time_End": 1895.06,
      "Text": " was look for carriage return and line feed. But it turns out if you're using a read line"
    },
    {
      "Time_Start": 1895.06,
      "Time_End": 1902.18,
      "Text": " compatible shell, and this is commander, which adds a bunch of Unix tools to Windows, then"
    },
    {
      "Time_Start": 1902.18,
      "Time_End": 1909.8600000000001,
      "Text": " basically it's, yeah. It runs when you press control O, it actually is bound to something"
    },
    {
      "Time_Start": 1909.8600000000001,
      "Time_End": 1914.66,
      "Text": " like history add and accept, which is the same as pressing enter as far as anything is"
    },
    {
      "Time_Start": 1914.66,
      "Time_End": 1920.9,
      "Text": " concerned. So, yeah. That's a thing. So, sorry. I'm going to have to speed up slightly because"
    },
    {
      "Time_Start": 1920.9,
      "Time_End": 1928.42,
      "Text": " we've got a few more of those to come. So, we're not done with DNS. It turns out there are"
    },
    {
      "Time_Start": 1928.42,
      "Time_End": 1934.6200000000001,
      "Text": " other tricks you can play with DNS. So, Apple terminal is actually relatively secure. I"
    },
    {
      "Time_Start": 1934.6200000000001,
      "Time_End": 1939.6200000000001,
      "Text": " looked at it for a while and didn't find anything. But it does have a way of setting what"
    },
    {
      "Time_Start": 1939.6200000000001,
      "Time_End": 1944.1000000000001,
      "Text": " your working directory is. So, the way this works is the same way that I said that a title"
    },
    {
      "Time_Start": 1944.1000000000001,
      "Time_End": 1948.14,
      "Text": " integrates with your shell prompt, you also integrate with your shell prompt and send the"
    },
    {
      "Time_Start": 1948.14,
      "Time_End": 1953.5800000000002,
      "Text": " terminal a hidden escape sequence that tells it what working directory you're currently in."
    },
    {
      "Time_Start": 1953.5800000000002,
      "Time_End": 1957.9,
      "Text": " Which is, you know, that makes sense. It's useful to tell the terminal what working"
    },
    {
      "Time_Start": 1957.9,
      "Time_End": 1964.6200000000001,
      "Text": " directory you're in. Because it turns out up here you have a thing that tells you that you're"
    },
    {
      "Time_Start": 1964.6200000000001,
      "Time_End": 1968.6200000000001,
      "Text": " in either the temp or your home directory and it gives you a pretty icon of your home if"
    },
    {
      "Time_Start": 1968.6200000000001,
      "Time_End": 1972.3000000000002,
      "Text": " you're in your home directory. Anyway, if you actually read what's happening on the slide"
    },
    {
      "Time_Start": 1972.3000000000002,
      "Time_End": 1979.98,
      "Text": " here. So, I can print users DGL first of all. That works fine. I can also, it turns out, put a"
    },
    {
      "Time_Start": 1979.98,
      "Time_End": 1989.2600000000002,
      "Text": " host name in the file URL. And over here it does a DNS lookup on that file URL. So, it's not"
    },
    {
      "Time_Start": 1989.2600000000002,
      "Time_End": 1996.14,
      "Text": " like the end of the world. But it's an information leakage thing in that if I for some reason"
    },
    {
      "Time_Start": 1996.14,
      "Time_End": 2001.1000000000001,
      "Text": " connected to a server that maybe doesn't have access to the outside world, but the computer"
    },
    {
      "Time_Start": 2001.1000000000001,
      "Time_End": 2006.38,
      "Text": " that I'm connecting from does, some malicious thing on that server could write something to my"
    },
    {
      "Time_Start": 2006.38,
      "Time_End": 2012.7800000000002,
      "Text": " terminal and then it could actually through DNS tunnel it back to wherever. So, you can use DNS"
    },
    {
      "Time_Start": 2012.7800000000002,
      "Time_End": 2020.5400000000002,
      "Text": " as an exfiltration method via the terminal that some user is connected via. So, I reported this"
    },
    {
      "Time_Start": 2020.54,
      "Time_End": 2026.94,
      "Text": " to Apple in, as you can see here, October 2022. And they unfortunately haven't fixed it yet. So,"
    },
    {
      "Time_Start": 2026.94,
      "Time_End": 2031.1,
      "Text": " they're quite past the disclosure deadline for this one. It still works as far as I'm aware. I"
    },
    {
      "Time_Start": 2031.1,
      "Time_End": 2036.46,
      "Text": " haven't tested the very latest version. But it turns out there's also another bug which is kind"
    },
    {
      "Time_Start": 2036.46,
      "Time_End": 2048.14,
      "Text": " of fun. If you actually get to about 1,024 characters somewhere around there, when you open a"
    },
    {
      "Time_Start": 2048.22,
      "Time_End": 2053.42,
      "Text": " new tab, what it tries to do is change into that directory. And this sort of CD command you see"
    },
    {
      "Time_Start": 2053.42,
      "Time_End": 2058.8599999999997,
      "Text": " on screen here is what it wrote. So, it does that sort of for you. It turns out if it's longer"
    },
    {
      "Time_Start": 2058.8599999999997,
      "Time_End": 2065.42,
      "Text": " than the allowed directory name length on Mac OS, then it just hangs the entire terminal. So,"
    },
    {
      "Time_Start": 2065.42,
      "Time_End": 2069.66,
      "Text": " it's kind of a bit like a sleeping time bomb in that if you run that, then the terminal next time"
    },
    {
      "Time_Start": 2069.66,
      "Time_End": 2075.18,
      "Text": " someone opens a new tab will just hang and they won't actually know why. The one saving grace"
    },
    {
      "Time_Start": 2075.18,
      "Time_End": 2079.8199999999997,
      "Text": " there is if this actually is integrated for your prompt, the next time the prompt is displayed,"
    },
    {
      "Time_Start": 2079.8199999999997,
      "Time_End": 2087.58,
      "Text": " it will clear that and then it won't work. So, it's not the end of the world. So, back in HD"
    },
    {
      "Time_Start": 2087.58,
      "Time_End": 2094.22,
      "Text": " Moore's paper in 2003, there was a fictitious case study. And it spoke about Apache locks."
    },
    {
      "Time_Start": 2094.22,
      "Time_End": 2101.18,
      "Text": " What's more relevant today? So, developers run things like Python free HTTP command lines. And"
    },
    {
      "Time_Start": 2101.18,
      "Time_End": 2108.2999999999997,
      "Text": " if you saw Stock's talk, I'm afraid this is basically the same demo. But which one are we on?"
    },
    {
      "Time_Start": 2108.2999999999997,
      "Time_End": 2116.46,
      "Text": " There we go. So, we've got an attacker down here and a victim at the top. We can't put escape"
    },
    {
      "Time_Start": 2116.46,
      "Time_End": 2123.02,
      "Text": " characters in via just using curl. But if we write raw to the screen, sorry, the screen. If we write"
    },
    {
      "Time_Start": 2123.02,
      "Time_End": 2131.02,
      "Text": " using Netcat, we can write things. And it turned out Python didn't escape the log file. So, we can"
    },
    {
      "Time_Start": 2131.02,
      "Time_End": 2136.06,
      "Text": " change the color of the logs. Fine. That's kind of fun. So, it turns out if we've got a terminal"
    },
    {
      "Time_Start": 2136.06,
      "Time_End": 2143.34,
      "Text": " vulnerability, we can do things with that as well. This is item 2. The vulnerability was that it"
    },
    {
      "Time_Start": 2143.34,
      "Time_End": 2147.82,
      "Text": " would reply with a user controllable string. So, what it's supposed to be used for is querying the"
    },
    {
      "Time_Start": 2147.82,
      "Time_End": 2155.34,
      "Text": " color. So, here it's telling us that the color is 31M red. I just changed the color back to the"
    },
    {
      "Time_Start": 2155.34,
      "Time_End": 2161.82,
      "Text": " default color and it says it's zero. But it turns out, yeah, if we put something else there, then"
    },
    {
      "Time_Start": 2161.82,
      "Time_End": 2168.94,
      "Text": " it replies up here with something else. And it turns out that can be anything else. So, the real"
    },
    {
      "Time_Start": 2168.94,
      "Time_End": 2176.94,
      "Text": " insight is that we can put control C there. So, by putting control C there, it will basically kill"
    },
    {
      "Time_Start": 2176.94,
      "Time_End": 2184.94,
      "Text": " Python. And at that point, we can run anything we want in the terminal. So, we put control C."
    },
    {
      "Time_Start": 2184.94,
      "Time_End": 2188.78,
      "Text": " Because of how this works in item 2, we kind of have to split each control character into its own"
    },
    {
      "Time_Start": 2188.78,
      "Time_End": 2193.1,
      "Text": " escape sequence. But it turns out Python just doesn't care what the HTTP request looks like. So,"
    },
    {
      "Time_Start": 2193.1,
      "Time_End": 2197.26,
      "Text": " we can just really put any characters we feel like in the request thing and eventually the"
    },
    {
      "Time_Start": 2197.26,
      "Time_End": 2214.14,
      "Text": " calculator pops up. So, that was a bug in item 2 that was fixed. And as I mentioned, the request"
    },
    {
      "Time_Start": 2214.14,
      "Time_End": 2219.1,
      "Text": " selection or setting, which is a specific escape sequence used for querying the color and thing,"
    },
    {
      "Time_Start": 2219.1,
      "Time_End": 2225.42,
      "Text": " there was an implementation bug in that. And, yeah, it unexpectedly echoed a string back."
    },
    {
      "Time_Start": 2225.42,
      "Time_End": 2232.2999999999997,
      "Text": " Control C is also part of a string. So, we can press control C. And I call this a full echo back."
    },
    {
      "Time_Start": 2232.3,
      "Time_End": 2247.5,
      "Text": " So, how about another one? So, this is Git for Windows or also known as Git Bash. So, here we're"
    },
    {
      "Time_Start": 2247.5,
      "Time_End": 2253.5,
      "Text": " cloning a Git repository. We go into this Git repository. It's called bad Git. Interesting. We"
    },
    {
      "Time_Start": 2253.5,
      "Time_End": 2259.34,
      "Text": " run Git log. So, what does Git log normally do? Well, Git log opens calculator today."
    },
    {
      "Time_Start": 2262.7000000000003,
      "Time_End": 2267.6600000000003,
      "Text": " So, if we pipe that to cat minus V, we'll see up here it says just below is an escape"
    },
    {
      "Time_Start": 2267.6600000000003,
      "Time_End": 2273.9,
      "Text": " sequence. And that's actually in the commit log of this Git repository. And it's also a"
    },
    {
      "Time_Start": 2273.9,
      "Time_End": 2278.46,
      "Text": " cross platform exploit, as you might notice. Because this is actually the same bug as the item"
    },
    {
      "Time_Start": 2278.46,
      "Time_End": 2287.98,
      "Text": " 2 one. It's deck RQSS. And it turned out Mintity on Windows was vulnerable to this. So, yeah."
    },
    {
      "Time_Start": 2294.86,
      "Time_End": 2301.42,
      "Text": " Sorry. Slides loading slowly here. But we'll get there. So, yeah. So, Git uses LESS as a"
    },
    {
      "Time_Start": 2301.42,
      "Time_End": 2307.9,
      "Text": " pager. And LESS had a bug in its OSC 8 hyperlink handling. So, there's a way of embedding hyperlinks"
    },
    {
      "Time_Start": 2307.9,
      "Time_End": 2313.58,
      "Text": " in terminals now. LESS supports this so that things like man pages can make their links in"
    },
    {
      "Time_Start": 2313.58,
      "Time_End": 2320.86,
      "Text": " them clickable. It turns out that if you've got a bug in LESS and a bug in a terminal, then it"
    },
    {
      "Time_Start": 2320.86,
      "Time_End": 2326.86,
      "Text": " means that anything you write to basically anywhere in Git, you can then write that escape"
    },
    {
      "Time_Start": 2326.86,
      "Time_End": 2332.62,
      "Text": " characters to the screen. So, the actual issue is that here where I've got if you remember earlier"
    },
    {
      "Time_Start": 2332.62,
      "Time_End": 2340.62,
      "Text": " I said that escape C is like a terminal reset thing. It turns out that LESS wasn't looking for"
    },
    {
      "Time_Start": 2340.62,
      "Time_End": 2347.74,
      "Text": " particular escape characters ending something. So, here this ended it as far as Mintity was"
    },
    {
      "Time_Start": 2347.74,
      "Time_End": 2354.22,
      "Text": " concerned. But it didn't end the escape sequence inside the OSC 8 as far as LESS was concerned."
    },
    {
      "Time_Start": 2354.22,
      "Time_End": 2362.46,
      "Text": " And the funny thing about this is this bug was disclosed earlier this year. In the"
    },
    {
      "Time_Start": 2362.46,
      "Time_End": 2366.78,
      "Text": " posting of it, I sort of said it was a denial of service attack. And then later on I worked out"
    },
    {
      "Time_Start": 2366.78,
      "Time_End": 2372.7,
      "Text": " actually this can also be used for a bit more when I found a terminal exploit. I don't know if"
    },
    {
      "Time_Start": 2372.7,
      "Time_End": 2377.82,
      "Text": " anyone else noticed that. But anyway. So, we're getting a bit low on time. So, I'm going to run a"
    },
    {
      "Time_Start": 2377.82,
      "Time_End": 2385.02,
      "Text": " little bit faster here. So, basically this deck RQS thing I showed was actually an extern bug."
    },
    {
      "Time_Start": 2385.02,
      "Time_End": 2390.86,
      "Text": " And it's funny because it was documented incorrectly in the extern manual of control sequences and"
    },
    {
      "Time_Start": 2390.86,
      "Time_End": 2399.34,
      "Text": " then various other terminals have recreated similar bugs. So, let's just go to a slightly"
    },
    {
      "Time_Start": 2399.34,
      "Time_End": 2403.98,
      "Text": " different thing. So, we've got a shared system. Administrator gets an alert about excessive"
    },
    {
      "Time_Start": 2403.98,
      "Time_End": 2414.46,
      "Text": " memory usage. Starts debugging. What command do you run? Top someone said. Good. So, what if"
    },
    {
      "Time_Start": 2414.54,
      "Time_End": 2430.06,
      "Text": " there was a bug in top? Which video is it? That one. So, here I've got top oops, that went too"
    },
    {
      "Time_Start": 2430.06,
      "Time_End": 2437.1,
      "Text": " quickly. I've got a script running on the sorry. We'll try that again. I forgot how short this"
    },
    {
      "Time_Start": 2437.18,
      "Time_End": 2446.94,
      "Text": " video was. So, here we're running top minus capital O, sorry, minus O capital res. And on the"
    },
    {
      "Time_Start": 2446.94,
      "Time_End": 2453.58,
      "Text": " left hand side we've got a little script running. And what just happened? Well, you got owned. So,"
    },
    {
      "Time_Start": 2453.58,
      "Time_End": 2459.58,
      "Text": " it turns out this is an extern bug in its optional graphics support. So,"
    },
    {
      "Time_Start": 2459.58,
      "Time_End": 2476.86,
      "Text": " basically we can do something like this. So, we can get escape sequences into top. Regis is a"
    },
    {
      "Time_Start": 2476.86,
      "Time_End": 2482.62,
      "Text": " particular graphics thing that digital invented in the 80s and some of their terminals supported"
    },
    {
      "Time_Start": 2482.62,
      "Time_End": 2489.02,
      "Text": " this. So, if you tell extern to run in compatibility mode of one of those terminals and then you print"
    },
    {
      "Time_Start": 2489.02,
      "Time_End": 2496.06,
      "Text": " some special sequence, it replies with something like A1 equals XXX. And the exploit essentially"
    },
    {
      "Time_Start": 2496.06,
      "Time_End": 2499.9,
      "Text": " is you can build up a you don't get very many characters but you can build up an environment"
    },
    {
      "Time_Start": 2499.9,
      "Time_End": 2507.42,
      "Text": " variable if you run about ten different processes. So, it's a bit obscure. The extern Regis support"
    },
    {
      "Time_Start": 2507.42,
      "Time_End": 2518.14,
      "Text": " isn't default. Some distributions enable it. But top 3.X doesn't do escaping. 4.X does. Very few"
    },
    {
      "Time_Start": 2518.22,
      "Time_End": 2522.8599999999997,
      "Text": " distros have it. I failed to convince the top authors this is a security problem. As far as"
    },
    {
      "Time_Start": 2522.8599999999997,
      "Time_End": 2527.5,
      "Text": " they're concerned, there are other ways to spoof things in top. So, it's actually the terminal's"
    },
    {
      "Time_Start": 2527.5,
      "Time_End": 2534.7,
      "Text": " problem. And this can also be used as a Docker escape. So, if you're running as the administrator"
    },
    {
      "Time_Start": 2534.7,
      "Time_End": 2539.74,
      "Text": " outside Docker and you run top, you still see processes inside Docker. So, potentially there"
    },
    {
      "Time_Start": 2539.7400000000002,
      "Time_End": 2548.86,
      "Text": " are other avenues to this. But we can also attack Kubernetes here. So, let's have a look at"
    },
    {
      "Time_Start": 2548.86,
      "Time_End": 2559.82,
      "Text": " Windows Terminal. So, this is Windows Terminal. Here I'm just running busy box and deliberately"
    },
    {
      "Time_Start": 2559.82,
      "Time_End": 2568.5400000000004,
      "Text": " running this as a nobody user. So, this is, you know, not no special privileges here. But there"
    },
    {
      "Time_Start": 2568.54,
      "Time_End": 2574.06,
      "Text": " is this interesting file called termination log. And so, if we write an exploit to termination log"
    },
    {
      "Time_Start": 2575.66,
      "Time_End": 2579.58,
      "Text": " and then actually we just exit. For whatever reason, this container has just died. So, the"
    },
    {
      "Time_Start": 2579.58,
      "Time_End": 2584.22,
      "Text": " administrator starts debugging what's happening here. So, how do you debug Kubernetes? You run"
    },
    {
      "Time_Start": 2584.22,
      "Time_End": 2590.7,
      "Text": " kubectl. So, there's this pod running. It just said it's restarted. So, maybe the administrator"
    },
    {
      "Time_Start": 2590.7,
      "Time_End": 2596.38,
      "Text": " got an alert it restarted or something. So, the first thing you run is kubectl describe that pod."
    },
    {
      "Time_Start": 2596.94,
      "Time_End": 2603.6600000000003,
      "Text": " And then nothing really happens. There's no message which is a bit strange. But, yeah, the"
    },
    {
      "Time_Start": 2603.6600000000003,
      "Time_End": 2606.78,
      "Text": " victim over here doesn't really know what's happening. They start debugging a bit more. So,"
    },
    {
      "Time_Start": 2606.78,
      "Time_End": 2613.26,
      "Text": " they decide they're going to duplicate this tab so they can have more context. So, this was"
    },
    {
      "Time_Start": 2613.82,
      "Time_End": 2629.1000000000004,
      "Text": " I'm going to skip that one. So, that was a Windows terminal bug. But what can we do with"
    },
    {
      "Time_Start": 2629.1000000000004,
      "Time_End": 2634.38,
      "Text": " documented escape characters? Well, it turns out there's certain replies that do interesting"
    },
    {
      "Time_Start": 2634.38,
      "Time_End": 2642.38,
      "Text": " things. So, if, for example, we ask what color something is, colors in some terminals are"
    },
    {
      "Time_Start": 2642.38,
      "Time_End": 2650.86,
      "Text": " separated with slashes. And where can we find lack of escaping? So, we can put files on disk"
    },
    {
      "Time_Start": 2650.86,
      "Time_End": 2656.7000000000003,
      "Text": " and see if things do that. It turns out NMCLI on Linux, if we happen to connect to a wireless"
    },
    {
      "Time_Start": 2656.7000000000003,
      "Time_End": 2661.98,
      "Text": " network with an escape character in it, I've got a network at home called red. It was actually the"
    },
    {
      "Time_Start": 2661.98,
      "Time_End": 2668.94,
      "Text": " color red. Bluetooth CTL on Linux mostly doesn't escape things. Some of these are hard to exploit."
    },
    {
      "Time_Start": 2668.94,
      "Time_End": 2673.58,
      "Text": " You don't get many characters. But like I showed at the top, you can create lots and lots of"
    },
    {
      "Time_Start": 2673.58,
      "Time_End": 2679.66,
      "Text": " devices or networks or something. And, you know, comment forms on website. See Stock's talk more"
    },
    {
      "Time_Start": 2679.66,
      "Time_End": 2684.46,
      "Text": " on that. But let's have a quick demo. I'm running out of time. So, I'm going a little bit faster"
    },
    {
      "Time_Start": 2684.46,
      "Time_End": 2692.86,
      "Text": " than expected here. But here I've got a script that sets up a particular thing in slash TMP."
    },
    {
      "Time_Start": 2693.1800000000003,
      "Time_End": 2700.86,
      "Text": " So, now I'm just typing CD slash TMP. And I hit tab like you often do, right? To see what exists"
    },
    {
      "Time_Start": 2700.86,
      "Time_End": 2706.06,
      "Text": " in that directory. So, when I hit tab, what happens? My cursor disappears. That's strange."
    },
    {
      "Time_Start": 2707.98,
      "Time_End": 2713.5,
      "Text": " So, I'm not sure what happens. I press control C. And then I hit enter and everything goes red"
    },
    {
      "Time_Start": 2713.58,
      "Time_End": 2720.22,
      "Text": " and it all gets a bit broken. So, what just happened there? So,"
    },
    {
      "Time_Start": 2725.02,
      "Time_End": 2728.38,
      "Text": " the slides for this will be up later. I'm going to skip this quickly. But basically,"
    },
    {
      "Time_Start": 2728.38,
      "Time_End": 2733.74,
      "Text": " you hide the cursor. You ask what color it is. And because you're in a control directory slash TMP,"
    },
    {
      "Time_Start": 2734.46,
      "Time_End": 2740.46,
      "Text": " you created a file that the shell printed out on screen. And basically, magically,"
    },
    {
      "Time_Start": 2740.7,
      "Time_End": 2746.46,
      "Text": " the user basically has to hit enter. There's an escape sequence for X term that makes it so"
    },
    {
      "Time_Start": 2746.46,
      "Time_End": 2751.82,
      "Text": " control C just writes some escape characters to the screen. So, there's literally nothing you can"
    },
    {
      "Time_Start": 2751.82,
      "Time_End": 2756.86,
      "Text": " do except close the terminal or press enter. So, you social engineer the user into they probably"
    },
    {
      "Time_Start": 2756.86,
      "Time_End": 2762.2200000000003,
      "Text": " press enter because they think their terminal's broken. So, how do you protect yourself from all"
    },
    {
      "Time_Start": 2762.2200000000003,
      "Time_End": 2767.58,
      "Text": " this? So, terminals are just like a browser. They deal with untrusted inputs. Ensure correct"
    },
    {
      "Time_Start": 2767.58,
      "Time_End": 2776.22,
      "Text": " output escaping. Secure settings. That's a fun one. Just go and turn this on right now unless"
    },
    {
      "Time_Start": 2776.22,
      "Time_End": 2782.7,
      "Text": " you actually use the shell integration features. There might be bugs there. Who knows? Also,"
    },
    {
      "Time_Start": 2783.5,
      "Time_End": 2788.14,
      "Text": " ST is a cool terminal. You should use it. It's really basic. If you don't want the features"
    },
    {
      "Time_Start": 2788.14,
      "Time_End": 2794.22,
      "Text": " your terminal gives you, you limit your exposure by using basic things. There's probably some"
    },
    {
      "Time_Start": 2794.2200000000003,
      "Time_End": 2804.6200000000003,
      "Text": " end days here. So, I'm crazy. And if you've got a phone or something, try that particular IP"
    },
    {
      "Time_Start": 2804.6200000000003,
      "Time_End": 2813.9800000000005,
      "Text": " address. It's on the DEF CON network. It will test your terminal. And I want to make this"
    },
    {
      "Time_Start": 2813.9800000000005,
      "Time_End": 2821.5000000000005,
      "Text": " repository public. Yeah, yeah, yeah. How many buttons do you have to press to do that? Oh,"
    },
    {
      "Time_Start": 2821.5,
      "Time_End": 2829.5,
      "Text": " really? Okay. Anyway. So, I just published that."
    },
    {
      "Time_Start": 2829.5,
      "Time_End": 2843.1,
      "Text": " So, in writing that tool, I found another bug. Yeah. That's all the bugs I found. Thank you very"
    },
    {
      "Time_Start": 2843.1,
      "Time_End": 2852.94,
      "Text": " much."
    }
  ]
}