**Introduction**
- The talk focuses on the security and privacy of vacuum robots, specifically those with cameras.
- The speaker is a PhD student researching security and privacy in wireless and embedded devices.
- They also collect and reverse engineer vacuum robots, smart speakers, and flash memory.
- Previous work includes a paper on Amazon Echo device forensics and the website robotinfo.dev, which systematically lists robots sorted by operation system, sensors, and vulnerabilities.

**Vacuum Robot Hacking Overview**
- The goal is to gain root access to the robot without disassembling it.
- This talk covers research and experiments conducted over 15 months in collaboration with Zoran Bayer, the developer of Valetudo (a cloud replacement for robots).
- The community plays a crucial role in this research, with thousands of people tinkering with these devices.

**Motivation for Rooting Devices**
- These devices have cool hardware and can be used for experiments.
- Stopping constant phone-home behavior and protecting privacy are important.
- Custom smart home solutions and diagnosing broken devices are also motivations.

**Why Not Trust IoT?**
- These devices have access to the home network and their own internet connection.
- Most communication is encrypted, and there is no visibility into what data is being sent.
- Cameras, microphones, maps of the home, and the ability to drive around independently raise privacy and security concerns.
- Developing secure hardware and software is challenging, and even well-intentioned vendors can make mistakes.

**Vendor Claims and Contradictions**
- Roborock claims that data from cameras is not sent to the cloud, but then mentions remote access to view pets.
- iRobot was caught uploading pictures from cameras to the cloud for labeling by gig workers.
- Other vendors started making changes to privacy policies and firmware after this incident.

**Risks of Devices with Cameras**
- Pictures may be stored indefinitely, both in the cloud and locally.
- Used devices may have rootkits installed, even after a factory reset, posing a security risk to the new owner.
- Rooting is the only way to verify that a device is clean.

**Vendor Awareness and Certifications**
- Vendors try to avoid using the word "camera," referring to it as an "optical sensor" instead.
- All the devices discussed have some form of certification, but these certifications may not mean much in terms of actual security.

**Past Developments in Vacuum Robot Hacking**
- Every time a routing method is presented or released, vendors react and make changes.
- In some cases, these changes have broken devices or introduced countermeasures to detect and prevent rooting.
- Previous work includes finding weaknesses in firmware updates, local updates, and region locks.
- Disassembly was required for some devices, and new routing methods were developed.

**Roborock's Countermeasures**
- Introduced CQ-boot, SA-Linux, DM-Verity, and encrypted file systems.
- Added custom code to detect and bypass traffic redirection to custom software.
- Used obfuscation techniques to hide strings and functions in binaries.
- Added ELF binary signature checks in the kernel to prevent running unsigned binaries.

**Dreame's Countermeasures**
- Enabled secure boot and started signing the system partition.
- Introduced "Judge" countermeasure to detect firmware manipulation and randomly crash the robot while cleaning.

**Current State of Robot Security**
- The Roborock S8 Pro Ultra is one of the most protected robots on the market, with various security measures in place.
- The booting process involves multiple stages of verification and encryption.
- However, there may be a vulnerability in the U-boot boot loader that allows modification of itself and bypassing of subsequent verification checks.

**Rooting Methods**
- For Dreame vacuum robots, a USB stick can be used to access a shell and patch the environment.
- For newer Dreame models, a bootloader mode and sketchy firmware package can be used to access the flash and system functions.
- For Roborock models, a "scary" FAL root method involves grounding a data pin to bring the device into bootloader mode and flash it from USB.

**Custom Firmware and Redirecting Traffic**
- With root access, custom firmware can be installed and traffic redirected to a cloud emulation.
- Valetudo is a complete replacement for the cloud application, API, and smartphone app, providing offline functionality and a responsive web interface.
- DustBuilder is a website that allows users to build custom firmware easily.

**Findings on Robots**
- All cameras use the Video for Linux subsystem and can be accessed through device files.
- Some vendors include debugging tools that allow access to the camera.
- Dreame introduced a lot of telemetry and calling home functions, as well as geo-blocking by IP address.
- A legal requirement for a warning prompt when accessing the camera remotely can be bypassed by overwriting the audio file, but this is illegal.

**Summary and Final Notes**
- Routing methods and security bypasses are available for current Dreamy and Roborock robots.
- Secure boot and other security mechanisms can be bypassed.
- Persistence and custom firmware are achievable.
- Vendor claims can be validated, but some are tricky.
- The bootloader attack is applicable to many other devices beyond vacuum robots.
- Do not use this knowledge for illegal or malicious purposes.
- Share routing methods and help others.
- Tools and further details will be released in the coming days.