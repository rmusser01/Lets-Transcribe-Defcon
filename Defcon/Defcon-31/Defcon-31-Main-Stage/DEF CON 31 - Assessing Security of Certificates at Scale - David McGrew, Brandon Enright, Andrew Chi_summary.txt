**Introduction**
- **David McGrew**, **Brandon Enright**, and **Andrew Chi** present their joint work on assessing the security of certificates at scale.
- The talk includes a demonstration of an **exploit** against keys obtained from the internet.

**The Problem of Weak Entropy**
- Many commercial, small business, and consumer-grade devices use **poor entropy sources** for key generation, leading to **exploitable weak keys**.
- This problem persists despite being identified over a decade ago, and it needs to be addressed before migrating to **quantum-safe cryptography**.
- Weak entropy can make keys **predictable** and vulnerable to attacks.

**Understanding the Weak Key Problem**
- Each device has an **entropy source** that provides input to a key generator, often done during the initial boot when entropy is limited.
- With **weak key generation**, the set of possible keys is significantly smaller than desired, reducing unpredictability.
- The more devices analyzed, the higher the chances of detecting weak keys (**birthday paradox**).

**Common Keys and Common Factors**
- **Common keys** can be generated by any public-key crypto algorithm when the entropy input is identical.
- Detecting common keys is easy, but distinguishing it from poor security practices (**e.g.**, using the same private key on multiple servers) can be challenging.
- **Common factors** are a stronger indication of weak entropy, specifically in the **RSA cryptosystem**, where distinct devices may generate identical factors.
- The **Batch GCD algorithm** can be used to find common factors efficiently.

**Obtaining Certificates for Analysis**
- Certificates with RSA public keys can be obtained through **active scans**, **passive monitoring**, or by accessing **certificate authority logs**.
- The authors have developed and published tools for this purpose: **TLS Scanner** (active scanning), **Mercury** (passive monitoring), and **Cert Analyze** (analyzing stand-alone certificates).

**Demonstration of the Attack**
- The attack involves a **victim** with a wireless access point that has a weak key and trusts a self-signed certificate.
- The **attacker** obtains a large set of certificates with the "Draytek" string in the issuer and runs the **Batch GCD program** to find weak keys.
- Out of ~158,000 distinct RSA keys, the tool identifies 55 weak keys and outputs the corresponding private keys and certificates.
- A **man-in-the-middle (MITM)** attack is performed, intercepting the victim's traffic and replacing words like "management" with "hacked" in the browser.

**Conclusion and Future Work**
- Batch testing is practical and effective, and the authors have made their tools and documentation available on GitHub (**cisco/mercury**).
- Future work includes detecting more failure modes, analyzing manufacturing certificates, and exploring ways to convict devices with weak entropy beyond RSA.
- As the industry moves away from RSA, detecting weak entropy will become more challenging but remains crucial.