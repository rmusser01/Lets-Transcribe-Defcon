{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 11.36,
      "Text": "This text was transcribed using whisper model: large-v2\n\n Hi there, thanks very much. Welcome to the talk. I'm not very good at intros, and I always"
    },
    {
      "Time_Start": 11.36,
      "Time_End": 15.84,
      "Text": " talk under different pseudonyms, so I'm just going to tell you some facts about myself"
    },
    {
      "Time_Start": 15.84,
      "Time_End": 20.64,
      "Text": " to hopefully make you trust what I'm about to tell you. I've been mainly working in embedded"
    },
    {
      "Time_Start": 20.64,
      "Time_End": 25.76,
      "Text": " systems slash enterprise perimeter for a few years, sometimes as a consultant, sometimes"
    },
    {
      "Time_Start": 25.76,
      "Time_End": 31.360000000000003,
      "Text": " as a researcher, sometimes in education. I've published research into Microsoft, Cisco,"
    },
    {
      "Time_Start": 31.360000000000003,
      "Time_End": 36.92,
      "Text": " Netgear stuff, all kinds of different software over the years. I spoke here a few years ago"
    },
    {
      "Time_Start": 36.92,
      "Time_End": 42.02,
      "Text": " about cellular hotspots and things like that. My main interest is just reverse engineering,"
    },
    {
      "Time_Start": 42.02,
      "Time_End": 47.400000000000006,
      "Text": " so we might go off on a bit of a tangent here in some of these. So, I'm going to have to"
    },
    {
      "Time_Start": 47.400000000000006,
      "Time_End": 51.72,
      "Text": " speed through some of this because I've got a lot to talk about, and this is one of the"
    },
    {
      "Time_Start": 51.72,
      "Time_End": 59.68,
      "Text": " bits I'm going to speed through. So, if you don't know what PBX is, a PBX is a private"
    },
    {
      "Time_Start": 59.68,
      "Time_End": 65.08,
      "Text": " branch exchange, emphasis on the private. Before these private branch exchanges, everything"
    },
    {
      "Time_Start": 65.08,
      "Time_End": 71.75999999999999,
      "Text": " went through public branch exchanges for telephone calls. The problem was when businesses wanted"
    },
    {
      "Time_Start": 71.75999999999999,
      "Time_End": 76.28,
      "Text": " to make calls to each other internally, the calls had to go through a public exchange,"
    },
    {
      "Time_Start": 76.4,
      "Time_End": 83.68,
      "Text": " so it cost them money, so they moved the branch exchanges indoors. So, these first early PBX"
    },
    {
      "Time_Start": 83.68,
      "Time_End": 90.8,
      "Text": " systems were for classic phones, and then VoIP started becoming more and more cheaper and more"
    },
    {
      "Time_Start": 90.8,
      "Time_End": 96.96000000000001,
      "Text": " popular, so digital PBX started popping up, starting off as hardware, and then slowly,"
    },
    {
      "Time_Start": 96.96000000000001,
      "Time_End": 105.12,
      "Text": " over time, becoming implemented purely in software. Then, as time went on, communication"
    },
    {
      "Time_Start": 105.12,
      "Time_End": 110.32000000000001,
      "Text": " styles started morphing again, so PBX started morphing into something that people start"
    },
    {
      "Time_Start": 110.32000000000001,
      "Time_End": 118.08000000000001,
      "Text": " to call unified communication servers today, which is for video, text, and other kinds"
    },
    {
      "Time_Start": 118.08000000000001,
      "Time_End": 124.28,
      "Text": " of communication. So, this is more like modern chat-based contemporary stuff, but I'll use"
    },
    {
      "Time_Start": 124.28,
      "Time_End": 127.80000000000001,
      "Text": " the term PBX more here because the servers and the software that I'm talking about is"
    },
    {
      "Time_Start": 127.92,
      "Time_End": 134.52,
      "Text": " more like PBX servers, they're not really unified communication servers, although they do"
    },
    {
      "Time_Start": 134.52,
      "Time_End": 142.8,
      "Text": " function in the way that unified communication servers claim to as well. This kind of stuff"
    },
    {
      "Time_Start": 142.8,
      "Time_End": 149.28,
      "Text": " shows up in enterprise environments where they like to do things like on-prem, and there's a"
    },
    {
      "Time_Start": 149.28,
      "Time_End": 155.48,
      "Text": " lot of different stuff in the PBX slash UC space, so probably the most fundamental will be"
    },
    {
      "Time_Start": 155.76,
      "Time_End": 163.76,
      "Text": " the SIP switching telephony software, something like Asterisk or FreeSwitch, for example."
    },
    {
      "Time_Start": 163.76,
      "Time_End": 169.44,
      "Text": " This is like the bare-bones telephone exchange functionality. Then there's other products"
    },
    {
      "Time_Start": 169.44,
      "Time_End": 176.64,
      "Text": " which show up, which use these phone exchange cores and then provide easier UI configurations,"
    },
    {
      "Time_Start": 176.64,
      "Time_End": 182.83999999999997,
      "Text": " so, for example, FreePBX is basically just like a UI configuration wrapper for Asterisk,"
    },
    {
      "Time_Start": 182.84,
      "Time_End": 188.92000000000002,
      "Text": " and SIPXCOM is basically a UI configuration wrapper for FreeSwitch. And then on top of that,"
    },
    {
      "Time_Start": 188.92000000000002,
      "Time_End": 194.84,
      "Text": " they'll bolt a whole bunch of other stuff on, like text and video chats, sort of make it a bit"
    },
    {
      "Time_Start": 194.84,
      "Time_End": 205.84,
      "Text": " more UC-like. There's a few big PBX systems, FreePBX and 3CX are probably the biggest,"
    },
    {
      "Time_Start": 205.88,
      "Time_End": 213.88,
      "Text": " and then there's SIPXCOM as well. There's about 10,000 to 19,000 FreePBX web interfaces"
    },
    {
      "Time_Start": 213.88,
      "Time_End": 220.52,
      "Text": " I could see on Showdown the other day, about 250,000 3CX ones. There's not so many SIPXCOM ones,"
    },
    {
      "Time_Start": 220.52,
      "Time_End": 228.52,
      "Text": " but it has been around for quite a long time, so it's still worth looking into."
    },
    {
      "Time_Start": 228.52,
      "Time_End": 235.16,
      "Text": " PBX servers are, due to the complexity and all the kinds of services that you find on them,"
    },
    {
      "Time_Start": 235.16,
      "Time_End": 240.64,
      "Text": " they can have a really big attack surface as well, so they'll have things like the SIP,"
    },
    {
      "Time_Start": 240.64,
      "Time_End": 250.8,
      "Text": " like Telephone Exchange Core, they'll have proprietary services like the Inter-Asterisk Exchange Protocol,"
    },
    {
      "Time_Start": 250.8,
      "Time_End": 259.76,
      "Text": " which you find in Asterisk. There's things like MGCP, RTSP, XMPP, MySQL, DNS, all kinds of stuff"
    },
    {
      "Time_Start": 259.8,
      "Time_End": 269.8,
      "Text": " you'll find on these servers, so there's a lot to look into. There's also these web management"
    },
    {
      "Time_Start": 269.8,
      "Time_End": 277.8,
      "Text": " interfaces, which are the core of a lot of these things. As I said before, FreePBX is basically"
    },
    {
      "Time_Start": 277.8,
      "Time_End": 283.8,
      "Text": " just a web UI that allows you to configure all of these extra services plus Asterisk and things like that."
    },
    {
      "Time_Start": 283.84000000000003,
      "Time_End": 291.84000000000003,
      "Text": " All of these servers also require authentication user accounts, so post-authentication stuff is"
    },
    {
      "Time_Start": 291.84000000000003,
      "Time_End": 297.84000000000003,
      "Text": " also on the table for this kind of research, so the attack surface is really, really broad."
    },
    {
      "Time_Start": 297.84000000000003,
      "Time_End": 303.84000000000003,
      "Text": " I'm going to talk about two different servers today. The first one will be SIPXCOM and the other"
    },
    {
      "Time_Start": 303.84000000000003,
      "Time_End": 311.84000000000003,
      "Text": " one will be FreePBX. There's a caveat to it, which is that I found these bugs through"
    },
    {
      "Time_Start": 311.88000000000005,
      "Time_End": 317.88000000000005,
      "Text": " less structured research, so despite the massive attack surface, I only managed to really touch"
    },
    {
      "Time_Start": 317.88000000000005,
      "Time_End": 323.88000000000005,
      "Text": " the surface of what actually is on these servers, but what I found I think is quite interesting."
    },
    {
      "Time_Start": 323.88000000000005,
      "Time_End": 334.88000000000005,
      "Text": " The first bug is an RCE chain in SIPXCOM. SIPXCOM is mainly written in Java. It's all open source,"
    },
    {
      "Time_Start": 334.92,
      "Time_End": 342.92,
      "Text": " all on GitHub. It ships with this optional XMPP server called SIPXOpenFire."
    },
    {
      "Time_Start": 342.92,
      "Time_End": 348.92,
      "Text": " The name is based on IgniteOpenFire, but the bugs don't actually affect IgniteOpenFire."
    },
    {
      "Time_Start": 348.92,
      "Time_End": 355.92,
      "Text": " SIPXOpenFire is quite a complex integration with other SIPX components, so it's not a totally"
    },
    {
      "Time_Start": 355.92,
      "Time_End": 363.92,
      "Text": " standalone XMPP server. It integrates with the whole SIPX ecosystem."
    },
    {
      "Time_Start": 363.96000000000004,
      "Time_End": 369.96000000000004,
      "Text": " In SIPXOpenFire, there's a message interceptor called defaultMessagePacketInterceptor,"
    },
    {
      "Time_Start": 369.96000000000004,
      "Time_End": 375.96000000000004,
      "Text": " and every message that's sent through the XMPP server is checked by this interceptor"
    },
    {
      "Time_Start": 375.96000000000004,
      "Time_End": 381.96000000000004,
      "Text": " to see if it starts with a string that they call directives internally. These directives are"
    },
    {
      "Time_Start": 381.96000000000004,
      "Time_End": 387.96000000000004,
      "Text": " atCall, atConf, and atXfer. If the message starts with one of these directives, then that message"
    },
    {
      "Time_Start": 388.00000000000006,
      "Time_End": 396.00000000000006,
      "Text": " is handed off to some other external SIPX component. This is part of the whole integration."
    },
    {
      "Time_Start": 396.00000000000006,
      "Time_End": 400.00000000000006,
      "Text": " The issues affect a couple of the directives, but I'm just going to follow the atCall one"
    },
    {
      "Time_Start": 400.00000000000006,
      "Time_End": 407.00000000000006,
      "Text": " just for the simplicity here. Every message is intercepted and then passed to a function"
    },
    {
      "Time_Start": 407.00000000000006,
      "Time_End": 412.00000000000006,
      "Text": " called processChatMessage, where it's checked for directives. If it starts with atCall,"
    },
    {
      "Time_Start": 412.04,
      "Time_End": 417.04,
      "Text": " then the rest of the message is passed to the mapArbitraryNameToSipEndpoint function,"
    },
    {
      "Time_Start": 417.04,
      "Time_End": 421.04,
      "Text": " and then the string that comes out of that is passed to buildRestCall command, and the result"
    },
    {
      "Time_Start": 421.04,
      "Time_End": 427.04,
      "Text": " of that is passed to sendRestRequest. We can just follow this flow really quickly."
    },
    {
      "Time_Start": 427.04,
      "Time_End": 431.04,
      "Text": " mapArbitraryNameToSipEndpoint just checks for usernames in the string and basically"
    },
    {
      "Time_Start": 431.04,
      "Time_End": 439.04,
      "Text": " just returns back the string wholesale as we want it, as we give it without doing"
    },
    {
      "Time_Start": 439.08000000000004,
      "Time_End": 443.08000000000004,
      "Text": " anything to it if it doesn't find a valid username. buildRestCall command takes the"
    },
    {
      "Time_Start": 443.08000000000004,
      "Time_End": 448.08000000000004,
      "Text": " whole string that we've passed in the message, concats it directly into a URL string,"
    },
    {
      "Time_Start": 448.08000000000004,
      "Time_End": 453.08000000000004,
      "Text": " and then returns it, and there's no check or filtering on it at all. Then that whole"
    },
    {
      "Time_Start": 453.08000000000004,
      "Time_End": 458.08000000000004,
      "Text": " URL string is passed to sendRestRequest, which just concats it directly into a curl"
    },
    {
      "Time_Start": 458.08000000000004,
      "Time_End": 465.08000000000004,
      "Text": " command string. This curl command string just gets passed directly to runtime.exec."
    },
    {
      "Time_Start": 465.12,
      "Time_End": 471.12,
      "Text": " There's a to-do note above this function suggesting that they know this isn't really"
    },
    {
      "Time_Start": 471.12,
      "Time_End": 478.12,
      "Text": " the ideal way to implement this functionality, but it's been there since about 2010,"
    },
    {
      "Time_Start": 478.12,
      "Time_End": 488.12,
      "Text": " according to the Git history, so 13 years of not doing anything about it."
    },
    {
      "Time_Start": 488.12,
      "Time_End": 491.12,
      "Text": " The conventional wisdom of this would say that this is just arbitrary command execution,"
    },
    {
      "Time_Start": 491.16,
      "Time_End": 496.16,
      "Text": " but that's not actually really true. Runtime.exec doesn't quite work like that."
    },
    {
      "Time_Start": 496.16,
      "Time_End": 502.16,
      "Text": " There's an assumption that runtime.exec for some reason behaves like system or"
    },
    {
      "Time_Start": 502.16,
      "Time_End": 509.16,
      "Text": " popen, which is not true at all, so all the kind of classic code execution payloads"
    },
    {
      "Time_Start": 509.16,
      "Time_End": 515.16,
      "Text": " that we might want to use for this will always fail, so just to give a quick rundown"
    },
    {
      "Time_Start": 515.1999999999999,
      "Time_End": 525.1999999999999,
      "Text": " of how runtime.exec works, we'll just follow the source."
    },
    {
      "Time_Start": 525.1999999999999,
      "Time_End": 530.1999999999999,
      "Text": " If you pass just a normal string directly to runtime.exec, the first overload we hit"
    },
    {
      "Time_Start": 530.1999999999999,
      "Time_End": 534.1999999999999,
      "Text": " is the one that just takes a single string. This passes it to another exec overload,"
    },
    {
      "Time_Start": 534.1999999999999,
      "Time_End": 539.1999999999999,
      "Text": " which takes three arguments, the first of which is a string. That overload takes"
    },
    {
      "Time_Start": 539.1999999999999,
      "Time_End": 543.1999999999999,
      "Text": " the string and passes it to a string tokenizer, and then just pushes that into a string"
    },
    {
      "Time_Start": 543.24,
      "Time_End": 548.24,
      "Text": " array, which passes it to another exec overload, which takes three arguments"
    },
    {
      "Time_Start": 548.24,
      "Time_End": 552.24,
      "Text": " and an array as its first argument, and then this overload passes the string array"
    },
    {
      "Time_Start": 552.24,
      "Time_End": 557.24,
      "Text": " to process builder and creates the process using .start, so we've got this array"
    },
    {
      "Time_Start": 557.24,
      "Time_End": 562.24,
      "Text": " of strings being passed to process builder. Process builder takes the first element"
    },
    {
      "Time_Start": 562.24,
      "Time_End": 567.24,
      "Text": " in the array and checks its executability, and then the array gets passed to process"
    },
    {
      "Time_Start": 567.28,
      "Time_End": 572.28,
      "Text": " impl.start, which just in our case, because we're running on Linux, creates a Unix"
    },
    {
      "Time_Start": 572.28,
      "Time_End": 577.28,
      "Text": " process, so the first element of the array is the executable argument to the Unix"
    },
    {
      "Time_Start": 577.28,
      "Time_End": 582.28,
      "Text": " process, so regardless of what we actually inject into this command string, we're"
    },
    {
      "Time_Start": 582.28,
      "Time_End": 587.28,
      "Text": " always going to be running curl, so there's no way around it."
    },
    {
      "Time_Start": 587.28,
      "Time_End": 593.28,
      "Text": " We don't have direct command execution, but we do, we can kind of use this"
    },
    {
      "Time_Start": 593.3199999999999,
      "Time_End": 598.3199999999999,
      "Text": " to our advantage, so we can't control the executable, it's always going to be curl,"
    },
    {
      "Time_Start": 598.3199999999999,
      "Time_End": 603.3199999999999,
      "Text": " but we can pass arbitrary arguments to curl, so the next question is what arguments"
    },
    {
      "Time_Start": 603.3199999999999,
      "Time_End": 608.3199999999999,
      "Text": " can we pass to create a useful primitive there? Before we figure that out, we have"
    },
    {
      "Time_Start": 608.3199999999999,
      "Time_End": 613.3199999999999,
      "Text": " to look at how the command string is actually laid out and what we control, so we"
    },
    {
      "Time_Start": 613.3199999999999,
      "Time_End": 617.3199999999999,
      "Text": " can't control the arguments at the beginning, because they're hard coded, but as long as"
    },
    {
      "Time_Start": 617.3199999999999,
      "Time_End": 621.3199999999999,
      "Text": " we pass a string that contains spaces, we can put whatever arguments we want later"
    },
    {
      "Time_Start": 621.36,
      "Time_End": 626.36,
      "Text": " into the command, so for example, we can download files within the same curl"
    },
    {
      "Time_Start": 626.36,
      "Time_End": 631.36,
      "Text": " command by just adding an extra dash X get argument and specifying just a file to"
    },
    {
      "Time_Start": 631.36,
      "Time_End": 637.36,
      "Text": " output to with the OFLAG, so it's a pretty useful primitive, we can force the server"
    },
    {
      "Time_Start": 637.36,
      "Time_End": 642.36,
      "Text": " to download files from anywhere and save them, write them anywhere on the server."
    },
    {
      "Time_Start": 642.36,
      "Time_End": 647.36,
      "Text": " SipXOpenFile runs as the daemon user, so we can only really write where the daemon"
    },
    {
      "Time_Start": 647.4,
      "Time_End": 652.4,
      "Text": " user can write, that's the only real limitation on it. We can also read files from the"
    },
    {
      "Time_Start": 652.4,
      "Time_End": 657.4,
      "Text": " server, so we can use the D flag to read a file on the server, then send it over to"
    },
    {
      "Time_Start": 657.4,
      "Time_End": 665.4,
      "Text": " wherever we specify, so an injection like this one tells the first X dash X post"
    },
    {
      "Time_Start": 665.4,
      "Time_End": 670.4,
      "Text": " request to output the result of the request to some temp file and then tells curl to"
    },
    {
      "Time_Start": 670.4,
      "Time_End": 676.4,
      "Text": " read the password file using the D flag and then send it over to an IP address."
    },
    {
      "Time_Start": 676.4399999999999,
      "Time_End": 685.4399999999999,
      "Text": " So, we can both read and write files using this curl argument injection, so they're"
    },
    {
      "Time_Start": 685.4399999999999,
      "Time_End": 690.4399999999999,
      "Text": " quite interesting and good primitives, but it doesn't quite get us to code execution"
    },
    {
      "Time_Start": 690.4399999999999,
      "Time_End": 696.4399999999999,
      "Text": " directly, but there is one more bug which is quite useful in this case."
    },
    {
      "Time_Start": 696.4399999999999,
      "Time_End": 702.4399999999999,
      "Text": " The OpenFire service file for SipXOpenFire is installed with daemon daemon"
    },
    {
      "Time_Start": 702.48,
      "Time_End": 707.48,
      "Text": " privileges in the init.d directory, so with our write primitive we can overwrite this"
    },
    {
      "Time_Start": 707.48,
      "Time_End": 712.48,
      "Text": " file which will execute as root whenever the service is restarted. So, we can chain"
    },
    {
      "Time_Start": 712.48,
      "Time_End": 719.48,
      "Text": " those things together, we overwrite the OpenFire init file using the curl file download"
    },
    {
      "Time_Start": 719.48,
      "Time_End": 725.48,
      "Text": " primitive and then replace it with an almost identical file with just a command exact"
    },
    {
      "Time_Start": 725.48,
      "Time_End": 730.48,
      "Text": " payload in it. We wait for the service to be restarted or force it to restart using"
    },
    {
      "Time_Start": 730.52,
      "Time_End": 736.52,
      "Text": " the web interface and then we just get a root shell. So, it's a fun bug chain just"
    },
    {
      "Time_Start": 736.52,
      "Time_End": 742.52,
      "Text": " by sending XMPP messages from one user to another, you can overwrite files and then"
    },
    {
      "Time_Start": 744.52,
      "Time_End": 750.52,
      "Text": " eventually get a root shell from this server."
    },
    {
      "Time_Start": 750.52,
      "Time_End": 757.52,
      "Text": " There's a full rundown of the exploit on setlist that I sent over in March that you"
    },
    {
      "Time_Start": 757.56,
      "Time_End": 764.56,
      "Text": " can have a look at. SipXOpenFire is, sorry, SipXcom is maintained by a company called"
    },
    {
      "Time_Start": 764.56,
      "Time_End": 770.56,
      "Text": " Cordial who just never responded to anything that I've said. So, I sent them emails for"
    },
    {
      "Time_Start": 770.56,
      "Time_End": 776.56,
      "Text": " a while, I first reported in November, they didn't reply. I kept on sending emails for"
    },
    {
      "Time_Start": 776.56,
      "Time_End": 782.56,
      "Text": " a while, they didn't reply to any of them. I kept sending them tweets and they just kept"
    },
    {
      "Time_Start": 782.6,
      "Time_End": 788.6,
      "Text": " untagging themselves from tweets. So, I consider that a kind of vendor response of active"
    },
    {
      "Time_Start": 790.6,
      "Time_End": 796.6,
      "Text": " indifference and so these are just bugs that are still in the latest version of SipXcom"
    },
    {
      "Time_Start": 796.6,
      "Time_End": 800.6,
      "Text": " and I guess we'll stay there for a while. It looks like SipXcom might be dead, I'm not"
    },
    {
      "Time_Start": 800.6,
      "Time_End": 807.6,
      "Text": " entirely sure. So, yeah, Cordial gets half a star for their vendor response. Very bad"
    },
    {
      "Time_Start": 807.64,
      "Time_End": 812.64,
      "Text": " experience, don't work with them."
    },
    {
      "Time_Start": 812.64,
      "Time_End": 819.64,
      "Text": " Okay, the next bugs are all in FreePBX. So, FreePBX is maintained by Sangoma, it's based"
    },
    {
      "Time_Start": 820.64,
      "Time_End": 825.88,
      "Text": " on Asterisk for the telephone side of things. There's a web interface, loads of free and"
    },
    {
      "Time_Start": 825.88,
      "Time_End": 831.64,
      "Text": " paid modules that you can sort of strap onto it and according to their website, they run"
    },
    {
      "Time_Start": 831.64,
      "Time_End": 836.36,
      "Text": " a bug bounty program. So, they say they want to work with security researchers, that they"
    },
    {
      "Time_Start": 836.36,
      "Time_End": 841.96,
      "Text": " want to fix everything within 60 days. So, that all looks really nice and of course at"
    },
    {
      "Time_Start": 841.96,
      "Time_End": 847.48,
      "Text": " this point, I'm really looking forward to the professional disclosure process with lots"
    },
    {
      "Time_Start": 847.48,
      "Time_End": 854.48,
      "Text": " of communication and very happy outcomes for everyone involved."
    },
    {
      "Time_Start": 857.76,
      "Time_End": 861.9200000000001,
      "Text": " SipXcom is pretty straightforward, it's just straightforward open source Java. FreePBX is"
    },
    {
      "Time_Start": 861.9200000000001,
      "Time_End": 868.9200000000001,
      "Text": " a bit more complicated. So, it's mainly written in PHP, which is nice. The core or a lot of"
    },
    {
      "Time_Start": 869.9200000000001,
      "Time_End": 876.9200000000001,
      "Text": " the core code is open source to some extent. There's a FreePBX core bit that's free and"
    },
    {
      "Time_Start": 877.8800000000001,
      "Time_End": 883.72,
      "Text": " the code for that's all in the FreePBX bit bucket. There's a few free plugins which come"
    },
    {
      "Time_Start": 883.72,
      "Time_End": 888.6400000000001,
      "Text": " bundled with FreePBX which you can't find the source for for some reason and then Sangoma"
    },
    {
      "Time_Start": 888.64,
      "Time_End": 892.64,
      "Text": " also sells licenses for some other plugins and none of those plugins are open source"
    },
    {
      "Time_Start": 892.64,
      "Time_End": 898.36,
      "Text": " either. So, there's a lot of functionality where the code sort of just isn't public despite"
    },
    {
      "Time_Start": 898.36,
      "Time_End": 905.36,
      "Text": " the fact that FreePBX is touted as something like an open source PBX server."
    },
    {
      "Time_Start": 908.52,
      "Time_End": 913.4399999999999,
      "Text": " It's mainly written in PHP and it's shipped mainly as a Linux VM. So, whoever has access"
    },
    {
      "Time_Start": 913.44,
      "Time_End": 919.36,
      "Text": " to the VM could read the PHP files. So, obviously to avoid leaking code for the non-open source"
    },
    {
      "Time_Start": 919.36,
      "Time_End": 926.36,
      "Text": " components they've used something called Ioncube. So, Ioncube is a PHP source code obfuscation"
    },
    {
      "Time_Start": 929.2800000000001,
      "Time_End": 936.2800000000001,
      "Text": " solution. The Ioncube compiler compiles down PHP to Zen byte code essentially and stores"
    },
    {
      "Time_Start": 936.9599999999999,
      "Time_End": 943.9599999999999,
      "Text": " it in its proprietary Ioncube format and then at runtime the PHP process loads the Ioncube"
    },
    {
      "Time_Start": 947.36,
      "Time_End": 953.6,
      "Text": " module which decompiles the PHP before running it. So, it's a massive oversimplification"
    },
    {
      "Time_Start": 953.6,
      "Time_End": 957.28,
      "Text": " of actually what Ioncube is doing but it's essentially what it does. It's a lot like"
    },
    {
      "Time_Start": 957.28,
      "Time_End": 962.8,
      "Text": " things like Zenguard and SourceGuardian. There's some really nice previous research into Ioncube"
    },
    {
      "Time_Start": 962.9200000000001,
      "Time_End": 968.96,
      "Text": " by these guys that I've mentioned here but it's from quite a few years ago. So, some"
    },
    {
      "Time_Start": 968.96,
      "Time_End": 974.36,
      "Text": " of the information is still relevant, some of it's a little bit outdated."
    },
    {
      "Time_Start": 974.36,
      "Time_End": 979.48,
      "Text": " The point of Ioncube is just to create as much hassle as possible for people like us."
    },
    {
      "Time_Start": 979.48,
      "Time_End": 985.96,
      "Text": " So, anyone who wants to have a look at the source code, it will cause us to spend a lot"
    },
    {
      "Time_Start": 985.96,
      "Time_End": 992.8000000000001,
      "Text": " of time trying to get access to the source or maybe just give up entirely and the point"
    },
    {
      "Time_Start": 992.8000000000001,
      "Time_End": 999.6800000000001,
      "Text": " is also to make money. Like, they sell a license for like $200, $229. There's no free or open"
    },
    {
      "Time_Start": 999.6800000000001,
      "Time_End": 1004.6800000000001,
      "Text": " source de-obfuscators available. I'm not entirely sure why. I assume it's because Ioncube are"
    },
    {
      "Time_Start": 1008.5600000000001,
      "Time_End": 1014.5600000000001,
      "Text": " litigious. I'm not entirely sure how legal it is or how legal it would be to offer a"
    },
    {
      "Time_Start": 1014.6,
      "Time_End": 1019.1600000000001,
      "Text": " de-obfuscator for free but regardless, because there's nothing free out there, there's this"
    },
    {
      "Time_Start": 1019.1600000000001,
      "Time_End": 1025.64,
      "Text": " grey market for de-obfuscation tools that exists out there. So, you can find these de-obfuscation"
    },
    {
      "Time_Start": 1025.64,
      "Time_End": 1032.3600000000001,
      "Text": " as a service and people trying to sell things on Telegram and very dodgy looking YouTube"
    },
    {
      "Time_Start": 1032.3600000000001,
      "Time_End": 1037.3600000000001,
      "Text": " videos that show nothing in particular happening with very big price tags."
    },
    {
      "Time_Start": 1037.3600000000001,
      "Time_End": 1043.8400000000001,
      "Text": " So, I spent a bit of time playing with these during the process of looking at the free"
    },
    {
      "Time_Start": 1043.84,
      "Time_End": 1049.84,
      "Text": " PBX code. I did get some useful code out of some of them but it's a bit of a grey area."
    },
    {
      "Time_Start": 1060.6799999999998,
      "Time_End": 1066.84,
      "Text": " Regardless, I spent quite a lot of time looking at the de-obfuscation process so I'm going to"
    },
    {
      "Time_Start": 1066.84,
      "Time_End": 1072.0,
      "Text": " share a little bit of that today as well. In the case of free PBX, they're using the Ioncube"
    },
    {
      "Time_Start": 1072.0,
      "Time_End": 1078.0,
      "Text": " loader for PHP 7.4 which is version 10.4.5. The loader PHP module is an SO that's just"
    },
    {
      "Time_Start": 1083.56,
      "Time_End": 1088.96,
      "Text": " under 1.4 megabytes. It's part of the free PBX VM image so you can just dump it straight out"
    },
    {
      "Time_Start": 1088.96,
      "Time_End": 1094.96,
      "Text": " of there. It hooks Xen compile file and Xen execute X functions in the main PHP process."
    },
    {
      "Time_Start": 1096.84,
      "Time_End": 1101.08,
      "Text": " What it does very basically at the beginning is just check for magic bytes at the start of"
    },
    {
      "Time_Start": 1101.08,
      "Time_End": 1107.56,
      "Text": " every PHP file that comes in. If it finds them, it will try to de-obfuscate it and run it."
    },
    {
      "Time_Start": 1107.56,
      "Time_End": 1113.56,
      "Text": " If it doesn't find it, it just passes the files directly back to the PHP Xen VM. If it does"
    },
    {
      "Time_Start": 1114.76,
      "Time_End": 1120.76,
      "Text": " find the bytes then it goes on this sort of chaotic journey. The whole loader is a complete"
    },
    {
      "Time_Start": 1123.48,
      "Time_End": 1129.48,
      "Text": " chaotic mess. We have to really follow a lot of things going along. It doesn't just"
    },
    {
      "Time_Start": 1131.48,
      "Time_End": 1136.6799999999998,
      "Text": " de-obfuscate the Xen byte code and just pass it back to the main PHP Xen VM. It actually"
    },
    {
      "Time_Start": 1136.6799999999998,
      "Time_End": 1142.6799999999998,
      "Text": " ships a whole modified Xen VM within itself and every op code is executed within the loader"
    },
    {
      "Time_Start": 1144.12,
      "Time_End": 1149.48,
      "Text": " itself. Nothing ever goes back to the main PHP process. The whole extension is really,"
    },
    {
      "Time_Start": 1149.48,
      "Time_End": 1154.28,
      "Text": " really big and you can waste a lot of time in it. I'm going to share a few little bits and"
    },
    {
      "Time_Start": 1154.28,
      "Time_End": 1163.16,
      "Text": " pieces that I noticed while I was working on it. The loader is kind of obfuscated. All the"
    },
    {
      "Time_Start": 1163.16,
      "Time_End": 1169.3999999999999,
      "Text": " strings or useful strings within it are XORed with this static XOR key. When you're trying to"
    },
    {
      "Time_Start": 1169.3999999999999,
      "Time_End": 1175.0,
      "Text": " reverse engineer it, being able to see the strings is very beneficial as part of the process."
    },
    {
      "Time_Start": 1176.92,
      "Time_End": 1182.52,
      "Text": " I wrote a Gidra script which you can download here to help you do that. You do need to"
    },
    {
      "Time_Start": 1183.48,
      "Time_End": 1190.92,
      "Text": " put the XOR key into it for the specific loader, although I think it might be static"
    },
    {
      "Time_Start": 1192.04,
      "Time_End": 1197.56,
      "Text": " among different versions, but we'll have to see. Once all the strings are de-obfuscated,"
    },
    {
      "Time_Start": 1197.56,
      "Time_End": 1201.96,
      "Text": " it makes it very obvious as you can maybe see in these little images here where the"
    },
    {
      "Time_Start": 1203.16,
      "Time_End": 1207.08,
      "Text": " Xen VM code is just copied and pasted. You just see the exact same strings from the Xen"
    },
    {
      "Time_Start": 1207.6399999999999,
      "Time_End": 1216.28,
      "Text": " PHP Xen VM except weirdly obfuscated within the loader itself. It makes it easier to see which"
    },
    {
      "Time_Start": 1216.28,
      "Time_End": 1221.48,
      "Text": " bits are just Xen VM and which bits are actually Ion Cube. There's also a bunch of other weird"
    },
    {
      "Time_Start": 1221.48,
      "Time_End": 1227.1599999999999,
      "Text": " little stuff in there. There's something called Ion Cube 24 which is end point security for PHP"
    },
    {
      "Time_Start": 1227.1599999999999,
      "Time_End": 1233.24,
      "Text": " or something. I'm not entirely sure what it does, but it just registers lots of IC24 underscore"
    },
    {
      "Time_Start": 1233.8,
      "Time_End": 1239.16,
      "Text": " PHP functions in there. Knowing that there's something that isn't really relevant in there"
    },
    {
      "Time_Start": 1239.16,
      "Time_End": 1243.08,
      "Text": " is useful as well. It means we can just sort of cut through the fat a little bit."
    },
    {
      "Time_Start": 1244.84,
      "Time_End": 1251.24,
      "Text": " It registers a bunch of underscore Ion Cube PHP functions as well, but it also registers these"
    },
    {
      "Time_Start": 1251.24,
      "Time_End": 1255.96,
      "Text": " other strange functions that looks like with names like someone sort of mashed the keyboard."
    },
    {
      "Time_Start": 1256.76,
      "Time_End": 1263.56,
      "Text": " And each of these functions takes two arguments. One just is a pointer and the other is a kind of"
    },
    {
      "Time_Start": 1263.56,
      "Time_End": 1272.92,
      "Text": " checksum which is just that same pointer XORed with this number. If you don't give it the right"
    },
    {
      "Time_Start": 1272.92,
      "Time_End": 1280.04,
      "Text": " arguments, it will just send you some really sinister threats. It will say things like a rat"
    },
    {
      "Time_Start": 1280.04,
      "Time_End": 1286.36,
      "Text": " who gnaws at a cat's tail invites destruction and do good, reap good, do evil, reap evil and"
    },
    {
      "Time_Start": 1286.36,
      "Time_End": 1293.48,
      "Text": " things like that which isn't very nice. But if you give it the right arguments, it will do"
    },
    {
      "Time_Start": 1293.48,
      "Time_End": 1299.32,
      "Text": " something. I never actually figured out exactly what it was doing, but it seems like some kind"
    },
    {
      "Time_Start": 1299.32,
      "Time_End": 1302.44,
      "Text": " of debug functionality in there. Maybe it would be a fun thing to look at another day."
    },
    {
      "Time_Start": 1303.0,
      "Time_End": 1309.56,
      "Text": " So, once all of this is sort of sifted through and we've cut through a lot of the fat,"
    },
    {
      "Time_Start": 1311.4,
      "Time_End": 1315.72,
      "Text": " the way to start de-obfuscating this stuff is to hook some strategic points in the unpacking"
    },
    {
      "Time_Start": 1315.72,
      "Time_End": 1323.4,
      "Text": " process and you can dump the opcodes in this sort of proprietary way that they've stored them."
    },
    {
      "Time_Start": 1323.4,
      "Time_End": 1331.0800000000002,
      "Text": " You might be able to see here with these very strange looking strings, but it stores the"
    },
    {
      "Time_Start": 1331.08,
      "Time_End": 1336.04,
      "Text": " variable names, it stores the function names, everything is retrievable from within the"
    },
    {
      "Time_Start": 1337.72,
      "Time_End": 1346.52,
      "Text": " compiled IonCube format, whatever it is. Anyway, it's a whole hassle and it's a whole thing to"
    },
    {
      "Time_Start": 1346.52,
      "Time_End": 1351.1599999999999,
      "Text": " talk about another day, but it's elaborate and complicated and you have to spend a lot of time"
    },
    {
      "Time_Start": 1351.1599999999999,
      "Time_End": 1357.56,
      "Text": " in it, but I'll talk about it probably another day and maybe talk to legal professionals about"
    },
    {
      "Time_Start": 1357.72,
      "Time_End": 1361.72,
      "Text": " why this kind of stuff isn't in public anyway at the moment."
    },
    {
      "Time_Start": 1364.04,
      "Time_End": 1372.9199999999998,
      "Text": " Anyway, we have de-obfuscated code. Why does FreePBX use this obfuscated code in the first"
    },
    {
      "Time_Start": 1372.9199999999998,
      "Time_End": 1377.8,
      "Text": " place? I'm not entirely sure. I think it has something to do with the license model."
    },
    {
      "Time_Start": 1378.84,
      "Time_End": 1383.24,
      "Text": " So, they've got all these paid modules and the paid modules check for licenses before they run,"
    },
    {
      "Time_Start": 1383.96,
      "Time_End": 1389.16,
      "Text": " but since it's all PHP, if the code wasn't obfuscated somehow, then maybe people would"
    },
    {
      "Time_Start": 1389.16,
      "Time_End": 1394.68,
      "Text": " modify the code and then bypass the license checks, but it does sort of serve a licensing"
    },
    {
      "Time_Start": 1394.68,
      "Time_End": 1400.92,
      "Text": " purpose maybe. The only problem with this logic is that once you've de-obfuscated this stuff,"
    },
    {
      "Time_Start": 1400.92,
      "Time_End": 1407.88,
      "Text": " you can just replace these obfuscated files with the de-obfuscated ones and FreePBX won't notice"
    },
    {
      "Time_Start": 1408.44,
      "Time_End": 1412.6,
      "Text": " and you can comment out the code, it doesn't check for integrity or anything like that."
    },
    {
      "Time_Start": 1412.6000000000001,
      "Time_End": 1417.3200000000002,
      "Text": " It does check for integrity on other files that aren't obfuscated, which is also very strange. So,"
    },
    {
      "Time_Start": 1417.3200000000002,
      "Time_End": 1422.6000000000001,
      "Text": " they've decided to do obfuscation instead of integrity checking, which I don't really"
    },
    {
      "Time_Start": 1422.6000000000001,
      "Time_End": 1427.2400000000002,
      "Text": " understand. Maybe you get a sense by now. I think obfuscation is really silly anyway."
    },
    {
      "Time_Start": 1428.7600000000002,
      "Time_End": 1437.0000000000002,
      "Text": " So, let's look at some bugs. The first one is in the defone API component. This is a part of the"
    },
    {
      "Time_Start": 1437.0,
      "Time_End": 1444.68,
      "Text": " core functionality of FreePBX, but the code is still obfuscated for some reason. There's a lot"
    },
    {
      "Time_Start": 1444.68,
      "Time_End": 1449.8,
      "Text": " of functionality within this, but it does require authentication, which is handled by this function"
    },
    {
      "Time_Start": 1449.8,
      "Time_End": 1459.0,
      "Text": " called doAuth. DoAuth contains this subtle if condition, which checks if the password is just"
    },
    {
      "Time_Start": 1459.0,
      "Time_End": 1466.04,
      "Text": " the word login. In the abstract, this seems like a weird decision, but I think it's because they've"
    },
    {
      "Time_Start": 1466.04,
      "Time_End": 1474.84,
      "Text": " designed this component to be an API for the Digium or other Sangoma VoIP phones. So, these"
    },
    {
      "Time_Start": 1474.84,
      "Time_End": 1479.3999999999999,
      "Text": " devices aren't expected to have their own credentials. So, this is a kind of concession"
    },
    {
      "Time_Start": 1479.3999999999999,
      "Time_End": 1486.52,
      "Text": " in the authentication process for these particular devices to be able to authenticate. But it does"
    },
    {
      "Time_Start": 1486.52,
      "Time_End": 1495.0,
      "Text": " essentially mean that it's an authentication bypass. Like, all you need to pass the logic of"
    },
    {
      "Time_Start": 1495.96,
      "Time_End": 1501.96,
      "Text": " this authentication function, well, two of the things you need is the MAC address of a registered"
    },
    {
      "Time_Start": 1503.64,
      "Time_End": 1512.2,
      "Text": " phone, VoIP device, and this hard-coded password login. There's also one more check, which is the"
    },
    {
      "Time_Start": 1512.2,
      "Time_End": 1517.8,
      "Text": " user agent header. So, you just have to modify the user agent header to look like you're coming"
    },
    {
      "Time_Start": 1517.8,
      "Time_End": 1523.88,
      "Text": " from a Digium or Sangoma phone. So, the whole auth bypass is just sending a packet that makes"
    },
    {
      "Time_Start": 1523.88,
      "Time_End": 1533.48,
      "Text": " it look like you're a VoIP device. You basically authenticate with just a MAC address. And maybe"
    },
    {
      "Time_Start": 1533.48,
      "Time_End": 1539.5600000000002,
      "Text": " I don't need to tell this audience, but MAC addresses are not particularly unique. Digium"
    },
    {
      "Time_Start": 1539.5600000000002,
      "Time_End": 1547.0,
      "Text": " MAC addresses also have this 24-bit prefix. So, you can find the MAC addresses just by sniffing"
    },
    {
      "Time_Start": 1547.0,
      "Time_End": 1552.7600000000002,
      "Text": " on the network. You can find them printed on the back of the VoIP devices inside a building. Or,"
    },
    {
      "Time_Start": 1552.76,
      "Time_End": 1556.92,
      "Text": " if you're really desperate, you could try to brute force the last 24 bits of the MAC address."
    },
    {
      "Time_Start": 1558.44,
      "Time_End": 1565.8,
      "Text": " Two to the power of 24 seconds is like 27 weeks. So, if you sent a request every second for 27"
    },
    {
      "Time_Start": 1565.8,
      "Time_End": 1570.52,
      "Text": " weeks, you'd be able to figure out at least one of the Digium devices on the network."
    },
    {
      "Time_Start": 1574.04,
      "Time_End": 1577.8799999999999,
      "Text": " And so, we have this kind of authentication bypass, and we can chain it with this other bug"
    },
    {
      "Time_Start": 1577.96,
      "Time_End": 1584.8400000000001,
      "Text": " that is also in the Defone API. The Defone API handles all these different"
    },
    {
      "Time_Start": 1585.48,
      "Time_End": 1592.0400000000002,
      "Text": " methods that are specified in this request method field in a JSON post request. And so,"
    },
    {
      "Time_Start": 1592.0400000000002,
      "Time_End": 1598.8400000000001,
      "Text": " the PBX.users.currentcalls.stoprecording method is one that's vulnerable here. So,"
    },
    {
      "Time_Start": 1598.8400000000001,
      "Time_End": 1605.96,
      "Text": " let's have a look. So, the channel ID function, the channel ID value from the JSON request is"
    },
    {
      "Time_Start": 1605.96,
      "Time_End": 1611.8,
      "Text": " passed directly just into a PHP exec function. There's no attempt at input filtering or checking"
    },
    {
      "Time_Start": 1611.8,
      "Time_End": 1619.16,
      "Text": " anything. It's just a very pure, classic command injection in PHP in this software in 2023."
    },
    {
      "Time_Start": 1620.44,
      "Time_End": 1625.08,
      "Text": " I'm sorry it's not more interesting than that. I'm sorry it's not a more complex bug. It's just,"
    },
    {
      "Time_Start": 1625.96,
      "Time_End": 1630.92,
      "Text": " I mean, it's fun in the fact that it's just very, very classic and very, very simple"
    },
    {
      "Time_Start": 1630.92,
      "Time_End": 1638.8400000000001,
      "Text": " command injection. So, that's an authentication bypass to RCE chain in FreePBX."
    },
    {
      "Time_Start": 1640.8400000000001,
      "Time_End": 1645.0800000000002,
      "Text": " There's another few issues as well. This one's another authentication issue in FreePBX where"
    },
    {
      "Time_Start": 1645.8000000000002,
      "Time_End": 1650.8400000000001,
      "Text": " they have this admin interface that I tried to avoid finding bugs in because"
    },
    {
      "Time_Start": 1652.6000000000001,
      "Time_End": 1657.72,
      "Text": " if you actually have admin privileges, you can just create a skeleton module and just install"
    },
    {
      "Time_Start": 1657.72,
      "Time_End": 1662.92,
      "Text": " it yourself and then you're just running code. So, it didn't seem like a proper boundary. But"
    },
    {
      "Time_Start": 1662.92,
      "Time_End": 1668.52,
      "Text": " they do have this other functionality that allows normal users to authenticate the admin interface,"
    },
    {
      "Time_Start": 1669.24,
      "Time_End": 1676.04,
      "Text": " but they don't get administrative rights. I think this is maybe just for monitoring or creating"
    },
    {
      "Time_Start": 1676.04,
      "Time_End": 1682.92,
      "Text": " these like lower privileged accounts with this limited functionality. They get to see some like"
    },
    {
      "Time_Start": 1682.92,
      "Time_End": 1686.84,
      "Text": " module output when they log in and they can be granted access to specific modules and stuff,"
    },
    {
      "Time_Start": 1686.8400000000001,
      "Time_End": 1692.44,
      "Text": " but they're explicitly not given full administration rights. But actually it means"
    },
    {
      "Time_Start": 1692.44,
      "Time_End": 1697.0800000000002,
      "Text": " nothing because anyone who can authenticate to the admin interface has full admin privileges on"
    },
    {
      "Time_Start": 1697.0800000000002,
      "Time_End": 1703.16,
      "Text": " pretty much anything. Like it's only enforced in the UI. So, there's no separation between these"
    },
    {
      "Time_Start": 1703.16,
      "Time_End": 1710.0400000000002,
      "Text": " lower privileged and admin roles in the admin web interface. And so, we can use this to exploit"
    },
    {
      "Time_Start": 1710.0400000000002,
      "Time_End": 1716.2800000000002,
      "Text": " another vulnerability which is in the API module which any of these non-admin users of the admin"
    },
    {
      "Time_Start": 1716.28,
      "Time_End": 1723.32,
      "Text": " interface can access. This is part of the core free PBX. So, this isn't actually obfuscated at"
    },
    {
      "Time_Start": 1723.32,
      "Time_End": 1729.08,
      "Text": " all. This is just in the bit bucket, just in the open source core. If we send a request with the"
    },
    {
      "Time_Start": 1729.08,
      "Time_End": 1737.56,
      "Text": " command generate docs, we hit this like generate documentation function. It takes two arguments"
    },
    {
      "Time_Start": 1737.56,
      "Time_End": 1742.84,
      "Text": " which we also specify in the request that we're sending it. The most obvious issue is that if you"
    },
    {
      "Time_Start": 1742.8400000000001,
      "Time_End": 1748.6000000000001,
      "Text": " can see the code here, the host argument is just concatenated into a string which is passed"
    },
    {
      "Time_Start": 1748.6000000000001,
      "Time_End": 1753.8000000000002,
      "Text": " directly to a process. So, again, this is just a very, very bog standard command injection"
    },
    {
      "Time_Start": 1753.8000000000002,
      "Time_End": 1759.88,
      "Text": " vulnerability. The only thing that actually needs to be taken into account when you're exploiting"
    },
    {
      "Time_Start": 1759.88,
      "Time_End": 1765.96,
      "Text": " this is the host value needs to actually resolve somewhere. So, the command injection payload has"
    },
    {
      "Time_Start": 1765.96,
      "Time_End": 1774.28,
      "Text": " to start with a valid URL to an actual server that will actually respond. But we can just spin up"
    },
    {
      "Time_Start": 1774.28,
      "Time_End": 1781.24,
      "Text": " a server and do that. So, the host will point somewhere like attacker.com slash command"
    },
    {
      "Time_Start": 1781.24,
      "Time_End": 1786.92,
      "Text": " injection and return some valid access token and all the checks will be passed and the command"
    },
    {
      "Time_Start": 1786.92,
      "Time_End": 1793.0,
      "Text": " will be run. But also because the access token itself that's retrieved is concatenated into a"
    },
    {
      "Time_Start": 1793.08,
      "Time_End": 1799.56,
      "Text": " string, we can also just spin up a server that just returns command injections as access tokens"
    },
    {
      "Time_Start": 1800.28,
      "Time_End": 1805.64,
      "Text": " and we just we don't even have to send a command injection as part of the payload. We just send a"
    },
    {
      "Time_Start": 1805.64,
      "Time_End": 1811.8,
      "Text": " host and we've got a server that's just returning command injection payloads as part of the as"
    },
    {
      "Time_Start": 1811.8,
      "Time_End": 1819.48,
      "Text": " access tokens. So, this makes it also quite a fun way to exploit this bug. And then finally,"
    },
    {
      "Time_Start": 1819.48,
      "Time_End": 1831.96,
      "Text": " there's one more little DOS that I found reported to Sangoma. It's in another endpoint called"
    },
    {
      "Time_Start": 1831.96,
      "Time_End": 1841.56,
      "Text": " UCP which is the user control panel. This is accessible to like every user by default. It's"
    },
    {
      "Time_Start": 1841.56,
      "Time_End": 1848.6,
      "Text": " just a UI for normal user functions. So, making calls, managing phone books and extensions and"
    },
    {
      "Time_Start": 1848.6000000000001,
      "Time_End": 1856.6000000000001,
      "Text": " stuff like that. It's meant to be for everybody. In the UCP PMS module, any user can send a"
    },
    {
      "Time_Start": 1856.6000000000001,
      "Time_End": 1861.4800000000002,
      "Text": " request with the command parameter woo and then some other value passed to woo del. And then"
    },
    {
      "Time_Start": 1861.4800000000002,
      "Time_End": 1867.2400000000002,
      "Text": " this woo del value gets used to create a path which is just passed directly to unlink. So, we can"
    },
    {
      "Time_Start": 1867.2400000000002,
      "Time_End": 1873.96,
      "Text": " pass a path traversal string and unlink anything that we want on the server. It runs with asterisk"
    },
    {
      "Time_Start": 1874.04,
      "Time_End": 1879.24,
      "Text": " user privileges. So, anything owned by asterisk, you can delete on the server. So, it's a kind of"
    },
    {
      "Time_Start": 1879.24,
      "Time_End": 1890.6000000000001,
      "Text": " way for any user to delete files, useful asterisk files off the server. The disclosure process"
    },
    {
      "Time_Start": 1890.6000000000001,
      "Time_End": 1897.96,
      "Text": " with Sangoma was pretty bad as well. The response was really lukewarm. I sent them a disclosure"
    },
    {
      "Time_Start": 1897.96,
      "Time_End": 1902.8400000000001,
      "Text": " at the start of May and then they replied a few days later sort of asking about the ion cube"
    },
    {
      "Time_Start": 1902.8400000000001,
      "Time_End": 1909.5600000000002,
      "Text": " stuff. And then they never then I sent a few updates and requests for information and they never"
    },
    {
      "Time_Start": 1909.5600000000002,
      "Time_End": 1916.7600000000002,
      "Text": " replied. And then I chased them with some tweets for a while and I did eventually get a response"
    },
    {
      "Time_Start": 1916.7600000000002,
      "Time_End": 1926.1200000000001,
      "Text": " saying that they have patched some stuff. But without telling me or helping me to with version"
    },
    {
      "Time_Start": 1926.1200000000001,
      "Time_End": 1934.2800000000002,
      "Text": " numbers or anything like this. So, this was about a month ago. They I replied to that email"
    },
    {
      "Time_Start": 1934.2800000000002,
      "Time_End": 1938.1200000000001,
      "Text": " from them with a whole bunch of questions and tried to get some other information out of them"
    },
    {
      "Time_Start": 1938.1200000000001,
      "Time_End": 1943.96,
      "Text": " and they just haven't replied at all. So, again, nothing coming back from Sangoma. It was a really,"
    },
    {
      "Time_Start": 1943.96,
      "Time_End": 1949.88,
      "Text": " really annoying situation, especially considering they have this big page saying that they really"
    },
    {
      "Time_Start": 1949.88,
      "Time_End": 1953.96,
      "Text": " want to work with security researchers and they really want to try and fix vulnerabilities as"
    },
    {
      "Time_Start": 1953.96,
      "Time_End": 1959.8,
      "Text": " quickly as possible. And that's also why none of these issues have CVs related to them at all."
    },
    {
      "Time_Start": 1959.8,
      "Time_End": 1964.52,
      "Text": " The one email they did send back to me, they said that they were going to apply for a CVE"
    },
    {
      "Time_Start": 1964.52,
      "Time_End": 1970.44,
      "Text": " for the issues. So, it might just be that they've decided to apply for one CVE and bundle all of"
    },
    {
      "Time_Start": 1970.44,
      "Time_End": 1975.8,
      "Text": " these issues under one CVE, which is helpful and useful for all the defenders and customers out"
    },
    {
      "Time_Start": 1975.8,
      "Time_End": 1985.96,
      "Text": " there. So, yeah. I sent them these emails. They never replied to me. I did have a look at the"
    },
    {
      "Time_Start": 1985.96,
      "Time_End": 1993.32,
      "Text": " patch for the API bug that I mentioned here. And it looks like the patch is no good. So, I would"
    },
    {
      "Time_Start": 1993.32,
      "Time_End": 1999.6399999999999,
      "Text": " have also been very happy to tell them that if they'd email me back. Sangoma gets two stars"
    },
    {
      "Time_Start": 1999.64,
      "Time_End": 2009.64,
      "Text": " because they sent me two emails for their vendor response. And so, I'm going to show..."
    },
    {
      "Time_Start": 2011.5600000000002,
      "Time_End": 2014.2800000000002,
      "Text": " Oh, no. How do I do this?"
    },
    {
      "Time_Start": 2024.2800000000002,
      "Time_End": 2028.2,
      "Text": " So, this is yesterday."
    },
    {
      "Time_Start": 2029.64,
      "Time_End": 2041.96,
      "Text": " I'm not sure why... There we go. This is the most updated version of FreePBX, as you can"
    },
    {
      "Time_Start": 2041.96,
      "Time_End": 2055.1600000000003,
      "Text": " see here. I've taken the session token from the low privileged user. And I am sending the"
    },
    {
      "Time_Start": 2055.3999999999996,
      "Time_End": 2068.6,
      "Text": " patch bypass for the API exploit here. And getting a shell back."
    },
    {
      "Time_Start": 2068.6,
      "Time_End": 2096.36,
      "Text": " So, obviously, still issues in FreePBX today. I mean, I did write a kind of summary for this."
    },
    {
      "Time_Start": 2096.6800000000003,
      "Time_End": 2100.28,
      "Text": " PBX systems are meant to be pretty robust. They're meant to handle all the communications"
    },
    {
      "Time_Start": 2100.28,
      "Time_End": 2106.84,
      "Text": " in these on prem situations. People use them because they want to do things on prem. They"
    },
    {
      "Time_Start": 2106.84,
      "Time_End": 2113.6400000000003,
      "Text": " want to trust what's happening with their data. But the threat model is quite complicated."
    },
    {
      "Time_Start": 2113.6400000000003,
      "Time_End": 2119.56,
      "Text": " These servers are... They give different permissions to all kinds of different users."
    },
    {
      "Time_Start": 2119.56,
      "Time_End": 2123.32,
      "Text": " There's all kinds of different objects trying to connect to them. There's such a massive threat"
    },
    {
      "Time_Start": 2123.32,
      "Time_End": 2129.88,
      "Text": " model for them that it's... They're very, very difficult for... To secure."
    },
    {
      "Time_Start": 2132.52,
      "Time_End": 2137.56,
      "Text": " The user accounts are often required as well. Many employees will have some kind of phone or"
    },
    {
      "Time_Start": 2137.56,
      "Time_End": 2143.4,
      "Text": " chat access. Many devices need their own accounts. And the privilege models are also sort of all"
    },
    {
      "Time_Start": 2143.4,
      "Time_End": 2149.4,
      "Text": " over the place as well. There's this extra functionality that they keep on adding to make"
    },
    {
      "Time_Start": 2149.4,
      "Time_End": 2154.6800000000003,
      "Text": " it more like UC like or voice chat and video chat and things like this. Text chat and data"
    },
    {
      "Time_Start": 2154.6800000000003,
      "Time_End": 2160.2000000000003,
      "Text": " transfers and stuff. It's probably an interesting place to start if anyone wants to start looking"
    },
    {
      "Time_Start": 2160.2000000000003,
      "Time_End": 2171.0,
      "Text": " at these kinds of servers. So, and, you know, adding XMPP servers to internal enterprise"
    },
    {
      "Time_Start": 2171.0,
      "Time_End": 2176.12,
      "Text": " environments in 2023 seems silly. But maybe there's situations where it's called for."
    },
    {
      "Time_Start": 2176.92,
      "Time_End": 2185.08,
      "Text": " And another takeaway is there's just command injection bugs in PBX servers in 2023. And"
    },
    {
      "Time_Start": 2186.04,
      "Time_End": 2192.7599999999998,
      "Text": " loads of them. So, have fun also trying to look for them. And also bugs in open source can just"
    },
    {
      "Time_Start": 2192.7599999999998,
      "Time_End": 2198.6,
      "Text": " sit there for years. So, the SIPX bug has been sitting there for 13 years and nobody's done"
    },
    {
      "Time_Start": 2198.6,
      "Time_End": 2204.12,
      "Text": " anything about it. And also Sangoma, really, really disappointing to work with. They say"
    },
    {
      "Time_Start": 2204.12,
      "Time_End": 2207.56,
      "Text": " they wanted to work with researchers. They said they had this whole bug bounty program."
    },
    {
      "Time_Start": 2207.56,
      "Time_End": 2211.3199999999997,
      "Text": " They said they made all these big claims and then they didn't reply to any of my emails. So,"
    },
    {
      "Time_Start": 2213.56,
      "Time_End": 2223.56,
      "Text": " don't trust vendors. And also code obfuscation is stupid. It's fun to try and break it. We should"
    },
    {
      "Time_Start": 2223.56,
      "Time_End": 2228.8399999999997,
      "Text": " all try and break it more. This is exactly the kind of place where people should be trying to"
    },
    {
      "Time_Start": 2228.8399999999997,
      "Time_End": 2233.24,
      "Text": " mess around with that kind of stuff. And, yeah, thank you. Twitter is going under. Here's my"
    },
    {
      "Time_Start": 2233.2400000000002,
      "Time_End": 2241.96,
      "Text": " email address if you want to contact me. Yeah. Thanks."
    }
  ]
}