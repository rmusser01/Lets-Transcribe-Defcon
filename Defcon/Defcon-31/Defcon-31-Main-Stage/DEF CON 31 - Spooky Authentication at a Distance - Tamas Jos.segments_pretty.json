{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 11.38,
      "Text": "This text was transcribed using whisper model: large-v2\n\n Thank you everybody. Excuse the profanities in advance and let's get started. So the title of my"
    },
    {
      "Time_Start": 11.38,
      "Time_End": 17.38,
      "Text": " talk is Spooky Authentication at a Distance AKA Why I Don't Care About Your Passwords. So"
    },
    {
      "Time_Start": 20.54,
      "Time_End": 28.54,
      "Text": " let's start about me. I have a day job and a night job. I'm working in two shifts. Day job is"
    },
    {
      "Time_Start": 28.54,
      "Time_End": 34.54,
      "Text": " at a boutique pen test company called SecConsult. We are mostly prevalent in Europe and Asia."
    },
    {
      "Time_Start": 36.96,
      "Time_End": 44.34,
      "Text": " Not much here in the states. And I am from the Swiss division. So I'm working at Switzerland. My"
    },
    {
      "Time_Start": 44.34,
      "Time_End": 52.34,
      "Text": " night job I run under the alias of ScalSec. I am an open source developer. I have a lot of open"
    },
    {
      "Time_Start": 53.220000000000006,
      "Time_End": 59.220000000000006,
      "Text": " source tools created over the years and published mostly under MIT license. And I'm a proud"
    },
    {
      "Time_Start": 60.88,
      "Time_End": 68.18,
      "Text": " member of Porchetta Industries for some of the audiences. And we have an awesome logo over"
    },
    {
      "Time_Start": 68.18,
      "Time_End": 75.30000000000001,
      "Text": " there. So the biggest project maybe that you might have heard of is PyPyCats. Anybody has heard"
    },
    {
      "Time_Start": 75.3,
      "Time_End": 81.3,
      "Text": " of PyPyCats? Anybody is using it? Nice. Thank you. And also I have a tendency of rewriting"
    },
    {
      "Time_Start": 86.84,
      "Time_End": 92.84,
      "Text": " libraries for my own abusement. So AIOSMB is basically in packet rewritten from scratch. MSLDAP"
    },
    {
      "Time_Start": 96.46,
      "Time_End": 102.46,
      "Text": " is like my own LDAP library and I have like Kerberos, NTLM, SSH, whatever. I'm a big fan of"
    },
    {
      "Time_Start": 103.46000000000001,
      "Time_End": 109.46000000000001,
      "Text": " networking protocols if one can tell. And all of these are open source except for Octopon."
    },
    {
      "Time_Start": 113.34,
      "Time_End": 119.34,
      "Text": " Octopon is a special project and actually while developing Octopon I started looking a bit"
    },
    {
      "Time_Start": 122.08000000000001,
      "Time_End": 128.66,
      "Text": " into like nested things that one can do with Windows integrated authentication and hence this"
    },
    {
      "Time_Start": 128.66,
      "Time_End": 134.66,
      "Text": " talk was born. Also I like to just go and ramble about everything. So I have a promise for"
    },
    {
      "Time_Start": 138.35999999999999,
      "Time_End": 145.4,
      "Text": " you today or this afternoon. In this presentation you will see a novel technique that will"
    },
    {
      "Time_Start": 145.4,
      "Time_End": 151.4,
      "Text": " allow you to basically if you manage to execute code in a user context of machine A then from"
    },
    {
      "Time_Start": 152.06,
      "Time_End": 158.06,
      "Text": " machine B which is like your machine, the attacker machine, you will be able to perform"
    },
    {
      "Time_Start": 162.26,
      "Time_End": 168.26,
      "Text": " authentication in the context of user A but from your own target machine. This means that it"
    },
    {
      "Time_Start": 171.76,
      "Time_End": 177.56,
      "Text": " will basically the code, like the attacking code itself is going to be executed on your"
    },
    {
      "Time_Start": 177.6,
      "Time_End": 183.1,
      "Text": " machine and hopefully you haven't installed XDR or AV or whatever on your machine because"
    },
    {
      "Time_Start": 183.1,
      "Time_End": 189.1,
      "Text": " why would you? This will allow you to if you manage to sufficiently hide the proxy binary and"
    },
    {
      "Time_Start": 192.14000000000001,
      "Time_End": 198.14000000000001,
      "Text": " I will give you some hints on how you can do that. It's a really small proxy binary. Then you're"
    },
    {
      "Time_Start": 200.1,
      "Time_End": 207.14000000000001,
      "Text": " basically golden because you usually don't really necessarily care about the initial point"
    },
    {
      "Time_Start": 207.14000000000001,
      "Time_End": 213.56,
      "Text": " of compromise. So you don't really care about what is on the HR machine or the HR lady who"
    },
    {
      "Time_Start": 213.56,
      "Time_End": 218.98000000000002,
      "Text": " double clicked on the spam that you crafted. You are mostly caring about what is on the"
    },
    {
      "Time_Start": 218.98000000000002,
      "Time_End": 224.98000000000002,
      "Text": " servers and like over SMB or LDAP that you can reach using the HR person's authentication"
    },
    {
      "Time_Start": 227.52,
      "Time_End": 233.52,
      "Text": " context. So in summary I'm going to talk about first just a brief overview, like a really"
    },
    {
      "Time_Start": 237.22000000000003,
      "Time_End": 242.48000000000002,
      "Text": " gentle overview of Windows authentication protocol. This is going to be in a test tomorrow"
    },
    {
      "Time_Start": 242.48000000000002,
      "Time_End": 248.48000000000002,
      "Text": " so I hope that you are going to take notes. General description, we are going to use LDAP as"
    },
    {
      "Time_Start": 250.02,
      "Time_End": 257.52000000000004,
      "Text": " an example and I'm going to like take your hand and walk you through on how NTLM, Kerberos"
    },
    {
      "Time_Start": 257.52000000000004,
      "Time_End": 264.18,
      "Text": " plays together with SPnego and we are just going to skim over and I have 2 demos for you, not"
    },
    {
      "Time_Start": 264.18,
      "Time_End": 270.18,
      "Text": " live demos because they told me I'm not really allowed to plug in random USB sticks on this"
    },
    {
      "Time_Start": 272.18,
      "Time_End": 279.22,
      "Text": " machine. We are going to talk about SSPI and basically the how to authenticate locally but"
    },
    {
      "Time_Start": 279.22,
      "Time_End": 285.22,
      "Text": " remotely but also locally part. So Windows authentication protocols in a nutshell. Before"
    },
    {
      "Time_Start": 288.02,
      "Time_End": 293.76,
      "Text": " this first slide about authentication protocol, one thing that I want to mention is most of"
    },
    {
      "Time_Start": 293.8,
      "Time_End": 299.8,
      "Text": " the people that I talk with about authentication protocol, they have this weird notion that"
    },
    {
      "Time_Start": 302.26,
      "Time_End": 307.56,
      "Text": " like the authentication protocol basically stops being useful after you perform the"
    },
    {
      "Time_Start": 307.56,
      "Time_End": 313.34,
      "Text": " authentication itself and basically it's either a yes or no decision whether you get access to"
    },
    {
      "Time_Start": 313.34,
      "Time_End": 317.76,
      "Text": " the resource or not from the server. However I would like to point out and I'm going to point"
    },
    {
      "Time_Start": 317.76,
      "Time_End": 321.76,
      "Text": " it out multiple times that it is not the case because usually modern authentication"
    },
    {
      "Time_Start": 321.76,
      "Time_End": 326.46,
      "Text": " protocols also do key exchange and you will have to do something with the encryption and"
    },
    {
      "Time_Start": 326.46,
      "Time_End": 332.46,
      "Text": " decryption key context. So as I said there is going to be a lot of letters. No worries if you"
    },
    {
      "Time_Start": 335.18,
      "Time_End": 342.18,
      "Text": " cannot read it. It's actually quite readable. I was really afraid of this one. So basically we"
    },
    {
      "Time_Start": 342.18,
      "Time_End": 347.71999999999997,
      "Text": " take like a random network protocol, generic over you, client would like to log into the"
    },
    {
      "Time_Start": 347.72,
      "Time_End": 354.1,
      "Text": " server. How to do this? Like if you would be willing or if you wish to implement your own"
    },
    {
      "Time_Start": 354.1,
      "Time_End": 358.8,
      "Text": " custom protocol and you would like to have some authentication on it, then basically like"
    },
    {
      "Time_Start": 358.8,
      "Time_End": 363.06,
      "Text": " this is the generic run down how it should look like. So you would obviously want to have"
    },
    {
      "Time_Start": 363.06,
      "Time_End": 368.48,
      "Text": " some version negotiation between the client and the server because probably your protocol"
    },
    {
      "Time_Start": 368.48,
      "Time_End": 374.06,
      "Text": " is not going to come out right at the first time so you will need to have some versioning and"
    },
    {
      "Time_Start": 374.06,
      "Time_End": 377.64,
      "Text": " the client and the server should be using like the same version or the dialect of the"
    },
    {
      "Time_Start": 377.64,
      "Time_End": 384.44,
      "Text": " protocol. Oops, we are already at SMB, whatever. Yeah, so after the version has been"
    },
    {
      "Time_Start": 384.44,
      "Time_End": 390.36,
      "Text": " negotiated then you will see the authentication protocol negotiation. This can be in the"
    },
    {
      "Time_Start": 390.36,
      "Time_End": 395.9,
      "Text": " version negotiation as well. And then both the client and the server agreed on"
    },
    {
      "Time_Start": 395.9,
      "Time_End": 401.26,
      "Text": " authentication. Then I put it in a separate logical container. The authentication client"
    },
    {
      "Time_Start": 401.3,
      "Time_End": 408.44,
      "Text": " and the authentication server are going to initialize and usually everything that these two"
    },
    {
      "Time_Start": 408.44,
      "Time_End": 414.26,
      "Text": " generic like authentication concepts are willing to communicate with each other are just"
    },
    {
      "Time_Start": 414.26,
      "Time_End": 419.56,
      "Text": " going to be interposed on the actual network protocol. We are going to see it in great"
    },
    {
      "Time_Start": 419.56,
      "Time_End": 427.56,
      "Text": " detail later on. And this back and forth of the out messages are going to go until the"
    },
    {
      "Time_Start": 427.7,
      "Time_End": 433.56,
      "Text": " authentication either succeeds or not. Obviously like currently we are not touching the"
    },
    {
      "Time_Start": 433.56,
      "Time_End": 439.82,
      "Text": " authorization part because we don't have like a day of explaining every single bit of"
    },
    {
      "Time_Start": 439.82,
      "Time_End": 445.82,
      "Text": " information here. So after the authentication is finished then usually both the client or"
    },
    {
      "Time_Start": 450.06,
      "Time_End": 454.4,
      "Text": " the authentication client and the authentication server are going to end up with a shared"
    },
    {
      "Time_Start": 454.44000000000005,
      "Time_End": 460.86,
      "Text": " secret. And this shared secret is used or not used depending on what the protocol would"
    },
    {
      "Time_Start": 460.86,
      "Time_End": 467.86,
      "Text": " like to, like the actual network protocol would like to do in the future. They have the"
    },
    {
      "Time_Start": 467.86,
      "Time_End": 472.62,
      "Text": " option to use the shared secret to basically encrypt or protect the integrity of the"
    },
    {
      "Time_Start": 472.62,
      "Time_End": 478.62,
      "Text": " protocol. So moving on, this is a continuation of the slides before. So authentication"
    },
    {
      "Time_Start": 478.92,
      "Time_End": 484.92,
      "Text": " protocols, so encryption and decryption, user would like to list the shares for example."
    },
    {
      "Time_Start": 488.92,
      "Time_End": 494.04,
      "Text": " It double clicks on or like it types like slash slash IP address because we are still in the"
    },
    {
      "Time_Start": 494.04,
      "Time_End": 500.08,
      "Text": " NTLM times and we don't want to use Kerberos anyhow. This is going to be translated inside"
    },
    {
      "Time_Start": 500.08,
      "Time_End": 506.0,
      "Text": " of the client to like a series of messages and these are plain text messages. So basically"
    },
    {
      "Time_Start": 506.04,
      "Time_End": 510.46,
      "Text": " the client can request the authentication protocol to encrypt the message. Then the"
    },
    {
      "Time_Start": 510.46,
      "Time_End": 514.12,
      "Text": " encrypted message is going to be dispatched to the server. The server is going to dispatch it"
    },
    {
      "Time_Start": 514.12,
      "Time_End": 518.66,
      "Text": " to the authentication protocol which does the decryption and or the integrity verification"
    },
    {
      "Time_Start": 518.66,
      "Time_End": 524.38,
      "Text": " and going to be like turtles all the way down from here. These encrypted and decrypted"
    },
    {
      "Time_Start": 524.38,
      "Time_End": 529.54,
      "Text": " calls are going to go on until the protocol terminates or like the network connection"
    },
    {
      "Time_Start": 529.54,
      "Time_End": 535.54,
      "Text": " terminates. So here as I was explaining, we are going to use LDAP as like a case study"
    },
    {
      "Time_Start": 538.12,
      "Time_End": 544.12,
      "Text": " because it supports like all the authentication protocols and more than that shows like the"
    },
    {
      "Time_Start": 548.6999999999999,
      "Time_End": 554.6999999999999,
      "Text": " generational weaknesses in I would say like in any single place but whatever. We are going"
    },
    {
      "Time_Start": 555.48,
      "Time_End": 561.48,
      "Text": " to see like what LDAP supports as authentication methods and how we can maybe proxify some"
    },
    {
      "Time_Start": 568.44,
      "Time_End": 574.44,
      "Text": " of these. Moving on. Yes, so LDAP has a Sicily authentication. How many of you are familiar"
    },
    {
      "Time_Start": 577.1600000000001,
      "Time_End": 583.36,
      "Text": " with the Sicily authentication in LDAP? Yeah, I'm not really seeing many hands around"
    },
    {
      "Time_Start": 583.4,
      "Time_End": 588.6,
      "Text": " here. So Sicily authentication is actually a raw NTLM authentication that has been like"
    },
    {
      "Time_Start": 588.6,
      "Time_End": 594.36,
      "Text": " forced inside of the LDAP protocol thanks to Microsoft because when they came up with this"
    },
    {
      "Time_Start": 594.36,
      "Time_End": 600.1,
      "Text": " whole NTLM stuff they wanted to like stuff it like literally everywhere and this is one of"
    },
    {
      "Time_Start": 600.1,
      "Time_End": 605.86,
      "Text": " the main reasons why we cannot really get rid of it. So basically what is happening here is"
    },
    {
      "Time_Start": 605.86,
      "Time_End": 611.48,
      "Text": " that like you can have like a root query before authentication that basically explain like"
    },
    {
      "Time_Start": 612.1,
      "Time_End": 617.84,
      "Text": " the version negotiation part. Then you have the bin request where you specify Sicily and if"
    },
    {
      "Time_Start": 617.84,
      "Time_End": 623.0600000000001,
      "Text": " you want to check it in Wireshark, this is the place where Wireshark fails basically. The"
    },
    {
      "Time_Start": 623.0600000000001,
      "Time_End": 629.0600000000001,
      "Text": " sector just fails because not because of security issues but because like it's just like"
    },
    {
      "Time_Start": 629.0600000000001,
      "Time_End": 635.0600000000001,
      "Text": " simply put a badly made protocol. Nobody is really using it except for nefarious reasons."
    },
    {
      "Time_Start": 635.72,
      "Time_End": 641.72,
      "Text": " One might want to use it. Anyhow so bin request, bin response, NTLM client is going to kick"
    },
    {
      "Time_Start": 649.6400000000001,
      "Time_End": 655.8000000000001,
      "Text": " in. NTLM client like the LDAP client is going to ask the NTLM client hey like what is the"
    },
    {
      "Time_Start": 655.8000000000001,
      "Time_End": 662.48,
      "Text": " first structure that I need to send to the server so authentication can proceed and NTLM is"
    },
    {
      "Time_Start": 662.52,
      "Time_End": 668.52,
      "Text": " going to say that's like okay like let's negotiate. No that might be an issue there but"
    },
    {
      "Time_Start": 670.72,
      "Time_End": 677.3000000000001,
      "Text": " point is that NTLM has like basically 3 data structures. The authenticate, the challenge"
    },
    {
      "Time_Start": 677.3000000000001,
      "Time_End": 683.34,
      "Text": " and the negotiate. Yes okay then it's negotiate. Sorry about that. So basically like"
    },
    {
      "Time_Start": 683.34,
      "Time_End": 688.48,
      "Text": " NTLM messages are being interposed on top of the LDAP protocol passing them back and forth"
    },
    {
      "Time_Start": 688.48,
      "Time_End": 694.6,
      "Text": " until the authentication is finished and then you have a shared secret available and if"
    },
    {
      "Time_Start": 694.6,
      "Time_End": 700.02,
      "Text": " for example like LDAP integrity protection is enabled then this is the shared secret that is"
    },
    {
      "Time_Start": 700.02,
      "Time_End": 705.6,
      "Text": " going to be used for either encrypt and or integrity protect your LDAP messages in the"
    },
    {
      "Time_Start": 705.6,
      "Time_End": 711.6,
      "Text": " future. Okay so quick word about Espinego. Espinego is basically an authentication"
    },
    {
      "Time_Start": 712.4200000000001,
      "Time_End": 718.4200000000001,
      "Text": " protocol selector protocol. That's a tongue twister. That supports LDAP Kerberos, the other"
    },
    {
      "Time_Start": 722.88,
      "Time_End": 727.76,
      "Text": " type of Kerberos and potentially it could support other authentication protocols as sub"
    },
    {
      "Time_Start": 727.76,
      "Time_End": 732.38,
      "Text": " protocols but mostly like these are the like NTLM Kerberos are the 2 main ones that are"
    },
    {
      "Time_Start": 732.38,
      "Time_End": 738.38,
      "Text": " being used in normal day to day life. So Espinego itself does not provide authentication. It"
    },
    {
      "Time_Start": 738.96,
      "Time_End": 744.96,
      "Text": " is just a way for the client and the server to agree on an authentication protocol to be"
    },
    {
      "Time_Start": 746.34,
      "Time_End": 752.34,
      "Text": " used in the future and one of the tidbits is that Espinego has an added integrity"
    },
    {
      "Time_Start": 755.42,
      "Time_End": 762.04,
      "Text": " protection in itself. So basically it is to protect against downgrade attack like not"
    },
    {
      "Time_Start": 762.04,
      "Time_End": 767.04,
      "Text": " downgrade attacks depending on if you think like NTLM is more secure or less secure"
    },
    {
      "Time_Start": 767.12,
      "Time_End": 773.12,
      "Text": " than Kerberos but this integrity protection requires after the NTLM authentication"
    },
    {
      "Time_Start": 774.54,
      "Time_End": 780.54,
      "Text": " finished as the sub authentication module to use the secret key to sign the Espinego"
    },
    {
      "Time_Start": 784.9599999999999,
      "Time_End": 791.36,
      "Text": " packet that has been sent by the client from the server so it verifies that the client in"
    },
    {
      "Time_Start": 791.36,
      "Time_End": 798.1800000000001,
      "Text": " fact requested only NTLM authentication and not somebody was doing it, a man in the"
    },
    {
      "Time_Start": 798.1800000000001,
      "Time_End": 804.1800000000001,
      "Text": " middle and removing the Kerberos part from the request. So LDAP supports like these, the"
    },
    {
      "Time_Start": 809.02,
      "Time_End": 814.44,
      "Text": " following 3 main authentication protocol classes. One is called simple. The simple can"
    },
    {
      "Time_Start": 814.44,
      "Time_End": 819.86,
      "Text": " have plain which is like user and password. Obviously there is no integrity protection and"
    },
    {
      "Time_Start": 819.86,
      "Time_End": 824.1800000000001,
      "Text": " no like secret key exchange after that because you are literally sending the user name and"
    },
    {
      "Time_Start": 824.1800000000001,
      "Time_End": 830.1800000000001,
      "Text": " plain text password. There is also none which is we call anonymous bind. There is Sicily"
    },
    {
      "Time_Start": 830.1800000000001,
      "Time_End": 836.1800000000001,
      "Text": " which is like it still bugs me that it's still enabled everywhere and we have the SASL and"
    },
    {
      "Time_Start": 838.0600000000001,
      "Time_End": 844.0600000000001,
      "Text": " inside of the SASL you can find Espinego and GSS API and yeah the external one is really,"
    },
    {
      "Time_Start": 845.0600000000001,
      "Time_End": 851.0600000000001,
      "Text": " really interesting because basically the external one presumes that you have created like an"
    },
    {
      "Time_Start": 855.4200000000001,
      "Time_End": 860.0600000000001,
      "Text": " MTLS connection already to the LDAP server and the external does not provide any other"
    },
    {
      "Time_Start": 860.0600000000001,
      "Time_End": 866.0600000000001,
      "Text": " information. It just says hey I already authenticated to you but over TLS or SSL so please"
    },
    {
      "Time_Start": 866.3800000000001,
      "Time_End": 872.3800000000001,
      "Text": " like verify that one and since I'm verified then just let me in and this is really, really"
    },
    {
      "Time_Start": 874.48,
      "Time_End": 880.48,
      "Text": " useful if you are doing like ADCS attacks for example depending. So just a quick rundown on"
    },
    {
      "Time_Start": 882.8000000000001,
      "Time_End": 890.0200000000001,
      "Text": " how the LDAP SASL Espinego NTLM authentication works and I believe like this is going to be"
    },
    {
      "Time_Start": 890.02,
      "Time_End": 896.02,
      "Text": " the most complex one. I don't want to torture you further. So basically LDAP client kicks"
    },
    {
      "Time_Start": 898.9,
      "Time_End": 904.9,
      "Text": " in, connects to the server via TCP hopefully. There is some version negotiation with root"
    },
    {
      "Time_Start": 906.8,
      "Time_End": 912.76,
      "Text": " query. Espinego client kicks in. Espinego client is going to like instruct the LDAP client"
    },
    {
      "Time_Start": 912.76,
      "Time_End": 919.1,
      "Text": " to send basically the supported authentication protocols to the LDAP server. LDAP server is"
    },
    {
      "Time_Start": 919.1,
      "Time_End": 923.52,
      "Text": " going to kick in the Espinego server saying that hey I got a new client. This is what they"
    },
    {
      "Time_Start": 923.52,
      "Time_End": 928.72,
      "Text": " support. What should I reply? It should like the reply of the Espinego server is then"
    },
    {
      "Time_Start": 928.72,
      "Time_End": 934.0600000000001,
      "Text": " interposed onto the LDAP client and LDAP client relays it to the Espinego client and you"
    },
    {
      "Time_Start": 934.0600000000001,
      "Time_End": 939.6800000000001,
      "Text": " know you get the gist. You don't need to read it through. Maybe at home because there's"
    },
    {
      "Time_Start": 939.6800000000001,
      "Time_End": 946.38,
      "Text": " going to be a test tomorrow. So how Kerberos authentication works. If we are not talking"
    },
    {
      "Time_Start": 946.42,
      "Time_End": 952.42,
      "Text": " about mutual authentication for Kerberos then it's going to be really simple. The reason why"
    },
    {
      "Time_Start": 954.0,
      "Time_End": 958.88,
      "Text": " it is so simple is because like the actual Kerberos communication is not being shown on this"
    },
    {
      "Time_Start": 958.88,
      "Time_End": 964.88,
      "Text": " slide because like the complexity is on the other end. So basically LDAP is just basically"
    },
    {
      "Time_Start": 966.54,
      "Time_End": 971.66,
      "Text": " using Espinego to instruct the Kerberos client to request a ticket and then they just send"
    },
    {
      "Time_Start": 971.66,
      "Time_End": 977.66,
      "Text": " this ticket and this ticket already contains the shared secret. So let's talk about SMB encryption"
    },
    {
      "Time_Start": 983.04,
      "Time_End": 989.04,
      "Text": " decryption because it is a bit different than like Kerberos and normal NTLM. So Kerberos and"
    },
    {
      "Time_Start": 992.8199999999999,
      "Time_End": 999.28,
      "Text": " NTLM themselves provide encryption and decryption algorithms to be used which are specified"
    },
    {
      "Time_Start": 999.3199999999999,
      "Time_End": 1005.3199999999999,
      "Text": " by RFC and NTLM encryption decryption RFC the errata is larger than the actual RFC. That"
    },
    {
      "Time_Start": 1008.1999999999999,
      "Time_End": 1014.1999999999999,
      "Text": " should tell you something but mostly like besides LDAP like not many other protocols are"
    },
    {
      "Time_Start": 1015.4,
      "Time_End": 1020.9,
      "Text": " actually taking advantage of NTLM encryption decryption. Probably because it's based on"
    },
    {
      "Time_Start": 1020.9,
      "Time_End": 1026.8999999999999,
      "Text": " RC4 but I don't know that part. So how SMB does it, however, is that SMB sets the"
    },
    {
      "Time_Start": 1029.52,
      "Time_End": 1035.2,
      "Text": " slide like it's really nice and cute that you are like defining your own RFC and your own"
    },
    {
      "Time_Start": 1035.2,
      "Time_End": 1041.24,
      "Text": " encryption and decryption methods but actually I am Microsoft. I don't really care about it."
    },
    {
      "Time_Start": 1041.24,
      "Time_End": 1047.24,
      "Text": " So how about just give me the secret key and I'll deal with the rest. This is going to be"
    },
    {
      "Time_Start": 1048.98,
      "Time_End": 1054.12,
      "Text": " like super important later for us when we are actually trying to rebuild some authentication"
    },
    {
      "Time_Start": 1054.1200000000001,
      "Time_End": 1060.1200000000001,
      "Text": " context on our own machines. So Microsoft has this SSPI. SSPI is a set of APIs that allows"
    },
    {
      "Time_Start": 1066.8200000000002,
      "Time_End": 1072.8200000000002,
      "Text": " you to interface with Lsys in a programmatical way and SSPI is basically created because as"
    },
    {
      "Time_Start": 1075.92,
      "Time_End": 1083.1200000000001,
      "Text": " some of you might know Lsys caches some credentials. I don't know if it's a big secret or"
    },
    {
      "Time_Start": 1083.1200000000001,
      "Time_End": 1088.96,
      "Text": " not but yeah it caches some credentials like sometimes plain text, sometimes not really"
    },
    {
      "Time_Start": 1088.96,
      "Time_End": 1093.7,
      "Text": " plain text credentials but they are there. The reason why they are there is because you have"
    },
    {
      "Time_Start": 1093.7,
      "Time_End": 1099.5800000000002,
      "Text": " like a million processes running on your computer in a Windows domain environment and these"
    },
    {
      "Time_Start": 1099.5800000000002,
      "Time_End": 1105.96,
      "Text": " processes want to connect to the DC or to some other servers and yeah it's not really nice"
    },
    {
      "Time_Start": 1105.96,
      "Time_End": 1112.46,
      "Text": " if we ping the user every time when a random background process wishes to authenticate to"
    },
    {
      "Time_Start": 1112.5,
      "Time_End": 1118.5,
      "Text": " the DC just to get the credentials every single time. So SSPI is the way that like a user"
    },
    {
      "Time_Start": 1121.76,
      "Time_End": 1127.76,
      "Text": " land application or a user land process would perform like an authentication either with or"
    },
    {
      "Time_Start": 1129.46,
      "Time_End": 1136.26,
      "Text": " without the user consent or yeah they don't really care about consent in this part but"
    },
    {
      "Time_Start": 1136.26,
      "Time_End": 1142.26,
      "Text": " there is a way to set it up that it prompts the user but like why would you do that?"
    },
    {
      "Time_Start": 1143.46,
      "Time_End": 1149.46,
      "Text": " If you are on the attacker side of course. So SSPI defines a kind of handful of API calls but"
    },
    {
      "Time_Start": 1154.0,
      "Time_End": 1160.0,
      "Text": " for the sake of this discussion we only need to take five into account. Acquire credential"
    },
    {
      "Time_Start": 1162.26,
      "Time_End": 1167.58,
      "Text": " handle, initialize security context, query context attributes, encrypt and decrypt"
    },
    {
      "Time_Start": 1167.62,
      "Time_End": 1173.62,
      "Text": " message. This is how we roll. If you have like a legit or an illegit process then this is"
    },
    {
      "Time_Start": 1177.0,
      "Time_End": 1183.0,
      "Text": " only the five that you would need to implement to get the authentication action rolling."
    },
    {
      "Time_Start": 1185.96,
      "Time_End": 1191.96,
      "Text": " So again generalization, how it looks like. So basically client would like to authenticate"
    },
    {
      "Time_Start": 1192.26,
      "Time_End": 1198.26,
      "Text": " to the server. So client on its own end is going to first invoke acquire credential handle"
    },
    {
      "Time_Start": 1200.04,
      "Time_End": 1206.04,
      "Text": " that is going to create like an authentication context like on the LSS level. Then for every"
    },
    {
      "Time_Start": 1207.38,
      "Time_End": 1213.0,
      "Text": " single like authentication message that needs to be passed between the client and the"
    },
    {
      "Time_Start": 1213.0,
      "Time_End": 1219.8,
      "Text": " server, the client is going to constantly invoke the initialize security context part. Up"
    },
    {
      "Time_Start": 1219.8799999999999,
      "Time_End": 1225.8,
      "Text": " till to the point where the initialize security context actually from the client part comes"
    },
    {
      "Time_Start": 1225.8,
      "Time_End": 1231.8,
      "Text": " back to the network client and says like okay we are finished and like I believe that we have"
    },
    {
      "Time_Start": 1231.8,
      "Time_End": 1237.8,
      "Text": " like a good go at this authentication part. So if the result is okay then there is going to be"
    },
    {
      "Time_Start": 1239.26,
      "Time_End": 1244.18,
      "Text": " a shared secret like the shared secret that we were explaining in the general overview. This"
    },
    {
      "Time_Start": 1244.18,
      "Time_End": 1250.18,
      "Text": " shared secret however is going to be kept in the LSS process or something like no it's"
    },
    {
      "Time_Start": 1251.98,
      "Time_End": 1257.98,
      "Text": " probably in the LSS process. And then there is a problem. So far so good because like you"
    },
    {
      "Time_Start": 1261.26,
      "Time_End": 1267.26,
      "Text": " are not an administrator or some high integrity process so you cannot get out these keys."
    },
    {
      "Time_Start": 1267.8,
      "Time_End": 1273.8,
      "Text": " However, there is actually an API call because what happens if for example in SMB's case,"
    },
    {
      "Time_Start": 1278.1,
      "Time_End": 1283.06,
      "Text": " SMB decides to implement their own encryption and decryption algorithms and they would"
    },
    {
      "Time_Start": 1283.06,
      "Time_End": 1289.06,
      "Text": " need to have the key for that. Like the shared key. What happens if like some like my process"
    },
    {
      "Time_Start": 1291.1,
      "Time_End": 1297.1,
      "Text": " would like to have that as well. So therefore we have the shared key that is going to be"
    },
    {
      "Time_Start": 1297.26,
      "Time_End": 1303.52,
      "Text": " query context attributes API call which you can invoke after the authentication has"
    },
    {
      "Time_Start": 1303.52,
      "Time_End": 1309.18,
      "Text": " finished successfully. And the query context attribute like this API, I'm not going to say"
    },
    {
      "Time_Start": 1309.18,
      "Time_End": 1315.76,
      "Text": " it again, is actually there to query like a lot of different aspects of the current"
    },
    {
      "Time_Start": 1315.76,
      "Time_End": 1320.34,
      "Text": " authentication context and one of these aspects is to actually give you back the secret key"
    },
    {
      "Time_Start": 1320.34,
      "Time_End": 1325.72,
      "Text": " like the shared key that has been generated based on like either Kerberos or NTLM or"
    },
    {
      "Time_Start": 1326.52,
      "Time_End": 1332.52,
      "Text": " whatever. And this is super useful for us actually because yeah, almost. So this is super"
    },
    {
      "Time_Start": 1336.4,
      "Time_End": 1342.4,
      "Text": " useful for us because what we can do here is that now like we can like from our machine can"
    },
    {
      "Time_Start": 1344.44,
      "Time_End": 1349.94,
      "Text": " instruct LSS to perform authentication for us. So authentication is done. What we need is"
    },
    {
      "Time_Start": 1350.8200000000002,
      "Time_End": 1357.52,
      "Text": " the secret key and we can now request LSS to give us the secret key. Well, what happens if"
    },
    {
      "Time_Start": 1357.52,
      "Time_End": 1364.28,
      "Text": " like can we do it remotely? I mean like it's just like four API calls. So like if you build"
    },
    {
      "Time_Start": 1364.28,
      "Time_End": 1370.78,
      "Text": " like an RPC that is wrapping these four or five API calls, then you should be golden, right?"
    },
    {
      "Time_Start": 1370.78,
      "Time_End": 1376.78,
      "Text": " Now, there is kind of a problem because there is a special case that like Kerberos"
    },
    {
      "Time_Start": 1379.98,
      "Time_End": 1386.74,
      "Text": " mutual authentication. In Kerberos mutual authentication, you will need to have like in"
    },
    {
      "Time_Start": 1386.74,
      "Time_End": 1392.94,
      "Text": " any way, sorry, you will need to have not just the secret key but also the IV. But how are"
    },
    {
      "Time_Start": 1392.94,
      "Time_End": 1400.28,
      "Text": " you going to get the IV? The query context attributes API does not tell you the IV at all."
    },
    {
      "Time_Start": 1400.28,
      "Time_End": 1406.28,
      "Text": " And in normal situations like in NTLM, you don't need the IV because it's RC4. So why would"
    },
    {
      "Time_Start": 1406.8999999999999,
      "Time_End": 1414.8999999999999,
      "Text": " you need an IV? For Kerberos case, the IV, if it's not mutual, then you can read it out from"
    },
    {
      "Time_Start": 1414.8999999999999,
      "Time_End": 1420.48,
      "Text": " the ticket itself. But if it's a mutual authentication, that means that like the actual"
    },
    {
      "Time_Start": 1420.48,
      "Time_End": 1427.2,
      "Text": " client and the server are going to do like another round trip of exchanging tickets. Then"
    },
    {
      "Time_Start": 1427.2,
      "Time_End": 1434.36,
      "Text": " the session key, like the ticket that finally you end up with in the client is going to"
    },
    {
      "Time_Start": 1434.3600000000001,
      "Time_End": 1439.6000000000001,
      "Text": " contain the IV but you cannot decrypt that part of the ticket that contains the IV. And"
    },
    {
      "Time_Start": 1439.6000000000001,
      "Time_End": 1447.6000000000001,
      "Text": " also it doesn't give you that. So this gave me a bit of like a hard time to figure out. But"
    },
    {
      "Time_Start": 1447.6000000000001,
      "Time_End": 1453.8200000000002,
      "Text": " then it clicked on me. Basically, we have the encrypt message and decrypt message. So"
    },
    {
      "Time_Start": 1453.8200000000002,
      "Time_End": 1460.2,
      "Text": " taking the encrypt message is going to wrap our data, whatever data that we are encrypting"
    },
    {
      "Time_Start": 1460.2,
      "Time_End": 1465.74,
      "Text": " in a token. And that token must have the current initialization vector. Otherwise like"
    },
    {
      "Time_Start": 1465.74,
      "Time_End": 1470.8600000000001,
      "Text": " the other side would not be able to decrypt it, right? So this was the missing piece of the"
    },
    {
      "Time_Start": 1470.8600000000001,
      "Time_End": 1476.8600000000001,
      "Text": " puzzle. Now we have basically, we can make LSAS authenticate. We can have the initialization"
    },
    {
      "Time_Start": 1479.66,
      "Time_End": 1485.66,
      "Text": " vector and we can have the secret key as well. So your LSAS but on my machine. The goal is"
    },
    {
      "Time_Start": 1486.3600000000001,
      "Time_End": 1492.3600000000001,
      "Text": " basically to create wrappers for these four API calls. Sorry, five API calls. And that is the"
    },
    {
      "Time_Start": 1497.94,
      "Time_End": 1503.94,
      "Text": " easy part. The hard part is that now you have two choices. Now you either need to modify your"
    },
    {
      "Time_Start": 1506.2,
      "Time_End": 1513.5400000000002,
      "Text": " own attacking machine's LSAS process to interface with this, to be leveraging this newly"
    },
    {
      "Time_Start": 1513.54,
      "Time_End": 1519.78,
      "Text": " created RPC or you would rewrite each and every single authentication protocol that you"
    },
    {
      "Time_Start": 1519.78,
      "Time_End": 1525.78,
      "Text": " want to deal with. And since I love authentication protocols, guess where I ended up. So it"
    },
    {
      "Time_Start": 1528.3999999999999,
      "Time_End": 1534.3999999999999,
      "Text": " took I would say like roughly two years. But yeah, so I came up with an authentication"
    },
    {
      "Time_Start": 1535.14,
      "Time_End": 1541.14,
      "Text": " library for Python that is used by all of my network implementations that leverages these"
    },
    {
      "Time_Start": 1546.1000000000001,
      "Time_End": 1552.1000000000001,
      "Text": " type of RPC calls. How does it look like? So again, you don't have to read it. Oh, it's"
    },
    {
      "Time_Start": 1554.1000000000001,
      "Time_End": 1560.9,
      "Text": " actually, okay. I kind of like how it turned out. Basically what you're seeing here is that"
    },
    {
      "Time_Start": 1561.4,
      "Time_End": 1567.4,
      "Text": " you can perform these RPC calls. I'm not going to go over each and every step because I don't"
    },
    {
      "Time_Start": 1571.4,
      "Time_End": 1577.4,
      "Text": " want to make this presentation one and a half hours long. The final part of this is, sorry,"
    },
    {
      "Time_Start": 1581.72,
      "Time_End": 1589.1000000000001,
      "Text": " yes. So basically what we were discussing before is that there are like two ways that you can do"
    },
    {
      "Time_Start": 1589.1000000000001,
      "Time_End": 1595.1000000000001,
      "Text": " the encryption decryption part. Because my first instinct since I could not get the IV out,"
    },
    {
      "Time_Start": 1595.1000000000001,
      "Time_End": 1599.64,
      "Text": " like I could not figure out how to get the IV, what I did is that's like for each and every"
    },
    {
      "Time_Start": 1599.64,
      "Time_End": 1605.9800000000002,
      "Text": " encrypt and decrypt message call, I was performing yet another set of RPC calls to inject back"
    },
    {
      "Time_Start": 1605.9800000000002,
      "Time_End": 1612.2600000000002,
      "Text": " the encrypted data from my machine back to the victim's machine and make the LSAS decrypt"
    },
    {
      "Time_Start": 1612.3,
      "Time_End": 1618.3,
      "Text": " this and send back the raw data. Now this is not really the, let's say it's not really a useful"
    },
    {
      "Time_Start": 1620.76,
      "Time_End": 1626.76,
      "Text": " solution because it just hogs the bandwidth. However, here what you have is that with the"
    },
    {
      "Time_Start": 1631.8799999999999,
      "Time_End": 1637.34,
      "Text": " previously explained get session key and then encrypt message with some random message and"
    },
    {
      "Time_Start": 1637.3400000000001,
      "Time_End": 1642.68,
      "Text": " unwrapping the response token, you can basically have the entire encryption and decryption"
    },
    {
      "Time_Start": 1642.68,
      "Time_End": 1648.68,
      "Text": " context back in your home machine from the victim's target machine. So I would like to show"
    },
    {
      "Time_Start": 1654.0000000000002,
      "Time_End": 1660.5000000000002,
      "Text": " you two use cases for it. Actually multiple use cases but like two which I have a demo for."
    },
    {
      "Time_Start": 1660.5,
      "Time_End": 1666.5,
      "Text": " One is, how did it get here? Sorry. One is just basically the proof of concept code is"
    },
    {
      "Time_Start": 1670.88,
      "Time_End": 1674.76,
      "Text": " going to be executed in the victim's machine and then from another machine we are going to"
    },
    {
      "Time_Start": 1674.76,
      "Time_End": 1680.76,
      "Text": " perform an authentication to the main controller. Let's hope that the codec works this time."
    },
    {
      "Time_Start": 1691.44,
      "Time_End": 1697.44,
      "Text": " I see the video here. Oh that's nice because now I have to look over here. So the attacker"
    },
    {
      "Time_Start": 1713.34,
      "Time_End": 1719.34,
      "Text": " machine is on top. It's a Ubuntu machine and the victim machine is on the bottom. And"
    },
    {
      "Time_Start": 1721.42,
      "Time_End": 1727.42,
      "Text": " then we are going to execute this proxy binary. This proxy binary currently is just like"
    },
    {
      "Time_Start": 1743.04,
      "Time_End": 1746.8,
      "Text": " listening on the port on the victim machine. Obviously this is not the way that you would do"
    },
    {
      "Time_Start": 1746.8,
      "Time_End": 1752.8,
      "Text": " it in a real life scenario. This is just for proof of concept sake. And on the target"
    },
    {
      "Time_Start": 1752.8,
      "Time_End": 1758.8,
      "Text": " machine what you see here is that basically we told the library, the SMB library, not to use"
    },
    {
      "Time_Start": 1769.3799999999999,
      "Time_End": 1775.3799999999999,
      "Text": " any like actual credentials but to use the user name, sorry the IP, like the RPC server,"
    },
    {
      "Time_Start": 1777.18,
      "Time_End": 1783.18,
      "Text": " on the IP address and port of the victim machine. And as soon as basically I executed the,"
    },
    {
      "Time_Start": 1784.68,
      "Time_End": 1790.68,
      "Text": " like I gave the instruction. Let's just go back to the URL quickly if we can. So on top"
    },
    {
      "Time_Start": 1795.72,
      "Time_End": 1801.72,
      "Text": " basically that is the only information that the SMB client is using. So we have the IP"
    },
    {
      "Time_Start": 1801.72,
      "Time_End": 1807.72,
      "Text": " address of the target machine two times basically because, no just one time sorry. And the"
    },
    {
      "Time_Start": 1810.26,
      "Time_End": 1816.68,
      "Text": " port is by default it's set to something. It doesn't really matter. So the point is SMB"
    },
    {
      "Time_Start": 1816.68,
      "Time_End": 1822.68,
      "Text": " connection is going to basically work immediately and we can, oops, yeah, sorry, we can"
    },
    {
      "Time_Start": 1824.64,
      "Time_End": 1830.64,
      "Text": " perform an authentication here. Thank you."
    },
    {
      "Time_Start": 1831.72,
      "Time_End": 1837.72,
      "Text": " So, yeah, it's just like I deliberately printed out all the debug data so we can see what"
    },
    {
      "Time_Start": 1842.48,
      "Time_End": 1848.48,
      "Text": " is happening there. And for the other protocol is basic, oops, sorry, going back there. So"
    },
    {
      "Time_Start": 1853.06,
      "Time_End": 1857.72,
      "Text": " just to show that it actually works so like it lists the shares and I can, like we can"
    },
    {
      "Time_Start": 1857.72,
      "Time_End": 1863.72,
      "Text": " actually download the file from the destination. Yes. So that was for SMB and we have one"
    },
    {
      "Time_Start": 1865.18,
      "Time_End": 1871.18,
      "Text": " for LDAP as well. And that should be coming soon. Yeah. Basically the command is exactly"
    },
    {
      "Time_Start": 1879.1000000000001,
      "Time_End": 1885.1000000000001,
      "Text": " the same and yeah, we logged in to the DC via LDAP. And here we are listing the SPN"
    },
    {
      "Time_Start": 1887.72,
      "Time_End": 1894.68,
      "Text": " like the Kerberos to the users for the time being. Okay. Sorry, I just need to speed it"
    },
    {
      "Time_Start": 1894.68,
      "Time_End": 1900.68,
      "Text": " up because time is of the essence. And we have it here. Okay. Yeah. That was the first"
    },
    {
      "Time_Start": 1909.9,
      "Time_End": 1915.9,
      "Text": " demo. So this was one use case. The second use case is that basically you can use this"
    },
    {
      "Time_Start": 1916.9,
      "Time_End": 1922.9,
      "Text": " technique by grabbing a Raspberry Pi like a single one. You can make it a USB dongle. You"
    },
    {
      "Time_Start": 1925.0800000000002,
      "Time_End": 1932.1200000000001,
      "Text": " can add some clever techniques to make it act as a keyboard like a rubber ducky for example."
    },
    {
      "Time_Start": 1932.1200000000001,
      "Time_End": 1939.9,
      "Text": " And also to act as a USB Ethernet device. If you set up DHCP server, Wi-Fi access point,"
    },
    {
      "Time_Start": 1939.94,
      "Time_End": 1946.44,
      "Text": " whatever, then you can create a really, really neat attack tool with it. Because as we have seen"
    },
    {
      "Time_Start": 1946.44,
      "Time_End": 1953.16,
      "Text": " it in the previous slides, this technique does not require the attacker to know anything prior"
    },
    {
      "Time_Start": 1953.16,
      "Time_End": 1959.16,
      "Text": " about the target domain. If there is a user account that is actually active and the user has"
    },
    {
      "Time_Start": 1961.4,
      "Time_End": 1967.7800000000002,
      "Text": " executed this proxy library, then everything else can happen like all the authentication and"
    },
    {
      "Time_Start": 1967.82,
      "Time_End": 1972.62,
      "Text": " all the attacks are happening from another machine. Okay. And the basic domain"
    },
    {
      "Time_Start": 1972.62,
      "Time_End": 1978.62,
      "Text": " information can be pulled for example like the log on server or what not. And since all"
    },
    {
      "Time_Start": 1980.28,
      "Time_End": 1986.28,
      "Text": " users can pull information from the LDAP, then it just basically trickles down and you don't"
    },
    {
      "Time_Start": 1986.28,
      "Time_End": 1992.08,
      "Text": " need to add any, you don't need to, like if you have an embedded system, you don't need to"
    },
    {
      "Time_Start": 1992.0800000000002,
      "Time_End": 1997.5800000000002,
      "Text": " add any specific like target specific code. This means that like if you put everything"
    },
    {
      "Time_Start": 1997.5800000000002,
      "Time_End": 2003.92,
      "Text": " together in a small Raspberry Pi, which is kind of like on the desk for example, then what"
    },
    {
      "Time_Start": 2003.92,
      "Time_End": 2009.92,
      "Text": " you are going to end up with is like a pawn everything tool kit. Because if the proxy is"
    },
    {
      "Time_Start": 2012.2600000000002,
      "Time_End": 2018.7600000000002,
      "Text": " going to, is successfully executed and the way that it's being executed is that if you plug"
    },
    {
      "Time_Start": 2018.76,
      "Time_End": 2024.76,
      "Text": " it in, I'm just going to go on a ramble. So if you plug this device in, then it's going to"
    },
    {
      "Time_Start": 2026.98,
      "Time_End": 2030.98,
      "Text": " show itself to the target machine, an unlocked target machine. What it's going to show"
    },
    {
      "Time_Start": 2030.98,
      "Time_End": 2036.98,
      "Text": " itself is a keyboard like an HID keyboard and a USB internet device. With the HID keyboard,"
    },
    {
      "Time_Start": 2039.9,
      "Time_End": 2044.44,
      "Text": " your attacker code like just like with the rubber ducky, you control the key code. You can"
    },
    {
      "Time_Start": 2044.48,
      "Time_End": 2050.2000000000003,
      "Text": " instruct the machine to execute the binary like the proxy binary and the proxy binary is not"
    },
    {
      "Time_Start": 2050.2000000000003,
      "Time_End": 2053.94,
      "Text": " going to go out to the internet because you don't know if there is an internet or not on the"
    },
    {
      "Time_Start": 2053.94,
      "Time_End": 2059.2400000000002,
      "Text": " target machine. But what you know is that it has access to at least one network because you"
    },
    {
      "Time_Start": 2059.2400000000002,
      "Time_End": 2064.48,
      "Text": " provided this network to it via the Raspberry Pi. And then this proxy machine can connect"
    },
    {
      "Time_Start": 2064.48,
      "Time_End": 2070.16,
      "Text": " back to the Raspberry Pi and then whatever application is running inside of this Raspberry"
    },
    {
      "Time_Start": 2070.16,
      "Time_End": 2076.16,
      "Text": " Pi can immediately leverage the user authentication context of the target machine. So"
    },
    {
      "Time_Start": 2077.8399999999997,
      "Time_End": 2083.8399999999997,
      "Text": " basically like with some clever engineering, with this technique, you can do like upon all"
    },
    {
      "Time_Start": 2086.12,
      "Time_End": 2092.46,
      "Text": " Raspberry Pi that works on air gap networks as well. The target doesn't need to have any type"
    },
    {
      "Time_Start": 2092.46,
      "Time_End": 2098.46,
      "Text": " of access to the internet. So, demo. I'm going to show you how it works. I'm going to show you"
    },
    {
      "Time_Start": 2100.16,
      "Time_End": 2106.16,
      "Text": " how it works. Okay. This is the victim's machine. The victim's machine is currently just"
    },
    {
      "Time_Start": 2106.16,
      "Time_End": 2112.16,
      "Text": " like a, okay. The victim's machine is basically just a standard Windows 10 machine and"
    },
    {
      "Time_Start": 2136.8799999999997,
      "Time_End": 2142.0,
      "Text": " I have plugged in this device. Like you will have to believe me, I wanted to do it on the"
    },
    {
      "Time_Start": 2142.0,
      "Time_End": 2148.96,
      "Text": " stage but they told me that it's probably better to have video of everything. So, what are we"
    },
    {
      "Time_Start": 2148.96,
      "Time_End": 2155.62,
      "Text": " going to see now is that we have to wait until it boots and then virtual keyboard immediately"
    },
    {
      "Time_Start": 2155.62,
      "Time_End": 2161.62,
      "Text": " starts executing the code. The actual like reverse proxy binary is served via HTTP from"
    },
    {
      "Time_Start": 2162.42,
      "Time_End": 2168.42,
      "Text": " HTTP server of the Raspberry device as well. At this point what you would see is that the"
    },
    {
      "Time_Start": 2171.92,
      "Time_End": 2177.7999999999997,
      "Text": " proxy is executed and you will see two host names and port addresses. Those two host names"
    },
    {
      "Time_Start": 2177.7999999999997,
      "Time_End": 2183.7999999999997,
      "Text": " are the active directory server and over the LDAP port. It's too small. I'll be able to make"
    },
    {
      "Time_Start": 2184.02,
      "Time_End": 2190.02,
      "Text": " it bigger but no. Yeah. But this is not the point. The point comes afterwards. So, what we"
    },
    {
      "Time_Start": 2198.6800000000003,
      "Time_End": 2204.6400000000003,
      "Text": " can do is a bit of clever engineering. We can open the browser. Now, usually this is not"
    },
    {
      "Time_Start": 2204.6400000000003,
      "Time_End": 2208.8,
      "Text": " what you would do on the target machine. This is what you would do somewhere else. Where is"
    },
    {
      "Time_Start": 2208.8,
      "Time_End": 2214.48,
      "Text": " this somewhere else? Since I explained that the Raspberry Pi has a Wi-Fi like access point,"
    },
    {
      "Time_Start": 2214.48,
      "Time_End": 2220.48,
      "Text": " this service that I'm going to open. Oops. What happened? Oh, yeah. So, this service is"
    },
    {
      "Time_Start": 2223.6400000000003,
      "Time_End": 2229.6400000000003,
      "Text": " actually my Octopon project. I was explaining Octopon on area 41 like DEF CON Switzerland a"
    },
    {
      "Time_Start": 2231.76,
      "Time_End": 2237.76,
      "Text": " year ago. And this Octopon integrates this attack technique into it. So, I'm going to show"
    },
    {
      "Time_Start": 2238.8,
      "Time_End": 2244.2200000000003,
      "Text": " you the attack technique itself. So, what we are seeing here is that basically we already"
    },
    {
      "Time_Start": 2244.2200000000003,
      "Time_End": 2250.2200000000003,
      "Text": " have a lot of information available to us via the tool because between the time that the proxy"
    },
    {
      "Time_Start": 2253.52,
      "Time_End": 2260.02,
      "Text": " connected back to Octopon's like handler server and the time that I opened this, the automation"
    },
    {
      "Time_Start": 2260.02,
      "Time_End": 2266.02,
      "Text": " immediately started enumerating the domain. So, what we are seeing here is like there is"
    },
    {
      "Time_Start": 2266.44,
      "Time_End": 2272.44,
      "Text": " some SMB browser as well. So, like the SMB connection is working. There is no and there has"
    },
    {
      "Time_Start": 2274.94,
      "Time_End": 2280.94,
      "Text": " been absolutely no prior like user secret configured on this device. And we are going to"
    },
    {
      "Time_Start": 2282.52,
      "Time_End": 2288.52,
      "Text": " perform a Kerberos thing soon. So, we have this is the this part is the handler of the agent"
    },
    {
      "Time_Start": 2289.52,
      "Time_End": 2295.52,
      "Text": " like the reverse proxy agent. And currently like Kerberos thing is set as a separate entity."
    },
    {
      "Time_Start": 2301.06,
      "Time_End": 2307.06,
      "Text": " So, I'm going to basically instruct the Kerberos logic to use the you already created session"
    },
    {
      "Time_Start": 2308.94,
      "Time_End": 2314.94,
      "Text": " that has been created by the proxy authentication to the target domain via the proxy library."
    },
    {
      "Time_Start": 2315.64,
      "Time_End": 2321.64,
      "Text": " It will basically allow me to perform Kerberos thing on the target machine and then basically"
    },
    {
      "Time_Start": 2325.1,
      "Time_End": 2331.1,
      "Text": " like we have all the Kerberos tickets that we can send to hashcat to crack. And okay."
    },
    {
      "Time_Start": 2337.06,
      "Time_End": 2343.06,
      "Text": " Tickets. Speed up a little. Who made this video? Okay. Yeah. And what is the"
    },
    {
      "Time_Start": 2345.26,
      "Time_End": 2351.6,
      "Text": " happening here on this session while we were Kerberos thing? It also started the domain"
    },
    {
      "Time_Start": 2351.6,
      "Time_End": 2357.6,
      "Text": " enumeration over LDAP and SMB which is basically not bloodhound but bloodhound. So, like I"
    },
    {
      "Time_Start": 2359.18,
      "Time_End": 2364.48,
      "Text": " basically I rewrote bloodhound in Python from scratch just for this. So, what we are going"
    },
    {
      "Time_Start": 2364.48,
      "Time_End": 2370.48,
      "Text": " to see here is that there's going to be a cut. And after the enumeration has finished, we"
    },
    {
      "Time_Start": 2370.9,
      "Time_End": 2376.9,
      "Text": " just like I'm listing here just like all the IP addresses and ports that the tool is"
    },
    {
      "Time_Start": 2379.06,
      "Time_End": 2385.26,
      "Text": " being that the tool is connecting to right now. And yeah. We did the SMB enumeration since"
    },
    {
      "Time_Start": 2385.26,
      "Time_End": 2391.26,
      "Text": " it's a virtual domain. There is not many there aren't many SMB hosts. And this is the"
    },
    {
      "Time_Start": 2392.9,
      "Time_End": 2398.7400000000002,
      "Text": " representation layer of the tool like my bloodhound implementation. It's called"
    },
    {
      "Time_Start": 2398.7400000000002,
      "Time_End": 2403.86,
      "Text": " projecto. And we can see that it's already like loading in the database that was"
    },
    {
      "Time_Start": 2403.86,
      "Time_End": 2409.28,
      "Text": " generated from the other session. And soon if it's loaded, what we are going to end up"
    },
    {
      "Time_Start": 2409.28,
      "Time_End": 2415.28,
      "Text": " with is a canvas. Hopefully. Any second now. Yes. Canvas. And then here are all the paths"
    },
    {
      "Time_Start": 2419.6600000000003,
      "Time_End": 2425.6600000000003,
      "Text": " to the domain administrator. After. Yes. Here you go. And this is fully automated."
    },
    {
      "Time_Start": 2428.7400000000002,
      "Time_End": 2434.7400000000002,
      "Text": " Thank you. And yeah. I have some other slides as well. But this is basically the gist of"
    },
    {
      "Time_Start": 2444.48,
      "Time_End": 2450.48,
      "Text": " it. And I hope you have sorry. I hope you have some questions. So, I think we can oh, no."
    },
    {
      "Time_Start": 2450.72,
      "Time_End": 2456.72,
      "Text": " Sorry. Really quickly I would like to do some shout outs. Hopefully the persons are inside"
    },
    {
      "Time_Start": 2459.72,
      "Time_End": 2464.94,
      "Text": " of this room. So, there is future research to be done with this one. Because I don't want"
    },
    {
      "Time_Start": 2464.94,
      "Time_End": 2471.6,
      "Text": " you people to be forced using my tools. Everything by the way except for the Octopon part"
    },
    {
      "Time_Start": 2471.6,
      "Time_End": 2476.72,
      "Text": " everything is going to be open source. It is actually already open source. I published it"
    },
    {
      "Time_Start": 2476.7200000000003,
      "Time_End": 2482.7200000000003,
      "Text": " yesterday. No, today. Afternoon. And the future of this research would be the to have"
    },
    {
      "Time_Start": 2488.5000000000005,
      "Time_End": 2494.96,
      "Text": " basically like all of those tools leveraging this type of technique which can be done. And"
    },
    {
      "Time_Start": 2494.96,
      "Time_End": 2501.1400000000003,
      "Text": " there was a gentleman hopefully he's here called Ethical Chaos. And a few years ago he"
    },
    {
      "Time_Start": 2501.14,
      "Time_End": 2507.14,
      "Text": " created a tool. And this tool is basically allows like it hooks every single like"
    },
    {
      "Time_Start": 2509.68,
      "Time_End": 2514.64,
      "Text": " processes on your like attacker machine. And overtakes the SSPI calls. Or like not just the"
    },
    {
      "Time_Start": 2514.64,
      "Time_End": 2521.14,
      "Text": " SSPI calls but like it could use to be overtaking the SSPI calls as well. This is some"
    },
    {
      "Time_Start": 2521.14,
      "Time_End": 2527.2999999999997,
      "Text": " modification needed. And it could be integrated like it could be used with this technique"
    },
    {
      "Time_Start": 2527.3,
      "Time_End": 2533.6000000000004,
      "Text": " that would allow basically like every already existing Windows process on your attacker"
    },
    {
      "Time_Start": 2533.6000000000004,
      "Time_End": 2539.7200000000003,
      "Text": " Windows machines, your PowerShell scripts, your SQL browser, whatever. To leverage this"
    },
    {
      "Time_Start": 2539.7200000000003,
      "Time_End": 2545.2200000000003,
      "Text": " technique. So, you don't have to deploy these scripts on the remote end. And it would be"
    },
    {
      "Time_Start": 2545.2200000000003,
      "Time_End": 2551.54,
      "Text": " really nice to do. However, I have my own platform. So, thank you very much. I already put"
    },
    {
      "Time_Start": 2551.58,
      "Time_End": 2557.58,
      "Text": " like a lot of time into this one. But if somebody would like to do it, then yes. Go for it."
    },
    {
      "Time_Start": 2560.38,
      "Time_End": 2566.42,
      "Text": " Just hit me up. I can help if you need. The other shout out is that the other future"
    },
    {
      "Time_Start": 2566.42,
      "Time_End": 2572.0,
      "Text": " research that can be done is that there are a handful of other API calls that can be added"
    },
    {
      "Time_Start": 2572.0,
      "Time_End": 2578.0,
      "Text": " here to support PQ and other like Windows Hello like certificate based services to basically"
    },
    {
      "Time_Start": 2579.0,
      "Time_End": 2585.0,
      "Text": " use the exact same type of like authentication proxying. Which might be interesting."
    },
    {
      "Time_Start": 2588.34,
      "Time_End": 2594.88,
      "Text": " Interesting, I am going to work on this part definitely. Because I know at least one person"
    },
    {
      "Time_Start": 2594.88,
      "Time_End": 2601.84,
      "Text": " who might be really interested in this. And yes. So, thank you for everybody who is on"
    },
    {
      "Time_Start": 2601.84,
      "Time_End": 2607.84,
      "Text": " these slides. Your research has helped me tremendously. And also here are the links with"
    },
    {
      "Time_Start": 2609.56,
      "Time_End": 2615.56,
      "Text": " all the like open source tools that you have seen here on this talk. The WS net dash dot net"
    },
    {
      "Time_Start": 2616.88,
      "Time_End": 2622.88,
      "Text": " is the actual proxy that has been used here. And QA time. If you have time."
    },
    {
      "Time_Start": 2631.84,
      "Time_End": 2637.84,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2639.88,
      "Time_End": 2645.88,
      "Text": " There is a gentleman next to the camera. That I for sure see."
    },
    {
      "Time_Start": 2651.1000000000004,
      "Time_End": 2657.26,
      "Text": " Well, I mean like currently no. Because it is like, I don't know the English name for it."
    },
    {
      "Time_Start": 2657.3,
      "Time_End": 2663.3,
      "Text": " But like what this process does is similar to any other process that would use SSPI would be"
    },
    {
      "Time_Start": 2666.0200000000004,
      "Time_End": 2672.0200000000004,
      "Text": " doing. So, like there is no like nefarious running around here. Also like it's a fresh tool."
    },
    {
      "Time_Start": 2674.2200000000003,
      "Time_End": 2680.2200000000003,
      "Text": " So, you know, like maybe in two hours it will be detected. I wouldn't know."
    },
    {
      "Time_Start": 2680.4800000000005,
      "Time_End": 2686.4800000000005,
      "Text": " But I already implemented it in Rust and NIM. But I'm not going to provide that part."
    },
    {
      "Time_Start": 2690.1800000000003,
      "Time_End": 2696.1800000000003,
      "Text": " So, any other questions? No? Thank you very much."
    }
  ]
}