{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 5.0,
      "Text": "This text was transcribed using whisper model: large-v2\n\n Hello everyone. Uh thank you very much for having me. Um yes today we're gonna be talking"
    },
    {
      "Time_Start": 7.78,
      "Time_End": 12.280000000000001,
      "Text": " about physical attacks against smartphones. Um so the crux of this talk is that I was seeing a"
    },
    {
      "Time_Start": 12.280000000000001,
      "Time_End": 16.42,
      "Text": " huge number of different conference talks about um extremely complex attacks against"
    },
    {
      "Time_Start": 16.42,
      "Time_End": 20.06,
      "Text": " smartphones due to the high measures of security that are placed on them from the boot level"
    },
    {
      "Time_Start": 20.06,
      "Time_End": 24.16,
      "Text": " all the way up to the high level OS. Um and despite this there are still times when very"
    },
    {
      "Time_Start": 24.16,
      "Time_End": 27.66,
      "Text": " simple techniques can be used to bypass the security on smartphones and escalate"
    },
    {
      "Time_Start": 27.66,
      "Time_End": 32.1,
      "Text": " privileges or get unauthorized access in ways that you would consider very simple in a"
    },
    {
      "Time_Start": 32.1,
      "Time_End": 36.36,
      "Text": " general sense. Um so we're gonna be doing two 20 minute case studies for this. The first one"
    },
    {
      "Time_Start": 36.36,
      "Time_End": 40.7,
      "Text": " is gonna be gaining root access on a smartphone with no bootloader unlocking capability. This"
    },
    {
      "Time_Start": 40.7,
      "Time_End": 43.5,
      "Text": " is where the manufacturer removes the ability to unlock the bootloader and root it by"
    },
    {
      "Time_Start": 43.5,
      "Time_End": 47.14,
      "Text": " itself. And the second is gonna be gaining code execution in the bootloader of a Samsung"
    },
    {
      "Time_Start": 47.14,
      "Time_End": 51.480000000000004,
      "Text": " smartphone um in order to bypass secure boot and execute your own kernel and do other"
    },
    {
      "Time_Start": 51.480000000000004,
      "Time_End": 56.86,
      "Text": " malicious things. So um case study one, rooting on a locked bootloader. Essentially I'd"
    },
    {
      "Time_Start": 56.86,
      "Time_End": 60.76,
      "Text": " bought a brand new phone and wanted to root my old one so I could use it for app tech"
    },
    {
      "Time_Start": 60.76,
      "Time_End": 65.5,
      "Text": " testing and that sort of thing, install my own certificates, add a reader, etc. However on"
    },
    {
      "Time_Start": 65.5,
      "Time_End": 68.66,
      "Text": " this particular device the manufacturer had gone into the code of the bootloader and"
    },
    {
      "Time_Start": 68.66,
      "Time_End": 73.38,
      "Text": " removed the checks to allow you to um access the USB interface. This meant that I would"
    },
    {
      "Time_Start": 73.38,
      "Time_End": 78.28,
      "Text": " never be able to um get into the fastboot um mode and unlock the bootloader, add root"
    },
    {
      "Time_Start": 78.28,
      "Time_End": 82.84,
      "Text": " access and that sort of thing. Um OEMs very rarely do this and they usually just add"
    },
    {
      "Time_Start": 82.86,
      "Time_End": 86.8,
      "Text": " restrictions onto the bootloader that requires them to um you to uh sign up with their"
    },
    {
      "Time_Start": 86.8,
      "Time_End": 92.64,
      "Text": " services in order to do this properly. Um the target device was a smartphone from a Chinese"
    },
    {
      "Time_Start": 92.64,
      "Time_End": 97.38000000000001,
      "Text": " OEM released in 2019 that used an OEM developed fork of Android which had its own security"
    },
    {
      "Time_Start": 97.38000000000001,
      "Time_End": 101.72,
      "Text": " features and other um tweaks to it that were gonna be the target of this uh particular"
    },
    {
      "Time_Start": 101.72,
      "Time_End": 106.82000000000001,
      "Text": " project. So while I say they didn't have bootloader unlocking capabilities in the"
    },
    {
      "Time_Start": 106.82000000000001,
      "Time_End": 109.86,
      "Text": " traditional sense, what it did have was a special engineering app that permitted"
    },
    {
      "Time_Start": 109.88,
      "Time_End": 114.68,
      "Text": " bootloader unlocking. This used a uh signature stored in a partition on the device um which"
    },
    {
      "Time_Start": 114.68,
      "Time_End": 118.18,
      "Text": " was inaccessible to standard users but could then be used by the special engineering app with"
    },
    {
      "Time_Start": 118.18,
      "Time_End": 122.06,
      "Text": " special permissions and written into it. And then when the device rebooted it would give"
    },
    {
      "Time_Start": 122.06,
      "Time_End": 126.0,
      "Text": " other engineering level access. It was not publicly available though there were some"
    },
    {
      "Time_Start": 126.0,
      "Time_End": 129.84,
      "Text": " leaks online and required an approved user account which was a long winded process I"
    },
    {
      "Time_Start": 129.84,
      "Time_End": 135.07999999999998,
      "Text": " didn't want to go through. Um so when bootloader unlocking isn't available it's obvious"
    },
    {
      "Time_Start": 135.07999999999998,
      "Time_End": 138.78,
      "Text": " that you're gonna need some kind of exploit in order to escalate privileges to root. Um and"
    },
    {
      "Time_Start": 138.8,
      "Time_End": 142.06,
      "Text": " with no direct access to the bootloader USB interface which is my standard approach for"
    },
    {
      "Time_Start": 142.06,
      "Time_End": 145.94,
      "Text": " attacking a device like this, a vulnerability was needed in the Android fork itself. I"
    },
    {
      "Time_Start": 145.94,
      "Time_End": 149.5,
      "Text": " didn't think I'd find anything in Android that would be um particularly actionable in this"
    },
    {
      "Time_Start": 149.5,
      "Time_End": 153.2,
      "Text": " sense and I thought the changes that it made to it would be probably the area where I'd find"
    },
    {
      "Time_Start": 153.2,
      "Time_End": 157.14,
      "Text": " the most critical vulnerabilities I could use. What I found was the Android fork"
    },
    {
      "Time_Start": 157.14,
      "Time_End": 161.38,
      "Text": " contained a high number of custom system and root level applications um which could be"
    },
    {
      "Time_Start": 161.38,
      "Time_End": 166.62,
      "Text": " potentially exploited in different ways. Um so the Android fork had a service running at"
    },
    {
      "Time_Start": 166.62,
      "Time_End": 170.86,
      "Text": " root as root at all times that was called by the system level applications um for the"
    },
    {
      "Time_Start": 170.86,
      "Time_End": 176.70000000000002,
      "Text": " facilitation of cloud upload and archiving of um app data. So we would take um all the"
    },
    {
      "Time_Start": 176.70000000000002,
      "Time_End": 181.64000000000001,
      "Text": " data from the uh users protected um application and cordoned off partitions and package it"
    },
    {
      "Time_Start": 181.64000000000001,
      "Time_End": 185.74,
      "Text": " all together and upload it to the cloud where it could be downloaded again if needed. Um brief"
    },
    {
      "Time_Start": 185.74,
      "Time_End": 189.28,
      "Text": " analysis of this binary found that it had a immediate command injection vulnerability where if"
    },
    {
      "Time_Start": 189.28,
      "Time_End": 192.66,
      "Text": " you had a file within the file system with back ticks in the name you could execute"
    },
    {
      "Time_Start": 192.66,
      "Time_End": 197.16,
      "Text": " commands within it. Um what would happen is you would upload this file and then download it"
    },
    {
      "Time_Start": 197.16,
      "Time_End": 200.8,
      "Text": " again and as it was restoring the file it would then execute whatever command was in the back"
    },
    {
      "Time_Start": 200.8,
      "Time_End": 205.74,
      "Text": " ticks. So very basic. Unfortunately for me Android also employs SE Linux which is an"
    },
    {
      "Time_Start": 205.74,
      "Time_End": 209.82,
      "Text": " extremely strong security measure to cordon off different components of the um operating"
    },
    {
      "Time_Start": 209.82,
      "Time_End": 214.12,
      "Text": " system even if they are all running as root. This meant that even though I had root access"
    },
    {
      "Time_Start": 214.12,
      "Time_End": 219.57999999999998,
      "Text": " superficially I only had access to the app data sections of the device rather than having"
    },
    {
      "Time_Start": 219.58,
      "Time_End": 225.04000000000002,
      "Text": " the access to um other components I wanted to modify. Um I found that pretty much every"
    },
    {
      "Time_Start": 225.04000000000002,
      "Time_End": 228.96,
      "Text": " instance of um a command injection I could find on the device had a similar issue so I'd have"
    },
    {
      "Time_Start": 228.96,
      "Time_End": 233.96,
      "Text": " to find another way of getting ex uh escalated privileges. Um most vulnerabilities that are"
    },
    {
      "Time_Start": 237.06,
      "Time_End": 242.14000000000001,
      "Text": " limited by SE Linux um uh context could probably be bypassed with a kernel exploit however a"
    },
    {
      "Time_Start": 242.14000000000001,
      "Time_End": 245.38000000000002,
      "Text": " kernel exploit is a very complex thing to do and not something you want to be doing for a very"
    },
    {
      "Time_Start": 245.38000000000002,
      "Time_End": 249.4,
      "Text": " basic simple project you're just doing in your spare time. Um and as the boot loader was"
    },
    {
      "Time_Start": 249.4,
      "Time_End": 255.0,
      "Text": " locked down and the exploits OS exploits were out of the question I decided to go for my next"
    },
    {
      "Time_Start": 255.0,
      "Time_End": 260.64,
      "Text": " best option which would be recovery mode on the device. So recovery mode on an Android"
    },
    {
      "Time_Start": 260.64,
      "Time_End": 264.54,
      "Text": " device is traditionally is a very very simple menu which you use the volume buttons and the"
    },
    {
      "Time_Start": 264.54,
      "Time_End": 268.32,
      "Text": " power button in order to navigate through it. I found that on this Android fork they'd"
    },
    {
      "Time_Start": 268.32,
      "Time_End": 272.62,
      "Text": " actually updated this to include wifi access, access to more parts of external storage and a"
    },
    {
      "Time_Start": 272.62,
      "Time_End": 276.12,
      "Text": " few other options as well as having the touch screen enabled which I found was due to the"
    },
    {
      "Time_Start": 276.14,
      "Time_End": 279.72,
      "Text": " fact that they'd taken their Android kernel and dumped it into recovery partition meaning"
    },
    {
      "Time_Start": 279.72,
      "Time_End": 283.02,
      "Text": " that if I'd gain access to it I'd have access to all the same hardware components the"
    },
    {
      "Time_Start": 283.02,
      "Time_End": 288.02,
      "Text": " traditional Android operating system was. So I wanted to find an update image um for the um uh"
    },
    {
      "Time_Start": 290.66,
      "Time_End": 294.66,
      "Text": " entire operating system of the device so that I could extract recovery and then find a"
    },
    {
      "Time_Start": 294.66,
      "Time_End": 299.8,
      "Text": " simple vulnerability. Unfortunately downloading the updated um the update files for this"
    },
    {
      "Time_Start": 299.8,
      "Time_End": 304.38,
      "Text": " device found that they never updated the recovery um partition meaning that I couldn't"
    },
    {
      "Time_Start": 304.4,
      "Time_End": 310.28,
      "Text": " find it within the operating system. That meant that um I would have to work out any"
    },
    {
      "Time_Start": 310.28,
      "Time_End": 316.04,
      "Text": " vulnerabilities blind and just guess and just try things until something worked. Um so yeah"
    },
    {
      "Time_Start": 316.04,
      "Time_End": 320.32,
      "Text": " with no recovery image to reverse engineer I just tried very basic attacks to begin with. Um as"
    },
    {
      "Time_Start": 320.32,
      "Time_End": 324.56,
      "Text": " the menu option included uh the option to load in these encrypted zip files the OT update"
    },
    {
      "Time_Start": 324.56,
      "Time_End": 330.46,
      "Text": " images I decided to attempt those first. So as I found a command injection vulnerability in"
    },
    {
      "Time_Start": 330.46,
      "Time_End": 333.5,
      "Text": " the high level operating system I thought I would probably find one in the recovery"
    },
    {
      "Time_Start": 333.52,
      "Time_End": 338.46,
      "Text": " image as well. So I took a legitimate encrypted update file for the device and renamed it to"
    },
    {
      "Time_Start": 338.46,
      "Time_End": 343.9,
      "Text": " contain backticks and sleep 30,000. What would happen is if I had successfully executed this"
    },
    {
      "Time_Start": 343.9,
      "Time_End": 347.86,
      "Text": " command the phone would be spending a few hours trying to update itself with never"
    },
    {
      "Time_Start": 347.86,
      "Time_End": 352.8,
      "Text": " succeeding. Um yes and this did incl- did cause the update process to hang demonstrating that"
    },
    {
      "Time_Start": 352.8,
      "Time_End": 357.74,
      "Text": " I'd found yet another command injection vulnerability in the device. Um I disclosed all"
    },
    {
      "Time_Start": 357.74,
      "Time_End": 361.48,
      "Text": " the command injection vulnerabilities I'd found to the OEM who very very swiftly"
    },
    {
      "Time_Start": 361.5,
      "Time_End": 366.16,
      "Text": " remediated them and updated new versions of the software. Um but as the recovery mode"
    },
    {
      "Time_Start": 366.16,
      "Time_End": 370.70000000000005,
      "Text": " command injection was very likely to be running as root and have no restrictions on it this"
    },
    {
      "Time_Start": 370.70000000000005,
      "Time_End": 376.44,
      "Text": " would be a good basis for me to then gain further root access to Android. So I started with"
    },
    {
      "Time_Start": 376.44,
      "Time_End": 380.04,
      "Text": " root cause analysis just so I could get out of the way and found that it was a shalwansum"
    },
    {
      "Time_Start": 380.04,
      "Time_End": 384.88,
      "Text": " check um for some logging that was checking um data on the uh uh the shalwansum of the"
    },
    {
      "Time_Start": 384.88,
      "Time_End": 388.48,
      "Text": " update file. Um which was then just uh executing the backticks because they didn't"
    },
    {
      "Time_Start": 388.48,
      "Time_End": 394.46000000000004,
      "Text": " sprint F into an exec command so very basic. Um as there was a command injection"
    },
    {
      "Time_Start": 394.46000000000004,
      "Time_End": 398.3,
      "Text": " vulnerability in the file name um this could probably be used to update a more complex"
    },
    {
      "Time_Start": 398.3,
      "Time_End": 403.8,
      "Text": " script. So if I wrote a more complex script a base 64 encoded it and piped it into a system"
    },
    {
      "Time_Start": 403.8,
      "Time_End": 407.98,
      "Text": " bin SH um a shared shell script could then be loaded so it's more complex from the file"
    },
    {
      "Time_Start": 407.98,
      "Time_End": 411.74,
      "Text": " system and executed. So this um script here literally just cats from the user data"
    },
    {
      "Time_Start": 411.74,
      "Time_End": 417.18,
      "Text": " partition a much more complex script that can be used. Unfortunately the file system"
    },
    {
      "Time_Start": 417.18,
      "Time_End": 420.46,
      "Text": " that used by Android's user data does not support all special characters for instance the"
    },
    {
      "Time_Start": 420.46,
      "Time_End": 425.52,
      "Text": " pipe character I would need to perform this exploit. So I would have to find a way around"
    },
    {
      "Time_Start": 425.52,
      "Time_End": 430.40000000000003,
      "Text": " this. Luckily I found that they had modified the um recovery image to also support EXT4"
    },
    {
      "Time_Start": 430.40000000000003,
      "Time_End": 435.3,
      "Text": " file systems which is rare on Android and usually when you put an EXT4 um SD card into an"
    },
    {
      "Time_Start": 435.3,
      "Time_End": 440.78000000000003,
      "Text": " Android device it says unsupported um file system and then tries to format it. Um luckily"
    },
    {
      "Time_Start": 440.78000000000003,
      "Time_End": 444.04,
      "Text": " for me it didn't do that so I could just load my lot more complex update file onto that and"
    },
    {
      "Time_Start": 444.04,
      "Time_End": 449.48,
      "Text": " execute it. So I wanted to get a more concrete shell on the device so I would have a look"
    },
    {
      "Time_Start": 449.48,
      "Time_End": 456.12,
      "Text": " around um and also work out what was going on in a more uh accessible manner. Um so what I"
    },
    {
      "Time_Start": 456.12,
      "Time_End": 460.26,
      "Text": " did was I run the IT command and run it into the user part data partition so that if I wanted"
    },
    {
      "Time_Start": 460.26,
      "Time_End": 464.56,
      "Text": " to um reboot the phone I would then find it was running ID root or ID system or whatever was"
    },
    {
      "Time_Start": 464.56,
      "Time_End": 469.36,
      "Text": " going on. I also wanted to see if I could disable SC Linux to bypass all of the um context"
    },
    {
      "Time_Start": 469.36,
      "Time_End": 472.90000000000003,
      "Text": " that were there and found that that also worked. And then I also wanted to enable ADB on the"
    },
    {
      "Time_Start": 472.90000000000003,
      "Time_End": 477.90000000000003,
      "Text": " device so I had a root shell into recovery which also worked quite well. Um so root access"
    },
    {
      "Time_Start": 480.34000000000003,
      "Time_End": 486.38000000000005,
      "Text": " and recovery mode is great but you've then got a phone that's in a very uh not very fairly"
    },
    {
      "Time_Start": 486.38000000000005,
      "Time_End": 491.38000000000005,
      "Text": " fleshed out mode. I can't access any apps from there, I can't um modify my files in any real"
    },
    {
      "Time_Start": 491.38000000000005,
      "Time_End": 495.96000000000004,
      "Text": " way and I can't usually access the internet, Bluetooth or anything like that. Um what I"
    },
    {
      "Time_Start": 495.96000000000004,
      "Time_End": 501.52000000000004,
      "Text": " wanted to do was find a way to switch from recovery to Android without ever having to reboot"
    },
    {
      "Time_Start": 501.54,
      "Time_End": 505.18000000000006,
      "Text": " the device and go to the boot loader. Cause as soon as I do that I would lose my um shell on"
    },
    {
      "Time_Start": 505.18000000000006,
      "Time_End": 510.26000000000005,
      "Text": " the device because there was no persistence in an attack like this. My first pull of call was"
    },
    {
      "Time_Start": 510.26000000000005,
      "Time_End": 515.5600000000001,
      "Text": " to try to use Kexec. Now Kexec is a um kernel um component which allows you to load a new"
    },
    {
      "Time_Start": 515.5600000000001,
      "Time_End": 520.5,
      "Text": " Linux kernel onto a Linux uh uh device and then execute that. Essentially switching from"
    },
    {
      "Time_Start": 520.5,
      "Time_End": 524.4000000000001,
      "Text": " one Linux kernel to another. Um if I could do that that would be a very quick way for me to"
    },
    {
      "Time_Start": 524.4000000000001,
      "Time_End": 528.6,
      "Text": " switch to the Android kernel and everything else. But unfortunately even compiling the"
    },
    {
      "Time_Start": 528.62,
      "Time_End": 534.36,
      "Text": " module from scratch was blocked because it was using some um deny listed uh uh module"
    },
    {
      "Time_Start": 534.36,
      "Time_End": 538.0600000000001,
      "Text": " components. So I just tried to do something, decided to try to do something that was in the"
    },
    {
      "Time_Start": 538.0600000000001,
      "Time_End": 543.5,
      "Text": " user space rather than in the kernel itself. Luckily there was ptrace. Now ptrace is a"
    },
    {
      "Time_Start": 543.5,
      "Time_End": 548.48,
      "Text": " system called allowing one process to observe and control another for debugging purposes."
    },
    {
      "Time_Start": 548.48,
      "Time_End": 554.22,
      "Text": " Um so typically this is for things like um logging and tracking and debugging on things that"
    },
    {
      "Time_Start": 554.24,
      "Time_End": 558.0400000000001,
      "Text": " are running on the operating system and doing things like you know the strace command within"
    },
    {
      "Time_Start": 558.0400000000001,
      "Time_End": 563.0400000000001,
      "Text": " Linux. Um it can even um modify memory that is um write denied um in the standard processes."
    },
    {
      "Time_Start": 565.28,
      "Time_End": 568.5600000000001,
      "Text": " Um which means you can modify running code even if they're not meant to be able to do that in"
    },
    {
      "Time_Start": 568.5600000000001,
      "Time_End": 572.52,
      "Text": " the particular um elf that you're working with. What I wanted to do was use ptrace to"
    },
    {
      "Time_Start": 572.52,
      "Time_End": 577.52,
      "Text": " essentially latch onto the init process and restart that but in the Android context. So"
    },
    {
      "Time_Start": 577.74,
      "Time_End": 584.74,
      "Text": " init is um always process ID one um which uh means that it has some special privileges within"
    },
    {
      "Time_Start": 584.74,
      "Time_End": 589.98,
      "Text": " Linux and also it has a lot of control over the rest of the system. Um what I wanted to do was"
    },
    {
      "Time_Start": 589.98,
      "Time_End": 595.48,
      "Text": " use the execv key command which um executes a command within one process but uses the same"
    },
    {
      "Time_Start": 595.48,
      "Time_End": 601.02,
      "Text": " process ID to run more commands that would then get me to switch out init. Um luckily for me"
    },
    {
      "Time_Start": 601.02,
      "Time_End": 606.6,
      "Text": " if I did this I could um execute uh init but never have to return back to it. I could just keep"
    },
    {
      "Time_Start": 606.64,
      "Time_End": 611.22,
      "Text": " things going as one long process switching from one set of data to the other. Um and this"
    },
    {
      "Time_Start": 611.22,
      "Time_End": 614.9200000000001,
      "Text": " could be very trivially done with a bit of uh um assembly code so just moving in the"
    },
    {
      "Time_Start": 614.9200000000001,
      "Time_End": 621.12,
      "Text": " parameters and then ex- executing the service call. Um switch root is what's used during the"
    },
    {
      "Time_Start": 621.12,
      "Time_End": 626.0600000000001,
      "Text": " boot process usually to switch from the init ram fs so the um the ram disk which contains some"
    },
    {
      "Time_Start": 626.0600000000001,
      "Time_End": 631.6600000000001,
      "Text": " of the lower level stuff um for mounting the more complex file systems um into the new one."
    },
    {
      "Time_Start": 631.6600000000001,
      "Time_End": 636.08,
      "Text": " Uh it's a very common feature on Linux based devices and what I intended to do was switch"
    },
    {
      "Time_Start": 636.08,
      "Time_End": 641.4200000000001,
      "Text": " from one init ram fs to the Android init ram fs which would then load into the system"
    },
    {
      "Time_Start": 641.4200000000001,
      "Time_End": 648.2,
      "Text": " operating system. Uh this could be very easily done if I just uh mounted a new ram disk and"
    },
    {
      "Time_Start": 648.2,
      "Time_End": 652.1,
      "Text": " then loaded the data in and then hopefully I could then switch into it if I needed. So the"
    },
    {
      "Time_Start": 652.1,
      "Time_End": 656.14,
      "Text": " process for init usually looks like this on Android. You do have the init process that"
    },
    {
      "Time_Start": 656.14,
      "Time_End": 659.74,
      "Text": " starts as one then it sets up SE Linux and then it does init second stage which has all the"
    },
    {
      "Time_Start": 659.74,
      "Time_End": 663.2800000000001,
      "Text": " hardware setup and everything and that's where the process sits most of the time. And"
    },
    {
      "Time_Start": 663.28,
      "Time_End": 669.28,
      "Text": " essentially what I wanted to do was inject in a switch root command into init which would"
    },
    {
      "Time_Start": 669.28,
      "Time_End": 673.4599999999999,
      "Text": " then hot start the whole process again killing the old recovery process and introducing the"
    },
    {
      "Time_Start": 673.4599999999999,
      "Time_End": 680.36,
      "Text": " new one that was running Android. Um there are a few caveats with this however because um"
    },
    {
      "Time_Start": 680.36,
      "Time_End": 684.3,
      "Text": " no one's really intended to switch from one init ram fs to another and you're meant to reboot"
    },
    {
      "Time_Start": 684.3,
      "Time_End": 688.3,
      "Text": " to get into other systems like this. Um so a core component of switch root is the"
    },
    {
      "Time_Start": 688.3,
      "Time_End": 693.0,
      "Text": " remounting of mounted folders um however most of the mounted folders that occur in Android at"
    },
    {
      "Time_Start": 693.02,
      "Time_End": 697.56,
      "Text": " this point are shared. This means they're handled in slightly different ways um than how you"
    },
    {
      "Time_Start": 697.56,
      "Time_End": 701.3,
      "Text": " expect when it comes to things like moving the mounts to different places. However this"
    },
    {
      "Time_Start": 701.3,
      "Time_End": 704.14,
      "Text": " could be trivially resolved by just writing a small shell script that goes went through all"
    },
    {
      "Time_Start": 704.14,
      "Time_End": 707.9,
      "Text": " the mounts found out if they were shared and made them private instead and private means"
    },
    {
      "Time_Start": 707.9,
      "Time_End": 713.82,
      "Text": " they could be moved around wherever I wanted within the file system. Um also I found that"
    },
    {
      "Time_Start": 713.82,
      "Time_End": 718.72,
      "Text": " the init init binary was checking proc command line um within the file system for whether"
    },
    {
      "Time_Start": 718.74,
      "Time_End": 723.88,
      "Text": " the image required SC Linux to be enabled and if it did it and it found it was disabled it"
    },
    {
      "Time_Start": 723.88,
      "Time_End": 729.9200000000001,
      "Text": " would enable SC Linux um forcibly re-enabling it even though I disabled it. Um luckily for"
    },
    {
      "Time_Start": 729.9200000000001,
      "Time_End": 734.86,
      "Text": " me um ptrace allows you to override system calls so I modified the read system call whenever"
    },
    {
      "Time_Start": 734.86,
      "Time_End": 739.76,
      "Text": " it touched the proc command line file to override the um check for enforcing SC Linux with"
    },
    {
      "Time_Start": 739.76,
      "Time_End": 744.3000000000001,
      "Text": " one that allowed it to be permissive which was nice and easy. Um I also found that this"
    },
    {
      "Time_Start": 744.3000000000001,
      "Time_End": 748.34,
      "Text": " caused a lot of kernel panics because init also does all the system hardware services set"
    },
    {
      "Time_Start": 748.36,
      "Time_End": 753.6600000000001,
      "Text": " up. Um this includes things like setting up the Wi-Fi interface, Bluetooth, et cetera. Um but"
    },
    {
      "Time_Start": 753.6600000000001,
      "Time_End": 757.8000000000001,
      "Text": " the recovery um operator side of the thing things had already done this so doing this again"
    },
    {
      "Time_Start": 757.8000000000001,
      "Time_End": 762.58,
      "Text": " caused the kernel to not really know what to do. Um what I did was in the same way as I"
    },
    {
      "Time_Start": 762.58,
      "Time_End": 765.64,
      "Text": " did with proc command line just make it return empty files whenever it tried to access"
    },
    {
      "Time_Start": 765.64,
      "Time_End": 769.48,
      "Text": " these dot RC files. I did this because then I wouldn't have to model modify them within the"
    },
    {
      "Time_Start": 769.48,
      "Time_End": 775.4200000000001,
      "Text": " file system which would cause the device to not be able to work in a non-routed manner. Um I"
    },
    {
      "Time_Start": 775.44,
      "Time_End": 778.34,
      "Text": " also found that when I tried to unlock my phone after getting through this entire"
    },
    {
      "Time_Start": 778.34,
      "Time_End": 782.7400000000001,
      "Text": " process and getting it to boot that I could no longer use my pin because all of the"
    },
    {
      "Time_Start": 782.7400000000001,
      "Time_End": 786.58,
      "Text": " security services were still running in the recovery context. Luckily for me I could just"
    },
    {
      "Time_Start": 786.58,
      "Time_End": 790.1800000000001,
      "Text": " kill all these processes and let init restart them again right as I was starting this whole"
    },
    {
      "Time_Start": 790.1800000000001,
      "Time_End": 796.96,
      "Text": " process up. Um while this was pretty much a read only process and if I rerouted the device"
    },
    {
      "Time_Start": 796.96,
      "Time_End": 801.5200000000001,
      "Text": " I'd lose all of this um root access. What I could do was still mod um override some read"
    },
    {
      "Time_Start": 801.56,
      "Time_End": 806.9,
      "Text": " only files so the system partition which cause um stores a lot of the system data um is a"
    },
    {
      "Time_Start": 806.9,
      "Time_End": 812.04,
      "Text": " read only file system and it uses uh DM Verity to make sure it's got um appropriate um uh"
    },
    {
      "Time_Start": 812.04,
      "Time_End": 816.88,
      "Text": " signatures working throughout the file system. However if you use the mount dash dash bind"
    },
    {
      "Time_Start": 816.88,
      "Time_End": 821.92,
      "Text": " command you can over uh override the files there temporarily with your own meaning that if I"
    },
    {
      "Time_Start": 821.92,
      "Time_End": 825.98,
      "Text": " wanted to modify for instance the frameworks which had root detection in and things like"
    },
    {
      "Time_Start": 825.98,
      "Time_End": 829.86,
      "Text": " that I just need to do that and temporarily and it would work without damaging the device in"
    },
    {
      "Time_Start": 829.86,
      "Time_End": 834.84,
      "Text": " any way. Um so we're going to do a quick demo of this boot process now before we move on to"
    },
    {
      "Time_Start": 834.84,
      "Time_End": 839.84,
      "Text": " the next one. Uh so hopefully this won't go to the next one. So brilliant, sorry guys. Um as"
    },
    {
      "Time_Start": 847.24,
      "Time_End": 851.92,
      "Text": " you can see I've just um pressed my little um commander and now it's now running through"
    },
    {
      "Time_Start": 851.92,
      "Time_End": 856.8000000000001,
      "Text": " the init process. It then kills recovery um which was running the screen at that point and"
    },
    {
      "Time_Start": 856.8000000000001,
      "Time_End": 862.2,
      "Text": " starts the Android process booting up. So then starting full Android operating system and"
    },
    {
      "Time_Start": 862.2,
      "Time_End": 865.6400000000001,
      "Text": " give me root access. I also found the terminal off the phone when I started this I need to"
    },
    {
      "Time_Start": 865.6400000000001,
      "Time_End": 870.6400000000001,
      "Text": " reboot it or reboot the screen otherwise I couldn't use the touch screen. And then yeah"
    },
    {
      "Time_Start": 873.72,
      "Time_End": 878.72,
      "Text": " I have a telnet root backdoor into the device. Um. Oh. Thank you."
    },
    {
      "Time_Start": 879.48,
      "Time_End": 884.48,
      "Text": " So I observed something quite interesting after this. I was quite happy to have root access but"
    },
    {
      "Time_Start": 890.82,
      "Time_End": 896.4,
      "Text": " I realized that during the debugging process I'd kept a busy box telnet server within the"
    },
    {
      "Time_Start": 896.4,
      "Time_End": 901.6,
      "Text": " recovery context of the device. Um and when I'd remounted the new init ram fs I'd found that"
    },
    {
      "Time_Start": 901.6,
      "Time_End": 905.8000000000001,
      "Text": " the old recovery one was still sitting in memory and accessible. So there was a telnet"
    },
    {
      "Time_Start": 905.82,
      "Time_End": 911.5600000000001,
      "Text": " service running in a file system that Android had no idea about. Um switch root had deleted"
    },
    {
      "Time_Start": 911.5600000000001,
      "Time_End": 915.0400000000001,
      "Text": " all the files within this file system because it was stored in ram but just using busy box I"
    },
    {
      "Time_Start": 915.0400000000001,
      "Time_End": 919.2,
      "Text": " could repopulate all the tools and it gave me this like secret little um section of the"
    },
    {
      "Time_Start": 919.2,
      "Time_End": 924.6400000000001,
      "Text": " device which Android didn't really have access to. Um because it was hidden from Android I"
    },
    {
      "Time_Start": 924.6400000000001,
      "Time_End": 927.8800000000001,
      "Text": " could do a lot of interesting things accessing the hardware and stuff. But I could also"
    },
    {
      "Time_Start": 927.8800000000001,
      "Time_End": 932.1800000000001,
      "Text": " access the rest of Android itself without Android knowing that I was there. So by cd'ing or"
    },
    {
      "Time_Start": 932.2,
      "Time_End": 936.1400000000001,
      "Text": " rooting into the directory proc one root which was the um root file system that the init"
    },
    {
      "Time_Start": 936.1400000000001,
      "Time_End": 940.8800000000001,
      "Text": " process is using. Recovery could access the Android root file system as root without Android"
    },
    {
      "Time_Start": 940.8800000000001,
      "Time_End": 945.7800000000001,
      "Text": " knowing about it which was fantastic. Um what I decided to do was expand this out however and"
    },
    {
      "Time_Start": 945.7800000000001,
      "Time_End": 949.58,
      "Text": " add a whole Debian root file system to the device giving me a lot of debugging and testing"
    },
    {
      "Time_Start": 949.58,
      "Time_End": 955.7600000000001,
      "Text": " tools I could also use to continue to compromise the device in further ways. Um so root in"
    },
    {
      "Time_Start": 955.7600000000001,
      "Time_End": 959.46,
      "Text": " conclusion root access by this method was very consistent. I left the thing running with the"
    },
    {
      "Time_Start": 959.48,
      "Time_End": 964.74,
      "Text": " init parasite ptrace tool attached to it for days at a time without any crashes it would just"
    },
    {
      "Time_Start": 964.74,
      "Time_End": 969.02,
      "Text": " keep running and running and running and no problem whatsoever. Um I also found that by just"
    },
    {
      "Time_Start": 969.02,
      "Time_End": 972.1600000000001,
      "Text": " by rebooting the device I had no effects and it could operate normally going back to a"
    },
    {
      "Time_Start": 972.1600000000001,
      "Time_End": 978.1,
      "Text": " standard non-rooted device with no awareness that I'd manipulated in this way. Um and I also"
    },
    {
      "Time_Start": 978.1,
      "Time_End": 983.2,
      "Text": " found that um the biggest benefit for this whole project was having ptrace there. So if"
    },
    {
      "Time_Start": 983.2,
      "Time_End": 987.88,
      "Text": " you're compiling a kernel do remove that if you need to. Now we move on to the second case"
    },
    {
      "Time_Start": 987.9,
      "Time_End": 990.96,
      "Text": " study which is a bit more technical and a bit more exciting because we're not going for a"
    },
    {
      "Time_Start": 990.96,
      "Time_End": 996.84,
      "Text": " device that I wanted to root for my own purposes but I just wanted to exploit in some way. So"
    },
    {
      "Time_Start": 996.84,
      "Time_End": 1001.18,
      "Text": " external space devices have had a significant amount of re- researched on them on this stage"
    },
    {
      "Time_Start": 1001.18,
      "Time_End": 1005.92,
      "Text": " and at Black Hat as well in previous years but they all focused on the download mode of the"
    },
    {
      "Time_Start": 1005.92,
      "Time_End": 1011.32,
      "Text": " bootloader so this is a high level protocol used by Samsung to um write and read files in"
    },
    {
      "Time_Start": 1011.32,
      "Time_End": 1015.76,
      "Text": " different ways and debug the device and unbrick it in many ways. Um because it all focused on"
    },
    {
      "Time_Start": 1015.78,
      "Time_End": 1020.48,
      "Text": " the high level download protocol I decided to start a project to try and access and try and"
    },
    {
      "Time_Start": 1020.48,
      "Time_End": 1024.8799999999999,
      "Text": " manipulate the low level USB stack that was in use to see if I could find a vulnerability that"
    },
    {
      "Time_Start": 1024.8799999999999,
      "Time_End": 1029.98,
      "Text": " was as actionable as what had already been found. For this I found the cheapest Samsung"
    },
    {
      "Time_Start": 1029.98,
      "Time_End": 1033.68,
      "Text": " device I could that was still of decent quality and modern which was a Samsung Galaxy A04S"
    },
    {
      "Time_Start": 1033.68,
      "Time_End": 1037.56,
      "Text": " which was actually quite a decent phone after I bought it. Um it was released in August"
    },
    {
      "Time_Start": 1037.56,
      "Time_End": 1043.2,
      "Text": " 2022 and used an Exynos 850 chipset and I knew that it would be quite an interesting target"
    },
    {
      "Time_Start": 1043.2,
      "Time_End": 1046.98,
      "Text": " because it had a lot of the security features like Knox in place that more expensive more"
    },
    {
      "Time_Start": 1046.98,
      "Time_End": 1052.88,
      "Text": " modern or more higher end Samsung devices do. So the secondary bootloader which is what I was"
    },
    {
      "Time_Start": 1052.88,
      "Time_End": 1056.56,
      "Text": " going for with this project is called Sboot in Samsung and it facilitates a few things. It"
    },
    {
      "Time_Start": 1056.56,
      "Time_End": 1060.6000000000001,
      "Text": " facilitates standard boot from the primary bootloader all the way up to Android. It"
    },
    {
      "Time_Start": 1060.6000000000001,
      "Time_End": 1064.6200000000001,
      "Text": " facilitates download mode which is the protocol we were just talking about. On my device it"
    },
    {
      "Time_Start": 1064.6200000000001,
      "Time_End": 1069.16,
      "Text": " also had fast boot mode which is the standard Android um administrations um bootloader"
    },
    {
      "Time_Start": 1069.16,
      "Time_End": 1073.5400000000002,
      "Text": " tool and upload mode which is what's usually found when you hit an unrecoverable error in"
    },
    {
      "Time_Start": 1073.5400000000002,
      "Time_End": 1079.48,
      "Text": " some way. All of this was encompassed in a single firmware binary called Sboot dot bin. Um"
    },
    {
      "Time_Start": 1079.48,
      "Time_End": 1084.38,
      "Text": " but because of this I thought all 3 USB protocols so download, fast boot and USB would"
    },
    {
      "Time_Start": 1084.38,
      "Time_End": 1088.24,
      "Text": " probably be using the core USB stack underneath which if I could find a vulnerability and I"
    },
    {
      "Time_Start": 1088.24,
      "Time_End": 1094.26,
      "Text": " would have broken all of those in one go. So when I'm talking about USB cores uh the core"
    },
    {
      "Time_Start": 1094.26,
      "Time_End": 1097.8600000000001,
      "Text": " USB stack I'm talking about USB control transfers. So control transfers are used to send"
    },
    {
      "Time_Start": 1097.8600000000001,
      "Time_End": 1101.16,
      "Text": " and receive like debugging information or not rather not debugging information,"
    },
    {
      "Time_Start": 1101.16,
      "Time_End": 1104.8600000000001,
      "Text": " configuration information about the device. Sometimes it's used for more complex things for"
    },
    {
      "Time_Start": 1104.8600000000001,
      "Time_End": 1108.7800000000002,
      "Text": " instance iPhones DFU modes also use control transfers but generally there's a very"
    },
    {
      "Time_Start": 1108.7800000000002,
      "Time_End": 1112.2800000000002,
      "Text": " standardized approach for these. And these standard parameters which are BM request type,"
    },
    {
      "Time_Start": 1112.2800000000002,
      "Time_End": 1117.2800000000002,
      "Text": " B request, W value, W index, buffer and buffer size. So what I really wanted to do was"
    },
    {
      "Time_Start": 1119.8200000000002,
      "Time_End": 1124.72,
      "Text": " just fuzz it and find a actual exploit just by running a very basic fuzzer. Now control"
    },
    {
      "Time_Start": 1124.76,
      "Time_End": 1129.42,
      "Text": " transfers are mostly extremely stateless. They uh do their own thing, you read and write"
    },
    {
      "Time_Start": 1129.42,
      "Time_End": 1133.6200000000001,
      "Text": " data and at a very high level there's just not much else you need to do. Um with this you"
    },
    {
      "Time_Start": 1133.6200000000001,
      "Time_End": 1137.5,
      "Text": " can just randomize all the parameters and send a randomized buffer size with randomized"
    },
    {
      "Time_Start": 1137.5,
      "Time_End": 1143.3,
      "Text": " data in it and see what happens. So as you can see there my very complex fuzzer you know"
    },
    {
      "Time_Start": 1143.3,
      "Time_End": 1149.08,
      "Text": " way better than uh you know AFL of ran ran ran ran ran for every parameter. Um and just as"
    },
    {
      "Time_Start": 1149.08,
      "Time_End": 1152.14,
      "Text": " you can see on the right when I was running this you can see the minus 9 errors which are"
    },
    {
      "Time_Start": 1152.14,
      "Time_End": 1155.7,
      "Text": " LIBUSB errors which is where the device has gone I don't know what the hell to do with this."
    },
    {
      "Time_Start": 1155.7,
      "Time_End": 1159.48,
      "Text": " All the ones without the minuses is where data has been transferred back and forth so very"
    },
    {
      "Time_Start": 1159.48,
      "Time_End": 1165.0800000000002,
      "Text": " simple to keep track of. However, during my initial fuzzing attempts I was sending purely"
    },
    {
      "Time_Start": 1165.0800000000002,
      "Time_End": 1169.0200000000002,
      "Text": " random data and it caused the device to reboot into a failure mode I rec- couldn't recover"
    },
    {
      "Time_Start": 1169.0200000000002,
      "Time_End": 1173.46,
      "Text": " from. Every time I tried to reboot it said the same thing, an error has been occurred updating"
    },
    {
      "Time_Start": 1173.46,
      "Time_End": 1178.3000000000002,
      "Text": " the device software and I thought I'd got now got a brick on my hands. Uh this occurred when"
    },
    {
      "Time_Start": 1178.3,
      "Time_End": 1182.96,
      "Text": " the OXF6 value was sent as the B request parameter which was very interesting cause I uh"
    },
    {
      "Time_Start": 1182.96,
      "Time_End": 1186.5,
      "Text": " didn't know why that would be cause it's not a standard command or anything like it. Um however"
    },
    {
      "Time_Start": 1186.5,
      "Time_End": 1192.6399999999999,
      "Text": " I found it was recoverable and um back to uh uh a working device by using the download mode"
    },
    {
      "Time_Start": 1192.6399999999999,
      "Time_End": 1196.3799999999999,
      "Text": " tool so I used the command line tool in Heimdall which is an open source tool for"
    },
    {
      "Time_Start": 1196.3799999999999,
      "Time_End": 1200.18,
      "Text": " manipulating download mode that's accessible on GitHub and as soon as I tried to do anything"
    },
    {
      "Time_Start": 1200.18,
      "Time_End": 1205.12,
      "Text": " with that tool the device decided it was working again so clearly it just didn't like my tool."
    },
    {
      "Time_Start": 1205.14,
      "Time_End": 1209.5400000000002,
      "Text": " So I kept fuzzing and fuzzing and fuzzing for about half an hour and found that the device"
    },
    {
      "Time_Start": 1209.5400000000002,
      "Time_End": 1213.68,
      "Text": " would crash and reboot after a certain set of transfers. Luckily I had a seed in this"
    },
    {
      "Time_Start": 1213.68,
      "Time_End": 1217.5800000000002,
      "Text": " fuzzing so I knew exactly what could be done and I could just run the whole on target fuzz"
    },
    {
      "Time_Start": 1217.5800000000002,
      "Time_End": 1221.3600000000001,
      "Text": " again and see what happened. And what I did was essentially remove transfers in the"
    },
    {
      "Time_Start": 1221.3600000000001,
      "Time_End": 1225.0600000000002,
      "Text": " sequence to see which ones were actually causing the crash in the first place so and"
    },
    {
      "Time_Start": 1225.0600000000002,
      "Time_End": 1231.1000000000001,
      "Text": " essentially got that down to 2 control transfers after after uh over about 10,000 which was"
    },
    {
      "Time_Start": 1231.1200000000001,
      "Time_End": 1236.4800000000002,
      "Text": " nice. So the first transfer was a malformed get descriptor request so in that instance it's"
    },
    {
      "Time_Start": 1236.4800000000002,
      "Time_End": 1241.16,
      "Text": " got get and it was sending data instead of receiving it and the second was a valid get"
    },
    {
      "Time_Start": 1241.16,
      "Time_End": 1246.96,
      "Text": " descriptor request which was causing the crash. Now get descriptor is a core component of"
    },
    {
      "Time_Start": 1246.96,
      "Time_End": 1251.3000000000002,
      "Text": " the USB um stack um and it's control transfers that retrieves descriptors about the device."
    },
    {
      "Time_Start": 1251.3000000000002,
      "Time_End": 1255.7400000000002,
      "Text": " These are configuration data which includes things like strings about who manufactured the"
    },
    {
      "Time_Start": 1255.7400000000002,
      "Time_End": 1260.8400000000001,
      "Text": " device, um IDs and also what the device does which is very nice. Um in these descriptors"
    },
    {
      "Time_Start": 1260.84,
      "Time_End": 1265.3799999999999,
      "Text": " the first byte of the data is always um going to be the size of the buffer itself so you can"
    },
    {
      "Time_Start": 1265.3799999999999,
      "Time_End": 1271.26,
      "Text": " see B length is 18 um which is the size and if you can overwrite this you can then make your"
    },
    {
      "Time_Start": 1271.26,
      "Time_End": 1275.86,
      "Text": " um memory access push into the linked list next to it which is where the other descriptors are"
    },
    {
      "Time_Start": 1275.86,
      "Time_End": 1280.86,
      "Text": " stored usually. So what's interesting is most uh USB stacks don't control the trans- um"
    },
    {
      "Time_Start": 1284.26,
      "Time_End": 1287.9399999999998,
      "Text": " check the control transfer direction. Uh they're usually protected by how their own USB"
    },
    {
      "Time_Start": 1287.94,
      "Time_End": 1292.04,
      "Text": " hardware works so they have send and receive functions so for instance in this case this is"
    },
    {
      "Time_Start": 1292.04,
      "Time_End": 1298.28,
      "Text": " the STM32 USB D stack where if you send it a get uh dis device descriptor request it will"
    },
    {
      "Time_Start": 1298.28,
      "Time_End": 1302.8600000000001,
      "Text": " explicitly send a control send data request to its own hardware meaning that it can't receive"
    },
    {
      "Time_Start": 1302.8600000000001,
      "Time_End": 1308.76,
      "Text": " data back from it. However in this instance I could send data to it meaning that I had full"
    },
    {
      "Time_Start": 1308.76,
      "Time_End": 1315.3,
      "Text": " control overwriting data in memory which was very nice. So what I did was try to overwrite"
    },
    {
      "Time_Start": 1315.3,
      "Time_End": 1319.2,
      "Text": " that first byte just by sending data to the same memory that was there. However this was"
    },
    {
      "Time_Start": 1319.2,
      "Time_End": 1323.84,
      "Text": " ineffective and it did change the byte however it didn't alter the size of the data received."
    },
    {
      "Time_Start": 1323.84,
      "Time_End": 1328.98,
      "Text": " Luckily for me there was just a buffer overflow there anyway so I was quite happy. Um because"
    },
    {
      "Time_Start": 1328.98,
      "Time_End": 1332.72,
      "Text": " of this the data next to the buffer could be overwritten but I didn't know what was there yet."
    },
    {
      "Time_Start": 1332.72,
      "Time_End": 1338.98,
      "Text": " Um but I could just try and guess. So by sending a large buffer uh that caused the device to"
    },
    {
      "Time_Start": 1338.98,
      "Time_End": 1344.8999999999999,
      "Text": " crash I um knew that I had a traditional buffer overflow hitting something so I decided to um"
    },
    {
      "Time_Start": 1344.92,
      "Time_End": 1349.7,
      "Text": " do a you know binary check until I found a data size that didn't cause the device to crash."
    },
    {
      "Time_Start": 1349.7,
      "Time_End": 1355.3000000000002,
      "Text": " Then I made that size one byte larger and um saw if it crashed and then if it did crash"
    },
    {
      "Time_Start": 1355.3000000000002,
      "Time_End": 1358.9,
      "Text": " changed the value of that last byte incrementing by one until I found a value that didn't"
    },
    {
      "Time_Start": 1358.9,
      "Time_End": 1363.64,
      "Text": " crash. Essentially I was brute forcing my way up the adjacent memory until I found fully"
    },
    {
      "Time_Start": 1363.64,
      "Time_End": 1367.74,
      "Text": " working memory that I could then manipulate if I wanted. What was excellent about this was"
    },
    {
      "Time_Start": 1367.74,
      "Time_End": 1371.68,
      "Text": " was that next to it was a linked list which included pointers to other descriptors which"
    },
    {
      "Time_Start": 1371.7,
      "Time_End": 1376.14,
      "Text": " would then be overwritten themselves and this had two key benefits to me. Number one, this"
    },
    {
      "Time_Start": 1376.14,
      "Time_End": 1380.3,
      "Text": " could be used for a cold boot attack so for instance if I had someone's Samsung phone and"
    },
    {
      "Time_Start": 1380.3,
      "Time_End": 1384.28,
      "Text": " rebooted it the memory wouldn't be cleared at that time and I could dump the entirety of"
    },
    {
      "Time_Start": 1384.28,
      "Time_End": 1388.88,
      "Text": " memory at EL1 so all of the external RAM and then get their secrets out of it, something"
    },
    {
      "Time_Start": 1388.88,
      "Time_End": 1392.6200000000001,
      "Text": " they've been typing, anything that was stored in RAM at that time. The second thing I could do"
    },
    {
      "Time_Start": 1392.6200000000001,
      "Time_End": 1397.76,
      "Text": " was write to all of that data as well including to the bootloader. So the first thing I did was"
    },
    {
      "Time_Start": 1397.78,
      "Time_End": 1401.44,
      "Text": " want to dump memory of the device so I knew what the memory layout of the bootloader"
    },
    {
      "Time_Start": 1401.44,
      "Time_End": 1406.14,
      "Text": " itself so I could then manipulate it later. So I found that all of the pointers I was looking"
    },
    {
      "Time_Start": 1406.14,
      "Time_End": 1412.32,
      "Text": " at were between OX uh F9 and six zeros and OXF8 and six zeros. So I made a memory dump of a"
    },
    {
      "Time_Start": 1412.32,
      "Time_End": 1416.52,
      "Text": " bit of data right before that just to see if I could find the code of the bootloader itself"
    },
    {
      "Time_Start": 1416.52,
      "Time_End": 1420.6,
      "Text": " right next to the RAM which is what I expected. Luckily for me the um bootloader co-started"
    },
    {
      "Time_Start": 1420.6,
      "Time_End": 1426.0,
      "Text": " at OF uh OXF88 and five zeros um which meant that I could then dump it and just statically"
    },
    {
      "Time_Start": 1426.0,
      "Time_End": 1431.98,
      "Text": " analyze it in GEDA if I needed to. Um what I really wanted to do was get code execution so I"
    },
    {
      "Time_Start": 1431.98,
      "Time_End": 1436.62,
      "Text": " could then modify the um the functionality of the device to s- I pass secure boot and get a"
    },
    {
      "Time_Start": 1436.62,
      "Time_End": 1441.52,
      "Text": " bit more access to things um modify the kernel etc. Um but I found that they'd actually"
    },
    {
      "Time_Start": 1441.52,
      "Time_End": 1444.92,
      "Text": " implemented DEP on the device so data execution prevention meaning that I couldn't"
    },
    {
      "Time_Start": 1444.92,
      "Time_End": 1449.2,
      "Text": " overwrite the code in the bootloader in RAM because the uh memory management unit had"
    },
    {
      "Time_Start": 1449.2,
      "Time_End": 1453.1,
      "Text": " disabled this. Um when I tried this it caused the device to hang because it hit a hardware"
    },
    {
      "Time_Start": 1453.1000000000001,
      "Time_End": 1457.94,
      "Text": " error um implying that it was configured well. Um and trying however I found that"
    },
    {
      "Time_Start": 1457.94,
      "Time_End": 1462.0800000000002,
      "Text": " attempting to execute code outside of the code that had been allocated for the bootloader was"
    },
    {
      "Time_Start": 1462.0800000000002,
      "Time_End": 1465.4800000000002,
      "Text": " possible so if I just dumped a bunch of code just slightly outside of what had been mapped"
    },
    {
      "Time_Start": 1465.4800000000002,
      "Time_End": 1469.1200000000001,
      "Text": " already I could execute code from anywhere at the same exception level as the bootloader"
    },
    {
      "Time_Start": 1469.1200000000001,
      "Time_End": 1475.0600000000002,
      "Text": " itself. So with this I could patch in new functions if I wanted to and when I'm writing even"
    },
    {
      "Time_Start": 1475.0600000000002,
      "Time_End": 1480.2600000000002,
      "Text": " exploits for bootloaders I like doing this in C. And just by using the GCC static no lib flags"
    },
    {
      "Time_Start": 1480.26,
      "Time_End": 1483.74,
      "Text": " um and using object copy you can create a raw binary of any functions you're writing as"
    },
    {
      "Time_Start": 1483.74,
      "Time_End": 1487.6,
      "Text": " long as you're not using standard libraries. So you would have to re-implement mem copy but"
    },
    {
      "Time_Start": 1487.6,
      "Time_End": 1492.9,
      "Text": " you've still got a lot of uh ease overwriting arm assembly all day. Um and because I could"
    },
    {
      "Time_Start": 1492.9,
      "Time_End": 1496.8799999999999,
      "Text": " write these into directly into memory if I wanted to then write into the stack to point to"
    },
    {
      "Time_Start": 1496.8799999999999,
      "Time_End": 1502.28,
      "Text": " them that would be very easy as well but I had another idea instead. So fastboot mode was"
    },
    {
      "Time_Start": 1502.28,
      "Time_End": 1506.22,
      "Text": " used as the basis of this exploit because I just really like fastboot mode but also because"
    },
    {
      "Time_Start": 1506.22,
      "Time_End": 1511.8600000000001,
      "Text": " it uses string based commands for all of its administration. So what you'll find on um"
    },
    {
      "Time_Start": 1511.8600000000001,
      "Time_End": 1516.1200000000001,
      "Text": " bootloaders using fastboot is there will be um a table of strings for the commands"
    },
    {
      "Time_Start": 1516.1200000000001,
      "Time_End": 1519.54,
      "Text": " themselves and then pointers to specific functions. And this is usually stored in"
    },
    {
      "Time_Start": 1519.54,
      "Time_End": 1524.14,
      "Text": " writable RAM regardless of where it is because they're loaded in via other functions and by"
    },
    {
      "Time_Start": 1524.14,
      "Time_End": 1528.2,
      "Text": " modifying this table it would allow me to have easy code execution without modifying the"
    },
    {
      "Time_Start": 1528.2,
      "Time_End": 1532.02,
      "Text": " stack without having to do other complex things. I found that fastboot in this instance"
    },
    {
      "Time_Start": 1532.02,
      "Time_End": 1535.68,
      "Text": " wasn't really for an administration it only had two commands which were get variable which"
    },
    {
      "Time_Start": 1535.68,
      "Time_End": 1539.48,
      "Text": " had system variables and reboot which we wanted would reboot the device. So I chose get"
    },
    {
      "Time_Start": 1539.48,
      "Time_End": 1544.18,
      "Text": " var because it was easier. Um so the table usually looks like this so you have an arret uh"
    },
    {
      "Time_Start": 1544.18,
      "Time_End": 1548.52,
      "Text": " arret uh address pointing to the string so reboot and then address point into the function"
    },
    {
      "Time_Start": 1548.52,
      "Time_End": 1553.42,
      "Text": " itself. This would mean that if there were any really complex um things like uh uh stack"
    },
    {
      "Time_Start": 1553.42,
      "Time_End": 1556.8,
      "Text": " canaries in place where I could still bypass them very easily they wouldn't be a problem at"
    },
    {
      "Time_Start": 1556.8,
      "Time_End": 1561.0600000000002,
      "Text": " this point because I was actually going to be uh see someone loading in a address itself and"
    },
    {
      "Time_Start": 1561.08,
      "Time_End": 1567.62,
      "Text": " execute them. Um because I had code execution it meant that secure boot bypass would be"
    },
    {
      "Time_Start": 1567.62,
      "Time_End": 1574.2,
      "Text": " possible. Um so I could then modify the kernel without hopefully tripping Knox and uh add"
    },
    {
      "Time_Start": 1574.2,
      "Time_End": 1578.0,
      "Text": " malicious code into someone's phone when it was booting and do other st- uh interesting"
    },
    {
      "Time_Start": 1578.0,
      "Time_End": 1582.3,
      "Text": " things. However I found that none of the USB based modes so fastboot download et cetera"
    },
    {
      "Time_Start": 1582.3,
      "Time_End": 1586.1399999999999,
      "Text": " had the capability of just booting the phone itself which would be a good way thing to hook"
    },
    {
      "Time_Start": 1586.16,
      "Time_End": 1591.5600000000002,
      "Text": " into for this particular attack. What I would have to do was um call into the uh boot"
    },
    {
      "Time_Start": 1591.5600000000002,
      "Time_End": 1595.0400000000002,
      "Text": " functionality that was already there for the standard boot mode. However I found that this"
    },
    {
      "Time_Start": 1595.0400000000002,
      "Time_End": 1598.5400000000002,
      "Text": " crashed the phone itself. Uh which meant that I would actually have to implement boot"
    },
    {
      "Time_Start": 1598.5400000000002,
      "Time_End": 1602.98,
      "Text": " functionality in a bootloader myself. So there are two options for the re-implementing the"
    },
    {
      "Time_Start": 1602.98,
      "Time_End": 1606.5200000000002,
      "Text": " boot process. The first was to copy the entirety of working memory from the bootloader and put"
    },
    {
      "Time_Start": 1606.5200000000002,
      "Time_End": 1610.18,
      "Text": " it somewhere where I could modify as I wanted to. Or just re-implement the boot functionality"
    },
    {
      "Time_Start": 1610.18,
      "Time_End": 1614.1200000000001,
      "Text": " from scratch calling in functions that I needed to to things like set up the hardware, set up"
    },
    {
      "Time_Start": 1614.14,
      "Time_End": 1619.24,
      "Text": " the um the TE et cetera et cetera. Um I chose the latter because it would be a lot easier for"
    },
    {
      "Time_Start": 1619.24,
      "Time_End": 1622.5400000000002,
      "Text": " me to um debug things but also because there was a lack of writable memory at this point"
    },
    {
      "Time_Start": 1622.5400000000002,
      "Time_End": 1628.5800000000002,
      "Text": " because all I was doing. Um so functions in the bootloader could trivially be be called by"
    },
    {
      "Time_Start": 1628.5800000000002,
      "Time_End": 1631.96,
      "Text": " absolute addresses in C. So in C you can literally say I want to call a function at this"
    },
    {
      "Time_Start": 1631.96,
      "Time_End": 1635.46,
      "Text": " address and it will load it in and branch into them and you can give it parameters and that's"
    },
    {
      "Time_Start": 1635.46,
      "Time_End": 1640.5000000000002,
      "Text": " what I wanted to do so that I could just load in and check things that didn't work right et"
    },
    {
      "Time_Start": 1640.54,
      "Time_End": 1644.32,
      "Text": " cetera or saying change parameters or just remove functionality I didn't need for instance"
    },
    {
      "Time_Start": 1644.32,
      "Time_End": 1648.62,
      "Text": " if the bootloader had already executed certain hardware set up I wouldn't have to modify that"
    },
    {
      "Time_Start": 1648.62,
      "Time_End": 1652.42,
      "Text": " anymore. Um so I could literally like cut down everything until I had the bare bones of a"
    },
    {
      "Time_Start": 1652.42,
      "Time_End": 1657.86,
      "Text": " boot process for myself. Um what was really lucky for me was that the bootloader contained a"
    },
    {
      "Time_Start": 1657.86,
      "Time_End": 1660.92,
      "Text": " huge number of print tests throughout it for debugging saying things like oh we're setting up"
    },
    {
      "Time_Start": 1660.92,
      "Time_End": 1667.24,
      "Text": " this, this has failed et cetera which were all written into RAM address OXF 0070s. Um by"
    },
    {
      "Time_Start": 1667.24,
      "Time_End": 1671.22,
      "Text": " comparing my boot implementation to one that had worked legitimately I could literally do a"
    },
    {
      "Time_Start": 1671.22,
      "Time_End": 1676.16,
      "Text": " one to one comparison of what was broken and then check down the the Ghidra until I had a"
    },
    {
      "Time_Start": 1676.16,
      "Time_End": 1680.7,
      "Text": " boot process that looked almost identical super superficially from the springs perspective"
    },
    {
      "Time_Start": 1680.7,
      "Time_End": 1686.16,
      "Text": " which was really nice. Um then at the end of this whole boot process of course it would have"
    },
    {
      "Time_Start": 1686.16,
      "Time_End": 1690.4,
      "Text": " to jump into the kernel. Now I found that on the um bootloader it was using KSLR so it was"
    },
    {
      "Time_Start": 1690.4,
      "Time_End": 1693.78,
      "Text": " putting the kernel at a randomized address within memory but I also found that that"
    },
    {
      "Time_Start": 1693.78,
      "Time_End": 1697.56,
      "Text": " randomized address was stored at a static pointer which I could just load off and then execute"
    },
    {
      "Time_Start": 1697.56,
      "Time_End": 1703.96,
      "Text": " into it which was uh nice and easy. However I found that even booting into the kernel had"
    },
    {
      "Time_Start": 1703.96,
      "Time_End": 1707.8999999999999,
      "Text": " some problems so after I patched in all of what I thought were the appropriate functions um I"
    },
    {
      "Time_Start": 1707.8999999999999,
      "Time_End": 1712.0,
      "Text": " wanted to execute the kernel however it started the start of the process it showed the boot"
    },
    {
      "Time_Start": 1712.0,
      "Time_End": 1716.28,
      "Text": " screen and looked like it was going to start and then hung and never started Android. However"
    },
    {
      "Time_Start": 1716.28,
      "Time_End": 1720.48,
      "Text": " I realized that because I'd already been modifying the boot code like this and because the MMU"
    },
    {
      "Time_Start": 1720.52,
      "Time_End": 1725.08,
      "Text": " was still in a position where the kernel code was writable I could modify the kernel after it"
    },
    {
      "Time_Start": 1725.08,
      "Time_End": 1729.32,
      "Text": " started in order to see what was going on and remove security components or uh hardware"
    },
    {
      "Time_Start": 1729.32,
      "Time_End": 1733.72,
      "Text": " initialization components to see what was actually going on and hopefully find the thing that"
    },
    {
      "Time_Start": 1733.72,
      "Time_End": 1740.1,
      "Text": " was causing a crash. Um after doing a bit of like um analysis by um knopping out functions"
    },
    {
      "Time_Start": 1740.1,
      "Time_End": 1744.64,
      "Text": " within the kernel itself I found that the device uh was freezing after the kernel"
    },
    {
      "Time_Start": 1744.64,
      "Time_End": 1749.64,
      "Text": " realized- reinitialized the MMU. A key component of um the kernel is it reinitializes a lot of"
    },
    {
      "Time_Start": 1749.64,
      "Time_End": 1752.8000000000002,
      "Text": " the hardware registers that the bootloader has already done because they're not necessarily"
    },
    {
      "Time_Start": 1752.8000000000002,
      "Time_End": 1757.3400000000001,
      "Text": " anymore. And so as soon as it was um reinitializing the MMU with its own rearrangement of the"
    },
    {
      "Time_Start": 1757.3400000000001,
      "Time_End": 1761.5400000000002,
      "Text": " memory so setting up things like for kernel memory protection and things um it was causing the"
    },
    {
      "Time_Start": 1761.5400000000002,
      "Time_End": 1765.1200000000001,
      "Text": " rest of the device to hang. And the reason for that was most likely going to be that the"
    },
    {
      "Time_Start": 1765.1200000000001,
      "Time_End": 1768.5600000000002,
      "Text": " bootloader itself had other threads going on that were accessing memory that would no longer"
    },
    {
      "Time_Start": 1768.5600000000002,
      "Time_End": 1773.96,
      "Text": " be accessible at this point. So most Android bootloaders use a single thread for all"
    },
    {
      "Time_Start": 1773.96,
      "Time_End": 1777.2,
      "Text": " functionality they start up they have some interrupts maybe and then they've maybe got a"
    },
    {
      "Time_Start": 1777.22,
      "Time_End": 1781.22,
      "Text": " USB interface but literally all they want to do is get from A to B which would be starting up to"
    },
    {
      "Time_Start": 1781.22,
      "Time_End": 1786.54,
      "Text": " loading Android and executing. However SBoot was found to implement an RTOS which was much"
    },
    {
      "Time_Start": 1786.54,
      "Time_End": 1792.3,
      "Text": " more fully featured and handled things like a much more complex um graphics um setup and a"
    },
    {
      "Time_Start": 1792.3,
      "Time_End": 1799.14,
      "Text": " much more um uh um uh fully featured thing for the debugging um and addressing it etc. As"
    },
    {
      "Time_Start": 1799.14,
      "Time_End": 1802.24,
      "Text": " you saw there were a lot of printfs and things there was a background process that was"
    },
    {
      "Time_Start": 1802.24,
      "Time_End": 1805.78,
      "Text": " allowing this to be written into memory etc and it was really nice. And because the"
    },
    {
      "Time_Start": 1805.8,
      "Time_End": 1810.84,
      "Text": " kernel was altering the MMU page tables they were trying to execute unmapped memory which was"
    },
    {
      "Time_Start": 1810.84,
      "Time_End": 1815.04,
      "Text": " causing the hardware errors. So there were three threads that were identified on the device"
    },
    {
      "Time_Start": 1815.04,
      "Time_End": 1818.24,
      "Text": " there was the background tasks that I just talked about, there were the USB control transfers"
    },
    {
      "Time_Start": 1818.24,
      "Time_End": 1822.52,
      "Text": " which we what we were exploiting and there was the high level USB communication which was"
    },
    {
      "Time_Start": 1822.52,
      "Time_End": 1825.72,
      "Text": " the download mode, the fast boot mode etc we were talking about. And as each one was"
    },
    {
      "Time_Start": 1825.72,
      "Time_End": 1830.72,
      "Text": " constantly polling for the next interrupt it wanted and things um it was that that was"
    },
    {
      "Time_Start": 1830.72,
      "Time_End": 1834.32,
      "Text": " causing the issue and I also felt that because I didn't know much about how the RTOS was"
    },
    {
      "Time_Start": 1834.34,
      "Time_End": 1838.6399999999999,
      "Text": " working there was no trivial way for me to disable them individually so I needed to come up"
    },
    {
      "Time_Start": 1838.6399999999999,
      "Time_End": 1843.34,
      "Text": " with a much simpler solution for myself just to kick them over and get myself into a"
    },
    {
      "Time_Start": 1843.34,
      "Time_End": 1848.74,
      "Text": " position where there were no threads running. So a simple solution for me was gonna be to"
    },
    {
      "Time_Start": 1848.74,
      "Time_End": 1851.9199999999998,
      "Text": " throw an exception. When you throw an exception all the threads sort of hang waiting for"
    },
    {
      "Time_Start": 1851.9199999999998,
      "Time_End": 1855.32,
      "Text": " that exception to occur because they usually don't do something that's very timing or"
    },
    {
      "Time_Start": 1855.32,
      "Time_End": 1861.12,
      "Text": " security critical. Um and also recovering from the exception wouldn't be required um"
    },
    {
      "Time_Start": 1861.16,
      "Time_End": 1864.1000000000001,
      "Text": " because we were trying to execute the kernel which would then be settled off the um"
    },
    {
      "Time_Start": 1864.1000000000001,
      "Time_End": 1867.9,
      "Text": " exception registers and things. So I could literally just dump the kernel bootstrap"
    },
    {
      "Time_Start": 1867.9,
      "Time_End": 1873.44,
      "Text": " encodings there hopefully and get where I wanted to be. So V bar EL1 which was the uh table"
    },
    {
      "Time_Start": 1873.44,
      "Time_End": 1879.22,
      "Text": " that you just saw in the last slide um uh is a um register that points to a table in memory"
    },
    {
      "Time_Start": 1879.22,
      "Time_End": 1884.66,
      "Text": " which includes um sequences of different exceptions which are stored in 128 byte chunks."
    },
    {
      "Time_Start": 1884.66,
      "Time_End": 1888.8200000000002,
      "Text": " So every 128 bytes is a different exception type. I didn't really want to work out which"
    },
    {
      "Time_Start": 1888.82,
      "Time_End": 1892.1,
      "Text": " exception was what so what I ended up doing was doing a nop sled throughout the entirety"
    },
    {
      "Time_Start": 1892.1,
      "Time_End": 1895.7,
      "Text": " of the exception table into my bootstrapping code at the end of memory which would then"
    },
    {
      "Time_Start": 1895.7,
      "Time_End": 1901.6,
      "Text": " execute it. So even with the kernel booting like this and it did work it's got further down"
    },
    {
      "Time_Start": 1901.6,
      "Time_End": 1905.58,
      "Text": " the line. Um Android was still failing to start reverting to a re- special recovery mode"
    },
    {
      "Time_Start": 1905.58,
      "Time_End": 1910.12,
      "Text": " that was telling me that um the file system manager was failing. The error message that I"
    },
    {
      "Time_Start": 1910.12,
      "Time_End": 1914.12,
      "Text": " saw was suggested that it was um due to the user data the user data partition not being"
    },
    {
      "Time_Start": 1914.1200000000001,
      "Time_End": 1919.1000000000001,
      "Text": " decrypted. So on most Android devices now user data is encrypted and using hardware key"
    },
    {
      "Time_Start": 1919.1000000000001,
      "Time_End": 1924.3000000000002,
      "Text": " which needs to be um uh set up during boot to make sure that you can access your files. Um"
    },
    {
      "Time_Start": 1924.3000000000002,
      "Time_End": 1927.8000000000002,
      "Text": " what this implied to me is that I'd messed up somewhere and that the key storage or"
    },
    {
      "Time_Start": 1927.8000000000002,
      "Time_End": 1931.14,
      "Text": " something else was not being enabled properly or had been broken in some manner by my"
    },
    {
      "Time_Start": 1931.14,
      "Time_End": 1936.48,
      "Text": " bootstrapping. So analyzing the logs prior to boot found that there were multiple hardware"
    },
    {
      "Time_Start": 1936.48,
      "Time_End": 1941.0200000000002,
      "Text": " initializations I'd missed or ignored because I was um being quite lazy with this project."
    },
    {
      "Time_Start": 1941.02,
      "Time_End": 1944.82,
      "Text": " Um and this was due to the fact that they'd already been initialized by fastboot that"
    },
    {
      "Time_Start": 1944.82,
      "Time_End": 1948.32,
      "Text": " required them for other purposes. Um this included things like reading data and setting"
    },
    {
      "Time_Start": 1948.32,
      "Time_End": 1952.84,
      "Text": " other things up. But essentially I was sent running the same functions twice for setting up"
    },
    {
      "Time_Start": 1952.84,
      "Time_End": 1958.94,
      "Text": " the T etc. By um looking at the logs I could see the error messages for instance key"
    },
    {
      "Time_Start": 1958.94,
      "Time_End": 1963.74,
      "Text": " storage in it failed and Tgress register handler uh rat minus 1 meaning I'd have to do"
    },
    {
      "Time_Start": 1963.74,
      "Time_End": 1969.04,
      "Text": " something to bypass this. Um so both of these particular functions were enabled by a very"
    },
    {
      "Time_Start": 1969.04,
      "Time_End": 1974.98,
      "Text": " very large and complex function that would take a long time to um uh um modify or bring"
    },
    {
      "Time_Start": 1974.98,
      "Time_End": 1979.24,
      "Text": " back from scratch. However I did end up doing that by fully re-implementing it by checking"
    },
    {
      "Time_Start": 1979.24,
      "Time_End": 1982.58,
      "Text": " for every if statement throughout the function. Um for different sort of hardware"
    },
    {
      "Time_Start": 1982.58,
      "Time_End": 1987.76,
      "Text": " initializations and ignoring this um the code paths that I didn't think it would hit. Um"
    },
    {
      "Time_Start": 1987.76,
      "Time_End": 1992.06,
      "Text": " however with these errors removed the phone could then complete booting to Android. So I'm"
    },
    {
      "Time_Start": 1992.06,
      "Time_End": 1997.06,
      "Text": " gonna do another demo now hopefully. So here's the uh phone in fastboot mode and you'll"
    },
    {
      "Time_Start": 2000.96,
      "Time_End": 2004.1,
      "Text": " see it very quickly go into the boot screen before switching back. So that screen you just"
    },
    {
      "Time_Start": 2004.1,
      "Time_End": 2008.1399999999999,
      "Text": " saw was the one that happens when you just hold the power button on and turn on the phone."
    },
    {
      "Time_Start": 2008.1399999999999,
      "Time_End": 2011.7,
      "Text": " But as part of the boot process it required it. It then shows the secured by knock screen"
    },
    {
      "Time_Start": 2011.7,
      "Time_End": 2016.34,
      "Text": " which uh I'm not quite sure is true anymore at this point in the process. Um you'll see a"
    },
    {
      "Time_Start": 2016.34,
      "Time_End": 2021.02,
      "Text": " flicker um occasionally um in the screen where the kernel is rewriting that secured by"
    },
    {
      "Time_Start": 2021.04,
      "Time_End": 2025.44,
      "Text": " knock screen. And then you'll see that disappear. Now at this point I was very excited"
    },
    {
      "Time_Start": 2025.44,
      "Time_End": 2031.02,
      "Text": " because this was meaning that we'd bypassed all of the hardware issues or the other issues"
    },
    {
      "Time_Start": 2031.02,
      "Time_End": 2034.28,
      "Text": " I'd had in this process and we're now getting to the point where it's executing my custom"
    },
    {
      "Time_Start": 2034.28,
      "Time_End": 2039.0,
      "Text": " modified kernel which I'll be peeking and poking into through this process. So in a second"
    },
    {
      "Time_Start": 2039.0,
      "Time_End": 2044.0,
      "Text": " we'll see the uh home screen and we'll know that my modified kernel was executing. Which"
    },
    {
      "Time_Start": 2044.06,
      "Time_End": 2046.86,
      "Text": " I was very happy with."
    },
    {
      "Time_Start": 2046.86,
      "Time_End": 2051.86,
      "Text": " Applause"
    },
    {
      "Time_Start": 2055.6,
      "Time_End": 2060.8,
      "Text": " Perfect. So um there's a lot of things that can be done with um kernel code execution. You"
    },
    {
      "Time_Start": 2060.8,
      "Time_End": 2063.74,
      "Text": " can disable some security features and things like that but you have to be very careful"
    },
    {
      "Time_Start": 2063.74,
      "Time_End": 2068.44,
      "Text": " because Samson do put a lot of effort into making sure that there are checks in place that"
    },
    {
      "Time_Start": 2068.44,
      "Time_End": 2073.98,
      "Text": " don't um that if you do too too many scary things uh knocks will blow a fuse. And"
    },
    {
      "Time_Start": 2074.2,
      "Time_End": 2077.3,
      "Text": " permanently the device will say it can't be secured in the same manner because someone's"
    },
    {
      "Time_Start": 2077.3,
      "Time_End": 2082.44,
      "Text": " been messing with it. Um but very easily I could uh modify the kernel uh uh boot uh"
    },
    {
      "Time_Start": 2082.44,
      "Time_End": 2086.7400000000002,
      "Text": " proc version um just to show hacks in the strings. Now I did modify this further to remove"
    },
    {
      "Time_Start": 2086.7400000000002,
      "Time_End": 2090.54,
      "Text": " things like SC Linux checks so just regardless of whether it had SC Linux in place. But I"
    },
    {
      "Time_Start": 2090.54,
      "Time_End": 2095.48,
      "Text": " thought just a demonstrative picture of the version being modified was a good start for this."
    },
    {
      "Time_Start": 2095.48,
      "Time_End": 2099.88,
      "Text": " So some final notes on this case study um because the exploit can now be triggered using an"
    },
    {
      "Time_Start": 2099.88,
      "Time_End": 2103.42,
      "Text": " exception it would be much easier for me to re-implement it in the download mode which is"
    },
    {
      "Time_Start": 2103.46,
      "Time_End": 2108.4,
      "Text": " much more common on Samsung devices. Um which would mean that the exploit would be much"
    },
    {
      "Time_Start": 2108.4,
      "Time_End": 2112.6,
      "Text": " more far reaching if I implemented it on a more expensive device. Um and while code"
    },
    {
      "Time_Start": 2112.6,
      "Time_End": 2116.1,
      "Text": " execution was possible as I just said there was still a tr- a risk of triggering knocks."
    },
    {
      "Time_Start": 2116.1,
      "Time_End": 2122.2200000000003,
      "Text": " However I didn't manage to do that during my analysis of this device. So in conclusion of"
    },
    {
      "Time_Start": 2122.2200000000003,
      "Time_End": 2126.42,
      "Text": " the two um case studies we've discussed today um the initial vulnerability was disclosed to"
    },
    {
      "Time_Start": 2126.42,
      "Time_End": 2129.96,
      "Text": " uh oh sorry we're doing disclosures first I'm getting my slides mixed up. Um the initial"
    },
    {
      "Time_Start": 2129.96,
      "Time_End": 2134.2400000000002,
      "Text": " vulnerability was disclosed to Samsung in December 2022. Um and they provided constant"
    },
    {
      "Time_Start": 2134.2400000000002,
      "Time_End": 2139.44,
      "Text": " um um constant updates on progress and patched the finding within three months across all"
    },
    {
      "Time_Start": 2139.44,
      "Time_End": 2143.2400000000002,
      "Text": " their devices which was extremely impressive considering the complexity of debugging this"
    },
    {
      "Time_Start": 2143.2400000000002,
      "Time_End": 2148.48,
      "Text": " kind of thing. Um so the target device that I had after recording my demos for Defcon uh was"
    },
    {
      "Time_Start": 2148.48,
      "Time_End": 2152.46,
      "Text": " updated and I found it to no longer be vulnerable to the descript overwrite vulnerability"
    },
    {
      "Time_Start": 2152.46,
      "Time_End": 2156.76,
      "Text": " meaning code execution but in this manner was no longer possible. Um I'll be releasing the"
    },
    {
      "Time_Start": 2156.76,
      "Time_End": 2161.5600000000004,
      "Text": " tools for this on my GitHub um but you'll be able to find the um link um to my Twitter Twitter"
    },
    {
      "Time_Start": 2161.5600000000004,
      "Time_End": 2166.44,
      "Text": " where I'll announce this in the slides which you'll find on the Defcon media server. So now"
    },
    {
      "Time_Start": 2166.44,
      "Time_End": 2171.2400000000002,
      "Text": " conclusion. Um so most devices regardless of how much effort people put into protecting them"
    },
    {
      "Time_Start": 2171.2400000000002,
      "Time_End": 2175.28,
      "Text": " will still have exploitable vulnerabilities that can be ex- exploited simply despite there is"
    },
    {
      "Time_Start": 2175.28,
      "Time_End": 2179.82,
      "Text": " resources. Um and even with basic vulnerabilities the effort required sometimes to go from a"
    },
    {
      "Time_Start": 2179.82,
      "Time_End": 2184.0600000000004,
      "Text": " proof of concept to a full exploit is really rewarding. For instance you saw that there was"
    },
    {
      "Time_Start": 2184.12,
      "Time_End": 2188.46,
      "Text": " two very basic vulnerabilities in both of those case studies which then took a certain amount"
    },
    {
      "Time_Start": 2188.46,
      "Time_End": 2193.4,
      "Text": " of effort to actually make into a complete attack chain. And last of all, even on target"
    },
    {
      "Time_Start": 2193.4,
      "Time_End": 2196.9,
      "Text": " which had a huge amount of research put on them there will still be a vector no one else has"
    },
    {
      "Time_Start": 2196.9,
      "Time_End": 2202.64,
      "Text": " tried so you you should try it first. Thank you very much."
    },
    {
      "Time_Start": 2202.64,
      "Time_End": 2207.64,
      "Text": " I think we have time for questions and there's a microphone at the back of the room. I'm"
    },
    {
      "Time_Start": 2207.64,
      "Time_End": 2212.3199999999997,
      "Text": " I think we have time for questions and there's a microphone at the back of the room."
    },
    {
      "Time_Start": 2212.3199999999997,
      "Time_End": 2216.2799999999997,
      "Text": " I'm also happy for people to just shout at me or I'll be outside in the hallway after"
    },
    {
      "Time_Start": 2216.2799999999997,
      "Time_End": 2217.2799999999997,
      "Text": " this talk."
    },
    {
      "Time_Start": 2217.2799999999997,
      "Time_End": 2218.2799999999997,
      "Text": " So whatever works for everyone."
    },
    {
      "Time_Start": 2218.2799999999997,
      "Time_End": 2218.2999999999997,
      "Text": " Thanks."
    }
  ]
}