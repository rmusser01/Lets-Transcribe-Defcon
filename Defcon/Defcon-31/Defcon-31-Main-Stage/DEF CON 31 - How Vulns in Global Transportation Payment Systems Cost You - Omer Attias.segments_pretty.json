{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 5.0,
      "Text": "This text was transcribed using whisper model: large-v2\n\n Thank you. So, hey everyone. So, do you want to have some fun? Alright. So, uh, okay. Hello"
    },
    {
      "Time_Start": 12.44,
      "Time_End": 18.080000000000002,
      "Text": " everyone. Welcome to my talk, The Price of Convenience. How security vulnerabilities in"
    },
    {
      "Time_Start": 18.080000000000002,
      "Time_End": 25.580000000000002,
      "Text": " global transportation payment system can cost you. My name is Omer Attias and I'm 23 years"
    },
    {
      "Time_Start": 25.580000000000002,
      "Time_End": 32.620000000000005,
      "Text": " old. I've been working at SafeBridge as a security researcher for the last two years and"
    },
    {
      "Time_Start": 32.620000000000005,
      "Time_End": 38.540000000000006,
      "Text": " previously I started my career at the age of 17 while working at Rafael Advanced Defense"
    },
    {
      "Time_Start": 38.540000000000006,
      "Time_End": 45.040000000000006,
      "Text": " Systems. I'm especially interested in low level and vulnerability research and I'm also a"
    },
    {
      "Time_Start": 45.040000000000006,
      "Time_End": 52.040000000000006,
      "Text": " technology and science enthusiast. Okay, so in this session we walk through the smart"
    },
    {
      "Time_Start": 52.04,
      "Time_End": 59.54,
      "Text": " payment solution of public transportation and we specifically look at the solution in"
    },
    {
      "Time_Start": 59.54,
      "Time_End": 66.34,
      "Text": " train services. And learn how we can trick the train station gates in order to avoid"
    },
    {
      "Time_Start": 66.34,
      "Time_End": 74.34,
      "Text": " ping. Then we will focus on Movit, a mass operator that provide a mobile solution for"
    },
    {
      "Time_Start": 74.75999999999999,
      "Time_End": 81.75999999999999,
      "Text": " public transport. We will delve into the APIs of this application and we'll find some"
    },
    {
      "Time_Start": 81.78,
      "Time_End": 89.78,
      "Text": " vulnerabilities that led me to the perfect crime. So, let's kick it off. So, I guess all of"
    },
    {
      "Time_Start": 89.78,
      "Time_End": 94.7,
      "Text": " you have ever used public transportation. So, give me hands, I want hands. Please raise your"
    },
    {
      "Time_Start": 94.7,
      "Time_End": 101.62,
      "Text": " hand if you have ever used mobile, mobile app solution in order to pay. Okay, I can see a"
    },
    {
      "Time_Start": 101.62,
      "Time_End": 106.2,
      "Text": " few hands. Cool, so I encourage all the people that raised their hands to stay tuned to this"
    },
    {
      "Time_Start": 106.2,
      "Time_End": 112.54,
      "Text": " session. And all the people that didn't raise their hand, also stay tuned cause it will be"
    },
    {
      "Time_Start": 112.54,
      "Time_End": 119.42,
      "Text": " fun and profit. Okay, so recently mobile payment solution have become increasingly"
    },
    {
      "Time_Start": 119.42,
      "Time_End": 127.42,
      "Text": " popular allowing passengers to pay for their rides using their smart phones. This trend is"
    },
    {
      "Time_Start": 127.42,
      "Time_End": 134.26,
      "Text": " likely to continue so let's discuss some terms used in this field. So, let's explain what is"
    },
    {
      "Time_Start": 134.32,
      "Time_End": 142.32,
      "Text": " mass actually. So, mass is actually SAS but in the mobility field. It's actually application"
    },
    {
      "Time_Start": 142.32,
      "Time_End": 150.32,
      "Text": " that provide plan and pay for transportation. The mass operator is actually the company that"
    },
    {
      "Time_Start": 150.32,
      "Time_End": 158.32,
      "Text": " develops the application that provide those features. We can see the logos below like"
    },
    {
      "Time_Start": 158.32,
      "Time_End": 167.35999999999999,
      "Text": " Uber and Movit and later on on this talk we will focus more on Movit. But a disclosure before"
    },
    {
      "Time_Start": 167.35999999999999,
      "Time_End": 173.32,
      "Text": " we delve into the session, all the findings and explanation are based on the transportation in"
    },
    {
      "Time_Start": 173.32,
      "Time_End": 181.04,
      "Text": " Israel but are not limited to other countries like the US. And also I focused on the train"
    },
    {
      "Time_Start": 181.04,
      "Time_End": 188.07999999999998,
      "Text": " services but the techniques apply to other transport services as well. And one more"
    },
    {
      "Time_Start": 188.72,
      "Time_End": 195.42000000000002,
      "Text": " thing to note is that all my research done in an ethical way. So now it's time to understand"
    },
    {
      "Time_Start": 195.42000000000002,
      "Time_End": 203.42000000000002,
      "Text": " the mobile solution in public transport. So how actually mobile solution work as far as the"
    },
    {
      "Time_Start": 203.42000000000002,
      "Time_End": 211.42000000000002,
      "Text": " train services is concerned. I want to introduce Mike. Mike wants to take a train ride and use"
    },
    {
      "Time_Start": 211.46,
      "Time_End": 219.46,
      "Text": " his new mobile solution. His mass operator application that he just downloaded. So Mike"
    },
    {
      "Time_Start": 219.46,
      "Time_End": 227.46,
      "Text": " got close enough to the station and open up the favorite mass operator. With his mass operator"
    },
    {
      "Time_Start": 227.46,
      "Time_End": 235.46,
      "Text": " Mike can order an entrance ticket and this ticket is actually a QR code that the gates can"
    },
    {
      "Time_Start": 235.5,
      "Time_End": 243.5,
      "Text": " validate. And if the ticket is valid the gate will open the doors. Now Mike can enjoy his ride"
    },
    {
      "Time_Start": 243.5,
      "Time_End": 250.5,
      "Text": " and when Mike reached his destination Mike again open up the application and order an exit"
    },
    {
      "Time_Start": 250.5,
      "Time_End": 258.5,
      "Text": " ticket and complete the train ride. But one more thing to note is that the fare is calculated"
    },
    {
      "Time_Start": 258.54,
      "Time_End": 265.54,
      "Text": " when we end the ride. Because only at the destination the mass operator know how much to"
    },
    {
      "Time_Start": 265.54,
      "Time_End": 271.54,
      "Text": " charge us. And all the billings are accumulated and will be charged on monthly basis."
    },
    {
      "Time_Start": 271.54,
      "Time_End": 279.54,
      "Text": " So the mobile solution provides the payment interface between the train services and the user"
    },
    {
      "Time_Start": 279.54,
      "Time_End": 287.54,
      "Text": " in the form of the QR code. And I thought to myself what the ticket contain? Maybe the ticket"
    },
    {
      "Time_Start": 287.58000000000004,
      "Time_End": 294.58000000000004,
      "Text": " is encrypted, maybe not. But I decided to give it a shot and investigate the ticket format."
    },
    {
      "Time_Start": 294.58000000000004,
      "Time_End": 300.58000000000004,
      "Text": " Cool. So now we understand how to use the provided mobile solution in order to get around."
    },
    {
      "Time_Start": 300.58000000000004,
      "Time_End": 308.58000000000004,
      "Text": " Let's deep dive into the format of the ticket. So here's an example of train ticket. You can see"
    },
    {
      "Time_Start": 308.58000000000004,
      "Time_End": 315.58000000000004,
      "Text": " a long number below the QR code which is the row ticket number. It seems that the QR code is"
    },
    {
      "Time_Start": 315.62,
      "Time_End": 321.62,
      "Text": " not encrypted and I wondered if it's possible to change this value and trick the gates into"
    },
    {
      "Time_Start": 321.62,
      "Time_End": 327.62,
      "Text": " accepting a fake ticket and ultimately this is a way to avoid paying, right?"
    },
    {
      "Time_Start": 327.62,
      "Time_End": 335.62,
      "Text": " But what is this format of random looking digits? To make sense of it I need to gather more"
    },
    {
      "Time_Start": 335.62,
      "Time_End": 343.62,
      "Text": " ticket samples and analyze their patterns. So I collected a few train tickets and noticed a"
    },
    {
      "Time_Start": 343.66,
      "Time_End": 351.66,
      "Text": " interesting pattern in the form of the ending 201 in each of the tickets. This suggests"
    },
    {
      "Time_Start": 351.66,
      "Time_End": 357.66,
      "Text": " a format that can be figured out by more analysis but it's still difficult for me to identify"
    },
    {
      "Time_Start": 357.66,
      "Time_End": 365.66,
      "Text": " a specific format that I can fully understand. So when I searched on Google I found"
    },
    {
      "Time_Start": 365.70000000000005,
      "Time_End": 373.70000000000005,
      "Text": " an API that gave me a JSON file with lots of information. In that file one of the details"
    },
    {
      "Time_Start": 373.70000000000005,
      "Time_End": 381.70000000000005,
      "Text": " mentioned was the operator. This JSON member represents the ID of the mass operator."
    },
    {
      "Time_Start": 381.70000000000005,
      "Time_End": 389.70000000000005,
      "Text": " So it turns out that the repeated number 201 at the end of each ticket that I collected"
    },
    {
      "Time_Start": 389.74,
      "Time_End": 397.74,
      "Text": " represented the ID for Movit Pango which is the one that I used. And I also found"
    },
    {
      "Time_Start": 397.74,
      "Time_End": 405.74,
      "Text": " other operator mentions in the JSON including one called IDF and it's interesting to know that"
    },
    {
      "Time_Start": 405.74,
      "Time_End": 413.74,
      "Text": " IDF operator allows soldiers in Israel to ride for free. But I'm still not familiar with"
    },
    {
      "Time_Start": 413.78000000000003,
      "Time_End": 421.78000000000003,
      "Text": " the remaining part of the ticket and I don't have any leads to help me understand it."
    },
    {
      "Time_Start": 421.78000000000003,
      "Time_End": 427.78000000000003,
      "Text": " Well, now what? At that point in time I understood that breaking down the whole format of the"
    },
    {
      "Time_Start": 429.78000000000003,
      "Time_End": 435.78000000000003,
      "Text": " ticket is too difficult. And I decided to take my current knowledge at that point in time"
    },
    {
      "Time_Start": 435.82000000000005,
      "Time_End": 443.82000000000005,
      "Text": " and conduct an experiment on the train station physical gates. So what would happen"
    },
    {
      "Time_Start": 443.82000000000005,
      "Time_End": 449.82000000000005,
      "Text": " if I will order a ticket and just in time modify the ending operator ID to be a different"
    },
    {
      "Time_Start": 451.82000000000005,
      "Time_End": 457.82000000000005,
      "Text": " operator ID? In this example I will change Movit Pango operator to be the IDF one."
    },
    {
      "Time_Start": 457.82000000000005,
      "Time_End": 464.82000000000005,
      "Text": " And my expectation was that the gates would see this ticket as a valid ticket as I"
    },
    {
      "Time_Start": 464.86,
      "Time_End": 470.86,
      "Text": " just modified the operator ID to another known operator ID. But long story short the"
    },
    {
      "Time_Start": 472.86,
      "Time_End": 478.86,
      "Text": " experiment failed. So in summary I had some knowledge about the ticket format but it was"
    },
    {
      "Time_Start": 478.86,
      "Time_End": 484.86,
      "Text": " not enough to do anything interesting. And I realized that this approach may not be"
    },
    {
      "Time_Start": 484.86,
      "Time_End": 490.86,
      "Text": " effective because the gates still validate the ticket even if I make small changes to it."
    },
    {
      "Time_Start": 490.90000000000003,
      "Time_End": 496.90000000000003,
      "Text": " So I decided to take the focus from the ticket to focus on the gates. And the focus"
    },
    {
      "Time_Start": 499.90000000000003,
      "Time_End": 505.90000000000003,
      "Text": " change from the ticket to the gates led me to find a logical vulnerability that allowed"
    },
    {
      "Time_Start": 505.90000000000003,
      "Time_End": 511.90000000000003,
      "Text": " me to take a ride without being charged. Let's see. So a quick reminder there are two"
    },
    {
      "Time_Start": 511.90000000000003,
      "Time_End": 517.9,
      "Text": " tickets during a train ride. The enter ticket which we order before entering the station"
    },
    {
      "Time_Start": 517.9399999999999,
      "Time_End": 523.9399999999999,
      "Text": " and the exit ticket before exiting the station. Diffing the entrance and the exit tickets"
    },
    {
      "Time_Start": 525.9399999999999,
      "Time_End": 531.9399999999999,
      "Text": " revealed that these two tickets are actually the same ticket. Okay. So if the entrance"
    },
    {
      "Time_Start": 533.9399999999999,
      "Time_End": 539.9399999999999,
      "Text": " and the exit tickets are the same, why not to use a canceled ticket in order to take a"
    },
    {
      "Time_Start": 539.9399999999999,
      "Time_End": 545.9399999999999,
      "Text": " train ride? Let me explain exactly how. So Mike gets close enough to the station and"
    },
    {
      "Time_Start": 547.9399999999999,
      "Time_End": 553.9399999999999,
      "Text": " then order an entrance ticket. But this time Mike immediately cancel his ticket. And"
    },
    {
      "Time_Start": 554.9399999999999,
      "Time_End": 560.9399999999999,
      "Text": " the question is will the gates will validate this ticket? So it turns out that the gates"
    },
    {
      "Time_Start": 562.9399999999999,
      "Time_End": 568.9399999999999,
      "Text": " accepted the canceled ticket. Perfect. Now we know that there is no real time"
    },
    {
      "Time_Start": 568.9399999999999,
      "Time_End": 574.9399999999999,
      "Text": " communication between the gates and the mass operator. Now Mike can enjoy his ride and"
    },
    {
      "Time_Start": 574.98,
      "Time_End": 580.98,
      "Text": " now is the moment of truth. Mike reaches the destination. Will the canceled ticket"
    },
    {
      "Time_Start": 581.98,
      "Time_End": 587.98,
      "Text": " open the doors gate? So yes. Mike completed a full ride with a canceled ticket. This"
    },
    {
      "Time_Start": 589.98,
      "Time_End": 595.98,
      "Text": " means that Mike will not pay on the ride, right? So nope. Mike will pay. A week"
    },
    {
      "Time_Start": 597.98,
      "Time_End": 603.98,
      "Text": " after his ride the mass operator found that there is a ride that not being charged."
    },
    {
      "Time_Start": 604.98,
      "Time_End": 610.98,
      "Text": " How they knew that? After all Mike canceled his ticket. So what likely happened is"
    },
    {
      "Time_Start": 613.98,
      "Time_End": 619.98,
      "Text": " that when Mike entered the station a record was saved in the train logs. And similarly"
    },
    {
      "Time_Start": 620.98,
      "Time_End": 626.98,
      "Text": " a record will be saved for the exit. These two logs together represent a complete"
    },
    {
      "Time_Start": 627.02,
      "Time_End": 633.02,
      "Text": " ride even though the ticket was canceled the mass operator can still calculate the fare"
    },
    {
      "Time_Start": 635.02,
      "Time_End": 641.02,
      "Text": " for the full ride. So I had to trick somehow the gates. And the idea that came to my"
    },
    {
      "Time_Start": 643.02,
      "Time_End": 649.02,
      "Text": " mind is to make a hole in the logs. And I will explain how. The process is similar to"
    },
    {
      "Time_Start": 649.06,
      "Time_End": 655.06,
      "Text": " the previous process but this time when Mike reaches the destination with the canceled"
    },
    {
      "Time_Start": 656.06,
      "Time_End": 662.06,
      "Text": " ticket, Mike order again entrance ticket and then immediately cancel it. The second"
    },
    {
      "Time_Start": 664.06,
      "Time_End": 670.06,
      "Text": " ticket will open the gate and in this process there is no full ride that the mass operators"
    },
    {
      "Time_Start": 670.06,
      "Time_End": 676.06,
      "Text": " see that Mike did. So this is actually worked. And to summarize all, we gained no"
    },
    {
      "Time_Start": 676.1,
      "Time_End": 682.1,
      "Text": " ledge of how mobile solution works and I showed a way to trick the train station gates"
    },
    {
      "Time_Start": 685.1,
      "Time_End": 691.1,
      "Text": " in order to avoid paying. So far so good. But that's not all. I decided to take a specific"
    },
    {
      "Time_Start": 693.1,
      "Time_End": 699.1,
      "Text": " mass operator and find security issues there. The goal is to make a free ride and maybe"
    },
    {
      "Time_Start": 699.14,
      "Time_End": 705.14,
      "Text": " even more. So in the second half of this session I will shift my focus to Movit and present"
    },
    {
      "Time_Start": 709.14,
      "Time_End": 715.14,
      "Text": " three vulnerabilities that I have discovered. And additionally there will be a bonus"
    },
    {
      "Time_Start": 717.14,
      "Time_End": 723.14,
      "Text": " demonstration toward the end. But first let me introduce Movit. So Movit is a worldwide"
    },
    {
      "Time_Start": 723.18,
      "Time_End": 729.18,
      "Text": " mass operator that has been acquired by Intel at 900 million dollars. Movit has more than"
    },
    {
      "Time_Start": 733.18,
      "Time_End": 739.18,
      "Text": " 1.4 billion users around the world and they operate in more than 100 countries and 5,000"
    },
    {
      "Time_Start": 742.18,
      "Time_End": 748.18,
      "Text": " cities. Movit has integration with these big transit providers. It means that we could"
    },
    {
      "Time_Start": 748.22,
      "Time_End": 754.22,
      "Text": " control an account with one of these providers linked to the account. And the application"
    },
    {
      "Time_Start": 759.22,
      "Time_End": 765.22,
      "Text": " is primarily used for navigation and finding routes but also used for paying for rides. By"
    },
    {
      "Time_Start": 767.22,
      "Time_End": 773.22,
      "Text": " clicking the join now button and completing the registration process, users can use their"
    },
    {
      "Time_Start": 773.26,
      "Time_End": 779.26,
      "Text": " Movit application to pay for rides including the train as we discussed earlier. So let's"
    },
    {
      "Time_Start": 780.26,
      "Time_End": 786.26,
      "Text": " see what this looks like. So the account registration process begins with downloading the"
    },
    {
      "Time_Start": 787.26,
      "Time_End": 793.26,
      "Text": " app and joining the payment service. As part of the payment service registration, users are"
    },
    {
      "Time_Start": 793.26,
      "Time_End": 799.26,
      "Text": " prompted to provide their phone number. And to validate that the provided phone number"
    },
    {
      "Time_Start": 799.3,
      "Time_End": 805.3,
      "Text": " belongs to the users and the phone number is owned by the user, Movit servers generate a"
    },
    {
      "Time_Start": 806.3,
      "Time_End": 812.3,
      "Text": " random OTP and send it to the provided phone number. If the user responds with the correct"
    },
    {
      "Time_Start": 814.3,
      "Time_End": 820.3,
      "Text": " OTP, Movit will register a new account. And this account is affiliated with the provided"
    },
    {
      "Time_Start": 820.34,
      "Time_End": 826.34,
      "Text": " phone number. The account holds other details of the user such as their credit card and"
    },
    {
      "Time_Start": 830.34,
      "Time_End": 836.34,
      "Text": " their personal information. Also, Movit offers a feature that enables users to switch"
    },
    {
      "Time_Start": 839.34,
      "Time_End": 845.34,
      "Text": " their account between devices. The process of switching devices is quite seamless as it"
    },
    {
      "Time_Start": 845.38,
      "Time_End": 851.38,
      "Text": " follows the same steps as registering a new account. So for example, if the user takes"
    },
    {
      "Time_Start": 853.38,
      "Time_End": 859.38,
      "Text": " his SIM card and places it in another device, the new device holds the phone number of the"
    },
    {
      "Time_Start": 859.38,
      "Time_End": 865.38,
      "Text": " old device that already has an account registered. But there is no account connected to the"
    },
    {
      "Time_Start": 865.38,
      "Time_End": 871.38,
      "Text": " new device, right? So with the new device trying to join the service, Movit server will"
    },
    {
      "Time_Start": 871.42,
      "Time_End": 877.42,
      "Text": " see that there is an existing account in their affiliations. By authorizing the"
    },
    {
      "Time_Start": 880.42,
      "Time_End": 886.42,
      "Text": " generated OTP, will cause the account previously connected to the old device to"
    },
    {
      "Time_Start": 886.42,
      "Time_End": 892.42,
      "Text": " disconnect and transfer to the newly registered device. So I wondered if I would be"
    },
    {
      "Time_Start": 894.42,
      "Time_End": 900.42,
      "Text": " able to find some basic insecurities in the API. And I decided to look at the API"
    },
    {
      "Time_Start": 901.42,
      "Time_End": 907.42,
      "Text": " request between the server and the mobile application. But all the traffic between the"
    },
    {
      "Time_Start": 907.42,
      "Time_End": 913.42,
      "Text": " server and the application is encrypted using SSL, making it impossible to intercept."
    },
    {
      "Time_Start": 915.42,
      "Time_End": 921.42,
      "Text": " But I managed to bypass the SSL certificate using a free script. This allowed me to"
    },
    {
      "Time_Start": 922.42,
      "Time_End": 928.42,
      "Text": " serve my own certificate and ultimately intercept all API requests between the server"
    },
    {
      "Time_Start": 929.4200000000001,
      "Time_End": 935.4200000000001,
      "Text": " and the device. And my goal was to understand the API communication between the device"
    },
    {
      "Time_Start": 936.4200000000001,
      "Time_End": 942.4200000000001,
      "Text": " and the server. So let's see. When the application is first opened, a create user API"
    },
    {
      "Time_Start": 944.4200000000001,
      "Time_End": 950.4200000000001,
      "Text": " request is sent to the server. The name of the API may sound straightforward, but I"
    },
    {
      "Time_Start": 950.4200000000001,
      "Time_End": 956.4200000000001,
      "Text": " realize it's actually badly named. Let me explain why. When the API request is sent,"
    },
    {
      "Time_Start": 958.4200000000001,
      "Time_End": 964.4200000000001,
      "Text": " the server responds with a log identifier called user key. And through my research,"
    },
    {
      "Time_Start": 964.4200000000001,
      "Time_End": 970.4200000000001,
      "Text": " I found that this identifier is actually assigned to the device and not to the user."
    },
    {
      "Time_Start": 971.4200000000001,
      "Time_End": 977.4200000000001,
      "Text": " And later on, we will discuss this user key identifier more in detail. For now, just"
    },
    {
      "Time_Start": 978.4200000000001,
      "Time_End": 984.4200000000001,
      "Text": " remember it's associated with the device and not with the user. So I explained earlier"
    },
    {
      "Time_Start": 985.4200000000001,
      "Time_End": 991.4200000000001,
      "Text": " the account registration process and that the servers hold additional details on the user"
    },
    {
      "Time_Start": 992.4200000000001,
      "Time_End": 998.4200000000001,
      "Text": " like his credit card. And I want to add one more detail, the user key. The server also"
    },
    {
      "Time_Start": 1000.4200000000001,
      "Time_End": 1006.4200000000001,
      "Text": " identify account by his user key. But it's important to know that not all the user keys"
    },
    {
      "Time_Start": 1007.4200000000001,
      "Time_End": 1013.4200000000001,
      "Text": " have affiliated accounts, but all the accounts have affiliated user keys."
    },
    {
      "Time_Start": 1014.4200000000001,
      "Time_End": 1020.4200000000001,
      "Text": " Okay. So let's assume there is a device with user key number one. And for example, this"
    },
    {
      "Time_Start": 1021.4200000000001,
      "Time_End": 1027.42,
      "Text": " account is linked with phone number one. Our goal is to hijack this account using the account"
    },
    {
      "Time_Start": 1029.42,
      "Time_End": 1035.42,
      "Text": " switching feature. First, the attacker make a create user API request to obtain user key"
    },
    {
      "Time_Start": 1036.42,
      "Time_End": 1042.42,
      "Text": " legitimately. For example, in this, we get user key number two. After obtaining the user"
    },
    {
      "Time_Start": 1045.42,
      "Time_End": 1051.42,
      "Text": " key, the attacker attempts to join the payment service by pretending to be the other device"
    },
    {
      "Time_Start": 1052.42,
      "Time_End": 1058.42,
      "Text": " and specifically the phone device with user key number one. But to complete the registration,"
    },
    {
      "Time_Start": 1059.42,
      "Time_End": 1065.42,
      "Text": " the attacker needs to provide the OTP generated by move it right. And since the attacker doesn't"
    },
    {
      "Time_Start": 1066.42,
      "Time_End": 1072.42,
      "Text": " have access to the phone device, they cannot get the OTP. The OTP is actually four digits"
    },
    {
      "Time_Start": 1075.42,
      "Time_End": 1081.42,
      "Text": " long. And this is immediately raised the idea of brute forcing this OTP. And I know that"
    },
    {
      "Time_Start": 1082.42,
      "Time_End": 1088.42,
      "Text": " there is a small chance that it will be work. But I decided to give it a shot. And for my"
    },
    {
      "Time_Start": 1088.42,
      "Time_End": 1094.42,
      "Text": " surprise, the brute force attack against the OTP actually worked. And I could literally go"
    },
    {
      "Time_Start": 1094.42,
      "Time_End": 1100.42,
      "Text": " over all the OTP options from zero to 9,099. And in the worst case, the brute force took me"
    },
    {
      "Time_Start": 1102.42,
      "Time_End": 1108.42,
      "Text": " only five minutes. So let's see. So we can see the device, the emulator that I have"
    },
    {
      "Time_Start": 1111.42,
      "Time_End": 1117.42,
      "Text": " connected with my account. And now I'm executing the brute force script providing my phone"
    },
    {
      "Time_Start": 1118.42,
      "Time_End": 1124.42,
      "Text": " number. And now the script are trying to guess all the OTP options, as you can see. And we"
    },
    {
      "Time_Start": 1127.42,
      "Time_End": 1133.42,
      "Text": " got the OTP 2014, which immediately disconnected me from the device. We can see. And I order"
    },
    {
      "Time_Start": 1134.42,
      "Time_End": 1140.42,
      "Text": " a train ticket on behalf of my account. And now we will see that someone purchased the"
    },
    {
      "Time_Start": 1144.42,
      "Time_End": 1150.42,
      "Text": " ticket. And this was not me. Cool. So after the brute force attack, the attacker takes"
    },
    {
      "Time_Start": 1154.42,
      "Time_End": 1160.42,
      "Text": " control of the account. This allows the attacker to completely impersonate the account and"
    },
    {
      "Time_Start": 1161.42,
      "Time_End": 1167.42,
      "Text": " use its credit card to order tickets. And furthermore, the attacker gains access to"
    },
    {
      "Time_Start": 1169.42,
      "Time_End": 1175.42,
      "Text": " account's personal information. Also, the server will change its affiliation and link the"
    },
    {
      "Time_Start": 1176.42,
      "Time_End": 1182.42,
      "Text": " attacker user key to the account represented by the victim phone number. So this attack"
    },
    {
      "Time_Start": 1183.42,
      "Time_End": 1189.42,
      "Text": " has its pros and its cons. And on the positive side, it targets a specific phone number,"
    },
    {
      "Time_Start": 1191.42,
      "Time_End": 1197.42,
      "Text": " which can be useful. But it also has limitation. It cannot be widely spread, takes time due"
    },
    {
      "Time_Start": 1198.42,
      "Time_End": 1204.42,
      "Text": " to the brute force, and causes the account to be disconnected. The brute force attack"
    },
    {
      "Time_Start": 1205.42,
      "Time_End": 1211.42,
      "Text": " is a possible approach, but its effectiveness is limited due to the requirement of having"
    },
    {
      "Time_Start": 1212.42,
      "Time_End": 1218.42,
      "Text": " the phone number linked to the account. So I decided to transform the problem of getting"
    },
    {
      "Time_Start": 1218.42,
      "Time_End": 1224.42,
      "Text": " phone number linked to an account to understand the user key format with the goal of enumerating"
    },
    {
      "Time_Start": 1225.42,
      "Time_End": 1231.42,
      "Text": " existing accounts. So in the next few slides, I will delve into the user key format, and"
    },
    {
      "Time_Start": 1232.42,
      "Time_End": 1238.42,
      "Text": " I will showcase the second vulnerability that I found. So as I mentioned earlier, when the"
    },
    {
      "Time_Start": 1238.42,
      "Time_End": 1244.42,
      "Text": " application is opened, for the first time, a create user API is sent to the Movit servers."
    },
    {
      "Time_Start": 1245.42,
      "Time_End": 1251.42,
      "Text": " The server responds with a user key, and we can see the above value is an example for user"
    },
    {
      "Time_Start": 1251.42,
      "Time_End": 1257.42,
      "Text": " key. It looks like a type of UID or something. And if I make the API request multiple times,"
    },
    {
      "Time_Start": 1258.42,
      "Time_End": 1264.42,
      "Text": " I can gather a lot of user key samples, and by analyzing these samples, I will be able to"
    },
    {
      "Time_Start": 1264.42,
      "Time_End": 1270.42,
      "Text": " understand the format better. So I created around 25,000 user keys. And the keys seem"
    },
    {
      "Time_Start": 1273.42,
      "Time_End": 1279.42,
      "Text": " pretty similar, as they all started with E4. And in a brief look, there is a value within"
    },
    {
      "Time_Start": 1280.42,
      "Time_End": 1286.42,
      "Text": " the user key which repeated in each of the keys. Maybe this is a known value. So I searched"
    },
    {
      "Time_Start": 1288.42,
      "Time_End": 1294.42,
      "Text": " this on Google. And I found this Oracle DB function that generates unique identifier with"
    },
    {
      "Time_Start": 1296.42,
      "Time_End": 1302.42,
      "Text": " similar value. In fact, this identifier is not really randomized well. The function that"
    },
    {
      "Time_Start": 1303.42,
      "Time_End": 1309.42,
      "Text": " generates these keys doesn't generate a real pseudorandom identifier, and I will explain"
    },
    {
      "Time_Start": 1311.42,
      "Time_End": 1317.42,
      "Text": " why. And how I managed to identify other devices. So the documentation on this function"
    },
    {
      "Time_Start": 1319.42,
      "Time_End": 1325.42,
      "Text": " shows that this identifier consists of auth identifier, process or thread identifier, and"
    },
    {
      "Time_Start": 1326.42,
      "Time_End": 1332.42,
      "Text": " a non-repeating value. And probably the auth identifier is constant value that appears in"
    },
    {
      "Time_Start": 1334.42,
      "Time_End": 1340.42,
      "Text": " each of the keys. So let's try to confirm this on each of the user keys that I have"
    },
    {
      "Time_Start": 1340.42,
      "Time_End": 1346.42,
      "Text": " collected. So in a second look, we can see that the user keys are not randomized well,"
    },
    {
      "Time_Start": 1347.42,
      "Time_End": 1353.42,
      "Text": " but there are two parts of the user key that seems pretty random. But I noticed that the"
    },
    {
      "Time_Start": 1354.42,
      "Time_End": 1360.42,
      "Text": " last four bytes of the user key repeat in some user keys. Additionally, when this repetition"
    },
    {
      "Time_Start": 1362.42,
      "Time_End": 1368.42,
      "Text": " happens, there are also four middle bytes that remain the same. And moreover, these two"
    },
    {
      "Time_Start": 1370.42,
      "Time_End": 1376.42,
      "Text": " numbers are the only ones that seems well randomized. So when this repetition happened,"
    },
    {
      "Time_Start": 1377.42,
      "Time_End": 1383.42,
      "Text": " the user keys became almost identical, suggesting a relationship between the last four bytes"
    },
    {
      "Time_Start": 1384.42,
      "Time_End": 1390.42,
      "Text": " and the middle four bytes. But brute forcing these two numbers is very difficult due to"
    },
    {
      "Time_Start": 1392.42,
      "Time_End": 1398.42,
      "Text": " the large number of combination, right? So brute force is not a possible approach in"
    },
    {
      "Time_Start": 1398.42,
      "Time_End": 1404.42,
      "Text": " here. What we can do? So I sorted all the keys and got so many keys with these matching"
    },
    {
      "Time_Start": 1405.42,
      "Time_End": 1411.42,
      "Text": " values. These keys are almost identical except of the red square, which turned to be sequential."
    },
    {
      "Time_Start": 1415.42,
      "Time_End": 1421.42,
      "Text": " But I noticed something interesting. Some of the keys follow a sequence, but there are"
    },
    {
      "Time_Start": 1421.42,
      "Time_End": 1427.42,
      "Text": " a few missings. For example, between A0 and A7, there are six missing keys. And after"
    },
    {
      "Time_Start": 1428.42,
      "Time_End": 1434.42,
      "Text": " looking into it, I realized that those missing keys have already been taken by other users."
    },
    {
      "Time_Start": 1435.42,
      "Time_End": 1441.42,
      "Text": " So bingo. If we will look for those gaps, we could fill those gaps with user keys of"
    },
    {
      "Time_Start": 1442.42,
      "Time_End": 1448.42,
      "Text": " other devices, right? So we will fill the gaps between A0 to A7, and we know all these"
    },
    {
      "Time_Start": 1449.42,
      "Time_End": 1455.42,
      "Text": " missing keys actually belong to other devices. But what we can do with devices' user keys?"
    },
    {
      "Time_Start": 1460.42,
      "Time_End": 1466.42,
      "Text": " So I was looking for an API request to get some more details by providing user keys."
    },
    {
      "Time_Start": 1467.42,
      "Time_End": 1473.42,
      "Text": " And luckily, I found the perfect API for this. To retrieve the user's information, I can"
    },
    {
      "Time_Start": 1474.42,
      "Time_End": 1480.42,
      "Text": " use the user profile API by passing the user key as an argument. And when I make the request,"
    },
    {
      "Time_Start": 1482.42,
      "Time_End": 1488.42,
      "Text": " the server will respond with the details related to the user keys. And guess what? If there"
    },
    {
      "Time_Start": 1491.42,
      "Time_End": 1497.42,
      "Text": " is an account associated with the user key, the response will include the account phone"
    },
    {
      "Time_Start": 1497.42,
      "Time_End": 1503.42,
      "Text": " number. And if we have a phone number, we can do brute force, right? So I filmed a"
    },
    {
      "Time_Start": 1505.42,
      "Time_End": 1511.42,
      "Text": " demonstration of catching user keys of newly registered devices and their phone numbers."
    },
    {
      "Time_Start": 1511.42,
      "Time_End": 1517.42,
      "Text": " And I attempted to test if downloading and registering the payment service would be detected."
    },
    {
      "Time_Start": 1518.42,
      "Time_End": 1524.42,
      "Text": " So let's see. We can see that this is immediately catching a new, really catching a new"
    },
    {
      "Time_Start": 1527.42,
      "Time_End": 1533.42,
      "Text": " customer of movies and their phone numbers. And we will wait to see if I can catch myself."
    },
    {
      "Time_Start": 1537.42,
      "Time_End": 1543.42,
      "Text": " All these actually are real users."
    },
    {
      "Time_Start": 1546.42,
      "Time_End": 1552.42,
      "Text": " So as we can see, we caught myself, and this is my phone number, and I actually can attack"
    },
    {
      "Time_Start": 1553.42,
      "Time_End": 1559.42,
      "Text": " myself. So I leave the script to run for two hours, and a few moments later, the script caught"
    },
    {
      "Time_Start": 1561.42,
      "Time_End": 1567.42,
      "Text": " so many accounts, even worldwide accounts. And for each account, I can link a phone number"
    },
    {
      "Time_Start": 1569.42,
      "Time_End": 1575.42,
      "Text": " belongs to the user. And from now on, we can practically obtain all the newly registered"
    },
    {
      "Time_Start": 1576.42,
      "Time_End": 1582.42,
      "Text": " customers of movie. So we have a lot of phone numbers of accounts that can be attacked with"
    },
    {
      "Time_Start": 1583.42,
      "Time_End": 1589.42,
      "Text": " the brute force. And now we have made the brute force attack more powerful. We don't need"
    },
    {
      "Time_Start": 1590.42,
      "Time_End": 1596.42,
      "Text": " the phone number anymore. Instead, we can go through all the newly registered customers and"
    },
    {
      "Time_Start": 1596.42,
      "Time_End": 1602.42,
      "Text": " attack them. But it still disconnects the account from the device. And I wanted to improve"
    },
    {
      "Time_Start": 1602.42,
      "Time_End": 1608.42,
      "Text": " that also. So we have a list of user keys and their phone numbers. We want to be able to"
    },
    {
      "Time_Start": 1609.42,
      "Time_End": 1615.42,
      "Text": " impersonate the user without disconnecting them from the device. To do this, we need to"
    },
    {
      "Time_Start": 1615.42,
      "Time_End": 1621.42,
      "Text": " understand how the API request looks from the user's account perspective. So let's see."
    },
    {
      "Time_Start": 1622.42,
      "Time_End": 1628.42,
      "Text": " In the next slide, we will learn how ticket purchasing works in relation to API requests."
    },
    {
      "Time_Start": 1629.42,
      "Time_End": 1635.42,
      "Text": " We discussed the brute force attack, which involves hijacking account by trying out all"
    },
    {
      "Time_Start": 1636.42,
      "Time_End": 1642.42,
      "Text": " possible OTP options. Now I would like to explore the internals of the API involved."
    },
    {
      "Time_Start": 1644.42,
      "Time_End": 1650.42,
      "Text": " So just a reminder about the create user API. When the application is first opened, a user"
    },
    {
      "Time_Start": 1651.42,
      "Time_End": 1657.42,
      "Text": " key is generated for the device and requested through this API request. But that's not all."
    },
    {
      "Time_Start": 1660.42,
      "Time_End": 1666.42,
      "Text": " After this API request, there is something important to know. We have learned that Movit"
    },
    {
      "Time_Start": 1667.42,
      "Time_End": 1673.42,
      "Text": " stores account information like personal details and credit card data along with the user key."
    },
    {
      "Time_Start": 1674.42,
      "Time_End": 1680.42,
      "Text": " But there is one more essential requirement we missed, the access token. Without it,"
    },
    {
      "Time_Start": 1681.42,
      "Time_End": 1687.42,
      "Text": " communicating with the servers is impossible. The access token is generated immediately"
    },
    {
      "Time_Start": 1688.42,
      "Time_End": 1694.42,
      "Text": " after the device receives its user key. By sending register API request, the server will"
    },
    {
      "Time_Start": 1695.42,
      "Time_End": 1701.42,
      "Text": " respond with a temporary token. And with this token, we can request a verification from a"
    },
    {
      "Time_Start": 1702.42,
      "Time_End": 1708.42,
      "Text": " third party providing the token along with the user key. And in exchange, Google will"
    },
    {
      "Time_Start": 1709.42,
      "Time_End": 1715.42,
      "Text": " respond with the access token. So after setting up the access token, the"
    },
    {
      "Time_Start": 1716.42,
      "Time_End": 1722.42,
      "Text": " application has user key and access token, allowing us to request more APIs. For instance,"
    },
    {
      "Time_Start": 1723.42,
      "Time_End": 1729.42,
      "Text": " without the access token, we cannot register for the payment service, which also means that"
    },
    {
      "Time_Start": 1729.42,
      "Time_End": 1735.42,
      "Text": " we won't be able to use the API for purchasing new tickets. So now we understand that these"
    },
    {
      "Time_Start": 1736.42,
      "Time_End": 1742.42,
      "Text": " two requirements are essential to the API communication. Let's go back to the problem."
    },
    {
      "Time_Start": 1743.42,
      "Time_End": 1749.42,
      "Text": " The issue is that we have the user key of an existing account, but we don't have their access"
    },
    {
      "Time_Start": 1750.42,
      "Time_End": 1756.42,
      "Text": " token. This means that we cannot make API requests on behalf of the account, like ordering a"
    },
    {
      "Time_Start": 1757.42,
      "Time_End": 1763.42,
      "Text": " train ticket. So in this situation, if we use the brute force attack that I explained earlier,"
    },
    {
      "Time_Start": 1764.42,
      "Time_End": 1770.42,
      "Text": " the account will be disconnected from the device and associated to other device. But we want"
    },
    {
      "Time_Start": 1771.42,
      "Time_End": 1777.42,
      "Text": " to fully impersonate the account without disconnecting it. So let's see what we can do. The"
    },
    {
      "Time_Start": 1778.42,
      "Time_End": 1784.42,
      "Text": " access token is actually a JWT, as we can see. Can we forge this token by modifying the payload"
    },
    {
      "Time_Start": 1785.42,
      "Time_End": 1791.42,
      "Text": " So this approach is not possible due to the way JWT works. So we cannot forge JWT. Do we"
    },
    {
      "Time_Start": 1799.42,
      "Time_End": 1805.42,
      "Text": " have another way to get the token? So through this research, I've learned that sometimes the"
    },
    {
      "Time_Start": 1805.42,
      "Time_End": 1811.42,
      "Text": " simple things will work. So I went back to the creation of the JWT token, and we'll see that"
    },
    {
      "Time_Start": 1814.42,
      "Time_End": 1820.42,
      "Text": " we already have a user key of a different account. Maybe we can request another token for this"
    },
    {
      "Time_Start": 1820.42,
      "Time_End": 1826.42,
      "Text": " user key, even though there is an already active token. To do that, we need to send register and"
    },
    {
      "Time_Start": 1827.42,
      "Time_End": 1833.42,
      "Text": " then verify custom token request. So let's see what we got. So that's actually worked. There"
    },
    {
      "Time_Start": 1835.42,
      "Time_End": 1841.42,
      "Text": " is no validation on the access token creation request. We could request as much as tokens as"
    },
    {
      "Time_Start": 1841.42,
      "Time_End": 1847.42,
      "Text": " we want, even though there is an active token. Now we can fully impersonate accounts without"
    },
    {
      "Time_Start": 1850.42,
      "Time_End": 1856.42,
      "Text": " disconnecting them. It's crazy. We actually have the ability to perform all the operation on"
    },
    {
      "Time_Start": 1857.42,
      "Time_End": 1863.42,
      "Text": " behalf of different accounts, including ordering tickets. Additionally, we can access all of"
    },
    {
      "Time_Start": 1864.42,
      "Time_End": 1870.42,
      "Text": " their personal information. Now we have made a perfect attack without disconnecting the"
    },
    {
      "Time_Start": 1872.42,
      "Time_End": 1878.42,
      "Text": " account. This attack is quick and doesn't require a phone number. With the information collected"
    },
    {
      "Time_Start": 1879.42,
      "Time_End": 1885.42,
      "Text": " through our script, we have the ability to access each of these accounts, and by doing so, we"
    },
    {
      "Time_Start": 1885.42,
      "Time_End": 1891.42,
      "Text": " can retrieve their personal information. So let's see what we did. So I conducted a"
    },
    {
      "Time_Start": 1893.42,
      "Time_End": 1899.42,
      "Text": " proof of concept in which I took each of the user keys and used them to create a database"
    },
    {
      "Time_Start": 1899.42,
      "Time_End": 1905.42,
      "Text": " containing various personal information, such their ID, email address, and so on. Using"
    },
    {
      "Time_Start": 1907.42,
      "Time_End": 1913.42,
      "Text": " this database, I developed a user interface for demonstration purposes, which I then tested"
    },
    {
      "Time_Start": 1913.42,
      "Time_End": 1919.42,
      "Text": " on the train station. But before the demo, here's a fun fact. One of the COD accounts"
    },
    {
      "Time_Start": 1920.42,
      "Time_End": 1926.42,
      "Text": " belongs to one of the developers that moved it, the actual backend developer. It's nice to"
    },
    {
      "Time_Start": 1926.42,
      "Time_End": 1932.42,
      "Text": " see that he believes in the product. So let's see the demo. This is me in the train station,"
    },
    {
      "Time_Start": 1935.42,
      "Time_End": 1941.42,
      "Text": " and you can see on the left side the user interface that I have developed. And now I'm"
    },
    {
      "Time_Start": 1941.42,
      "Time_End": 1947.42,
      "Text": " selecting the source station and the account that I want to pay on my ride. And in exchange,"
    },
    {
      "Time_Start": 1948.42,
      "Time_End": 1954.42,
      "Text": " I'm getting a ticket, which someone else paid me, and I'm easily passing the gates."
    },
    {
      "Time_Start": 1960.42,
      "Time_End": 1966.42,
      "Text": " Thank you. Okay. So the takeaways. Even big companies can fall victim to simple attacks,"
    },
    {
      "Time_Start": 1970.42,
      "Time_End": 1976.42,
      "Text": " showing the need for increased awareness and attention to basic security measures, and"
    },
    {
      "Time_Start": 1976.42,
      "Time_End": 1982.42,
      "Text": " also, I want to understand the research perspective, turning challenges into opportunities"
    },
    {
      "Time_Start": 1985.42,
      "Time_End": 1991.42,
      "Text": " and using limitations for positive results. We connected with MoveIt and responsibly"
    },
    {
      "Time_Start": 1995.42,
      "Time_End": 2001.42,
      "Text": " disclosed all the vulnerabilities, and all of them have been fixed and no customer action is"
    },
    {
      "Time_Start": 2001.42,
      "Time_End": 2007.42,
      "Text": " required. Also, all the scripts that I used throughout this research pushed to this GitHub"
    },
    {
      "Time_Start": 2009.42,
      "Time_End": 2015.42,
      "Text": " repository, and you are more than welcome to take a look. And I want to thank Shmuel"
    },
    {
      "Time_Start": 2015.42,
      "Time_End": 2021.42,
      "Text": " Cohen for helping me a lot throughout this research. Thank you. And I want to thank you"
    },
    {
      "Time_Start": 2021.42,
      "Time_End": 2025.42,
      "Text": " for joining. Thank you."
    }
  ]
}