{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 5.0,
      "Text": "This text was transcribed using whisper model: large-v2\n\n First off, I just want to thank everybody for being here. I know it's late in the day, and having"
    },
    {
      "Time_Start": 9.28,
      "Time_End": 13.18,
      "Text": " everybody here is what makes it possible, so I really just appreciate y'all being here. So now"
    },
    {
      "Time_Start": 13.18,
      "Time_End": 17.88,
      "Text": " we're designing and using legacy Microsoft transports and session architecture. That's what"
    },
    {
      "Time_Start": 17.88,
      "Time_End": 22.52,
      "Text": " this is going to be about, but a little bit about me is, first and foremost, I'm a principal"
    },
    {
      "Time_Start": 22.52,
      "Time_End": 26.36,
      "Text": " red teamer at Equinix, and I know we have a lot of Equinix people here, so I definitely want to"
    },
    {
      "Time_Start": 26.36,
      "Time_End": 32.76,
      "Text": " give a shout out and definitely thank the support I get from them. Also, I was a student at"
    },
    {
      "Time_Start": 32.76,
      "Time_End": 37.4,
      "Text": " Sam Houston State University, computer science, they have a great department, and several"
    },
    {
      "Time_Start": 37.4,
      "Time_End": 41.3,
      "Text": " faculty, yeah, several faculty are goons here and have been for a really long time, so I"
    },
    {
      "Time_Start": 41.3,
      "Time_End": 47.18,
      "Text": " definitely appreciate them. I want to reach out to, or shout out to Black Birch, they do"
    },
    {
      "Time_Start": 47.18,
      "Time_End": 52.08,
      "Text": " great pen testing consulting, you know, so that's kind of my background, is I do a lot of red"
    },
    {
      "Time_Start": 52.1,
      "Time_End": 57.48,
      "Text": " teaming consulting, coding, developing, all that sort of stuff, and primarily I like to stick"
    },
    {
      "Time_Start": 57.48,
      "Time_End": 62.48,
      "Text": " to Python or C++, and in this case, we're going to be looking at some of the challenges that"
    },
    {
      "Time_Start": 64.36,
      "Time_End": 69.36,
      "Text": " red teamers face, because we need to compromise endpoints and networks, and then we need to"
    },
    {
      "Time_Start": 71.6,
      "Time_End": 77.36,
      "Text": " exfiltrate data, but the thing about the red teaming is that everything is in scope, and nobody"
    },
    {
      "Time_Start": 77.38,
      "Time_End": 83.66,
      "Text": " knows that we're coming, and so remaining undetected is a key part, or at least maintaining our"
    },
    {
      "Time_Start": 83.66,
      "Time_End": 89.22,
      "Text": " access. If we're detected, the gig's kind of up, especially being, you know, not a legit bad"
    },
    {
      "Time_Start": 89.22,
      "Time_End": 92.36,
      "Text": " guy, because you really only get one chance, you know, once the blue teamers know about it, it's"
    },
    {
      "Time_Start": 92.36,
      "Time_End": 98.74,
      "Text": " kind of game over. But anyway, so if we, you know, use like traditional frameworks and stuff"
    },
    {
      "Time_Start": 98.74,
      "Time_End": 103.58,
      "Text": " for C2, that's great, we definitely want to do that, but what if those channels are"
    },
    {
      "Time_Start": 103.6,
      "Time_End": 108.5,
      "Text": " compromised, and what are the key things that those things do? They reach out to your C2"
    },
    {
      "Time_Start": 108.5,
      "Time_End": 113.34,
      "Text": " server, even if it's over an extended period of time, if that's ever picked up, then you kind of"
    },
    {
      "Time_Start": 113.34,
      "Time_End": 120.34,
      "Text": " lose everything. So the focus on this is looking at implementing, you know, multiple, you"
    },
    {
      "Time_Start": 120.34,
      "Time_End": 127.22,
      "Text": " know, TTPs at different levels, and provide enough functionality to allow us to regain access"
    },
    {
      "Time_Start": 127.22,
      "Time_End": 132.26,
      "Text": " to machines where we maybe have lost it, or just to simply do something without having any sort"
    },
    {
      "Time_Start": 132.28,
      "Time_End": 136.38,
      "Text": " of the indicators that would result from a process reaching out to the internet or another"
    },
    {
      "Time_Start": 136.38,
      "Time_End": 141.38,
      "Text": " server for tasking. Just some prerequisite high level overview, we do abuse some of the"
    },
    {
      "Time_Start": 145.72,
      "Time_End": 151.62,
      "Text": " things within Windows, and so I'm going to be covering at a high level Windows like"
    },
    {
      "Time_Start": 151.62,
      "Time_End": 156.56,
      "Text": " sessions, and their stations, tokens, things like that, but then also there's some other"
    },
    {
      "Time_Start": 156.56,
      "Time_End": 160.66,
      "Text": " protocols that we're going to cover. It's pretty simple, the first thing we're going to look"
    },
    {
      "Time_Start": 160.66,
      "Time_End": 167.0,
      "Text": " at is, you know, the different sessions. When a user logs into a Windows machine, they're"
    },
    {
      "Time_Start": 167.0,
      "Time_End": 170.88,
      "Text": " going to have their own logon session, and so if there's, you know, terminal services or"
    },
    {
      "Time_Start": 170.88,
      "Time_End": 175.01999999999998,
      "Text": " multiple users can log in over RDP as an example, then you'll have a different session for"
    },
    {
      "Time_Start": 175.01999999999998,
      "Time_End": 181.96,
      "Text": " each one of those users. So what if we have a service, like an implant that's running in"
    },
    {
      "Time_Start": 181.96,
      "Time_End": 187.01999999999998,
      "Text": " session zero, and we want to create a process inside of another user's session, maybe a"
    },
    {
      "Time_Start": 187.02,
      "Time_End": 192.36,
      "Text": " session is just logged in. Can we do that from session zero? Which is basically where all the"
    },
    {
      "Time_Start": 192.36,
      "Time_End": 197.4,
      "Text": " services log in, or where they're running. So that's going to be one of the main topics that we"
    },
    {
      "Time_Start": 197.4,
      "Time_End": 202.38,
      "Text": " talk about today, is how can we achieve this, and what are the best ways to do it, and what"
    },
    {
      "Time_Start": 202.38,
      "Time_End": 209.08,
      "Text": " is the, what are our abilities to detect it as well? Which brings me to a framework that I've"
    },
    {
      "Time_Start": 209.08,
      "Time_End": 214.32000000000002,
      "Text": " been working on, and as soon as I get back to my room, I'll release the code in my GitHub, so"
    },
    {
      "Time_Start": 214.32,
      "Time_End": 220.95999999999998,
      "Text": " it'll be available. It's written in C++, there's a command line agent, but then also I've been"
    },
    {
      "Time_Start": 220.95999999999998,
      "Time_End": 227.0,
      "Text": " implementing a graphical front-end using imgui, so that'll be available, but just kind of a"
    },
    {
      "Time_Start": 227.0,
      "Time_End": 234.07999999999998,
      "Text": " high-level overview of this is that, again, it's for long-term persistent access, in case we"
    },
    {
      "Time_Start": 234.07999999999998,
      "Time_End": 239.72,
      "Text": " need to recover it, but the main thing is that it doesn't reach out to a C2 server. It sits"
    },
    {
      "Time_Start": 239.76,
      "Time_End": 246.76,
      "Text": " there on the endpoint running, and then it waits for tasking. So we abuse some other"
    },
    {
      "Time_Start": 246.76,
      "Time_End": 253.16,
      "Text": " different protocols within it to keep the network association away from the process, and"
    },
    {
      "Time_Start": 253.16,
      "Time_End": 257.56,
      "Text": " we're going to go through that in more detail, but the way that we're doing it is that we're"
    },
    {
      "Time_Start": 257.56,
      "Time_End": 264.14,
      "Text": " supporting, or the main thing is that we wanted to support the ability to implement different"
    },
    {
      "Time_Start": 264.26,
      "Time_End": 270.34,
      "Text": " types of transports. So what if a specific transport only allows ingress? We still want this"
    },
    {
      "Time_Start": 270.34,
      "Time_End": 276.7,
      "Text": " functionality. So there's a custom messaging protocol that's implemented, and the main"
    },
    {
      "Time_Start": 276.7,
      "Time_End": 281.18,
      "Text": " takeaway is that an operator can issue a task, and the task is going to be sent to the"
    },
    {
      "Time_Start": 281.18,
      "Time_End": 287.32,
      "Text": " implant, and it's going to do something. And the way that that is delivered is through a"
    },
    {
      "Time_Start": 287.4,
      "Time_End": 294.4,
      "Text": " route. Notifications, those are the responses, and those are optional. So that's one of the"
    },
    {
      "Time_Start": 294.4,
      "Time_End": 299.4,
      "Text": " key things, is that you don't have to get a response from a task. So, again, bidirectional"
    },
    {
      "Time_Start": 304.42,
      "Time_End": 309.56,
      "Text": " transports think of stateful protocols, such as TCP. You have your SYN, your SYNACK, and your"
    },
    {
      "Time_Start": 309.56,
      "Time_End": 314.8,
      "Text": " ACK, right? You have transmission back and forth between the two, but then in a"
    },
    {
      "Time_Start": 314.84000000000003,
      "Time_End": 319.72,
      "Text": " unidirectional, you would have stateless protocols, such as UDP, or in the main one that we're"
    },
    {
      "Time_Start": 319.72,
      "Time_End": 324.72,
      "Text": " going to use now, there are mail slots. And so those only require data being sent to the"
    },
    {
      "Time_Start": 327.36,
      "Time_End": 332.96000000000004,
      "Text": " implant versus back and forth. So this actually gives us a lot of flexibility in that we can"
    },
    {
      "Time_Start": 332.96000000000004,
      "Time_End": 338.28000000000003,
      "Text": " send a task off to a machine that's implanted and then not receive a response at all if we"
    },
    {
      "Time_Start": 338.28000000000003,
      "Time_End": 342.64,
      "Text": " don't care about it, but if we do want to receive a response, we can have it sent back to a"
    },
    {
      "Time_Start": 342.64,
      "Time_End": 347.84,
      "Text": " different machine over a different transport altogether. So we have a lot of flexibility, and"
    },
    {
      "Time_Start": 347.84,
      "Time_End": 353.56,
      "Text": " we're not tied to anything specific. Really, anything that, you know, any sort of protocol"
    },
    {
      "Time_Start": 353.56,
      "Time_End": 358.56,
      "Text": " that, you know, uses the network, we can implement as a transport layer. So tasks, this is"
    },
    {
      "Time_Start": 362.64,
      "Time_End": 367.47999999999996,
      "Text": " like one of the key components. So, again, these are inbound. So it's a message being received"
    },
    {
      "Time_Start": 367.48,
      "Time_End": 372.76,
      "Text": " by the implant. The implant then does something based on whatever you're tasking it to do,"
    },
    {
      "Time_Start": 372.76,
      "Time_End": 378.8,
      "Text": " create a process in a user's logon session, or it creates a user, which obviously isn't very"
    },
    {
      "Time_Start": 378.8,
      "Time_End": 384.72,
      "Text": " stealthy, but, again, it's an option. So one of the questions is, since the messaging"
    },
    {
      "Time_Start": 384.72,
      "Time_End": 389.28000000000003,
      "Text": " protocol is decoupled from the transport layer, how can we deliver a response, especially when"
    },
    {
      "Time_Start": 389.28000000000003,
      "Time_End": 394.28000000000003,
      "Text": " considering a transport is unidirectional? This is where routes come into play. So within a"
    },
    {
      "Time_Start": 398.16,
      "Time_End": 403.6,
      "Text": " obligato implant, you have routes which describe a destination, and this would include all the"
    },
    {
      "Time_Start": 403.6,
      "Time_End": 408.56,
      "Text": " information that's required to actually, you know, send that information off to it. So, for"
    },
    {
      "Time_Start": 408.56,
      "Time_End": 414.88,
      "Text": " instance, a mail slot, we would include the net bios name of the machine, and then the name of"
    },
    {
      "Time_Start": 414.88,
      "Time_End": 418.56,
      "Text": " the mail slot. I'm not going to spend too much time on this, because we're going to get to it."
    },
    {
      "Time_Start": 418.56,
      "Time_End": 422.12,
      "Text": " We're going to have demos, which is probably going to clear a lot of this up, but the main"
    },
    {
      "Time_Start": 422.12,
      "Time_End": 427.36,
      "Text": " thing is that each route entry is mapped to a unique identifier, and this is used in route"
    },
    {
      "Time_Start": 427.36,
      "Time_End": 435.72,
      "Text": " lookups. And then the notifications is the last piece. So if you send off a task, and you"
    },
    {
      "Time_Start": 435.72,
      "Time_End": 439.8,
      "Text": " want to have, like, a response, you want to know if it was executed successfully or what"
    },
    {
      "Time_Start": 439.8,
      "Time_End": 446.12,
      "Text": " happened, or just receive data back, then you can say, hey, send me a notification over this"
    },
    {
      "Time_Start": 446.12,
      "Time_End": 453.92,
      "Text": " transport to this destination. So I'm going to talk about mail slots a little bit. Why do we"
    },
    {
      "Time_Start": 453.92,
      "Time_End": 459.68,
      "Text": " want to use mail slots? Well, here's a quote from Microsoft. Remote mail slot protocol is a"
    },
    {
      "Time_Start": 459.68,
      "Time_End": 464.0,
      "Text": " simple, unreliable, insecure, and unidirectional inter-process communication protocol"
    },
    {
      "Time_Start": 464.0,
      "Time_End": 470.08000000000004,
      "Text": " between client and server. A mail slot is represented locally on the server as a file. So you"
    },
    {
      "Time_Start": 470.08000000000004,
      "Time_End": 473.76,
      "Text": " read that, and you're like, well, maybe we shouldn't use it. But there's actually a lot of"
    },
    {
      "Time_Start": 473.76,
      "Time_End": 481.0,
      "Text": " advantages to using mail slots. So one thing about a mail slot is that the traffic isn't"
    },
    {
      "Time_Start": 481.0,
      "Time_End": 485.92,
      "Text": " associated with the process. So normally, like, and we're going to demo this later, but"
    },
    {
      "Time_Start": 485.92,
      "Time_End": 490.56,
      "Text": " normally, if you have network activity, through one way or another, you're going to have that"
    },
    {
      "Time_Start": 490.56,
      "Time_End": 495.8,
      "Text": " associated with the process. So in this case, it doesn't. Which is really good for us, because"
    },
    {
      "Time_Start": 495.8,
      "Time_End": 507.88,
      "Text": " we're, again, we're not creating the path of, or, I'm sorry, we're, the process isn't"
    },
    {
      "Time_Start": 507.88,
      "Time_End": 511.96,
      "Text": " associated with network activity, so as offenders dig into this, we're trying to break those"
    },
    {
      "Time_Start": 511.96,
      "Time_End": 519.04,
      "Text": " process chain of events and the network activity, so this isn't going to be associated. Also,"
    },
    {
      "Time_Start": 519.04,
      "Time_End": 524.72,
      "Text": " it's a very legacy, so it supports Windows 2000 APIs, so we could potentially use this on a"
    },
    {
      "Time_Start": 524.72,
      "Time_End": 534.72,
      "Text": " wide range of machines. One key thing, if you go to implement this in development, is that you"
    },
    {
      "Time_Start": 534.72,
      "Time_End": 540.48,
      "Text": " have to use the net BIOS name. You can't use the IP address. Even if you look in Wireshark and"
    },
    {
      "Time_Start": 540.48,
      "Time_End": 545.8000000000001,
      "Text": " you see, if you see that the packets are being sent and they're being delivered to the endpoint,"
    },
    {
      "Time_Start": 545.8000000000001,
      "Time_End": 551.88,
      "Text": " they're not processed correctly, and so the very big thing about mail slots is that you have to"
    },
    {
      "Time_Start": 551.88,
      "Time_End": 558.64,
      "Text": " use the net BIOS name. Otherwise, it'll fail, but you'll see the network traffic, but it won't be"
    },
    {
      "Time_Start": 558.68,
      "Time_End": 564.72,
      "Text": " delivered to your process for processing. This is extremely a legacy protocol, so"
    },
    {
      "Time_Start": 564.72,
      "Time_End": 569.84,
      "Text": " authentication isn't required, nor is it supported. I guess that was left to people that"
    },
    {
      "Time_Start": 569.84,
      "Time_End": 574.48,
      "Text": " implemented the protocol themselves. So, that's going to bring me to my first demo."
    },
    {
      "Time_Start": 588.64,
      "Time_End": 589.84,
      "Text": " I hope."
    },
    {
      "Time_Start": 618.64,
      "Time_End": 648.6,
      "Text": " Okay. Well, it looks like the videos aren't sitting down, so we're going to have to"
    },
    {
      "Time_Start": 648.6,
      "Time_End": 664.88,
      "Text": " skip the demos. Well, demo one was basically to show the usage of the tool and using mail"
    },
    {
      "Time_Start": 664.88,
      "Time_End": 674.28,
      "Text": " slots to task a remote agent, and it worked. The demos are available for download, so you can"
    },
    {
      "Time_Start": 674.28,
      "Time_End": 679.24,
      "Text": " download those and check it if you want, but in the last demo, if we could have seen it, what"
    },
    {
      "Time_Start": 679.24,
      "Time_End": 684.9599999999999,
      "Text": " we would have seen is one machine sending a task to another one that was implanted, and then"
    },
    {
      "Time_Start": 684.9599999999999,
      "Time_End": 692.56,
      "Text": " it doing something. Whenever I was creating my DEF CON submission, I came across an article"
    },
    {
      "Time_Start": 692.56,
      "Time_End": 700.1999999999999,
      "Text": " with this quote, and it was the first link after searching mail slots, and it gave me pause. I"
    },
    {
      "Time_Start": 700.2,
      "Time_End": 708.0,
      "Text": " was thinking, hmm, so with the release of Windows 11, we have started disabling the remote"
    },
    {
      "Time_Start": 708.0,
      "Time_End": 714.1600000000001,
      "Text": " mail slot protocol by default. This is a precursor to deprecation and eventual removal from"
    },
    {
      "Time_Start": 714.1600000000001,
      "Time_End": 718.2800000000001,
      "Text": " Windows. You aren't using this extremely legacy protocol unless you're also using the"
    },
    {
      "Time_Start": 718.2800000000001,
      "Time_End": 725.44,
      "Text": " deprecated and disabled by default SMBV1 protocol. So, 99.97% of you have nothing to worry"
    },
    {
      "Time_Start": 725.44,
      "Time_End": 731.36,
      "Text": " about. This was a principal program manager. Yeah. So, it gave me pause because I was"
    },
    {
      "Time_Start": 731.36,
      "Time_End": 737.08,
      "Text": " thinking, kind of like byte leader said in his talk this morning, is like, am I the idiot? Am I"
    },
    {
      "Time_Start": 737.08,
      "Time_End": 744.44,
      "Text": " dumb dumb? Did I somehow configure all these default Windows boxes with SMBV1 enabled? So, I"
    },
    {
      "Time_Start": 744.44,
      "Time_End": 753.6800000000001,
      "Text": " checked, and that would bring me to the demo two. And let me just illustrate verbally the best I"
    },
    {
      "Time_Start": 753.7600000000001,
      "Time_End": 763.7600000000001,
      "Text": " can. In demo two, we were going to look at actually showing through PowerShell that on"
    },
    {
      "Time_Start": 763.7600000000001,
      "Time_End": 773.8800000000001,
      "Text": " Windows 11, 10, and Windows Server 2016, that SMBV1 not only wasn't enabled, but on the server"
    },
    {
      "Time_Start": 773.92,
      "Time_End": 781.92,
      "Text": " even, it wasn't installed. And then it worked. So, yeah. Sorry about the demos. I believe we"
    },
    {
      "Time_Start": 785.28,
      "Time_End": 791.68,
      "Text": " also looked at in Wireshark that these, that we were actually using the mail slot protocol,"
    },
    {
      "Time_Start": 791.68,
      "Time_End": 801.68,
      "Text": " they're being delivered over NetBIOS and SMB. So, even though SMBV1 was disabled, our packets"
    },
    {
      "Time_Start": 802.0000000000001,
      "Time_End": 808.0000000000001,
      "Text": " were still sent to the employees, and they were processed, and the task was carried out. So,"
    },
    {
      "Time_Start": 808.0000000000001,
      "Time_End": 816.0000000000001,
      "Text": " I'm not poking fun at whoever said this, but the thing is, is that as a defender, wanting"
    },
    {
      "Time_Start": 816.0000000000001,
      "Time_End": 822.32,
      "Text": " to potentially block this activity or ensure that your environment isn't susceptible to"
    },
    {
      "Time_Start": 822.32,
      "Time_End": 828.72,
      "Text": " communication over this medium, be careful when you come across this article and what the"
    },
    {
      "Time_Start": 828.8000000000001,
      "Time_End": 836.8000000000001,
      "Text": " assumptions we draw from it, because every single link was either this one or one pointing to it."
    },
    {
      "Time_Start": 836.8000000000001,
      "Time_End": 858.5600000000001,
      "Text": " S391? In where?"
    },
    {
      "Time_Start": 858.5600000000001,
      "Time_End": 887.0400000000001,
      "Text": " No. It's all good. It's all good. Oh, it is, isn't it? Hey! There we go."
    },
    {
      "Time_Start": 887.04,
      "Time_End": 895.04,
      "Text": " Alright. Thank you. Well, let's just circle back then. Hey, there we go. Awesome. Thank you,"
    },
    {
      "Time_Start": 900.4,
      "Time_End": 906.88,
      "Text": " whoever said that. Appreciate it. Thanks. Okay, so, this is the tool. We're on a Windows 11"
    },
    {
      "Time_Start": 906.88,
      "Time_End": 911.76,
      "Text": " machine. We're configuring it to use a mail slot. This is the system that we're going to target,"
    },
    {
      "Time_Start": 911.76,
      "Time_End": 916.8,
      "Text": " Windows Server. We're just going to create a user, not really worried about OpSec at this"
    },
    {
      "Time_Start": 916.8000000000001,
      "Time_End": 923.5200000000001,
      "Text": " point. We're just demoing the usage of it. So, we're going to create a user, Defcon31,"
    },
    {
      "Time_Start": 923.5200000000001,
      "Time_End": 929.2,
      "Text": " appropriate, with a super secure password. We're going to execute it. Again, this was a mail slot."
    },
    {
      "Time_Start": 931.36,
      "Time_End": 934.1600000000001,
      "Text": " And then we're going to look, and it was successful."
    },
    {
      "Time_Start": 938.5600000000001,
      "Time_End": 943.1200000000001,
      "Text": " Defcon31. Now, I want to pause really quick. I forgot to point out"
    },
    {
      "Time_Start": 946.8000000000001,
      "Time_End": 959.9200000000001,
      "Text": " something. So, you can see here, this is the target. So, over here, we created these different"
    },
    {
      "Time_Start": 959.9200000000001,
      "Time_End": 963.6,
      "Text": " targets here. So, we have mail slot and UDP. These are the ones we're going to target."
    },
    {
      "Time_Start": 963.6,
      "Time_End": 969.7600000000001,
      "Text": " And so, this is what's being selected. And so, in that case, it was a mail slot, and it worked."
    },
    {
      "Time_Start": 976.8000000000001,
      "Time_End": 980.8000000000001,
      "Text": " Now, what we're going to do is, that was the GUI. We're going to show off the command line usage"
    },
    {
      "Time_Start": 980.8000000000001,
      "Time_End": 987.5200000000001,
      "Text": " to show that you have the same functionality. So, in this case, we created a mail slot listener."
    },
    {
      "Time_Start": 987.5200000000001,
      "Time_End": 992.32,
      "Text": " So, we have the service running, the implants running as a service on these different machines,"
    },
    {
      "Time_Start": 992.32,
      "Time_End": 997.44,
      "Text": " but you can also use the command line agent to set up a listener if you want to receive a response"
    },
    {
      "Time_Start": 998.1600000000001,
      "Time_End": 1002.08,
      "Text": " or even set it up for tasking. So, in this case, we just want to receive a response. So,"
    },
    {
      "Time_Start": 1002.08,
      "Time_End": 1006.88,
      "Text": " we set up a listener there. And then, in this case, this is another key component that you"
    },
    {
      "Time_Start": 1006.88,
      "Time_End": 1012.0,
      "Text": " don't really see within the GUI because it's done in the background. But the first thing that we"
    },
    {
      "Time_Start": 1012.0,
      "Time_End": 1017.2,
      "Text": " have to do before we send a task, when we want the response, is that we have to send or we have"
    },
    {
      "Time_Start": 1017.2,
      "Time_End": 1024.16,
      "Text": " to create a route. And so, in this case, we're targeting the Windows server. We're saying that"
    },
    {
      "Time_Start": 1024.16,
      "Time_End": 1035.0400000000002,
      "Text": " this obligato is the mail slot. And we want to receive responses to this Windows 11 box with"
    },
    {
      "Time_Start": 1035.0400000000002,
      "Time_End": 1042.0800000000002,
      "Text": " ob receive as the mail slot. So, basically, if we task the server and we ask for a response,"
    },
    {
      "Time_Start": 1042.0800000000002,
      "Time_End": 1046.88,
      "Text": " here's where you can send it. And then we can reference this ID in subsequent tasking."
    },
    {
      "Time_Start": 1046.88,
      "Time_End": 1051.28,
      "Text": " And if that ID matches a route, then it's going to use that route for a response."
    },
    {
      "Time_Start": 1055.1200000000001,
      "Time_End": 1062.3200000000002,
      "Text": " So, in this case, we're going to add group membership. So, we're going to take that user"
    },
    {
      "Time_Start": 1062.3200000000002,
      "Time_End": 1067.52,
      "Text": " that we created and we're going to add them to local administrators. And we're asking to receive"
    },
    {
      "Time_Start": 1067.52,
      "Time_End": 1073.6000000000001,
      "Text": " a response to our listener here. So, if all goes well, we're going to execute this. And then we'll"
    },
    {
      "Time_Start": 1073.6,
      "Time_End": 1084.3999999999999,
      "Text": " see a response. And all of this is using mail slots. And remember, this is demo one. In demo"
    },
    {
      "Time_Start": 1084.3999999999999,
      "Time_End": 1092.1599999999999,
      "Text": " two, we're going to be looking at whether or not SMB is enabled. Okay. So, the success."
    },
    {
      "Time_Start": 1092.16,
      "Time_End": 1108.48,
      "Text": " Okay. And that was that. Appreciate it."
    },
    {
      "Time_Start": 1114.0,
      "Time_End": 1116.4,
      "Text": " So, I'm going to go ahead and cut it there because it's really just showing some other"
    },
    {
      "Time_Start": 1116.4,
      "Time_End": 1121.1200000000001,
      "Text": " functionality. But for time's sake. And so, what I want to do now is just show demo two."
    },
    {
      "Time_Start": 1121.1200000000001,
      "Time_End": 1126.8000000000002,
      "Text": " And this was after reading the message that Microsoft, you know,"
    },
    {
      "Time_Start": 1128.5600000000002,
      "Time_End": 1130.88,
      "Text": " oh, you know what? I think it's trying to download them each time."
    },
    {
      "Time_Start": 1130.88,
      "Time_End": 1145.44,
      "Text": " Here's I'm just going to open up each one and let them queue."
    },
    {
      "Time_Start": 1151.68,
      "Time_End": 1162.3200000000002,
      "Text": " You know, what's funny about this is I thought that the video route would be safer since I had"
    },
    {
      "Time_Start": 1162.3200000000002,
      "Time_End": 1166.72,
      "Text": " to use multiple virtual machines and everything. But I think the live might have been better."
    },
    {
      "Time_Start": 1170.24,
      "Time_End": 1176.5600000000002,
      "Text": " All right. Let's try it again. Okay. So, again, going back to that message,"
    },
    {
      "Time_Start": 1177.12,
      "Time_End": 1181.6799999999998,
      "Text": " SMBv1 has to be enabled in order to use mail slots. As we can see on this Windows 11 machine,"
    },
    {
      "Time_Start": 1182.56,
      "Time_End": 1192.3999999999999,
      "Text": " SMBv1 protocol, stay disabled. Windows 10, SMBv1 protocol, stay disabled."
    },
    {
      "Time_Start": 1192.64,
      "Time_End": 1202.48,
      "Text": " Windows 11, stay disabled."
    },
    {
      "Time_Start": 1209.1200000000001,
      "Time_End": 1214.4,
      "Text": " Now, just to kind of further demonstrate this, we're going to pull up Wireshark. I'm going to"
    },
    {
      "Time_Start": 1214.4,
      "Time_End": 1219.1200000000001,
      "Text": " put in a little filter just so we kind of filter some stuff out. We're only going to see communication"
    },
    {
      "Time_Start": 1219.1200000000001,
      "Time_End": 1226.0800000000002,
      "Text": " between the server and the endpoint where we're sending the tasks. We're going to pull up the"
    },
    {
      "Time_Start": 1226.08,
      "Time_End": 1245.4399999999998,
      "Text": " GUI again. Create a local user. Really awesome password."
    },
    {
      "Time_Start": 1251.1999999999998,
      "Time_End": 1255.6799999999998,
      "Text": " Just want to make sure it was running. All right. Now we see the traffic. So,"
    },
    {
      "Time_Start": 1255.76,
      "Time_End": 1263.28,
      "Text": " we can see the NetBios traffic. And then we see the mail slot communication. So, again,"
    },
    {
      "Time_Start": 1263.28,
      "Time_End": 1270.48,
      "Text": " this was disabled. However, we do see the packets. We have the SMB headers here. SMBv1 is disabled."
    },
    {
      "Time_Start": 1270.48,
      "Time_End": 1276.64,
      "Text": " Yeah, we're still receiving these. And then, of course, there's like we're saying, hey, create"
    },
    {
      "Time_Start": 1276.64,
      "Time_End": 1284.0800000000002,
      "Text": " this local user along with this password. And it was successful. So, the main takeaway from this"
    },
    {
      "Time_Start": 1284.1599999999999,
      "Time_End": 1290.24,
      "Text": " point is that and I'm just going to queue this up. The main point for this is that we don't"
    },
    {
      "Time_Start": 1290.24,
      "Time_End": 1297.1999999999998,
      "Text": " want to assume that SMB or I'm sorry mail slots won't work within our environment just because"
    },
    {
      "Time_Start": 1297.1999999999998,
      "Time_End": 1304.1599999999999,
      "Text": " we have SMBv2 disabled or v1 disabled. So, that's the reason why I threw this in here."
    },
    {
      "Time_Start": 1308.24,
      "Time_End": 1312.6399999999999,
      "Text": " Next, we want to look at Windows logon session compromise. So, we have like a good transport."
    },
    {
      "Time_Start": 1312.64,
      "Time_End": 1316.5600000000002,
      "Text": " Again, you can use multiple transports. In this case, mail slots. But the next thing we want to"
    },
    {
      "Time_Start": 1316.5600000000002,
      "Time_End": 1322.0,
      "Text": " look at to provide functionality is we want to be able to compromise logon sessions. So, two key"
    },
    {
      "Time_Start": 1322.0,
      "Time_End": 1326.16,
      "Text": " things within any engagement really is that we're going to have it we're going to have"
    },
    {
      "Time_Start": 1326.16,
      "Time_End": 1332.3200000000002,
      "Text": " objectives that we have to get to, whether that's specific servers or information or, you know,"
    },
    {
      "Time_Start": 1332.3200000000002,
      "Time_End": 1337.76,
      "Text": " users. There's going to be some sort of objective that, you know, we have to meet. And within that,"
    },
    {
      "Time_Start": 1337.76,
      "Time_End": 1341.2800000000002,
      "Text": " a lot of times what it's going to have is that we're going to have to elevate our permissions"
    },
    {
      "Time_Start": 1341.28,
      "Time_End": 1345.52,
      "Text": " and we're going to have to move laterally to other endpoints. And usually those two things play"
    },
    {
      "Time_Start": 1345.52,
      "Time_End": 1351.44,
      "Text": " together. We're going to have like limited access, but then that's going to have admin access here."
    },
    {
      "Time_Start": 1351.44,
      "Time_End": 1354.56,
      "Text": " We're going to get to that one. There's going to be privileged users, you know, and so that's kind"
    },
    {
      "Time_Start": 1354.56,
      "Time_End": 1360.08,
      "Text": " of the game is that we elevate privileges by compromising other user sessions or credentials."
    },
    {
      "Time_Start": 1361.6,
      "Time_End": 1367.84,
      "Text": " So, the credential route is often through dumping credentials through LSS. I'm sure everybody's"
    },
    {
      "Time_Start": 1367.84,
      "Time_End": 1374.9599999999998,
      "Text": " familiar with that. Or LSA secrets, cast credentials, et cetera. And then also logon"
    },
    {
      "Time_Start": 1374.9599999999998,
      "Time_End": 1381.04,
      "Text": " sessions, which is another method, which is basically us gaining code execution in the"
    },
    {
      "Time_Start": 1381.04,
      "Time_End": 1386.9599999999998,
      "Text": " target user's window logon session. And just to kind of look back, remember that each logon session"
    },
    {
      "Time_Start": 1387.9199999999998,
      "Time_End": 1394.3999999999999,
      "Text": " in Windows is now kind of isolated from each other. So, there's a few mainstream techniques for this."
    },
    {
      "Time_Start": 1394.72,
      "Time_End": 1404.48,
      "Text": " For gaining code execution in a logon session. One is execute code in a process already running"
    },
    {
      "Time_Start": 1404.48,
      "Time_End": 1411.0400000000002,
      "Text": " in the logon session or we can open a handle to the process, duplicate the token, and then we can"
    },
    {
      "Time_Start": 1411.0400000000002,
      "Time_End": 1417.8400000000001,
      "Text": " use impersonation or we can just, you know, create a process. But here's the question that I want to"
    },
    {
      "Time_Start": 1417.8400000000001,
      "Time_End": 1424.0,
      "Text": " ask is what if we want to create a process on demand inside a target user's logon session"
    },
    {
      "Time_Start": 1424.0,
      "Time_End": 1432.4,
      "Text": " without executing code in it or opening a handle to another process? So, basically, we want to have"
    },
    {
      "Time_Start": 1432.4,
      "Time_End": 1438.4,
      "Text": " all that, you know, functionality, but we don't want to touch other processes, tokens within an"
    },
    {
      "Time_Start": 1438.4,
      "Time_End": 1445.36,
      "Text": " existing process of the session. So, one method is looking is we can use a task scheduler. This"
    },
    {
      "Time_Start": 1445.36,
      "Time_End": 1450.64,
      "Text": " isn't the method we're using behind the scenes. This is just an example. And so, what we would"
    },
    {
      "Time_Start": 1450.64,
      "Time_End": 1456.48,
      "Text": " do is we can create a scheduled task to run as a target user. We can set it to only run if the"
    },
    {
      "Time_Start": 1456.48,
      "Time_End": 1461.5200000000002,
      "Text": " user's logged in and then there's not a credential requirement. If we try to have it run whenever a"
    },
    {
      "Time_Start": 1461.5200000000002,
      "Time_End": 1467.2,
      "Text": " user's logged in, then obviously you need credentials. The key thing on this is that"
    },
    {
      "Time_Start": 1467.2,
      "Time_End": 1473.3600000000001,
      "Text": " when the process is created, it's going to be using the WinST zero and default desktop. And so,"
    },
    {
      "Time_Start": 1473.3600000000001,
      "Time_End": 1478.8000000000002,
      "Text": " if your process has any sort of windows associated with it, those will be displayed to the user."
    },
    {
      "Time_Start": 1478.8,
      "Time_End": 1483.76,
      "Text": " In some cases, this may be desired. For instance, if you're wanting to gather credentials, you could"
    },
    {
      "Time_Start": 1483.76,
      "Time_End": 1490.0,
      "Text": " have a fake login prompt open, you know, whatever. But in a lot of cases, you may not want them to"
    },
    {
      "Time_Start": 1490.0,
      "Time_End": 1494.32,
      "Text": " be privy to anything that's executing in the background. So, this wouldn't really be viable."
    },
    {
      "Time_Start": 1495.12,
      "Time_End": 1501.52,
      "Text": " At least I'm not sure how you could actually specify that. But also, the process chain makes"
    },
    {
      "Time_Start": 1501.52,
      "Time_End": 1506.1599999999999,
      "Text": " it pretty obvious what created the process. We're going to look at this in the next demo,"
    },
    {
      "Time_Start": 1506.16,
      "Time_End": 1511.52,
      "Text": " but basically task host W, which is associated with the task scheduler, it's going to have the"
    },
    {
      "Time_Start": 1511.52,
      "Time_End": 1521.1200000000001,
      "Text": " same parent process of the same SVC host process as the process that is created. So, from like an"
    },
    {
      "Time_Start": 1521.1200000000001,
      "Time_End": 1527.6000000000001,
      "Text": " artist perspective, it's pretty obvious to see the process chain of events. Also,"
    },
    {
      "Time_Start": 1527.6000000000001,
      "Time_End": 1532.64,
      "Text": " Windows task scheduler creates a lot of events that can be observed and scrutinized and this"
    },
    {
      "Time_Start": 1532.64,
      "Time_End": 1538.4,
      "Text": " technique has been around for a really long time. So, I'm just going to go ahead and demo that"
    },
    {
      "Time_Start": 1538.4,
      "Time_End": 1556.72,
      "Text": " really quick. Showing that usage. Okay. So, we have a domain admin logged into the machine"
    },
    {
      "Time_Start": 1557.68,
      "Time_End": 1562.64,
      "Text": " and that's who we're going to want to target. Right now, we have admin access to the same"
    },
    {
      "Time_Start": 1562.64,
      "Time_End": 1566.88,
      "Text": " server. These two servers are the same, just different login sessions, but we're, you know,"
    },
    {
      "Time_Start": 1566.88,
      "Time_End": 1572.24,
      "Text": " a low privileged user. But we do have admin access to the server. So, what we want to do is we want"
    },
    {
      "Time_Start": 1572.24,
      "Time_End": 1579.84,
      "Text": " to have code execution within the login session of the domain admin. So, we're just going to use"
    },
    {
      "Time_Start": 1579.84,
      "Time_End": 1586.48,
      "Text": " process explorer to show the association of, you know, task scheduler process along with the process"
    },
    {
      "Time_Start": 1586.48,
      "Time_End": 1591.76,
      "Text": " that's executed. I already created this one just for time's sake. And so, we're going to be"
    },
    {
      "Time_Start": 1591.76,
      "Time_End": 1599.84,
      "Text": " executing this schedule task as the domain admin only when they're logged in. And the actions is"
    },
    {
      "Time_Start": 1599.84,
      "Time_End": 1605.3600000000001,
      "Text": " we're going to make it open calc. So, if this is successful, then it should open up CMD and calc."
    },
    {
      "Time_Start": 1605.3600000000001,
      "Time_End": 1609.0400000000002,
      "Text": " I'm using slash K just so the process doesn't exit so we can observe it."
    },
    {
      "Time_Start": 1624.4,
      "Time_End": 1629.2,
      "Text": " Okay. And as you can see, we cut a little short just for time's sake. But as you can see,"
    },
    {
      "Time_Start": 1629.2,
      "Time_End": 1636.56,
      "Text": " the CMD was executed within the login session of the domain admin. So, we do have code execution"
    },
    {
      "Time_Start": 1636.56,
      "Time_End": 1641.68,
      "Text": " within that login session or that user's login session, which is great. But as you can see,"
    },
    {
      "Time_Start": 1642.4,
      "Time_End": 1649.3600000000001,
      "Text": " the parent process is associated with both our process and the task host. And so, that right"
    },
    {
      "Time_Start": 1649.3600000000001,
      "Time_End": 1654.0,
      "Text": " there is what we want to break up. We want to be able to specify who the parent is and we want"
    },
    {
      "Time_Start": 1654.72,
      "Time_End": 1662.0,
      "Text": " it to be believable. So, I'm just going to close that for now. Queue up demo four."
    },
    {
      "Time_Start": 1666.64,
      "Time_End": 1676.8,
      "Text": " Yeah. So, let's add on to our original question because there's some downsides to the task host."
    },
    {
      "Time_Start": 1676.96,
      "Time_End": 1684.0,
      "Text": " Oops. Good. There's some downsides to the task host and that is that it creates a lot of activity"
    },
    {
      "Time_Start": 1684.0,
      "Time_End": 1690.1599999999999,
      "Text": " on the endpoint that we may want to break. So, adding to the original question, we want to do"
    },
    {
      "Time_Start": 1690.1599999999999,
      "Time_End": 1695.76,
      "Text": " that and not generate the obvious event logs. We only want to display Windows to the end user if"
    },
    {
      "Time_Start": 1695.76,
      "Time_End": 1702.8,
      "Text": " we want to and we want to specify the parent creator process. And on some levels, we want"
    },
    {
      "Time_Start": 1702.8,
      "Time_End": 1708.1599999999999,
      "Text": " to evade ETW or other visibility. So, that's going to be the goal. Demo four."
    },
    {
      "Time_Start": 1719.76,
      "Time_End": 1725.12,
      "Text": " So, I'm going to open up process monitor. The key thing about process monitor is that it uses"
    },
    {
      "Time_Start": 1725.12,
      "Time_End": 1730.32,
      "Text": " Windows drivers for the collection of everything, I believe, except for the network activity. The"
    },
    {
      "Time_Start": 1730.32,
      "Time_End": 1737.12,
      "Text": " network activity is actually ETW. So, the filter that you can see here is OB service.exe. That's"
    },
    {
      "Time_Start": 1737.12,
      "Time_End": 1744.08,
      "Text": " our implant service or process. And then we have explore. That's going to be the process that we"
    },
    {
      "Time_Start": 1744.08,
      "Time_End": 1749.84,
      "Text": " want to spoof. We want the parent to look like explore.exe. So, if all goes well, we're not"
    },
    {
      "Time_Start": 1749.84,
      "Time_End": 1753.6,
      "Text": " going to see anything around OB service and everything is going to be associated with"
    },
    {
      "Time_Start": 1753.6,
      "Time_End": 1758.08,
      "Text": " explore.exe. Explore.exe can be anything, but that's what we're using for the demo."
    },
    {
      "Time_Start": 1760.32,
      "Time_End": 1766.08,
      "Text": " So, we're going to start that up."
    },
    {
      "Time_Start": 1773.84,
      "Time_End": 1776.8799999999999,
      "Text": " We're going to go ahead and spawn a process into a user session."
    },
    {
      "Time_Start": 1777.4399999999998,
      "Time_End": 1781.2,
      "Text": " In this case, we're just going to make CMD XU DIRM, but it can be anything."
    },
    {
      "Time_Start": 1786.48,
      "Time_End": 1790.08,
      "Text": " And now we're targeting the user where we have process monitor running."
    },
    {
      "Time_Start": 1791.28,
      "Time_End": 1793.28,
      "Text": " Execute it."
    },
    {
      "Time_Start": 1799.6799999999998,
      "Time_End": 1807.9199999999998,
      "Text": " Okay. So, as we can see, nothing around OB service. We remotely, over mail slots, we sent a task to"
    },
    {
      "Time_Start": 1808.6399999999999,
      "Time_End": 1816.0,
      "Text": " our implant and we had it execute a service or a process. And not only do we not see any sort"
    },
    {
      "Time_Start": 1816.0,
      "Time_End": 1821.2,
      "Text": " of network activity recorded because we're using mail slots, but we are also successfully spoofing"
    },
    {
      "Time_Start": 1821.2,
      "Time_End": 1827.44,
      "Text": " the parent process, so it's not recorded here. Explore.exe had nothing to do with the execution"
    },
    {
      "Time_Start": 1827.44,
      "Time_End": 1838.16,
      "Text": " of CMD, but process monitor believes it does. Thanks. Appreciate it."
    },
    {
      "Time_Start": 1846.72,
      "Time_End": 1849.36,
      "Text": " And for time's sake, I'm going to go ahead and kind of fast forward a little bit of this."
    },
    {
      "Time_Start": 1850.4,
      "Time_End": 1856.32,
      "Text": " What we're doing in this next session is we're going to do the exact same thing except this time"
    },
    {
      "Time_Start": 1856.32,
      "Time_End": 1862.8,
      "Text": " we're going to use UDP. And so, when we execute it this time, you can see that because we just"
    },
    {
      "Time_Start": 1862.8,
      "Time_End": 1869.2,
      "Text": " used UDP as the transport, it was picked up. So, again, if we don't use something like mail slots"
    },
    {
      "Time_Start": 1869.2,
      "Time_End": 1873.44,
      "Text": " or like I did a talk at DerbyCon a few years ago where we use wind divert to do similar things,"
    },
    {
      "Time_Start": 1874.24,
      "Time_End": 1878.64,
      "Text": " if we don't use a transport like that and kind of hide that activity, then it can be picked up on"
    },
    {
      "Time_Start": 1878.64,
      "Time_End": 1882.16,
      "Text": " in ATW. But using mail slots is a way to bypass that."
    },
    {
      "Time_Start": 1888.16,
      "Time_End": 1893.44,
      "Text": " So, I'm going to go ahead and show it in process explorer. And just for time's sake, again,"
    },
    {
      "Time_Start": 1893.44,
      "Time_End": 1897.04,
      "Text": " we're basically just showing the same thing. And so, we're going to get that set up."
    },
    {
      "Time_Start": 1898.0,
      "Time_End": 1902.8799999999999,
      "Text": " We're going to go ahead and get our tool ready to execute the task."
    },
    {
      "Time_Start": 1904.6399999999999,
      "Time_End": 1910.08,
      "Text": " Then we're going to send it off. And as we can see that unlike before when we used task scheduler,"
    },
    {
      "Time_Start": 1910.08,
      "Time_End": 1916.48,
      "Text": " it's not underneath a SBC host. It's not associated with our OB service here. It's shown"
    },
    {
      "Time_Start": 1916.48,
      "Time_End": 1923.44,
      "Text": " to be associated with explore.exe as the parent. It's in the target user. And it's even recorded"
    },
    {
      "Time_Start": 1924.0,
      "Time_End": 1935.1200000000001,
      "Text": " here. So, now the next question is, let me get this next one queued up. Okay, good."
    },
    {
      "Time_Start": 1942.0,
      "Time_End": 1949.04,
      "Text": " So, how does this work? How are we achieving this? Two things. One is that we have our service"
    },
    {
      "Time_Start": 1949.04,
      "Time_End": 1955.28,
      "Text": " running in session zero. And it's running a system. So, we need two specific privileges"
    },
    {
      "Time_Start": 1955.28,
      "Time_End": 1960.8799999999999,
      "Text": " to carry this out. SE debug privilege. And that is for spoofing the parent creator process. And"
    },
    {
      "Time_Start": 1960.8799999999999,
      "Time_End": 1966.56,
      "Text": " then we need SCT CB privilege. And that is required for creating a process in a different"
    },
    {
      "Time_Start": 1966.56,
      "Time_End": 1971.84,
      "Text": " logon session from the caller. So, this is like a really big requirement, the second part."
    },
    {
      "Time_Start": 1972.3200000000002,
      "Time_End": 1980.3200000000002,
      "Text": " So, we're going to spoof the parent versus just creating a process in the logon session. And we"
    },
    {
      "Time_Start": 1980.3200000000002,
      "Time_End": 1984.4800000000002,
      "Text": " actually want to spoof it. In order to do that, we're going to open a handle to the desired"
    },
    {
      "Time_Start": 1985.2,
      "Time_End": 1989.92,
      "Text": " parent process. Not the token. We're not stealing the token. We're just getting a handle"
    },
    {
      "Time_Start": 1989.92,
      "Time_End": 1997.6000000000001,
      "Text": " to the process itself. With create process create process. We're going to then create a new"
    },
    {
      "Time_Start": 1998.4,
      "Time_End": 2004.72,
      "Text": " thread attribute list to handle this with this attribute. And that's kind of the secret sauce."
    },
    {
      "Time_Start": 2004.72,
      "Time_End": 2008.8000000000002,
      "Text": " And then we have to determine what Windows API we're going to use to carry this out."
    },
    {
      "Time_Start": 2011.2800000000002,
      "Time_End": 2015.2800000000002,
      "Text": " We're ending up, we're going to have to use create process as a user. And the reason why is"
    },
    {
      "Time_Start": 2015.2800000000002,
      "Time_End": 2022.0000000000002,
      "Text": " because this is demonstrated in the documentation. But if we use create process with token,"
    },
    {
      "Time_Start": 2023.2800000000002,
      "Time_End": 2026.4,
      "Text": " it's only going to be for the specific session that it's in. So, basically,"
    },
    {
      "Time_Start": 2026.4,
      "Time_End": 2031.92,
      "Text": " the create process with token won't work if you're calling it from one session and the token is a"
    },
    {
      "Time_Start": 2031.92,
      "Time_End": 2036.64,
      "Text": " session from a different user. So, remember, we're in session zero and we want to gain"
    },
    {
      "Time_Start": 2036.64,
      "Time_End": 2040.3200000000002,
      "Text": " execution in a different session. So, that was not going to work. So, we're going to have to"
    },
    {
      "Time_Start": 2040.3200000000002,
      "Time_End": 2048.88,
      "Text": " use create process as user. But we don't want to and this is actually what typically is done,"
    },
    {
      "Time_Start": 2048.88,
      "Time_End": 2054.0,
      "Text": " but we don't want to access or steal a token from another process. So, what do we do then?"
    },
    {
      "Time_Start": 2054.72,
      "Time_End": 2061.04,
      "Text": " Windows has graciously given us a wonderful API WTS query user token."
    },
    {
      "Time_Start": 2061.68,
      "Time_End": 2067.04,
      "Text": " WTS is the Windows Terminal Services API. You can imagine on a terminal server that you're going to"
    },
    {
      "Time_Start": 2067.04,
      "Time_End": 2074.48,
      "Text": " want to have services being able to interact with logon sessions, right? And so, this API is going"
    },
    {
      "Time_Start": 2074.48,
      "Time_End": 2080.08,
      "Text": " to get a primary access token of the logged on user for a specified session. So, we can be running"
    },
    {
      "Time_Start": 2080.08,
      "Time_End": 2087.7599999999998,
      "Text": " in zero and we can use this Windows API to then get a primary access token for any logon session"
    },
    {
      "Time_Start": 2087.7599999999998,
      "Time_End": 2094.24,
      "Text": " that we want. In order to do this, we need to be running as NT authority system and we need to have"
    },
    {
      "Time_Start": 2094.24,
      "Time_End": 2100.4,
      "Text": " the SCTCB privilege enabled, which is available by default if you're running it at that level."
    },
    {
      "Time_Start": 2101.52,
      "Time_End": 2105.2,
      "Text": " What I couldn't find to be documented and what actually created a lot of frustration for me"
    },
    {
      "Time_Start": 2105.2,
      "Time_End": 2110.3199999999997,
      "Text": " developing this is that the caller must be running in session zero. So, for instance, if you're,"
    },
    {
      "Time_Start": 2110.3199999999997,
      "Time_End": 2114.7999999999997,
      "Text": " you know, download this code and you're testing it out and you're running the agent to do this"
    },
    {
      "Time_Start": 2114.7999999999997,
      "Time_End": 2119.9199999999996,
      "Text": " and you're not in session zero, but you're in a logon session, it's going to fail. Or at least"
    },
    {
      "Time_Start": 2119.9199999999996,
      "Time_End": 2126.7999999999997,
      "Text": " it did for me on everything. So, that's a key component is that you have to be running in session"
    },
    {
      "Time_Start": 2126.7999999999997,
      "Time_End": 2134.16,
      "Text": " zero as system for this for the WTS query user token to actually obtain the token from another"
    },
    {
      "Time_Start": 2134.16,
      "Time_End": 2140.3999999999996,
      "Text": " logon session. The next thing is, can this be detected? Because what we saw is that process"
    },
    {
      "Time_Start": 2140.3999999999996,
      "Time_End": 2145.44,
      "Text": " monitor and process explorer, they didn't capture this at all. So, I mean, if we're testing out"
    },
    {
      "Time_Start": 2145.44,
      "Time_End": 2151.2,
      "Text": " malware or whatever, we're using these tools, we're not going to see this actually fire. So, one, why?"
    },
    {
      "Time_Start": 2151.2,
      "Time_End": 2158.3999999999996,
      "Text": " And then, is the information available? The next bit of information is by Pavel Yusovich."
    },
    {
      "Time_Start": 2158.4,
      "Time_End": 2163.6800000000003,
      "Text": " He has a really great write-up over this. And so, I definitely want to give a shout-out to him."
    },
    {
      "Time_Start": 2164.48,
      "Time_End": 2170.8,
      "Text": " So, for kernel drivers that register the process creation notification with this PS set create"
    },
    {
      "Time_Start": 2170.8,
      "Time_End": 2176.88,
      "Text": " process notification. Again, this is in the kernel driver. This is basically a structure"
    },
    {
      "Time_Start": 2177.52,
      "Time_End": 2183.04,
      "Text": " that you get. And I got to speed up a little bit. But you have these different things. So, we have"
    },
    {
      "Time_Start": 2183.04,
      "Time_End": 2189.2,
      "Text": " the handle parent create process ID. That is what process monitor and process explorer are using."
    },
    {
      "Time_Start": 2189.2,
      "Time_End": 2194.4,
      "Text": " And this is the information that we're spoofing. So, now it makes sense because they're using"
    },
    {
      "Time_Start": 2194.4,
      "Time_End": 2200.32,
      "Text": " kernel drivers to gather this activity. And we're spoofing it. This is the bit of information"
    },
    {
      "Time_Start": 2200.32,
      "Time_End": 2207.44,
      "Text": " they're getting it from, most likely. The next thing that Pavel points out is that the creating"
    },
    {
      "Time_Start": 2207.44,
      "Time_End": 2214.96,
      "Text": " thread ID is also within the struct. And the real creator process ID and parent can be obtained."
    },
    {
      "Time_Start": 2216.08,
      "Time_End": 2221.44,
      "Text": " But the thing about it is that this information that would actually show our malware service,"
    },
    {
      "Time_Start": 2222.16,
      "Time_End": 2229.84,
      "Text": " this information is lost at this point once, you know, this exits. So, that information isn't stored"
    },
    {
      "Time_Start": 2229.84,
      "Time_End": 2238.96,
      "Text": " in the process, apparently. So, what about ETW? So, we can bypass and, you know, we can bypass"
    },
    {
      "Time_Start": 2239.6000000000004,
      "Time_End": 2244.7200000000003,
      "Text": " this visibility within a kernel driver that isn't looking at the create thread process ID,"
    },
    {
      "Time_Start": 2244.7200000000003,
      "Time_End": 2257.52,
      "Text": " but just the parent process ID. But what about ETW? So, we're going to go ahead and get it ready."
    },
    {
      "Time_Start": 2260.48,
      "Time_End": 2265.76,
      "Text": " We're going to go ahead and open up process monitor XP2, which, again, Pavel created and is"
    },
    {
      "Time_Start": 2265.76,
      "Time_End": 2272.32,
      "Text": " available on his GitHub. And it is using ETW versus, like, the kernel drivers that we're using"
    },
    {
      "Time_Start": 2272.32,
      "Time_End": 2275.52,
      "Text": " within process monitor and process explorer."
    },
    {
      "Time_Start": 2290.08,
      "Time_End": 2299.52,
      "Text": " So, we execute it. Now, we're just going to go ahead and pause it. And what we're going to see is that we do capture it."
    },
    {
      "Time_Start": 2299.52,
      "Time_End": 2305.44,
      "Text": " So, from a defender perspective, this can be captured using ETW because it does provide that"
    },
    {
      "Time_Start": 2305.44,
      "Time_End": 2312.8,
      "Text": " information. So, that's a good sign for defenders, right? I was kind of hoping for the latter, but,"
    },
    {
      "Time_Start": 2312.8,
      "Time_End": 2316.8,
      "Text": " yeah. Okay. So, we can see command was executed as the user."
    },
    {
      "Time_Start": 2321.6800000000003,
      "Time_End": 2329.92,
      "Text": " I just want to, like, end on this last demo is that, you know, we do see this activity of spoofing"
    },
    {
      "Time_Start": 2329.92,
      "Time_End": 2336.1600000000003,
      "Text": " the parent within ETW, but we do not see it unless the kernel driver that's being used by the endpoint"
    },
    {
      "Time_Start": 2336.1600000000003,
      "Time_End": 2342.0,
      "Text": " product is specifically looking for and looking within that other parameter within the structure."
    },
    {
      "Time_Start": 2343.76,
      "Time_End": 2348.96,
      "Text": " I'm going to brace this very quickly because I just have a few minutes left. But the other thing is"
    },
    {
      "Time_Start": 2348.96,
      "Time_End": 2352.4,
      "Text": " looking at, you know, anti-debug and runtime awareness within your malware."
    },
    {
      "Time_Start": 2354.32,
      "Time_End": 2359.36,
      "Text": " We're going to look at TLS callbacks, thread hide from debugger, being debugged, and environment"
    },
    {
      "Time_Start": 2359.36,
      "Time_End": 2363.28,
      "Text": " variables. Basically, a bunch of different things I've used very successfully over the years."
    },
    {
      "Time_Start": 2364.2400000000002,
      "Time_End": 2375.2000000000003,
      "Text": " The first thing are TLS callbacks, thread local storage. So, these are executed before a thread"
    },
    {
      "Time_Start": 2375.2000000000003,
      "Time_End": 2379.76,
      "Text": " is created. And so, it's very useful because whenever a process executes, like, you're going"
    },
    {
      "Time_Start": 2379.76,
      "Time_End": 2385.6800000000003,
      "Text": " to have your main thread. Well, if you implement, you know, TLS callbacks, then that is going to be"
    },
    {
      "Time_Start": 2385.6800000000003,
      "Time_End": 2391.84,
      "Text": " executed before main. So, you can actually, you know, implement whatever you want before the main"
    },
    {
      "Time_Start": 2391.84,
      "Time_End": 2395.92,
      "Text": " function is ever called. I didn't come up with this. Obviously, this has been around for a minute."
    },
    {
      "Time_Start": 2395.92,
      "Time_End": 2402.4,
      "Text": " But at least for me, like, actually getting this to work and the code available for it was, yeah,"
    },
    {
      "Time_Start": 2402.4,
      "Time_End": 2408.7200000000003,
      "Text": " I really couldn't find it. But it's not necessarily malicious activity because it's using a lot of"
    },
    {
      "Time_Start": 2408.7200000000003,
      "Time_End": 2415.2000000000003,
      "Text": " mainstream products, projects such as Chromium, which is where I reference here. But the key thing"
    },
    {
      "Time_Start": 2415.2000000000003,
      "Time_End": 2420.4,
      "Text": " is that it's almost like a constructor, ability to have a constructor and destructor for threads."
    },
    {
      "Time_Start": 2420.4,
      "Time_End": 2426.96,
      "Text": " So, you can have execution before it's executed and after. So, obviously, we have execution very"
    },
    {
      "Time_Start": 2426.96,
      "Time_End": 2430.64,
      "Text": " early in the execution of the process, even before main is called."
    },
    {
      "Time_Start": 2434.48,
      "Time_End": 2439.04,
      "Text": " So, thread hide from debugger. This technique has been very successful for me."
    },
    {
      "Time_Start": 2443.84,
      "Time_End": 2448.56,
      "Text": " There's an attribute, there's an attribute whenever you're creating a thread"
    },
    {
      "Time_Start": 2449.2,
      "Time_End": 2454.32,
      "Text": " where you can set it to not being, like, you can set it to not allow being debugged."
    },
    {
      "Time_Start": 2454.88,
      "Time_End": 2458.88,
      "Text": " And so, when you create the thread and you say, hey, you know, hide from debugger, don't allow me"
    },
    {
      "Time_Start": 2458.88,
      "Time_End": 2465.12,
      "Text": " to be debugged, if you debug that thread, the entire process crashes. So, even if this is like"
    },
    {
      "Time_Start": 2465.12,
      "Time_End": 2470.4,
      "Text": " a different thread other than main or whatever else, if you try to debug that process, the entire"
    },
    {
      "Time_Start": 2470.4,
      "Time_End": 2476.08,
      "Text": " process or that thread, that entire process will crash. And this is just because for debugging"
    },
    {
      "Time_Start": 2476.08,
      "Time_End": 2480.48,
      "Text": " purposes, obviously, you'd have to have a thread running that isn't being debugged itself."
    },
    {
      "Time_Start": 2484.08,
      "Time_End": 2488.3199999999997,
      "Text": " So, the next thing is, like, well, if we detect something that is happening that we don't want"
    },
    {
      "Time_Start": 2488.3199999999997,
      "Time_End": 2495.04,
      "Text": " to happen, how can we leverage this? And so, we want to know if we're being debugged, and if so,"
    },
    {
      "Time_Start": 2495.04,
      "Time_End": 2502.24,
      "Text": " we want to take an action. Historically, a lot of, you know, cases you've used is debugger present."
    },
    {
      "Time_Start": 2502.2400000000002,
      "Time_End": 2507.84,
      "Text": " We don't want to do that because it's very obvious. But we don't have to. It's very simple."
    },
    {
      "Time_Start": 2507.84,
      "Time_End": 2514.5600000000004,
      "Text": " All we have to do is get the address of the process environment block, PEB, and then we can"
    },
    {
      "Time_Start": 2514.5600000000004,
      "Time_End": 2520.2400000000002,
      "Text": " access the values, the value at the offset of being debugged. So, it's very simple. We basically get"
    },
    {
      "Time_Start": 2520.2400000000002,
      "Time_End": 2524.8,
      "Text": " the address to PEB, and then we get the offset, and then we can identify if we're being debugged"
    },
    {
      "Time_Start": 2524.8,
      "Time_End": 2530.2400000000002,
      "Text": " or not. You can, you know, use this in code entirely. This is fully working, but what we're"
    },
    {
      "Time_Start": 2530.2400000000002,
      "Time_End": 2536.2400000000002,
      "Text": " showing here on the right is that we have our main function. It just simply types a number after"
    },
    {
      "Time_Start": 2536.2400000000002,
      "Time_End": 2541.6000000000004,
      "Text": " getting some input, but above it, this is where we have our TLS callbacks function being created."
    },
    {
      "Time_Start": 2541.6000000000004,
      "Time_End": 2546.48,
      "Text": " So, we're creating a thread. It's our anti-debug thread. So, before main is called, we're going to"
    },
    {
      "Time_Start": 2546.48,
      "Time_End": 2553.84,
      "Text": " execute this anti-debug thread, and then after that's set up, we're going to make it where it"
    },
    {
      "Time_Start": 2553.84,
      "Time_End": 2559.2000000000003,
      "Text": " hides from the debugger. Within that, we're going to read the offset of being debugged within the"
    },
    {
      "Time_Start": 2559.2000000000003,
      "Time_End": 2566.7200000000003,
      "Text": " PEB, and if we are being debugged, then we're going to add a breakpoint. So, if we add a breakpoint"
    },
    {
      "Time_Start": 2566.7200000000003,
      "Time_End": 2571.84,
      "Text": " within a thread that is configured to not being debugged, the process crashes. Appreciate it."
    },
    {
      "Time_Start": 2573.6000000000004,
      "Time_End": 2577.5200000000004,
      "Text": " The next thing is basically just looking at environment variables. One key thing in a lot"
    },
    {
      "Time_Start": 2577.5200000000004,
      "Time_End": 2583.1200000000003,
      "Text": " of sandboxes is that they're not domain joined, and so we can look at the user domain and computer"
    },
    {
      "Time_Start": 2583.12,
      "Time_End": 2591.6,
      "Text": " name, compare them. If they are not, or if they are the same, then the box is not domain joined."
    },
    {
      "Time_Start": 2591.6,
      "Time_End": 2598.88,
      "Text": " So, simply checking for this can help you bypass a lot of sandboxes, because for what I'm doing,"
    },
    {
      "Time_Start": 2598.88,
      "Time_End": 2603.2,
      "Text": " typically if we're executing something on a Windows endpoint, if it's not domain joined,"
    },
    {
      "Time_Start": 2603.2,
      "Time_End": 2607.2799999999997,
      "Text": " then it's probably not something that we want to have our stuff execute on. So, this can be used"
    },
    {
      "Time_Start": 2607.28,
      "Time_End": 2615.84,
      "Text": " in conjunction with the TLS callbacks to have really early detection on, you know, the state of"
    },
    {
      "Time_Start": 2615.84,
      "Time_End": 2622.6400000000003,
      "Text": " the machine, and if we actually want to run our implant or not. So, in conclusion, the implant"
    },
    {
      "Time_Start": 2622.6400000000003,
      "Time_End": 2628.48,
      "Text": " messaging protocol that we've implemented, it has response, I'm sorry, it'll support unidirectional"
    },
    {
      "Time_Start": 2628.48,
      "Time_End": 2637.44,
      "Text": " or bidirectional transports, and you can have optional responses. Mail slots are available even"
    },
    {
      "Time_Start": 2637.44,
      "Time_End": 2645.2,
      "Text": " if SMBV1 is disabled. The network traffic from that activity is not, is disassociated from the"
    },
    {
      "Time_Start": 2645.2,
      "Time_End": 2650.48,
      "Text": " server and client process. It also supports broadcasting. One of the things in the demos"
    },
    {
      "Time_Start": 2650.48,
      "Time_End": 2656.48,
      "Text": " that we didn't see, because I was trying to hurry, is that if you put a star, or instead of the net bios"
    },
    {
      "Time_Start": 2656.48,
      "Time_End": 2661.92,
      "Text": " name, and you send it out, then any implant within the domain network is going to receive that and"
    },
    {
      "Time_Start": 2661.92,
      "Time_End": 2666.48,
      "Text": " execute. So, we can send out one task, and it'll propagate to everything in there. So, if you want"
    },
    {
      "Time_Start": 2666.48,
      "Time_End": 2671.44,
      "Text": " to target a specific user, we don't know where they are, we can send it out, and then it'll just,"
    },
    {
      "Time_Start": 2671.44,
      "Time_End": 2677.28,
      "Text": " it'll execute within that logon session, if and where they're logged in. Again, authentication"
    },
    {
      "Time_Start": 2677.28,
      "Time_End": 2683.84,
      "Text": " isn't required. We just went over, like, the process execution stuff, and, you know, spoofing"
    },
    {
      "Time_Start": 2683.84,
      "Time_End": 2689.6800000000003,
      "Text": " the parent process. Key takeaways is, does your environment detect it? Does your stack detect this?"
    },
    {
      "Time_Start": 2689.6800000000003,
      "Time_End": 2693.76,
      "Text": " Are they looking at the correct things? Are these an ETW, or their own drivers? You know, what is"
    },
    {
      "Time_Start": 2693.76,
      "Time_End": 2700.0,
      "Text": " the state of your network, and can they defend against this? And, at this point, I'll go ahead"
    },
    {
      "Time_Start": 2700.0,
      "Time_End": 2705.6000000000004,
      "Text": " and close. Again, thank you for being here. I know it's late in the day. Huge DEF CON fan, obviously."
    },
    {
      "Time_Start": 2705.6000000000004,
      "Time_End": 2707.6000000000004,
      "Text": " So, yeah, I really appreciate being here."
    }
  ]
}