{"segments": [{"Time_Start": 0.0, "Time_End": 27.04, "Text": " kind of put together a number of different panel ideas this year this year we wanted to do a little more in the technical side so that it um so it wasn't all just script kitties so i can take it by the attendance here that that was a good idea"}, {"Time_Start": 30.0, "Time_End": 59.980000000000004, "Text": " all right i guess we'll keep doing that uh tomorrow we've got a a pretty full session in all three rooms and we'll try to get things more organized certainly appreciate your patience i know a lot of you been waiting outside trying to get in here i can tell you that typically saturday was our big busy day um today uh i think we broke all the records in one day of what we did last year so the attendance has been really great and we thank you all for for making that possible and we hope we put together a good conference"}, {"Time_Start": 60.0, "Time_End": 68.8, "Text": " for you and a lot of party a lot of fun hey it's vegas fucking a man you should have a great time all right so not to delay things"}, {"Time_Start": 68.8, "Time_End": 78.24000000000001, "Text": " any longer try to keep a little bit on schedule if possible new hack city the man himself jeruth the one you've been waiting for i'm going to turn the mic over to him and here you go"}, {"Time_Start": 90.0, "Time_End": 95.82, "Text": " flow detection this came about on a discussion on pound CDC I was talking"}, {"Time_Start": 95.82, "Time_End": 101.44, "Text": " with T12 and Java Man about the way that IDS is are looking for strings and buffer"}, {"Time_Start": 101.44, "Time_End": 111.22, "Text": " overflows can you hit this slide this is a little background on me I worked in embedded"}, {"Time_Start": 111.22, "Time_End": 117.16, "Text": " systems I'm doing working on IDS is right now I've been I'm a part of a Newhack City the"}, {"Time_Start": 117.16, "Time_End": 119.98, "Text": " collective in San Francisco working on a couple different"}, {"Time_Start": 120.0, "Time_End": 124.0, "Text": " projects and of course we have T-shirts available."}, {"Time_Start": 128.0, "Time_End": 132.0, "Text": " I'm going to start out with a brief overview of buffer overflows."}, {"Time_Start": 132.0, "Time_End": 136.0, "Text": " I'm going to cover just as a refresher, like the stuff that was like in the Alpha One article,"}, {"Time_Start": 136.0, "Time_End": 140.0, "Text": " just to get everyone up to speed in case, I don't know, forgot something."}, {"Time_Start": 140.0, "Time_End": 145.0, "Text": " Then I'm also going to go over like the kinds of signatures that IDS is are looking for"}, {"Time_Start": 145.0, "Time_End": 149.98, "Text": " and then the techniques to code around the signatures so that you can bypass that"}, {"Time_Start": 150.0, "Time_End": 157.0, "Text": " IDES, get your attack through, and no one will notice."}, {"Time_Start": 157.0, "Time_End": 160.0, "Text": " You hit the next one."}, {"Time_Start": 160.0, "Time_End": 164.0, "Text": " This is the stack on most computers."}, {"Time_Start": 164.0, "Time_End": 168.0, "Text": " And what you're trying to do is these local variables here,"}, {"Time_Start": 168.0, "Time_End": 172.0, "Text": " you're trying to overwrite up this way and overwrite the return address."}, {"Time_Start": 172.0, "Time_End": 177.0, "Text": " Once you can get the return address to point back into your buffer,"}, {"Time_Start": 177.0, "Time_End": 179.0, "Text": " then you can execute your own code."}, {"Time_Start": 179.0, "Time_End": 186.0, "Text": " This is the shell code that was provided in the Alpha One article."}, {"Time_Start": 186.0, "Time_End": 191.0, "Text": " I'll step through it a little bit and cover what's going on."}, {"Time_Start": 191.0, "Time_End": 198.0, "Text": " At the top, you're going to have a jump with an offset that's going into this call instruction."}, {"Time_Start": 198.0, "Time_End": 205.0, "Text": " The reason you need a jump in a call is that you have no way of knowing the current execution point or the EIP."}, {"Time_Start": 205.0, "Time_End": 208.0, "Text": " You need to know the EIP for a..."}, {"Time_Start": 208.0, "Time_End": 212.2, "Text": " because most of the buffer flow is you're going to try to execute a shell."}, {"Time_Start": 212.2, "Time_End": 221.2, "Text": " The exec VEA call requires a bin-sh string, in memory, a pointer to that string,"}, {"Time_Start": 221.2, "Time_End": 224.5, "Text": " the address of the string, and a null."}, {"Time_Start": 224.5, "Time_End": 230.5, "Text": " So in order to insert these things in the proper registers,"}, {"Time_Start": 230.5, "Time_End": 233.5, "Text": " we're going to need to know the actual address."}, {"Time_Start": 233.5, "Time_End": 237.5, "Text": " So the first thing that happens is you overwrite the"}, {"Time_Start": 237.5, "Time_End": 240.5, "Text": " Can you go back one?"}, {"Time_Start": 240.5, "Time_End": 246.5, "Text": " You overwrite this return address to point somewhere into here."}, {"Time_Start": 246.5, "Time_End": 250.5, "Text": " And you're usually going to pad this with no-ops because you don't know the exact address."}, {"Time_Start": 250.5, "Time_End": 252.5, "Text": " You're kind of just guessing here."}, {"Time_Start": 252.5, "Time_End": 255.5, "Text": " So the no-ops provides some padding so you can guess in here."}, {"Time_Start": 255.5, "Time_End": 260.5, "Text": " And usually like your code will be like maybe 50 bytes and this might be a 1K buffer."}, {"Time_Start": 260.5, "Time_End": 263.5, "Text": " So you have all kinds of space for no-off."}, {"Time_Start": 263.5, "Time_End": 266.5, "Text": " So it's pretty easy to get in there."}, {"Time_Start": 266.5, "Time_End": 277.5, "Text": " Okay, after you get the, you do the jump call, the address after the call is going to be pushed onto the stack."}, {"Time_Start": 277.5, "Time_End": 285.5, "Text": " Then they get the address, you pop it back into ESI, which is a stack index."}, {"Time_Start": 285.5, "Time_End": 288.5, "Text": " You could really use any register in protected mode."}, {"Time_Start": 288.5, "Time_End": 289.5, "Text": " It doesn't matter."}, {"Time_Start": 289.5, "Time_End": 295.5, "Text": " There's no restrictions on base index, so this was shown in the article."}, {"Time_Start": 295.5, "Time_End": 302.5, "Text": " It was shown in the article, but there's other ways to do it so that it avoids the common signatures that are out there."}, {"Time_Start": 302.5, "Time_End": 310.5, "Text": " After that, you put the address of this in a location right after the string."}, {"Time_Start": 310.5, "Time_End": 312.5, "Text": " That's going to be your pointer to the string."}, {"Time_Start": 312.5, "Time_End": 317.5, "Text": " Then you clear out EAX."}, {"Time_Start": 317.5, "Time_End": 324.5, "Text": " You use the low byte AL and put that seven locations after ESI, after here."}, {"Time_Start": 324.5, "Time_End": 326.5, "Text": " here, so that's terminating the string."}, {"Time_Start": 326.5, "Time_End": 329.5, "Text": " That's how you terminate the string."}, {"Time_Start": 329.5, "Time_End": 334.5, "Text": " After that, you take EAX, which still has zeros,"}, {"Time_Start": 334.5, "Time_End": 338.5, "Text": " and put it 12 locations after this, which there's nothing there,"}, {"Time_Start": 338.5, "Time_End": 339.5, "Text": " and that'll be your null string."}, {"Time_Start": 339.5, "Time_End": 342.5, "Text": " There's four bytes of nulls."}, {"Time_Start": 342.5, "Time_End": 347.5, "Text": " After that, you move B into AL, ESI into EBX,"}, {"Time_Start": 347.5, "Time_End": 351.5, "Text": " load the addresses of the pointer into ECX,"}, {"Time_Start": 351.5, "Time_End": 353.5, "Text": " and the address of the nulls into EDX."}, {"Time_Start": 353.5, "Time_End": 354.5, "Text": " You do an intro."}, {"Time_Start": 354.5, "Time_End": 358.5, "Text": " 80. This is code specifically to Linux, because that's how it handles it."}, {"Time_Start": 358.5, "Time_End": 360.5, "Text": " That's the kernel interface."}, {"Time_Start": 360.5, "Time_End": 362.5, "Text": " So this does the exec VE call."}, {"Time_Start": 362.5, "Time_End": 365.5, "Text": " This call right here is exit in case anything goes wrong here."}, {"Time_Start": 365.5, "Time_End": 368.5, "Text": " You can exit out and you won't keep pulling stuff off the stack."}, {"Time_Start": 368.5, "Time_End": 370.5, "Text": " But that's just basic overview."}, {"Time_Start": 370.5, "Time_End": 374.5, "Text": " Here's some signatures from Snort."}, {"Time_Start": 374.5, "Time_End": 379.5, "Text": " This is what it's looking for over the wire."}, {"Time_Start": 379.5, "Time_End": 384.5, "Text": " This is a common overflow. This is 2.4.2.U.F.D.P."}, {"Time_Start": 384.5, "Time_End": 386.5, "Text": " run by ADM."}, {"Time_Start": 386.5, "Time_End": 389.0, "Text": " Right here, these are the instructions that's looking for."}, {"Time_Start": 389.0, "Time_End": 390.5, "Text": " This is doing a..."}, {"Time_Start": 390.5, "Time_End": 393.5, "Text": " This right here is up to here is an SUID call,"}, {"Time_Start": 393.5, "Time_End": 395.5, "Text": " and here's another SUID call."}, {"Time_Start": 395.5, "Time_End": 399.5, "Text": " So it's looking for the instructions in the packet."}, {"Time_Start": 399.5, "Time_End": 402.5, "Text": " Similar to here, this is, I believe, a jump."}, {"Time_Start": 402.5, "Time_End": 406.5, "Text": " And here's one of the most common ones."}, {"Time_Start": 406.5, "Time_End": 409.5, "Text": " Just looking for long strings of NO-OPS"}, {"Time_Start": 409.5, "Time_End": 411.5, "Text": " usually means that someone's trying to overflow a buffer"}, {"Time_Start": 411.5, "Time_End": 413.5, "Text": " because they're using those for padding."}, {"Time_Start": 413.5, "Time_End": 414.5, "Text": " And we'll show how to go around"}, {"Time_Start": 414.5, "Time_End": 418.5, "Text": " that. And this right here, lots of people use the slash bin"}, {"Time_Start": 418.5, "Time_End": 422.5, "Text": " SH to execute a shell, so people are looking for this too."}, {"Time_Start": 426.5, "Time_End": 430.5, "Text": " So in order to avoid detection, you have to code a little differently."}, {"Time_Start": 430.5, "Time_End": 434.5, "Text": " You can change the location or the order of the instructions you're using"}, {"Time_Start": 434.5, "Time_End": 436.5, "Text": " so that the signature is different."}, {"Time_Start": 436.5, "Time_End": 440.5, "Text": " You can use different instructions and achieve the same objective."}, {"Time_Start": 440.5, "Time_End": 443.5, "Text": " You can use different registers within the instructions."}, {"Time_Start": 443.5, "Time_End": 444.5, "Text": " You can replace the instructions."}, {"Time_Start": 444.5, "Time_End": 451.5, "Text": " no-ops with other one-byte instructions, or you can encrypt your payload."}, {"Time_Start": 451.5, "Time_End": 458.5, "Text": " This code is copied from the code I showed earlier."}, {"Time_Start": 458.5, "Time_End": 472.5, "Text": " You see that, it's zeroing it here first, and then all this being changed is the order of moving this into AL."}, {"Time_Start": 472.5, "Time_End": 478.5, "Text": " So if you move it around, it'll let the signature come out differently."}, {"Time_Start": 478.5, "Time_End": 479.5, "Text": " Go ahead."}, {"Time_Start": 479.5, "Time_End": 484.5, "Text": " Different instructions for the same objective."}, {"Time_Start": 484.5, "Time_End": 489.5, "Text": " Instead of doing like this type of call with a static offset,"}, {"Time_Start": 489.5, "Time_End": 494.5, "Text": " you can zero register, move that into the register, and call the register."}, {"Time_Start": 494.5, "Time_End": 498.5, "Text": " And this will produce a different signature than the original one."}, {"Time_Start": 498.5, "Time_End": 502.5, "Text": " Another thing you can do, instead of using, I would say, XOR,"}, {"Time_Start": 502.5, "Time_End": 505.5, "Text": " zero it out, you can use the subtraction to zero it out."}, {"Time_Start": 505.5, "Time_End": 508.5, "Text": " And these are all simple techniques that people have used before,"}, {"Time_Start": 508.5, "Time_End": 511.5, "Text": " but it will evade signatures."}, {"Time_Start": 511.5, "Time_End": 515.5, "Text": " Oh, here."}, {"Time_Start": 515.5, "Time_End": 519.5, "Text": " Well, um, that..."}, {"Time_Start": 519.5, "Time_End": 522.5, "Text": " Go ahead and go back."}, {"Time_Start": 522.5, "Time_End": 526.5, "Text": " The idea here is like, at the top of the buffer overflow,"}, {"Time_Start": 526.5, "Time_End": 529.5, "Text": " there was a pop ESI."}, {"Time_Start": 529.5, "Time_End": 532.5, "Text": " You could pop, let's say, eBX, and then"}, {"Time_Start": 532.5, "Time_End": 536.0, "Text": " The address of the string is already located in EBX,"}, {"Time_Start": 536.0, "Time_End": 539.0, "Text": " which you'd use for later, so it's actually optimizing the code,"}, {"Time_Start": 539.0, "Time_End": 541.1, "Text": " and it changes it around a little bit. Protected mode."}, {"Time_Start": 541.1, "Time_End": 544.6, "Text": " It doesn't matter what registers you use with certain limitations."}, {"Time_Start": 544.6, "Time_End": 547.0, "Text": " You can't push into EIP and stuff like that."}, {"Time_Start": 547.0, "Time_End": 549.5, "Text": " But most of the general purpose registers, you can do anything you want with."}, {"Time_Start": 553.5, "Time_End": 555.5, "Text": " A lot of people use..."}, {"Time_Start": 555.5, "Time_End": 557.5, "Text": " I don't know."}, {"Time_Start": 557.5, "Time_End": 559.5, "Text": " Nope."}, {"Time_Start": 559.5, "Time_End": 560.5, "Text": " No."}, {"Time_Start": 560.5, "Time_End": 561.5, "Text": " Um."}, {"Time_Start": 561.5, "Time_End": 562.0, "Text": " Um."}, {"Time_Start": 562.5, "Time_End": 564.5, "Text": " Pretend this is not here."}, {"Time_Start": 569.5, "Time_End": 576.5, "Text": " The idea behind the no-ops is you're trying to provide some kind of padding to be able to jump into your exploit"}, {"Time_Start": 576.5, "Time_End": 578.5, "Text": " because you don't know exactly where it's at."}, {"Time_Start": 578.5, "Time_End": 581.5, "Text": " So no-ops are used because they don't do anything."}, {"Time_Start": 581.5, "Time_End": 584.5, "Text": " But you can use other instructions that are also one-by-long"}, {"Time_Start": 584.5, "Time_End": 586.5, "Text": " that will not affect the outcome of your exploit."}, {"Time_Start": 586.5, "Time_End": 589.5, "Text": " You could use like CLC, clear the cleary flag,"}, {"Time_Start": 589.5, "Time_End": 591.5, "Text": " or set the clarity flag, or set the direction flag,"}, {"Time_Start": 591.5, "Time_End": 592.5, "Text": " or set the direction flag."}, {"Time_Start": 592.5, "Time_End": 593.4, "Text": " clear the direction flag."}, {"Time_Start": 593.5, "Time_End": 595.56, "Text": " There's all kinds of one-byte instructions you can use."}, {"Time_Start": 595.86, "Time_End": 598.08, "Text": " It will not affect your exploit in any way,"}, {"Time_Start": 598.52, "Time_End": 601.96, "Text": " but it will avoid the signature that's looking for all no-ops."}, {"Time_Start": 605.9, "Time_End": 607.08, "Text": " I'm covering that next."}, {"Time_Start": 609.48, "Time_End": 611.84, "Text": " The types encryption are really simple."}, {"Time_Start": 612.26, "Time_End": 615.52, "Text": " All we're trying to do is avoid the known signature."}, {"Time_Start": 617.34, "Time_End": 618.72, "Text": " We don't have a lot of space,"}, {"Time_Start": 618.72, "Time_End": 622.28, "Text": " so the first tile would be like some kind of rot-throat"}, {"Time_Start": 622.28, "Time_End": 625.28, "Text": " just add a constant offset or subtract a constant offset."}, {"Time_Start": 625.28, "Time_End": 628.28, "Text": " The second one would be an XOR with a constant."}, {"Time_Start": 628.28, "Time_End": 631.28, "Text": " And the last one would be an XOR with a variable where you,"}, {"Time_Start": 631.28, "Time_End": 635.28, "Text": " your XOR is based on the outcome of your previous instruction."}, {"Time_Start": 635.28, "Time_End": 638.28, "Text": " It will provide a little bit more protection."}, {"Time_Start": 642.28, "Time_End": 645.28, "Text": " Self-modifying code, there's been a, like,"}, {"Time_Start": 645.28, "Time_End": 651.28, "Text": " IMAP exploit, you had to add a 50-byte offset to the bin SH to get it through."}, {"Time_Start": 651.28, "Time_End": 652.28, "Text": " There's filters."}, {"Time_Start": 652.28, "Time_End": 656.3399999999999, "Text": " sometimes HTTP filters won't allow certain characters through,"}, {"Time_Start": 656.74, "Time_End": 658.54, "Text": " so people have used self-modifying code."}, {"Time_Start": 659.14, "Time_End": 660.9, "Text": " And someone pointed out this week,"}, {"Time_Start": 661.9, "Time_End": 665.3, "Text": " someone on this side right here wrote some encrypted shell code"}, {"Time_Start": 665.3, "Time_End": 667.76, "Text": " that would encrypted shell code that would encrypt just the bin-sH string at the end."}, {"Time_Start": 668.72, "Time_End": 673.24, "Text": " But the rest of the payload is still detectable by signatures."}, {"Time_Start": 674.6999999999999, "Time_End": 676.68, "Text": " This is the architecture that I chose."}, {"Time_Start": 679.8, "Time_End": 681.52, "Text": " This is the decryption block,"}, {"Time_Start": 681.52, "Time_End": 682.9399999999999, "Text": " and this is an encrypted payload."}, {"Time_Start": 684.34, "Time_End": 687.4, "Text": " So the encryption block is up here."}, {"Time_Start": 687.84, "Time_End": 689.9399999999999, "Text": " First you start with a jump, and then you have a call."}, {"Time_Start": 690.36, "Time_End": 693.26, "Text": " On your stack, you'll have the first address of the encrypted instructions."}, {"Time_Start": 695.6, "Time_End": 699.74, "Text": " Then in here, you start reading in the data, either adding constant offset"}, {"Time_Start": 699.74, "Time_End": 703.14, "Text": " or doing an X-O with a constant, and writing data back out."}, {"Time_Start": 703.64, "Time_End": 707.4, "Text": " Once this drops through and this down, you jump into the first instruction of your payload"}, {"Time_Start": 707.4, "Time_End": 708.88, "Text": " and then execute your exploit."}, {"Time_Start": 711.52, "Time_End": 718.02, "Text": " This is probably really small to see, but it's the same thing I said."}, {"Time_Start": 718.18, "Time_End": 719.9, "Text": " You start here, here's the jump."}, {"Time_Start": 720.74, "Time_End": 721.76, "Text": " It goes to the call."}, {"Time_Start": 722.18, "Time_End": 726.3, "Text": " This cover here is not encrypted for demonstration purposes,"}, {"Time_Start": 726.5, "Time_End": 727.8199999999999, "Text": " so you wouldn't be able to see what it was."}, {"Time_Start": 728.4, "Time_End": 733.5799999999999, "Text": " And then you go back up, start decrypting, go through the loop, drop down,"}, {"Time_Start": 734.18, "Time_End": 735.28, "Text": " jump into the instructions."}, {"Time_Start": 737.28, "Time_End": 738.54, "Text": " It's pretty simple."}, {"Time_Start": 740.0799999999999, "Time_End": 741.0799999999999, "Text": " I have a,"}, {"Time_Start": 741.52, "Time_End": 749.52, "Text": " I had a couple of demos working exploits that have been converted to this, but we don't have the setup to have a live demo."}, {"Time_Start": 751.52, "Time_End": 754.6999999999999, "Text": " I'm going to release the paper probably within a week."}, {"Time_Start": 754.76, "Time_End": 758.1999999999999, "Text": " I had Spark code written, but it's not fully tested and needs a little more work."}, {"Time_Start": 758.66, "Time_End": 762.98, "Text": " So either I'm going to release the paper in about a week with the X-86 code or maybe two weeks"}, {"Time_Start": 762.98, "Time_End": 766.02, "Text": " and have both X-86 and Spark code examples."}, {"Time_Start": 767.72, "Time_End": 768.74, "Text": " GCC sucks."}, {"Time_Start": 769.34, "Time_End": 771.5, "Text": " You don't want to use GCC."}, {"Time_Start": 771.52, "Time_End": 777.5799999999999, "Text": " to code exploits. There's lots of instructions. It will not compile. It took me forever"}, {"Time_Start": 777.5799999999999, "Time_End": 784.52, "Text": " to figure out why I couldn't get the instructions to compile. The assembler GCC uses is called GAST,"}, {"Time_Start": 784.52, "Time_End": 790.56, "Text": " and they chose not to implement any instructions that have 8-bit offsets. And we're working"}, {"Time_Start": 790.56, "Time_End": 795.64, "Text": " with such little code that we're never going to go past 8-bit offsets, so like a loop instruction"}, {"Time_Start": 795.64, "Time_End": 801.5, "Text": " can't use. So if you're going to write exploits, use NASM. NASM supports the 4."}, {"Time_Start": 801.52, "Time_End": 803.38, "Text": " I-36 instruction set."}, {"Time_Start": 803.9399999999999, "Time_End": 805.66, "Text": " And this is one you want to use for optimization."}, {"Time_Start": 806.96, "Time_End": 810.06, "Text": " The question is, you don't have a choice? You don't have a choice on Spark?"}, {"Time_Start": 812.56, "Time_End": 815.14, "Text": " The question is, you don't have a choice on Spark."}, {"Time_Start": 815.56, "Time_End": 819.4399999999999, "Text": " I don't know how, I haven't looked into if Spark doesn't do all the instructions,"}, {"Time_Start": 819.62, "Time_End": 825.6999999999999, "Text": " because all Spark's instructions are 32-bit, because I haven't been writing anything for,"}, {"Time_Start": 825.6999999999999, "Time_End": 827.3, "Text": " you know, 64-bit stuff."}, {"Time_Start": 827.68, "Time_End": 830.28, "Text": " But they're all 32-bit. They're all the same size. It's risk."}, {"Time_Start": 830.28, "Time_End": 831.46, "Text": " So I'm assuming."}, {"Time_Start": 831.52, "Time_End": 832.6, "Text": " it would support all the instructions."}, {"Time_Start": 837.16, "Time_End": 841.4399999999999, "Text": " The comment is GCC-295 on Solaris does support all the instructions."}, {"Time_Start": 842.66, "Time_End": 843.12, "Text": " What's that?"}, {"Time_Start": 844.46, "Time_End": 845.52, "Text": " On Solaris 8."}, {"Time_Start": 849.52, "Time_End": 851.36, "Text": " Ah."}, {"Time_Start": 852.4, "Time_End": 854.78, "Text": " And that's it?"}, {"Time_Start": 854.86, "Time_End": 855.6999999999999, "Text": " Is there any questions?"}, {"Time_Start": 858.62, "Time_End": 859.18, "Text": " Yeah."}, {"Time_Start": 861.52, "Time_End": 874.4399999999999, "Text": " The question is, how is this different from the techniques virus riders used to evade detection?"}, {"Time_Start": 877.9399999999999, "Time_End": 880.1, "Text": " You know, like a portable execution oppressor?"}, {"Time_Start": 880.4, "Time_End": 882.54, "Text": " I mean, I'm not saying that these are new techniques."}, {"Time_Start": 882.9, "Time_End": 886.56, "Text": " I'm just saying these are things available that you can do to avoid detection."}, {"Time_Start": 891.52, "Time_End": 901.34, "Text": " If you're looking to detect this, in the paper I'm writing,"}, {"Time_Start": 901.46, "Time_End": 903.22, "Text": " it's going to have a sample decryption header."}, {"Time_Start": 903.68, "Time_End": 906.12, "Text": " So the best way it probably would be to look at the header,"}, {"Time_Start": 906.36, "Time_End": 908.22, "Text": " get a signature for the header, and look at that."}, {"Time_Start": 908.48, "Time_End": 911.62, "Text": " But if anyone's writing an exploit and wants to go around detection,"}, {"Time_Start": 911.78, "Time_End": 915.14, "Text": " you just write your own decryption header and go around anything you want to."}, {"Time_Start": 917.0799999999999, "Time_End": 917.96, "Text": " Any other questions?"}, {"Time_Start": 921.52, "Time_End": 938.84, "Text": " I couldn't hear the whole question, but I think it was how would you go about?"}, {"Time_Start": 939.0799999999999, "Time_End": 941.5, "Text": " What if someone wrote a signature to detect the decryption technique?"}, {"Time_Start": 943.54, "Time_End": 950.64, "Text": " This is the standard decryption technique that I'm releasing, but if you write assembly, you can write your own decryption technique that will be different, that will have a different."}, {"Time_Start": 951.52, "Time_End": 956.06, "Text": " signature. Most of the signature-based IDSs are looking for known attacks that already exist,"}, {"Time_Start": 956.5799999999999, "Time_End": 962.22, "Text": " that they have problems finding new attacks. And what they try to use for new attacks is look for strings of no-ops,"}, {"Time_Start": 962.5799999999999, "Time_End": 969.92, "Text": " look for slash bin-shs, and these little tricks to try to look for new attacks, but you can go around them."}, {"Time_Start": 972.3199999999999, "Time_End": 973.24, "Text": " Any more questions?"}, {"Time_Start": 981.52, "Time_End": 983.52, "Text": " Thank you."}]}