{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 18.12,
      "Text": "This text was transcribed using whisper model: large-v2\n\n Hello. So thanks for the introduction, Hope. This is us. In case you can't see our faces,"
    },
    {
      "Time_Start": 18.12,
      "Time_End": 23.0,
      "Text": " you can see them right there. My name is Andy Robbins. My title is principal product architect"
    },
    {
      "Time_Start": 23.0,
      "Time_End": 29.44,
      "Text": " at Spectre Ops. I'm one of the co-creators of Bloodhound with Rohan and Will. I don't"
    },
    {
      "Time_Start": 29.44,
      "Time_End": 38.44,
      "Text": " see him in here. Jonas, you can introduce yourself. Thank you. My name is Jonas, and"
    },
    {
      "Time_Start": 38.44,
      "Time_End": 45.400000000000006,
      "Text": " I work together with Andy as a product architect at Spectre Ops. So yeah, I'm Andy's little"
    },
    {
      "Time_Start": 45.400000000000006,
      "Time_End": 55.72,
      "Text": " helper. Here's our agenda, what we're going to be talking about. First, we will explain"
    },
    {
      "Time_Start": 55.72,
      "Time_End": 64.88,
      "Text": " what is ADCS. By a show of hands, who knows what that stands for? Who has configured ADCS?"
    },
    {
      "Time_Start": 64.88,
      "Time_End": 72.1,
      "Text": " Who has attacked ADCS? Great. So lots of familiarity, but we'll be going through some of the basics"
    },
    {
      "Time_Start": 72.1,
      "Time_End": 77.4,
      "Text": " as well so that we're all on the same page. We'll also talk about the ADCS components"
    },
    {
      "Time_Start": 77.4,
      "Time_End": 85.48,
      "Text": " and how they are materialized in Bloodhound, let's say. We'll do a demo. And then at the"
    },
    {
      "Time_Start": 85.48,
      "Time_End": 91.24000000000001,
      "Text": " very end, we'll have a brief comment about how Bloodhound Enterprise materializes ADCS"
    },
    {
      "Time_Start": 91.24000000000001,
      "Time_End": 100.96000000000001,
      "Text": " attack paths and makes things easier for defenders. We are not doing this work in a bubble. We"
    },
    {
      "Time_Start": 100.96000000000001,
      "Time_End": 107.52000000000001,
      "Text": " are building on a lot of other people's great work that they have generously publicly shared"
    },
    {
      "Time_Start": 107.52000000000001,
      "Time_End": 113.68,
      "Text": " for free. I'm not going to read every name off of this slide, but we do want to make"
    },
    {
      "Time_Start": 113.68,
      "Time_End": 118.12,
      "Text": " sure that we acknowledge that there are other people who we learn from, other people who"
    },
    {
      "Time_Start": 118.12,
      "Time_End": 126.68,
      "Text": " have done a lot of work in this area. So we have these folks here. And then we have these"
    },
    {
      "Time_Start": 126.68,
      "Time_End": 135.76000000000002,
      "Text": " folks here. Is anybody who was mentioned on one of these slides in the room? No. Okay."
    },
    {
      "Time_Start": 135.76,
      "Time_End": 148.56,
      "Text": " All right. Cool. I guess I'll use that one. Yeah. Cool. So what is ADCS? So Active Directory"
    },
    {
      "Time_Start": 148.56,
      "Time_End": 156.79999999999998,
      "Text": " Certificate Services is Microsoft's implementation of PKI environment. It's used for issuing"
    },
    {
      "Time_Start": 156.79999999999998,
      "Time_End": 164.44,
      "Text": " and managing digital certificates in Active Directory. And it is located within this container"
    },
    {
      "Time_Start": 164.44,
      "Time_End": 172.48,
      "Text": " called Public Key Services in the configuration naming context. So like your regular users"
    },
    {
      "Time_Start": 172.48,
      "Time_End": 178.32,
      "Text": " and groups and computers in Active Directory are located in the domain naming context,"
    },
    {
      "Time_Start": 178.32,
      "Time_End": 184.16,
      "Text": " where this like ADCS stuff here is located on this configuration naming context. And"
    },
    {
      "Time_Start": 184.16,
      "Time_End": 191.28,
      "Text": " this naming context here is forest-wide partition. So that means when you install ADCS in an"
    },
    {
      "Time_Start": 191.28,
      "Time_End": 196.88,
      "Text": " environment, then it is a forest-wide thing. So you cannot just install and then only like"
    },
    {
      "Time_Start": 196.88,
      "Time_End": 203.4,
      "Text": " your users from that domain will be able to use it. It is like, yeah, you are able to"
    },
    {
      "Time_Start": 203.4,
      "Time_End": 213.04,
      "Text": " use it from anywhere in the forest. Yeah. So real quick, like what is a digital certificate?"
    },
    {
      "Time_Start": 213.04,
      "Time_End": 218.44,
      "Text": " It's a concept that uses asymmetric cryptography. So there's a public part and there's a private"
    },
    {
      "Time_Start": 218.44,
      "Time_End": 225.12,
      "Text": " part. And let's say I get a certificate for myself, then I will be like the subject of"
    },
    {
      "Time_Start": 225.12,
      "Time_End": 230.68,
      "Text": " the certificate here. And I can share with you the public part. And then I have my private"
    },
    {
      "Time_Start": 230.68,
      "Time_End": 236.56,
      "Text": " part, which like proves that I am the owner of the certificate. So for example, if you"
    },
    {
      "Time_Start": 236.56,
      "Time_End": 241.76,
      "Text": " want to send me a message, you can take my public key and use that to encrypt the message."
    },
    {
      "Time_Start": 241.76,
      "Time_End": 246.51999999999998,
      "Text": " And then I'll be the only one that will be able to decrypt it. And yeah, that way we"
    },
    {
      "Time_Start": 246.51999999999998,
      "Time_End": 253.44,
      "Text": " can secure our communication. Same way, I could also use my private key to encrypt the"
    },
    {
      "Time_Start": 253.44,
      "Time_End": 258.84,
      "Text": " message and then you can, or yeah, you can also use it to assign a message. So you can"
    },
    {
      "Time_Start": 258.84,
      "Time_End": 264.59999999999997,
      "Text": " see that this message was sent by Jonas and not somebody else. You can also use digital"
    },
    {
      "Time_Start": 264.64000000000004,
      "Time_End": 272.36,
      "Text": " certificates for authentication, which is what's very interesting for us. At last, we want to"
    },
    {
      "Time_Start": 272.36,
      "Time_End": 278.04,
      "Text": " mention that like digital certificates has this certificate chain. So when you obtain a"
    },
    {
      "Time_Start": 278.04,
      "Time_End": 284.44,
      "Text": " certificate, you obtain it from a certificate authority. So that would be the issuer of the"
    },
    {
      "Time_Start": 284.44,
      "Time_End": 291.32000000000005,
      "Text": " certificate. The certificate authority or CA for short, also has a certificate. And that"
    },
    {
      "Time_Start": 291.32,
      "Time_End": 296.4,
      "Text": " certificate has also been issued by a certificate authority and so on. And that creates this"
    },
    {
      "Time_Start": 296.4,
      "Time_End": 304.0,
      "Text": " chain of certificates. And this chain here is important because anyone can just create a"
    },
    {
      "Time_Start": 304.0,
      "Time_End": 310.08,
      "Text": " certificate saying that like I'm Andy or someone else. But what's really important is that"
    },
    {
      "Time_Start": 310.32,
      "Time_End": 315.8,
      "Text": " the issuer is trusted by the system. So like if you want to authenticate to AD, AD will"
    },
    {
      "Time_Start": 315.8,
      "Time_End": 322.76,
      "Text": " check that the chain of certificates goes all the way up to a trusted root CA, which is the"
    },
    {
      "Time_Start": 323.44,
      "Time_End": 328.12,
      "Text": " CA that's at the end of the chain, which holds a self-signed certificate."
    },
    {
      "Time_Start": 332.84000000000003,
      "Time_End": 339.84000000000003,
      "Text": " So the first component we're going to talk about is the root CA, as I just mentioned. And it is"
    },
    {
      "Time_Start": 340.12,
      "Time_End": 344.20000000000005,
      "Text": " the first component that's also created when you install ADCS in an Active Directory"
    },
    {
      "Time_Start": 344.24,
      "Time_End": 350.24,
      "Text": " environment. Yeah, it holds this self-signed certificate. So it's not signed by anyone, but by"
    },
    {
      "Time_Start": 350.24,
      "Time_End": 356.6,
      "Text": " itself. And it's located in this store called Certification Authorities within the ADCS"
    },
    {
      "Time_Start": 356.6,
      "Time_End": 362.56000000000006,
      "Text": " implementation. So you can see in the screenshots here that I have four root CAs in my"
    },
    {
      "Time_Start": 362.56000000000006,
      "Time_End": 369.44000000000005,
      "Text": " environment. And these four objects here has a property that holds the certificate of the"
    },
    {
      "Time_Start": 369.44,
      "Time_End": 377.4,
      "Text": " root CA. And that gets replicated down to the trusted root store on all the domain devices in"
    },
    {
      "Time_Start": 377.4,
      "Time_End": 383.6,
      "Text": " the forest. So that means that every host in the AD environment trusted these root CAs as root"
    },
    {
      "Time_Start": 383.6,
      "Time_End": 391.72,
      "Text": " CAs. The main purpose of having root CAs is to issue certificates for enterprise CAs, which is"
    },
    {
      "Time_Start": 391.72,
      "Time_End": 399.76000000000005,
      "Text": " the next object that we're going to cover. So enterprise CAs is also known as enrollment"
    },
    {
      "Time_Start": 399.76000000000005,
      "Time_End": 408.8,
      "Text": " services in the ADCS terminology. And they will always chain up to a root CA. You might also be"
    },
    {
      "Time_Start": 408.8,
      "Time_End": 416.92,
      "Text": " familiar with the terms intermediate CAs or issuing CAs. That's all enterprise CAs in ADCS. So"
    },
    {
      "Time_Start": 417.24,
      "Time_End": 424.08000000000004,
      "Text": " you can have like a three-tier PKI hierarchy as in the screenshot here to the right. So you have a"
    },
    {
      "Time_Start": 424.08000000000004,
      "Time_End": 430.20000000000005,
      "Text": " root CA and then there's like a level of intermediate CAs and then there's issuing CAs. The"
    },
    {
      "Time_Start": 430.20000000000005,
      "Time_End": 434.96000000000004,
      "Text": " issuing CAs and intermediate CAs are all enterprise CAs. And that's where you can obtain a"
    },
    {
      "Time_Start": 434.96000000000004,
      "Time_End": 442.32,
      "Text": " certificate from. The issuing certificates or the issuing enterprise CAs is typically what you"
    },
    {
      "Time_Start": 442.44,
      "Time_End": 448.84,
      "Text": " reach out to if you want to enroll a certificate. They're all located in this enrollment services"
    },
    {
      "Time_Start": 448.84,
      "Time_End": 455.52,
      "Text": " container. And like the root CAs, they are all trusted by the domain joint host in the environment."
    },
    {
      "Time_Start": 455.52,
      "Time_End": 461.12,
      "Text": " It's just in another folder. It's just in the intermediate certification authorities container"
    },
    {
      "Time_Start": 462.64,
      "Time_End": 471.44,
      "Text": " on the local computers. Now, if you want certificates to be used for authentication"
    },
    {
      "Time_Start": 471.44,
      "Time_End": 476.32,
      "Text": " within your access directory environment, then you have to put the enterprise CA certificates"
    },
    {
      "Time_Start": 476.32,
      "Time_End": 484.04,
      "Text": " into this ntAuthStore, which is an object in the ADCS environment called ntAuthCertificates."
    },
    {
      "Time_Start": 484.04,
      "Time_End": 490.56,
      "Text": " It has like an attribute where you can add the public key of an enterprise CA and then the AD"
    },
    {
      "Time_Start": 490.56,
      "Time_End": 494.96,
      "Text": " environment will know that this enterprise CA is supposed to issue certificates that can be used"
    },
    {
      "Time_Start": 494.96,
      "Time_End": 500.4,
      "Text": " for authentication. So the certificates in this list here will be very clear down to the domain"
    },
    {
      "Time_Start": 500.40000000000003,
      "Time_End": 505.88000000000005,
      "Text": " controller. So when you're attempting authentication, then that will be checked on the DCs."
    },
    {
      "Time_Start": 505.88000000000005,
      "Time_End": 518.1600000000001,
      "Text": " So the last component I want to talk about is the cert templates, which is the ones that you're"
    },
    {
      "Time_Start": 518.1600000000001,
      "Time_End": 523.76,
      "Text": " going to use when you're enrolling a certificate. So when you ask an enterprise CA, give me a"
    },
    {
      "Time_Start": 523.76,
      "Time_End": 530.0400000000001,
      "Text": " certificate, you have to specify a template that's used for the certificate. And it holds a lot of"
    },
    {
      "Time_Start": 530.28,
      "Time_End": 536.8399999999999,
      "Text": " characteristics of the certificate that you are requesting. It also specifies some properties"
    },
    {
      "Time_Start": 536.8399999999999,
      "Time_End": 545.64,
      "Text": " for how the enrollment has to happen. And it also holds some stats for how long this certificate"
    },
    {
      "Time_Start": 545.64,
      "Time_End": 551.64,
      "Text": " is going to be valid and so on. An organization can have a lot of certificate templates, but it's"
    },
    {
      "Time_Start": 551.64,
      "Time_End": 557.92,
      "Text": " only the published one by the enterprise CA that you can actually enroll in. So if an organization"
    },
    {
      "Time_Start": 557.92,
      "Time_End": 563.8,
      "Text": " has, let's say, three enterprise CAs, then you might be able to enroll a certificate from a"
    },
    {
      "Time_Start": 563.8,
      "Time_End": 568.36,
      "Text": " specific template on just one of the enterprise CAs, depending on how they're configured."
    },
    {
      "Time_Start": 568.36,
      "Time_End": 579.0799999999999,
      "Text": " There's actually a lot of attributes of the certificate templates that are interesting"
    },
    {
      "Time_Start": 579.0799999999999,
      "Time_End": 585.88,
      "Text": " for us as attackers and defenders. Some of them that we are very interested in is, for example,"
    },
    {
      "Time_Start": 586.12,
      "Time_End": 590.68,
      "Text": " that specifies whether or not a certificate template can be used for obtaining a certificate"
    },
    {
      "Time_Start": 590.68,
      "Time_End": 598.88,
      "Text": " that can be used for authentication. And that is stored within these enhanced key usage OIDs,"
    },
    {
      "Time_Start": 598.88,
      "Time_End": 606.48,
      "Text": " so EQUs for short. I have a list here of the five EQUs that allows for authentication. So"
    },
    {
      "Time_Start": 606.48,
      "Time_End": 611.4,
      "Text": " it's interesting for us to see if these EQUs are present in the certificate template, so we can"
    },
    {
      "Time_Start": 611.48,
      "Time_End": 615.92,
      "Text": " know whether or not you can use it for authentication. Then there's also these"
    },
    {
      "Time_Start": 615.92,
      "Time_End": 621.36,
      "Text": " issuance requirements that you could set up on a certificate template. So that means that,"
    },
    {
      "Time_Start": 621.36,
      "Time_End": 627.04,
      "Text": " for example, if you enable manager approval, you might have the permissions to enroll in a"
    },
    {
      "Time_Start": 627.04,
      "Time_End": 633.16,
      "Text": " certificate template. But if manager approval is set to configure on a certificate template,"
    },
    {
      "Time_Start": 633.16,
      "Time_End": 639.16,
      "Text": " you will not get the certificate immediately. A manager has to log into the enterprise CA and"
    },
    {
      "Time_Start": 639.36,
      "Time_End": 645.88,
      "Text": " approve that request before you can actually obtain it. There's also another option under"
    },
    {
      "Time_Start": 645.88,
      "Time_End": 652.0799999999999,
      "Text": " issuance requirements, which is the authorized signatures. So you can also require users to"
    },
    {
      "Time_Start": 652.0799999999999,
      "Time_End": 659.3199999999999,
      "Text": " present another certificate when you're asking for a certificate that holds some issuance policies"
    },
    {
      "Time_Start": 659.3199999999999,
      "Time_End": 667.0799999999999,
      "Text": " that specifies that you actually have the rights to obtain this certificate. Then the last one is"
    },
    {
      "Time_Start": 667.2800000000001,
      "Time_End": 673.96,
      "Text": " probably one that you have heard about if you have explored the Escalation One abuse primitive."
    },
    {
      "Time_Start": 673.96,
      "Time_End": 680.84,
      "Text": " And it's a flag that you can set under the subject name where you specify that the request of a"
    },
    {
      "Time_Start": 680.84,
      "Time_End": 687.8000000000001,
      "Text": " certificate can supply the subject name. That basically means that when I'm enrolling a"
    },
    {
      "Time_Start": 687.8000000000001,
      "Time_End": 693.36,
      "Text": " certificate, so instead of letting the environment figure out which properties should go into the"
    },
    {
      "Time_Start": 693.36,
      "Time_End": 698.48,
      "Text": " certificate, like who does the certificate represent, you can supply it in the request."
    },
    {
      "Time_Start": 698.48,
      "Time_End": 705.44,
      "Text": " So I can just say, hey, I'm Jonas, and I want a certificate as Andy. And the enterprise will say,"
    },
    {
      "Time_Start": 705.44,
      "Time_End": 711.24,
      "Text": " sure thing, here you go. Yeah, so it's a quite dangerous setting."
    },
    {
      "Time_Start": 711.24,
      "Time_End": 726.12,
      "Text": " So here is a simplified diagram for how enrollment and authentication works with a certificate."
    },
    {
      "Time_Start": 726.12,
      "Time_End": 733.4,
      "Text": " So as a principle, I'll say I want a certificate of this certificate template here. And the"
    },
    {
      "Time_Start": 733.4,
      "Time_End": 741.0799999999999,
      "Text": " enterprise CA will check that, first of all, do I have this certificate published? And if so,"
    },
    {
      "Time_Start": 741.0799999999999,
      "Time_End": 746.84,
      "Text": " does this principle have the enrollment rights on the certificate template to actually allow for"
    },
    {
      "Time_Start": 746.84,
      "Time_End": 754.12,
      "Text": " enrollment? Also, I'll need to have enrollment rights on the enterprise CA itself. And then"
    },
    {
      "Time_Start": 754.12,
      "Time_End": 758.84,
      "Text": " we'll also, of course, check these issuance requirements that I talked about before."
    },
    {
      "Time_Start": 759.32,
      "Time_End": 766.76,
      "Text": " If all these things align, then I will get the certificate that I requested. Then if I want to"
    },
    {
      "Time_Start": 766.76,
      "Time_End": 773.5600000000001,
      "Text": " use this certificate for authentication, let's say over Kerberos or PKInit, I'll present this"
    },
    {
      "Time_Start": 773.5600000000001,
      "Time_End": 781.88,
      "Text": " certificate to the domain controller, and the domain controller will verify that this certificate"
    },
    {
      "Time_Start": 782.04,
      "Time_End": 790.4399999999999,
      "Text": " here is trusted by, or is issued by an enterprise CA, which is trusted for anti-authentication."
    },
    {
      "Time_Start": 791.32,
      "Time_End": 796.84,
      "Text": " It will check that all the certificates in the certificate chain are trusted all the way up to"
    },
    {
      "Time_Start": 796.84,
      "Time_End": 803.96,
      "Text": " a root CA for the environment. And it will also check that the certificate has an EQ that allows"
    },
    {
      "Time_Start": 803.96,
      "Time_End": 810.2,
      "Text": " for authentication. There's also some extra checks of like figuring out if it's revoked or if it's"
    },
    {
      "Time_Start": 810.9200000000001,
      "Time_End": 818.36,
      "Text": " even valid. And then there's also the process of figuring out if it's the right principle that I'm"
    },
    {
      "Time_Start": 818.36,
      "Time_End": 824.5200000000001,
      "Text": " authenticating as. If you have a regular certificate, you cannot just say, hey, I want to authenticate"
    },
    {
      "Time_Start": 824.5200000000001,
      "Time_End": 831.0,
      "Text": " as another user. It will also do some validation there. But yeah, if everything aligns, you will"
    },
    {
      "Time_Start": 831.0,
      "Time_End": 840.52,
      "Text": " get a Kerberos session ticket, and then you have been authorized."
    },
    {
      "Time_Start": 843.64,
      "Time_End": 851.96,
      "Text": " So how did we get all these things into Bloodhound? We've introduced five new node types"
    },
    {
      "Time_Start": 851.96,
      "Time_End": 858.68,
      "Text": " in Bloodhound. We have already talked about four of them. There's a fifth one called AIACAs,"
    },
    {
      "Time_Start": 859.6400000000001,
      "Time_End": 864.2800000000001,
      "Text": " which we have included in the graph for now, but it's not something that we use. So"
    },
    {
      "Time_Start": 865.24,
      "Time_End": 867.32,
      "Text": " you can focus on the four other ones."
    },
    {
      "Time_Start": 871.24,
      "Time_End": 877.08,
      "Text": " And you can see where we have mapped out the locations of these objects in my lab environment"
    },
    {
      "Time_Start": 877.08,
      "Time_End": 884.0400000000001,
      "Text": " here. So you can see that we have all the root CAs, the enterprise CAs, these AIACAs,"
    },
    {
      "Time_Start": 884.04,
      "Time_End": 889.64,
      "Text": " and we have the certificate templates. Unlike your users and computers and groups"
    },
    {
      "Time_Start": 889.64,
      "Time_End": 894.4399999999999,
      "Text": " that can be located in many different containers or OUs in xDirectory,"
    },
    {
      "Time_Start": 894.4399999999999,
      "Time_End": 899.4,
      "Text": " these objects are always in the same location under this configuration naming context."
    },
    {
      "Time_Start": 900.4399999999999,
      "Time_End": 908.92,
      "Text": " And traditionally, SharpHound, the collector for objects of xDirectory for Bloodhound,"
    },
    {
      "Time_Start": 908.92,
      "Time_End": 912.52,
      "Text": " hasn't been able to collect data from the configuration naming context,"
    },
    {
      "Time_Start": 912.52,
      "Time_End": 918.1999999999999,
      "Text": " so we had to expand it to collect these things. It's actually very easy to collect these things"
    },
    {
      "Time_Start": 918.1999999999999,
      "Time_End": 923.4,
      "Text": " because the configuration naming context is replicated to all the domain controllers in"
    },
    {
      "Time_Start": 923.4,
      "Time_End": 929.24,
      "Text": " the entire forest and authenticated users have read access to this partition here."
    },
    {
      "Time_Start": 933.96,
      "Time_End": 939.88,
      "Text": " For every new node type, we have also added an entity panel like you have probably seen it for"
    },
    {
      "Time_Start": 939.88,
      "Time_End": 946.04,
      "Text": " the existing node types. So in here, you have included the information that is relevant for"
    },
    {
      "Time_Start": 946.04,
      "Time_End": 951.16,
      "Text": " our security principles and information you need in order to either abuse it or figure out"
    },
    {
      "Time_Start": 951.16,
      "Time_End": 955.96,
      "Text": " whether or not it can be abused. So for example, here for the certificate template,"
    },
    {
      "Time_Start": 957.16,
      "Time_End": 961.96,
      "Text": " you can see that marked with yellow that there's no authorized signatures required for this"
    },
    {
      "Time_Start": 961.96,
      "Time_End": 968.2,
      "Text": " certificate template and there's no requirement for manager approval. So that means that, yeah,"
    },
    {
      "Time_Start": 968.2,
      "Time_End": 972.76,
      "Text": " the users that have enrollment rights on this certificate and we can obtain a certificate"
    },
    {
      "Time_Start": 972.76,
      "Time_End": 979.6400000000001,
      "Text": " immediately. You can also see with marked with green, we have three different attributes. They"
    },
    {
      "Time_Start": 979.6400000000001,
      "Time_End": 986.2800000000001,
      "Text": " are all set to the same EQ. The reason for that is that in xDirectory, there's actually two"
    },
    {
      "Time_Start": 986.2800000000001,
      "Time_End": 991.24,
      "Text": " attributes that defines the EQs that, yeah, the certificate template has."
    },
    {
      "Time_Start": 991.96,
      "Time_End": 998.6800000000001,
      "Text": " And then we have included a third one called effective EQs, which is actually the ones that,"
    },
    {
      "Time_Start": 998.6800000000001,
      "Time_End": 1004.44,
      "Text": " yeah, will be effective on the certificate template because most of the time these two"
    },
    {
      "Time_Start": 1004.44,
      "Time_End": 1009.96,
      "Text": " attributes in xDirectory, they contain the same content, but they can be different and we had"
    },
    {
      "Time_Start": 1009.96,
      "Time_End": 1015.16,
      "Text": " to figure out like which one is it then that take presence and is effective on the certificate"
    },
    {
      "Time_Start": 1015.16,
      "Time_End": 1022.6,
      "Text": " template. And the logic is kind of complicated. It depends on the schema version and whether or"
    },
    {
      "Time_Start": 1022.6,
      "Time_End": 1029.24,
      "Text": " not one of them is set to null or not. Yeah, so instead of you having to learn that logic,"
    },
    {
      "Time_Start": 1029.24,
      "Time_End": 1034.12,
      "Text": " we've included this property that just holds the effective EQ. So yeah, you don't have to"
    },
    {
      "Time_Start": 1034.12,
      "Time_End": 1040.28,
      "Text": " deal with that. In the same way, we've also included another field called authentication"
    },
    {
      "Time_Start": 1040.28,
      "Time_End": 1048.2,
      "Text": " enabled. So you don't have to learn the EQs that allows for authentication. We can just"
    },
    {
      "Time_Start": 1048.2,
      "Time_End": 1052.2,
      "Text": " tell you that this certificate template enables authentication."
    },
    {
      "Time_Start": 1057.08,
      "Time_End": 1063.3999999999999,
      "Text": " Yeah, as mentioned before, there are so many attributes on a certificate template"
    },
    {
      "Time_Start": 1063.4,
      "Time_End": 1070.1200000000001,
      "Text": " that are interesting for us as security principles. And the naming of these attributes"
    },
    {
      "Time_Start": 1070.1200000000001,
      "Time_End": 1077.64,
      "Text": " are not always easy to understand. So we have tried to give, in the entity panel,"
    },
    {
      "Time_Start": 1077.64,
      "Time_End": 1083.4,
      "Text": " give these properties meaningful names. But you might also still need to know what are the"
    },
    {
      "Time_Start": 1083.4,
      "Time_End": 1089.24,
      "Text": " underlying LDAP properties that they come from. So in our documentation, we have these"
    },
    {
      "Time_Start": 1090.1200000000001,
      "Time_End": 1096.52,
      "Text": " tables here that show what is the name of the field in the entity panel, what is the name of"
    },
    {
      "Time_Start": 1096.52,
      "Time_End": 1100.84,
      "Text": " the attribute in the Bloodhound database. So if you want to write a cipher query, you can look up"
    },
    {
      "Time_Start": 1100.84,
      "Time_End": 1109.24,
      "Text": " the name in here. And also what is the directory name of the property. And there's also a short"
    },
    {
      "Time_Start": 1109.8,
      "Time_End": 1114.2,
      "Text": " description. So yeah, you can see what it actually represents."
    },
    {
      "Time_Start": 1118.28,
      "Time_End": 1125.4,
      "Text": " We're also adding a lot of new edges in Bloodhound for ADCS. Most of them are going to be these"
    },
    {
      "Time_Start": 1125.4,
      "Time_End": 1131.16,
      "Text": " types that we call non-traversable edges. Here's a full list of all the non-traversable edges we"
    },
    {
      "Time_Start": 1131.16,
      "Time_End": 1137.24,
      "Text": " have added so far. Before we dive into some of them, I want to make sure that we are on the"
    },
    {
      "Time_Start": 1137.24,
      "Time_End": 1143.8,
      "Text": " same page regarding what is a non-traversable edge, because it's something that you might not"
    },
    {
      "Time_Start": 1143.8,
      "Time_End": 1151.56,
      "Text": " have stumbled upon using Bloodhound so far. So first of all, a traversable edge is the ones"
    },
    {
      "Time_Start": 1151.56,
      "Time_End": 1157.16,
      "Text": " that you typically see when you search for an attack path in Bloodhound. So if I search for"
    },
    {
      "Time_Start": 1157.16,
      "Time_End": 1164.6,
      "Text": " my user to domain admins, I might see like admin2 edges, false share, reset passwords, and so on."
    },
    {
      "Time_Start": 1165.5600000000002,
      "Time_End": 1172.3600000000001,
      "Text": " These non-traversable edges are edges that are not abusable on their own. So they are not included"
    },
    {
      "Time_Start": 1172.3600000000001,
      "Time_End": 1179.16,
      "Text": " in pathfinding when you use pathfinding. But we use these edges here to construct other edges."
    },
    {
      "Time_Start": 1180.44,
      "Time_End": 1187.5600000000002,
      "Text": " The most simple example is probably the getChanges and getChangesAll and dsysync."
    },
    {
      "Time_Start": 1188.52,
      "Time_End": 1195.0,
      "Text": " So a principal can have getChanges and getChangesAll on the domain head object."
    },
    {
      "Time_Start": 1195.56,
      "Time_End": 1201.56,
      "Text": " And if you have both of them, that allows you to perform the dsysync attack, where you obtain"
    },
    {
      "Time_Start": 1201.56,
      "Time_End": 1206.9199999999998,
      "Text": " all the password hashes for all the users and computers in the environment. But you need both"
    },
    {
      "Time_Start": 1206.9199999999998,
      "Time_End": 1217.08,
      "Text": " of them. So when you search for an attack path like this here, you might see that your user"
    },
    {
      "Time_Start": 1217.08,
      "Time_End": 1223.56,
      "Text": " here has a path to the domain that includes a dsync edge. But under the hood, what we are"
    },
    {
      "Time_Start": 1223.56,
      "Time_End": 1230.9199999999998,
      "Text": " creating is these getChanges and getChangesAll edges from the principals that actually"
    },
    {
      "Time_Start": 1230.9199999999998,
      "Time_End": 1236.6,
      "Text": " have these permissions in AD. And after we have ingested all the edges, we do what we call"
    },
    {
      "Time_Start": 1236.6,
      "Time_End": 1242.6799999999998,
      "Text": " post-processing, where we create these more advanced edges that rely on other edges. So in"
    },
    {
      "Time_Start": 1242.68,
      "Time_End": 1247.5600000000002,
      "Text": " this example here, you can see I've run a Cypher query that shows both getChanges and getChangesAll"
    },
    {
      "Time_Start": 1247.5600000000002,
      "Time_End": 1255.48,
      "Text": " and dsysync. So we can see how this user here actually has the permissions to perform dsysync."
    },
    {
      "Time_Start": 1259.72,
      "Time_End": 1267.96,
      "Text": " And here are some of the non-subversible edges that we have included for ADCS. So let's start"
    },
    {
      "Time_Start": 1268.04,
      "Time_End": 1274.8400000000001,
      "Text": " out from the right. We can see we have this domain node here, and it's my dumpster fire"
    },
    {
      "Time_Start": 1274.8400000000001,
      "Time_End": 1282.28,
      "Text": " lab environment. And we have a root CA, which has a root CA for edge to this domain. So that"
    },
    {
      "Time_Start": 1282.28,
      "Time_End": 1287.56,
      "Text": " tells us that this root CA node here, it belongs to this domain. There's likewise also an"
    },
    {
      "Time_Start": 1287.56,
      "Time_End": 1295.16,
      "Text": " NCAllStore, which has an NCAllStore for edge to the domain. And then we have in the"
    },
    {
      "Time_Start": 1295.16,
      "Time_End": 1301.64,
      "Text": " middle of the screen two enterprise CAs. They both have an issued signed by edge that goes up"
    },
    {
      "Time_Start": 1301.64,
      "Time_End": 1307.5600000000002,
      "Text": " to the root CA. So that tells us that these enterprise CAs here, they are issued and signed"
    },
    {
      "Time_Start": 1307.5600000000002,
      "Time_End": 1315.48,
      "Text": " by this root CA. So they chain up to a root CA for the domain. Both of them are also in the"
    },
    {
      "Time_Start": 1315.48,
      "Time_End": 1323.3200000000002,
      "Text": " NCAllStore. So they have a trusted for NCAllStore edge directed to the NCAllStore."
    },
    {
      "Time_Start": 1325.16,
      "Time_End": 1330.1200000000001,
      "Text": " Then we can see that authenticated users have enrollment rights on the enterprise CAs. So"
    },
    {
      "Time_Start": 1330.1200000000001,
      "Time_End": 1335.16,
      "Text": " everybody basically in the environment can enroll certificates from these two enterprise CAs."
    },
    {
      "Time_Start": 1336.2,
      "Time_End": 1343.24,
      "Text": " And then there's three published certificate templates of these two enterprise CAs, where"
    },
    {
      "Time_Start": 1343.24,
      "Time_End": 1350.76,
      "Text": " domain users have enrollment rights on these templates. So that all means that domain users"
    },
    {
      "Time_Start": 1350.76,
      "Time_End": 1357.08,
      "Text": " can enroll in these certificate templates here. And they will be trusted in the environment"
    },
    {
      "Time_Start": 1357.08,
      "Time_End": 1361.4,
      "Text": " because the enterprise CA is chained up to a trusted root CA for the environment."
    },
    {
      "Time_Start": 1361.4,
      "Time_End": 1368.52,
      "Text": " And if these certificate templates here allow for authentication, then they'll be accepted"
    },
    {
      "Time_Start": 1368.52,
      "Time_End": 1373.96,
      "Text": " by the environment because the enterprise CAs are also trusted for NCA authentication."
    },
    {
      "Time_Start": 1374.28,
      "Time_End": 1379.08,
      "Text": " Each of these new edge types also have an entity panel. So if you click on them,"
    },
    {
      "Time_Start": 1379.08,
      "Time_End": 1383.96,
      "Text": " you can see some information about what it means, how it can be abused, and there are some"
    },
    {
      "Time_Start": 1383.96,
      "Time_End": 1388.6000000000001,
      "Text": " additional references if you want to learn more about these new edge types."
    },
    {
      "Time_Start": 1391.72,
      "Time_End": 1392.22,
      "Text": " Cool."
    },
    {
      "Time_Start": 1395.24,
      "Time_End": 1396.76,
      "Text": " Yeah, that's probably a good idea."
    },
    {
      "Time_Start": 1397.72,
      "Time_End": 1405.4,
      "Text": " Okay, so we're going to do a demo, and we're going to show from the attacker perspective how you can"
    },
    {
      "Time_Start": 1405.4,
      "Time_End": 1412.12,
      "Text": " use Bloodhound CE, which is the free and open source software, to discover, analyze, and execute"
    },
    {
      "Time_Start": 1412.12,
      "Time_End": 1418.92,
      "Text": " an attack path that traverses all of this ADC as infrastructure. So we're going to do a demo"
    },
    {
      "Time_Start": 1419.0,
      "Time_End": 1427.0,
      "Text": " to discover, analyze, and execute an attack path that traverses all of this ADC as infrastructure"
    },
    {
      "Time_Start": 1427.0,
      "Time_End": 1433.5600000000002,
      "Text": " that we're talking about that Jonas described how we model in the product. So"
    },
    {
      "Time_Start": 1436.3600000000001,
      "Time_End": 1440.92,
      "Text": " pro tip, live demos are overrated and too risky, so we have a video demo for you."
    },
    {
      "Time_Start": 1441.64,
      "Time_End": 1446.92,
      "Text": " I don't expect you to be able to read every word on the screen. This talk is being recorded"
    },
    {
      "Time_Start": 1446.92,
      "Time_End": 1452.44,
      "Text": " and will be put on YouTube at a later date, so it'll be much easier to see the actual text"
    },
    {
      "Time_Start": 1453.24,
      "Time_End": 1457.3200000000002,
      "Text": " then. Otherwise, I will do my best to explain what exactly it is that we're looking at."
    },
    {
      "Time_Start": 1458.68,
      "Time_End": 1464.3600000000001,
      "Text": " So in this scenario, we are emulating a red teamer, an attacker, an adversary of some kind,"
    },
    {
      "Time_Start": 1465.16,
      "Time_End": 1470.6000000000001,
      "Text": " and we want to become domain admin. Who doesn't want to be domain admin?"
    },
    {
      "Time_Start": 1471.5600000000002,
      "Time_End": 1477.72,
      "Text": " And Bloodhound is going to help us find an attack path that traverses the ADC as infrastructure"
    },
    {
      "Time_Start": 1477.72,
      "Time_End": 1484.6000000000001,
      "Text": " to land at an ability to impersonate any principal in the forest, including all of the domain admins."
    },
    {
      "Time_Start": 1485.88,
      "Time_End": 1495.0800000000002,
      "Text": " So here we have an RDP session open on a system that, let's say, is like an initial access system"
    },
    {
      "Time_Start": 1495.24,
      "Time_End": 1501.48,
      "Text": " that the adversary has compromised. On the left, we have our Bloodhound CE interface."
    },
    {
      "Time_Start": 1503.56,
      "Time_End": 1508.4399999999998,
      "Text": " The first command that we're going to run will just prove that our..."
    },
    {
      "Time_Start": 1509.8,
      "Time_End": 1513.32,
      "Text": " Oh, I'm sorry. I'm getting ahead of myself. So the first thing we're going to do is we're"
    },
    {
      "Time_Start": 1513.32,
      "Time_End": 1519.8,
      "Text": " going to try to find if there is a path from our initial access user to the domain admins group."
    },
    {
      "Time_Start": 1520.6,
      "Time_End": 1529.1599999999999,
      "Text": " And so this pathfinding feature where we can start from any node in the graph and we can end"
    },
    {
      "Time_Start": 1529.1599999999999,
      "Time_End": 1538.28,
      "Text": " at any node in the graph is a very obvious core function of Bloodhound. And behind the scenes,"
    },
    {
      "Time_Start": 1538.28,
      "Time_End": 1543.0,
      "Text": " what that function is doing is it is doing a shortest path query. So it's doing something"
    },
    {
      "Time_Start": 1543.0,
      "Time_End": 1549.88,
      "Text": " like A star or Dijkstra's algorithm. Now, Jonas mentioned how we are taking all of these"
    },
    {
      "Time_Start": 1549.88,
      "Time_End": 1555.24,
      "Text": " non-traversable edges and we are constructing traversable edges or attack path edges, if you"
    },
    {
      "Time_Start": 1555.24,
      "Time_End": 1562.36,
      "Text": " will. One of the reasons that we do that is these pathfinding algorithms, they are very,"
    },
    {
      "Time_Start": 1562.3600000000001,
      "Time_End": 1575.0000000000002,
      "Text": " very effective and they're very, very fast when edges are, let's say, static in the database and"
    },
    {
      "Time_Start": 1575.0000000000002,
      "Time_End": 1584.3600000000001,
      "Text": " where patterns between these arbitrary nodes are static. So at query runtime, it is extremely"
    },
    {
      "Time_Start": 1584.3600000000001,
      "Time_End": 1590.44,
      "Text": " dangerous from a performance perspective to be doing this kind of analysis that Jonas is talking"
    },
    {
      "Time_Start": 1590.44,
      "Time_End": 1598.44,
      "Text": " about. So the pathfinding algorithm can't do the work of discovering what are all the configurations"
    },
    {
      "Time_Start": 1598.44,
      "Time_End": 1603.8,
      "Text": " on all the templates, what are all of these CAs that are trusted for nt-auth, what are all the"
    },
    {
      "Time_Start": 1603.8,
      "Time_End": 1609.56,
      "Text": " root CAs for the domain. We can't do that at query runtime. We have to do that before the query is"
    },
    {
      "Time_Start": 1609.56,
      "Time_End": 1617.24,
      "Text": " actually run. And so the benefit of that is that when you click on the pathfinding feature and when"
    },
    {
      "Time_Start": 1617.24,
      "Time_End": 1625.32,
      "Text": " you run the pathfinding feature, it runs most of the time in less than a second. Whereas if we were"
    },
    {
      "Time_Start": 1625.32,
      "Time_End": 1630.28,
      "Text": " having to do this analysis at query runtime, you're literally talking about it taking"
    },
    {
      "Time_Start": 1630.28,
      "Time_End": 1635.96,
      "Text": " hours and hours and hours to finish. So I don't know about you, but I prefer my tools to give me"
    },
    {
      "Time_Start": 1635.96,
      "Time_End": 1643.48,
      "Text": " instant feedback. And so we've worked hard to make that happen in the product. Not only that,"
    },
    {
      "Time_Start": 1643.48,
      "Time_End": 1650.1200000000001,
      "Text": " but it also makes the resultant attack path much easier to read. So let's read this attack"
    },
    {
      "Time_Start": 1650.1200000000001,
      "Time_End": 1658.44,
      "Text": " path together. At the top, we have demo user or demouser. And so that's our initial access user."
    },
    {
      "Time_Start": 1659.24,
      "Time_End": 1667.8,
      "Text": " That user is a member of the domain users group. That group has the ADCS escalation one primitive"
    },
    {
      "Time_Start": 1668.36,
      "Time_End": 1676.44,
      "Text": " against the domain here. The domain is obviously going to contain all the principles in the domain."
    },
    {
      "Time_Start": 1676.44,
      "Time_End": 1680.2,
      "Text": " So it contains the user's container, which contains the domain admins group."
    },
    {
      "Time_Start": 1680.9199999999998,
      "Time_End": 1687.1599999999999,
      "Text": " So as an attacker, what this tells me is that as demo user, I can do escalation one against this"
    },
    {
      "Time_Start": 1687.1599999999999,
      "Time_End": 1695.08,
      "Text": " particular domain and impersonate any principle in that domain, including anybody who's a member of"
    },
    {
      "Time_Start": 1695.08,
      "Time_End": 1702.6799999999998,
      "Text": " the domain admins group. There's actually, correct me if I'm wrong, but there's no way"
    },
    {
      "Time_Start": 1702.6799999999998,
      "Time_End": 1709.32,
      "Text": " to exclude principles from impersonation with what we're talking about here."
    },
    {
      "Time_Start": 1713.32,
      "Time_End": 1719.24,
      "Text": " Jonas showed how in the Bloodhound interface, you can click on an edge and get help information"
    },
    {
      "Time_Start": 1719.24,
      "Time_End": 1724.68,
      "Text": " about that. So maybe you're new to Active Directory and you're not very familiar with"
    },
    {
      "Time_Start": 1725.4,
      "Time_End": 1731.0,
      "Text": " security group delegation concept. So you can click on the member of edge, for example. You"
    },
    {
      "Time_Start": 1731.0,
      "Time_End": 1736.84,
      "Text": " can get just general statement about what that means. You can also click on the abuse accordion,"
    },
    {
      "Time_Start": 1736.84,
      "Time_End": 1742.2,
      "Text": " the OPSEC accordion, or the reference accordion to get relevant information based on what those"
    },
    {
      "Time_Start": 1742.2,
      "Time_End": 1750.04,
      "Text": " things are showing. Additionally, you can do the same thing for this new ADCS escalation one edge."
    },
    {
      "Time_Start": 1751.32,
      "Time_End": 1758.92,
      "Text": " So I hope that one of the takeaways you got from what Jonas was going through is that ADCS is"
    },
    {
      "Time_Start": 1758.92,
      "Time_End": 1765.0800000000002,
      "Text": " extraordinarily complicated. And anybody who has architected or worked with ADCS, I think,"
    },
    {
      "Time_Start": 1765.08,
      "Time_End": 1773.32,
      "Text": " would agree with that statement. So as a red teamer, as a defender, you need concise information"
    },
    {
      "Time_Start": 1773.32,
      "Time_End": 1780.36,
      "Text": " that explains exactly what is being told. Because keeping all of this straight in your mind,"
    },
    {
      "Time_Start": 1780.36,
      "Time_End": 1787.56,
      "Text": " at least for me, is not really possible. So one of the most important jobs that we have"
    },
    {
      "Time_Start": 1787.56,
      "Time_End": 1794.4399999999998,
      "Text": " as product architects is to understand what is the job to be done by a red teamer, a pen tester,"
    },
    {
      "Time_Start": 1794.44,
      "Time_End": 1803.0800000000002,
      "Text": " a defender, and to understand what is the friction involved in that job and do what we can in the"
    },
    {
      "Time_Start": 1803.0800000000002,
      "Time_End": 1808.6000000000001,
      "Text": " product to reduce that friction as much as possible. So we want to understand what is standing in the"
    },
    {
      "Time_Start": 1808.6000000000001,
      "Time_End": 1815.88,
      "Text": " way of a pen tester doing escalation one. What is standing in the way of a defender securing ADCS?"
    },
    {
      "Time_Start": 1816.68,
      "Time_End": 1822.2,
      "Text": " And in the product, we manifest how we reduce that friction, how we get those things out of"
    },
    {
      "Time_Start": 1822.2,
      "Time_End": 1832.8400000000001,
      "Text": " the way for you. So that's what we see here. You can also see example abuse commands for if"
    },
    {
      "Time_Start": 1832.8400000000001,
      "Time_End": 1839.32,
      "Text": " you are operating from a Windows system or a Linux system. Obstacle considerations will tell you what"
    },
    {
      "Time_Start": 1839.32,
      "Time_End": 1842.8400000000001,
      "Text": " are the artifacts that will be created when you are actually performing that attack."
    },
    {
      "Time_Start": 1844.76,
      "Time_End": 1851.56,
      "Text": " And then critically, what we just clicked on there is this new accordion item called composition."
    },
    {
      "Time_Start": 1852.52,
      "Time_End": 1857.88,
      "Text": " Now remember that this escalation one edge is what we call a traversable edge,"
    },
    {
      "Time_Start": 1859.0800000000002,
      "Time_End": 1864.92,
      "Text": " but it is constructed from all of these other edges which we see now that we call non-traversable"
    },
    {
      "Time_Start": 1864.92,
      "Time_End": 1871.24,
      "Text": " edges, or maybe composition edges could be a better term. And so when you click on composition,"
    },
    {
      "Time_Start": 1871.88,
      "Time_End": 1878.52,
      "Text": " you actually see the atomic nodes and relationships from which this escalation one"
    },
    {
      "Time_Start": 1878.52,
      "Time_End": 1884.52,
      "Text": " opportunity emerged. And this is what you'll see also for escalation nine, escalation six,"
    },
    {
      "Time_Start": 1885.32,
      "Time_End": 1889.24,
      "Text": " and escalation four, seven, and then in the future, escalation five as well."
    },
    {
      "Time_Start": 1894.44,
      "Time_End": 1899.56,
      "Text": " Here's the full view. It's kind of in reverse order, so we can change the view there."
    },
    {
      "Time_Start": 1900.52,
      "Time_End": 1909.0,
      "Text": " So the domain users group has escalation one against the domain, and the way that it has that"
    },
    {
      "Time_Start": 1909.0,
      "Time_End": 1917.32,
      "Text": " is this principle has enroll rights on this template CT1. That template is published to"
    },
    {
      "Time_Start": 1917.32,
      "Time_End": 1923.8,
      "Text": " an enrollment CA here. Now having enrollment rights on the template is not enough. You also"
    },
    {
      "Time_Start": 1923.96,
      "Time_End": 1930.84,
      "Text": " need enrollment rights on the CA that the template is published to. So the domain users group is a"
    },
    {
      "Time_Start": 1930.84,
      "Time_End": 1935.96,
      "Text": " member of, well, kind of a member of the authenticated users principle, effectively it is."
    },
    {
      "Time_Start": 1936.76,
      "Time_End": 1942.12,
      "Text": " And the authenticated users principle has enrollment rights on the enrollment CA,"
    },
    {
      "Time_Start": 1942.12,
      "Time_End": 1952.52,
      "Text": " therefore all the domain users too as well. This enrollment CA is an enterprise CA for this"
    },
    {
      "Time_Start": 1952.52,
      "Time_End": 1958.2,
      "Text": " root CA, and in LDAP, these are actually distinct objects."
    },
    {
      "Time_Start": 1960.6,
      "Time_End": 1965.6399999999999,
      "Text": " This could be more complicated, so if we had three-tier PKI, we could actually see several"
    },
    {
      "Time_Start": 1965.6399999999999,
      "Time_End": 1972.2,
      "Text": " CAs in this chain. The enrollment CA is trusted for NT authentication by the NTOF store,"
    },
    {
      "Time_Start": 1972.76,
      "Time_End": 1977.96,
      "Text": " which is the NTOF store for the domain. Now there's more to it."
    },
    {
      "Time_Start": 1978.8400000000001,
      "Time_End": 1988.3600000000001,
      "Text": " What we also do is we understand the properties of this certificate template"
    },
    {
      "Time_Start": 1988.3600000000001,
      "Time_End": 1994.76,
      "Text": " to understand based on the EKUs, the schema version, et cetera, et cetera, et cetera,"
    },
    {
      "Time_Start": 1995.4,
      "Time_End": 2004.04,
      "Text": " that escalation one is possible through this template. So you don't need to pick through"
    },
    {
      "Time_Start": 2004.04,
      "Time_End": 2009.3999999999999,
      "Text": " all the details of all of these nodes to understand that escalation one is possible."
    },
    {
      "Time_Start": 2009.3999999999999,
      "Time_End": 2017.24,
      "Text": " We've done that work for you, and I believe we've done it pretty accurately. Yeah,"
    },
    {
      "Time_Start": 2018.12,
      "Time_End": 2024.2,
      "Text": " accurate enough. No, it is. We actually worked extremely hard to make sure that it's accurate."
    },
    {
      "Time_Start": 2024.8400000000001,
      "Time_End": 2028.3600000000001,
      "Text": " Is these? Yeah."
    },
    {
      "Time_Start": 2045.88,
      "Time_End": 2049.0,
      "Text": " Again, you can click on these edges to get information about what these things mean."
    },
    {
      "Time_Start": 2049.56,
      "Time_End": 2053.16,
      "Text": " Okay, now let's go back to our adversary perspective."
    },
    {
      "Time_Start": 2063.56,
      "Time_End": 2065.16,
      "Text": " So let me back up a little bit."
    },
    {
      "Time_Start": 2068.2,
      "Time_End": 2072.6,
      "Text": " Who's done escalation one on a Pintest or Red Team? A few people, okay."
    },
    {
      "Time_Start": 2073.24,
      "Time_End": 2079.24,
      "Text": " A few people, okay. When you execute escalation one, there's information that you need"
    },
    {
      "Time_Start": 2080.12,
      "Time_End": 2083.4,
      "Text": " to feed into a Ruby as command, or if you're using some other command,"
    },
    {
      "Time_Start": 2084.12,
      "Time_End": 2092.04,
      "Text": " in order to pull off the attack. Yeah, with Certify. So with Certify, for example,"
    },
    {
      "Time_Start": 2092.04,
      "Time_End": 2096.04,
      "Text": " you need to target the specific CA that is involved in escalation one."
    },
    {
      "Time_Start": 2096.92,
      "Time_End": 2102.44,
      "Text": " And you also need to specify the display name of the template involved. And then you also"
    },
    {
      "Time_Start": 2102.44,
      "Time_End": 2110.36,
      "Text": " need to specify the, I think that's NT4 format, the NT4 format of the principle that you want"
    },
    {
      "Time_Start": 2110.36,
      "Time_End": 2116.92,
      "Text": " to impersonate. And so in the interface, in the Bloodhound interface, we've tried to make it as"
    },
    {
      "Time_Start": 2116.92,
      "Time_End": 2123.2400000000002,
      "Text": " easy as possible to be able to just copy and paste from Bloodhound into your command to,"
    },
    {
      "Time_Start": 2124.36,
      "Time_End": 2129.08,
      "Text": " again, reduce that friction so that you're not chasing information here, there, everywhere."
    },
    {
      "Time_Start": 2129.64,
      "Time_End": 2133.24,
      "Text": " And so that's what we're looking at here."
    },
    {
      "Time_Start": 2139.64,
      "Time_End": 2144.44,
      "Text": " These are the properties that Jonas was talking about. So you can verify that information if you"
    },
    {
      "Time_Start": 2144.44,
      "Time_End": 2149.64,
      "Text": " would like. And then to identify a principle that we're going to actually impersonate,"
    },
    {
      "Time_Start": 2150.44,
      "Time_End": 2156.84,
      "Text": " we can click on the domain admins group. And then in the domain admins entity panel here,"
    },
    {
      "Time_Start": 2156.84,
      "Time_End": 2161.7200000000003,
      "Text": " we can click on members, which will show us who are the principles that belong to that group."
    },
    {
      "Time_Start": 2161.7200000000003,
      "Time_End": 2166.52,
      "Text": " And so in that group, we have this user called researcher. That's going to be the principle"
    },
    {
      "Time_Start": 2166.52,
      "Time_End": 2172.76,
      "Text": " that we're going to impersonate as our demo user principle. Okay, getting back into the"
    },
    {
      "Time_Start": 2172.76,
      "Time_End": 2179.7200000000003,
      "Text": " actual attack steps. The first thing that I'll do here is I will do a simple proof that I'm not"
    },
    {
      "Time_Start": 2179.7200000000003,
      "Time_End": 2186.36,
      "Text": " a domain admin already. And so I'm just trying to dir the C$ share on the domain controller,"
    },
    {
      "Time_Start": 2186.36,
      "Time_End": 2191.0,
      "Text": " which you, by default, have to be an admin to do. I try to do that, and you can see that we get"
    },
    {
      "Time_Start": 2191.0,
      "Time_End": 2199.6400000000003,
      "Text": " accesses denied. So that proves that we're not already a domain admin. Then we're going to"
    },
    {
      "Time_Start": 2199.6400000000003,
      "Time_End": 2207.96,
      "Text": " use certify to enroll in this certificate, which will then result in that file,"
    },
    {
      "Time_Start": 2209.0,
      "Time_End": 2212.6800000000003,
      "Text": " it will result in a certificate file being on disk in our current working directory."
    },
    {
      "Time_Start": 2213.56,
      "Time_End": 2219.56,
      "Text": " In that command, we're specifying the CA, the template, and the principle that we want to"
    },
    {
      "Time_Start": 2219.56,
      "Time_End": 2225.8799999999997,
      "Text": " impersonate. We're going to take the resulting certificate, and we're going to manipulate it"
    },
    {
      "Time_Start": 2225.8799999999997,
      "Time_End": 2229.08,
      "Text": " into a different format using OpenSSL."
    },
    {
      "Time_Start": 2243.64,
      "Time_End": 2247.08,
      "Text": " This password here, I'm just making it like ASDF or something like that."
    },
    {
      "Time_Start": 2249.16,
      "Time_End": 2257.16,
      "Text": " And then this resulting pfx, I will take from my Mac OS system, and then through the RDP channel,"
    },
    {
      "Time_Start": 2257.16,
      "Time_End": 2263.0,
      "Text": " I'll put it on disk on the Windows system. You can also just do this in Windows. I'm just kind of,"
    },
    {
      "Time_Start": 2263.0,
      "Time_End": 2268.6,
      "Text": " I don't know, I like my Mac terminal, I guess. There's another thing that I'm going to do here"
    },
    {
      "Time_Start": 2268.6,
      "Time_End": 2274.68,
      "Text": " I don't know, I like my Mac terminal, I guess. There's the file on disk. So then,"
    },
    {
      "Time_Start": 2274.68,
      "Time_End": 2283.16,
      "Text": " now we'll use Rubyist to use that certificate to request the TGT as the researcher user. And this"
    },
    {
      "Time_Start": 2283.16,
      "Time_End": 2290.04,
      "Text": " template, the resulting certificate, it has a subject alt name for the researcher principle."
    },
    {
      "Time_Start": 2290.04,
      "Time_End": 2296.7599999999998,
      "Text": " And so because of that, and because of the fact that the CA involved is trusted for NT authentication,"
    },
    {
      "Time_Start": 2297.32,
      "Time_End": 2303.48,
      "Text": " and because the CA involved is trusted as a root CA, the domain controller will issue back"
    },
    {
      "Time_Start": 2303.48,
      "Time_End": 2307.48,
      "Text": " the TGT, which will be valid for authentication as the researcher user."
    },
    {
      "Time_Start": 2310.6800000000003,
      "Time_End": 2314.36,
      "Text": " I'm supplying the password that I said earlier, which is just like ASDF."
    },
    {
      "Time_Start": 2316.28,
      "Time_End": 2319.32,
      "Text": " And then we're also doing a slash ptt pass the ticket,"
    },
    {
      "Time_Start": 2319.32,
      "Time_End": 2321.8,
      "Text": " so that the ticket is just immediately loaded into memory."
    },
    {
      "Time_Start": 2322.6800000000003,
      "Time_End": 2329.88,
      "Text": " That's done. And then if we did klist now, we would see that ticket is loaded in memory."
    },
    {
      "Time_Start": 2329.88,
      "Time_End": 2335.8,
      "Text": " And finally, we will again go back and we will dir out the C$ share on the domain controller,"
    },
    {
      "Time_Start": 2335.8,
      "Time_End": 2340.44,
      "Text": " and we can see that now we can access that, and that proves that we're authenticated as a domain."
    },
    {
      "Time_Start": 2341.2400000000002,
      "Time_End": 2344.2000000000003,
      "Text": " Now, as a pentester, as a red teamer,"
    },
    {
      "Time_Start": 2347.32,
      "Time_End": 2352.52,
      "Text": " when you deliver a report to a customer, and you say, hey, there was escalation one in your"
    },
    {
      "Time_Start": 2352.52,
      "Time_End": 2358.52,
      "Text": " environment, and I executed it. If I'm the customer who's receiving that information,"
    },
    {
      "Time_Start": 2358.52,
      "Time_End": 2362.36,
      "Text": " my first question is going to be like, okay, that's great. What do I do about that?"
    },
    {
      "Time_Start": 2363.0,
      "Time_End": 2367.0,
      "Text": " And then my second question is going to be, okay, great, I'm going to ask you a question."
    },
    {
      "Time_Start": 2367.64,
      "Time_End": 2372.52,
      "Text": " And then my second question is going to be, okay, great. Did you also analyze all the other"
    },
    {
      "Time_Start": 2372.52,
      "Time_End": 2378.28,
      "Text": " templates? Did you find all of the escalation one scenarios? So we're also working,"
    },
    {
      "Time_Start": 2379.0,
      "Time_End": 2384.84,
      "Text": " we have worked to make answering those questions with the FOSS tool as easy as possible."
    },
    {
      "Time_Start": 2387.0,
      "Time_End": 2391.8,
      "Text": " Also, just other generic hygiene questions we want to be able to answer."
    },
    {
      "Time_Start": 2392.6800000000003,
      "Time_End": 2399.88,
      "Text": " For example, on this template, if we pull up the entity panel for this template, which was"
    },
    {
      "Time_Start": 2399.88,
      "Time_End": 2405.8,
      "Text": " susceptible to escalation one, we can look at the inbound object control, which will show not only"
    },
    {
      "Time_Start": 2405.8,
      "Time_End": 2409.88,
      "Text": " who has like generic all, but also all the principles that have enrolled rights on that"
    },
    {
      "Time_Start": 2409.88,
      "Time_End": 2416.84,
      "Text": " particular template. And that information will be more useful to a defender for being able to make"
    },
    {
      "Time_Start": 2417.6400000000003,
      "Time_End": 2433.56,
      "Text": " some remediation actions. We can also do the same thing for a CA. So here for the enterprise CA"
    },
    {
      "Time_Start": 2433.56,
      "Time_End": 2441.32,
      "Text": " object, we're looking at inbound object control again. And we can see the principles that are"
    },
    {
      "Time_Start": 2441.32,
      "Time_End": 2448.2000000000003,
      "Text": " involved that have control of the root CA, or the enterprise CA, either in a material way,"
    },
    {
      "Time_Start": 2448.2000000000003,
      "Time_End": 2453.8,
      "Text": " because they have like managed CA rights or generic all, or the principles that just have"
    },
    {
      "Time_Start": 2453.8,
      "Time_End": 2464.6800000000003,
      "Text": " enroll rights. And I believe that's going to be the end of that. Yep."
    },
    {
      "Time_Start": 2464.68,
      "Time_End": 2473.3199999999997,
      "Text": " Yeah, if you go back to the end of the presentation, there's actually also,"
    },
    {
      "Time_Start": 2473.96,
      "Time_End": 2483.08,
      "Text": " yeah, it may be too small to see, but there's a red node, which is a computer node"
    },
    {
      "Time_Start": 2483.08,
      "Time_End": 2491.08,
      "Text": " that has a bunch of edges to the enterprise CA. That would be the CA host itself, where the"
    },
    {
      "Time_Start": 2491.96,
      "Time_End": 2500.6,
      "Text": " enterprise CA is actually running, which is also linked up to the enterprise CA. So you can actually"
    },
    {
      "Time_Start": 2500.6,
      "Time_End": 2507.4,
      "Text": " quite easily find that host and see like paths going through there. So we can see there's also"
    },
    {
      "Time_Start": 2507.4,
      "Time_End": 2516.7599999999998,
      "Text": " an inbound edge from a group going up to that object for the computer object. Yeah. So that's"
    },
    {
      "Time_Start": 2516.92,
      "Time_End": 2526.1200000000003,
      "Text": " also useful. We have included a couple of predefined queries under the Cypher tab on the"
    },
    {
      "Time_Start": 2526.1200000000003,
      "Time_End": 2535.0,
      "Text": " explore page that can actually highlight, yeah, the PKI hierarchy, and also like"
    },
    {
      "Time_Start": 2535.0,
      "Time_End": 2537.96,
      "Text": " which computers host the CAs and so on."
    },
    {
      "Time_Start": 2553.96,
      "Time_End": 2561.0,
      "Text": " Yeah, so we've also introduced a couple of things in Bloodhound Enterprise. So in"
    },
    {
      "Time_Start": 2561.0,
      "Time_End": 2565.64,
      "Text": " Bloodhound Enterprise, we have the same nodes and edges as you have in the open source version."
    },
    {
      "Time_Start": 2566.92,
      "Time_End": 2572.44,
      "Text": " But what we do have in Bloodhound Enterprise is that we have findings. So you don't have,"
    },
    {
      "Time_Start": 2572.44,
      "Time_End": 2579.08,
      "Text": " as a Bloodhound Enterprise customer, to look for these edges. If there is a principle, which"
    },
    {
      "Time_Start": 2579.08,
      "Time_End": 2587.48,
      "Text": " is marked as non-tier zero, that has the opportunity to perform escalation one, that will show up as a"
    },
    {
      "Time_Start": 2587.48,
      "Time_End": 2593.16,
      "Text": " finding on this attack paths page here. So you can immediately see like that authenticated users"
    },
    {
      "Time_Start": 2593.16,
      "Time_End": 2601.08,
      "Text": " and domain users can perform escalation one in my environment here. You can also see the exposure"
    },
    {
      "Time_Start": 2601.08,
      "Time_End": 2606.44,
      "Text": " for the, yeah, for the findings. So you can see like how many principles can actually abuse this."
    },
    {
      "Time_Start": 2606.44,
      "Time_End": 2610.52,
      "Text": " And of course, it's going to be a pretty high number if it's authenticated users."
    },
    {
      "Time_Start": 2611.4,
      "Time_End": 2621.4,
      "Text": " With the new findings, we also have recommendations for remediation. And as these kind of, yeah,"
    },
    {
      "Time_Start": 2621.4,
      "Time_End": 2627.56,
      "Text": " attack paths for ADCs are quite complicated and has a lot of requirements, there's also a lot"
    },
    {
      "Time_Start": 2627.56,
      "Time_End": 2632.28,
      "Text": " of opportunities for actually like breaking the attack paths. For example, you could just delete"
    },
    {
      "Time_Start": 2632.28,
      "Time_End": 2638.36,
      "Text": " the root CA and then it'll not be possible to perform escalation one. But it's probably also"
    },
    {
      "Time_Start": 2638.84,
      "Time_End": 2645.1600000000003,
      "Text": " going to break a lot of other things if you do that. So we're trying to like guide as much as"
    },
    {
      "Time_Start": 2645.1600000000003,
      "Time_End": 2652.52,
      "Text": " possible to figuring out like what is the best solution in your scenario. And yeah, so for"
    },
    {
      "Time_Start": 2652.52,
      "Time_End": 2656.92,
      "Text": " escalation one, we have like six different ways that we suggest that you could potentially"
    },
    {
      "Time_Start": 2656.92,
      "Time_End": 2661.96,
      "Text": " remediate the issue. And this is just a screenshot of the top and underneath it,"
    },
    {
      "Time_Start": 2661.96,
      "Time_End": 2666.44,
      "Text": " there's like the details of how you can actually perform the remediation."
    },
    {
      "Time_Start": 2668.92,
      "Time_End": 2672.52,
      "Text": " And that's it. Yeah, I think we have time for questions, maybe."
    },
    {
      "Time_Start": 2677.96,
      "Time_End": 2681.8,
      "Text": " Any questions? Should we get the mic or? Yeah."
    },
    {
      "Time_Start": 2691.8,
      "Time_End": 2696.92,
      "Text": " Hello. Okay. So I was wondering, would you be able to go back to the slide that you had"
    },
    {
      "Time_Start": 2697.08,
      "Time_End": 2702.52,
      "Text": " going over the whole like Bloodhound custom query being like shortest path here? Would you"
    },
    {
      "Time_Start": 2702.52,
      "Time_End": 2710.6800000000003,
      "Text": " able to just like walk through that? Shortest path. It had like a full query that like you could"
    },
    {
      "Time_Start": 2710.6800000000003,
      "Time_End": 2716.28,
      "Text": " like copy paste or something that like actually had the. Yeah, right there. Yeah. Could you just"
    },
    {
      "Time_Start": 2716.28,
      "Time_End": 2723.32,
      "Text": " like briefly go through that? This right here? Yeah, sure. So are you familiar with the DC sync"
    },
    {
      "Time_Start": 2723.88,
      "Time_End": 2730.28,
      "Text": " So are you familiar with the DC sync attack? Yeah. So DC sync is enabled by several different"
    },
    {
      "Time_Start": 2730.28,
      "Time_End": 2734.84,
      "Text": " combinations of privileges. If you're a local admin on a DC, which let's not debate what that"
    },
    {
      "Time_Start": 2734.84,
      "Time_End": 2740.84,
      "Text": " means right now, but you can DC sync, but more atomically, more specifically, DC sync is enabled"
    },
    {
      "Time_Start": 2740.84,
      "Time_End": 2745.6400000000003,
      "Text": " by the combination of two different privileges, which are a DS get change."
    },
    {
      "Time_Start": 2746.3599999999997,
      "Time_End": 2753.3199999999997,
      "Text": " A DS get change. Oh, geez. Get changes and get changes. All is a short name."
    },
    {
      "Time_Start": 2755.4,
      "Time_End": 2761.56,
      "Text": " One of those is not enough to be able to pull out NTLM hashes from the DC, but the combination of"
    },
    {
      "Time_Start": 2761.56,
      "Time_End": 2766.8399999999997,
      "Text": " both of them is. And so these two different rights, these are actually what domain controllers have"
    },
    {
      "Time_Start": 2767.64,
      "Time_End": 2773.24,
      "Text": " against the domain that enables domain controllers to do credential replication to each other."
    },
    {
      "Time_Start": 2773.2400000000002,
      "Time_End": 2777.32,
      "Text": " So a domain controller computer object is a member of the domain controllers group,"
    },
    {
      "Time_Start": 2777.32,
      "Time_End": 2781.0800000000004,
      "Text": " which has one of these. And it's also a member of the enterprise domain controllers group,"
    },
    {
      "Time_Start": 2781.0800000000004,
      "Time_End": 2787.48,
      "Text": " which has the other one. So it is the combination of those two that enables DC sync. And in,"
    },
    {
      "Time_Start": 2788.44,
      "Time_End": 2793.0000000000005,
      "Text": " in the real world, we've also seen situations where maybe a principal has both of these through"
    },
    {
      "Time_Start": 2793.0000000000005,
      "Time_End": 2801.96,
      "Text": " different group memberships as well. So this cypher query is showing from, uh, the domain user,"
    },
    {
      "Time_Start": 2801.96,
      "Time_End": 2809.0,
      "Text": " which, so we're specifying on online too, that the name of the user is domain user at dumpster fire."
    },
    {
      "Time_Start": 2809.7200000000003,
      "Time_End": 2816.28,
      "Text": " And then the P variable on line one is being assigned to the result of the pattern,"
    },
    {
      "Time_Start": 2816.28,
      "Time_End": 2823.4,
      "Text": " which starts from you and then traverses through, uh, any number of member of edges,"
    },
    {
      "Time_Start": 2825.0,
      "Time_End": 2829.32,
      "Text": " and then traverses through either DC sync, get changes, or get changes, all edges"
    },
    {
      "Time_Start": 2829.32,
      "Time_End": 2834.28,
      "Text": " to any domain labeled node in the database. And then line three is returning those patterns."
    },
    {
      "Time_Start": 2835.0,
      "Time_End": 2841.2400000000002,
      "Text": " And so this shows us both the post-processed edge, which is DC sync. And then it also shows"
    },
    {
      "Time_Start": 2841.2400000000002,
      "Time_End": 2845.0800000000004,
      "Text": " us the non-traversable edges, which are get changes and get changes all. Does that answer"
    },
    {
      "Time_Start": 2845.0800000000004,
      "Time_End": 2850.6000000000004,
      "Text": " your question? Okay. Uh, right here. She'll, she'll bring the mic to you."
    },
    {
      "Time_Start": 2850.8399999999997,
      "Time_End": 2856.68,
      "Text": " So I've kind of, um, a cheeky question and there's a few parts to it. So one of the things that slows"
    },
    {
      "Time_Start": 2856.68,
      "Time_End": 2862.92,
      "Text": " us down when we're like, so I'm a red teamer, when we go to exploit like S1 is actually nothing to do"
    },
    {
      "Time_Start": 2862.92,
      "Time_End": 2869.48,
      "Text": " with the certificate side at all. But, um, like we see MDI, Defender-Fried Entity, a lot. Um, and so"
    },
    {
      "Time_Start": 2869.48,
      "Time_End": 2874.7599999999998,
      "Text": " we're looking for, like, can we work out which domain controllers don't have the MDI edge?"
    },
    {
      "Time_Start": 2875.0800000000004,
      "Time_End": 2880.5200000000004,
      "Text": " Um, and so we're looking for like, can we work out which domain controllers don't have the MDI"
    },
    {
      "Time_Start": 2880.5200000000004,
      "Time_End": 2885.48,
      "Text": " agent on? Cause then obviously you could do your Kerberos off against that. Failing that at the"
    },
    {
      "Time_Start": 2885.48,
      "Time_End": 2891.0,
      "Text": " moment, we just sort of assume if we see Defender for endpoint, we assume MDI everywhere. Yeah. And"
    },
    {
      "Time_Start": 2891.0,
      "Time_End": 2898.0400000000004,
      "Text": " then, um, we try and use the certs against like LDAP instead. And we'll do like, we'll look for"
    },
    {
      "Time_Start": 2898.0400000000004,
      "Time_End": 2901.96,
      "Text": " disabled domain admin accounts and then we'll just change their password and re-enable them,"
    },
    {
      "Time_Start": 2901.96,
      "Time_End": 2907.88,
      "Text": " stuff like that. Um, so is there anything in Bloodhound for maybe helping us out there?"
    },
    {
      "Time_Start": 2907.88,
      "Time_End": 2912.68,
      "Text": " Like maybe looking for domain controllers that may be more likely that we could go against or"
    },
    {
      "Time_Start": 2913.2400000000002,
      "Time_End": 2917.48,
      "Text": " potential other routes, like other places we could use the certificates that aren't Kerberos"
    },
    {
      "Time_Start": 2917.48,
      "Time_End": 2923.16,
      "Text": " for getting around? Well, I guess if you're not using Kerberos, you could be doing like, you could"
    },
    {
      "Time_Start": 2923.16,
      "Time_End": 2930.04,
      "Text": " be signing something. You could be like signing some, some binary, I guess. Um, you could do that"
    },
    {
      "Time_Start": 2930.12,
      "Time_End": 2935.4,
      "Text": " analysis in Bloodhound to find, you know, what templates your current principle can enroll into"
    },
    {
      "Time_Start": 2935.4,
      "Time_End": 2939.24,
      "Text": " effectively. And then you could, you could go through those one at a time and you could see"
    },
    {
      "Time_Start": 2939.24,
      "Time_End": 2943.16,
      "Text": " what the EKUs are. So you could understand like this one is for this, this one's for that, this"
    },
    {
      "Time_Start": 2943.16,
      "Time_End": 2948.52,
      "Text": " one's for that. Um, but that your first question is more about, you know, can, can Bloodhound help"
    },
    {
      "Time_Start": 2948.52,
      "Time_End": 2956.6,
      "Text": " with defense evasion, I guess? Um, no, it's, it's not, it's not really part of what we're trying to"
    },
    {
      "Time_Start": 2956.6,
      "Time_End": 2962.04,
      "Text": " accomplish with Bloodhound. So we want to model what are the attack paths, but then like, for"
    },
    {
      "Time_Start": 2962.04,
      "Time_End": 2965.7999999999997,
      "Text": " example, we don't, we don't model layer two or layer three at all. So if there's network"
    },
    {
      "Time_Start": 2965.7999999999997,
      "Time_End": 2971.56,
      "Text": " segmentation, you're kind of on your own. And it's the same thing with defensive evasion is we're not,"
    },
    {
      "Time_Start": 2972.12,
      "Time_End": 2977.16,
      "Text": " we're not going to try to like, you know, for example, like list processes on a DC and,"
    },
    {
      "Time_Start": 2977.16,
      "Time_End": 2983.08,
      "Text": " and be able to map this process as this EDR agent and stuff like that. So no, sorry."
    },
    {
      "Time_Start": 2983.88,
      "Time_End": 2989.24,
      "Text": " I think there's, uh, yeah, one thing that could be interesting. Uh, it's like if you have a"
    },
    {
      "Time_Start": 2989.24,
      "Time_End": 2994.6,
      "Text": " multi-domain forest and there might be some domains that they don't really use that much."
    },
    {
      "Time_Start": 2994.6,
      "Time_End": 3000.2799999999997,
      "Text": " It's just something that they, uh, like in the process of, uh, decommissioning. And it has like"
    },
    {
      "Time_Start": 3000.2799999999997,
      "Time_End": 3005.72,
      "Text": " been like that for the past 10 years. Um, but it still exists. Uh, so it could be like, you could,"
    },
    {
      "Time_Start": 3005.72,
      "Time_End": 3012.2,
      "Text": " you could look for, I believe we have introduced a new edge or we have, uh, called a DC four"
    },
    {
      "Time_Start": 3012.6800000000003,
      "Time_End": 3017.8,
      "Text": " that links domain controllers to, to the, to the domain. You could find that before like with the,"
    },
    {
      "Time_Start": 3017.8,
      "Time_End": 3023.4,
      "Text": " uh, with the distinguished name, but, um, you could look for like all the domain controllers"
    },
    {
      "Time_Start": 3023.4,
      "Time_End": 3027.4,
      "Text": " in the forest and, and try to figure out like which domain looks like it's not really being"
    },
    {
      "Time_Start": 3027.4,
      "Time_End": 3032.76,
      "Text": " used. So it could be that they have not installed like the MDI agent on, on, on those domain"
    },
    {
      "Time_Start": 3032.76,
      "Time_End": 3037.2400000000002,
      "Text": " controls and then like compromise, uh, domain admin in that domain. And then yeah, from there"
    },
    {
      "Time_Start": 3037.32,
      "Time_End": 3042.44,
      "Text": " you can probably quite easily escalate to enterprise admin. And yeah, I can,"
    },
    {
      "Time_Start": 3042.44,
      "Time_End": 3048.5200000000004,
      "Text": " I can see that we're over time. So maybe we have time for one more question. Oh, thanks."
    },
    {
      "Time_Start": 3057.88,
      "Time_End": 3062.2000000000003,
      "Text": " Uh, just wanted to see, could you talk a little bit at a high level about how you do"
    },
    {
      "Time_Start": 3062.2000000000003,
      "Time_End": 3067.7200000000003,
      "Text": " about your architecture for that, uh, processing non-traversable edges into traversable edges"
    },
    {
      "Time_Start": 3067.7200000000003,
      "Time_End": 3072.6000000000004,
      "Text": " and just give a feel for how much time of your sort of ingest that takes?"
    },
    {
      "Time_Start": 3073.4800000000005,
      "Time_End": 3077.1600000000003,
      "Text": " Uh, do you mean, do you mean like technical architecture or do you mean like,"
    },
    {
      "Time_Start": 3077.1600000000003,
      "Time_End": 3080.84,
      "Text": " like our like product development process architecture?"
    },
    {
      "Time_Start": 3080.84,
      "Time_End": 3081.5600000000004,
      "Text": " Uh, technical."
    },
    {
      "Time_Start": 3082.52,
      "Time_End": 3093.0,
      "Text": " Yeah. Um, so data is ingested into Bloodhound. And so that's with like a JSON formatted file"
    },
    {
      "Time_Start": 3093.64,
      "Time_End": 3102.44,
      "Text": " that goes through first the ingest process. And the ingest process is basically naive,"
    },
    {
      "Time_Start": 3102.44,
      "Time_End": 3108.84,
      "Text": " I would say, and generic in that data coming in goes into the database and there's no logic,"
    },
    {
      "Time_Start": 3109.8,
      "Time_End": 3117.2400000000002,
      "Text": " uh, necessarily beyond mapping this JSON property will be interpreted as this kind of,"
    },
    {
      "Time_Start": 3117.7200000000003,
      "Time_End": 3122.76,
      "Text": " uh, uh, variable. Like it's a, it's a string, it's an integer. And then maybe there's translation"
    },
    {
      "Time_Start": 3122.76,
      "Time_End": 3128.92,
      "Text": " as far as taking like Windows epoch time and converting that into Unix epoch time, for example."
    },
    {
      "Time_Start": 3128.92,
      "Time_End": 3138.52,
      "Text": " Right. So maybe it's not as naive as I said. So data collection ingest, and then for"
    },
    {
      "Time_Start": 3138.52,
      "Time_End": 3143.24,
      "Text": " Bloodhound enterprise, Bloodhound enterprise does a reconciliation process. And the reconciliation"
    },
    {
      "Time_Start": 3143.24,
      "Time_End": 3148.04,
      "Text": " process is taking the information that's already in the database, comparing that to the new"
    },
    {
      "Time_Start": 3148.04,
      "Time_End": 3154.12,
      "Text": " information coming in and then reconciling that so that what is in the model is actually the most"
    },
    {
      "Time_Start": 3154.12,
      "Time_End": 3159.0,
      "Text": " up-to-date information. BHCE doesn't do that because it doesn't really fit the use case for"
    },
    {
      "Time_Start": 3159.0,
      "Time_End": 3167.48,
      "Text": " Red Team. After reconciliation is the post-processing step. So post-processing waits"
    },
    {
      "Time_Start": 3167.48,
      "Time_End": 3176.2,
      "Text": " for reconciliation and it waits for ingest to be totally done. And at that point in the database,"
    },
    {
      "Time_Start": 3176.2,
      "Time_End": 3182.84,
      "Text": " we have the non-traversable edges that are all there and all the nodes, the properties are all"
    },
    {
      "Time_Start": 3182.84,
      "Time_End": 3194.92,
      "Text": " there. So the enroll edges, probably the only ones here that are, well, and member of, are the"
    },
    {
      "Time_Start": 3194.92,
      "Time_End": 3200.2000000000003,
      "Text": " only ones that are like non-traversable or I'm sorry, that are not post-processed. They're not"
    },
    {
      "Time_Start": 3200.2000000000003,
      "Time_End": 3208.1200000000003,
      "Text": " created in post-processing. Publish too is also created at ingest. But then we have like the"
    },
    {
      "Time_Start": 3208.12,
      "Time_End": 3215.88,
      "Text": " post-processing logic has like a specific order because we need the issued signed by edges and"
    },
    {
      "Time_Start": 3215.88,
      "Time_End": 3222.04,
      "Text": " the trusted for empty off edges to be created first before we can create the escalation one."
    },
    {
      "Time_Start": 3222.04,
      "Time_End": 3229.3199999999997,
      "Text": " So that's the first step we check like there's like on the enterprise CA there's a property"
    },
    {
      "Time_Start": 3229.3199999999997,
      "Time_End": 3235.72,
      "Text": " containing the certificate chain. So we can create that link to the root CA from the enterprise CA's"
    },
    {
      "Time_Start": 3235.7200000000003,
      "Time_End": 3242.2000000000003,
      "Text": " and yeah, there's also this reference attribute on the NC auth store that makes it possible to"
    },
    {
      "Time_Start": 3242.2000000000003,
      "Time_End": 3247.4800000000005,
      "Text": " create the trusted for NC auth edge. And when we have everything in place that you can see"
    },
    {
      "Time_Start": 3247.4800000000005,
      "Time_End": 3253.6400000000003,
      "Text": " on this screen, then we take for every domain node, we find the enterprise CA's that are trusted for"
    },
    {
      "Time_Start": 3253.6400000000003,
      "Time_End": 3259.96,
      "Text": " NC authentication and change up to a root CA. And then for each of them, we look through all the"
    },
    {
      "Time_Start": 3259.96,
      "Time_End": 3265.7200000000003,
      "Text": " certificate templates that has like a publish to edge to that node. Then for each of them, we find"
    },
    {
      "Time_Start": 3265.7200000000003,
      "Time_End": 3272.84,
      "Text": " all the principles that have enrollment rights on both the enterprise CA's and also on the"
    },
    {
      "Time_Start": 3272.84,
      "Time_End": 3278.04,
      "Text": " certificate templates. And then we have some pretty advanced logic that I don't really know how it"
    },
    {
      "Time_Start": 3278.04,
      "Time_End": 3285.2400000000002,
      "Text": " works that finds like the intersection of like the principles that have enroll on both the certificate"
    },
    {
      "Time_Start": 3285.2400000000002,
      "Time_End": 3290.5200000000004,
      "Text": " templates and on the enterprise CA's. And yeah, we also filter out all the certificate"
    },
    {
      "Time_Start": 3290.5200000000004,
      "Time_End": 3295.48,
      "Text": " templates that doesn't meet the requirements for escalation one. And by the end, we will have this"
    },
    {
      "Time_Start": 3295.48,
      "Time_End": 3301.88,
      "Text": " escalation one edge created. Yeah. Yeah. We create that directly from the principle that has"
    },
    {
      "Time_Start": 3302.84,
      "Time_End": 3307.6400000000003,
      "Text": " everything Jonas just said, chaining up to the domain. We create that from that user to the domain."
    }
  ]
}