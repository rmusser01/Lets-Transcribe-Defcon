{
  "segments": [
    {
      "Time_Start": 0.0,
      "Time_End": 7.2,
      "Text": "This text was transcribed using whisper model: large-v2\n\n All right."
    },
    {
      "Time_Start": 7.2,
      "Time_End": 9.96,
      "Text": " Thank you everybody for coming to SOCON and to our talk."
    },
    {
      "Time_Start": 9.96,
      "Time_End": 16.76,
      "Text": " Our talk is titled Manually Enumerating Active Directory Attack Paths with Buffhound."
    },
    {
      "Time_Start": 16.76,
      "Time_End": 17.76,
      "Text": " So my name is Matt Creel."
    },
    {
      "Time_Start": 17.76,
      "Time_End": 20.72,
      "Text": " I'm a Senior Adversary Simulation Consultant at Specter Ops."
    },
    {
      "Time_Start": 20.72,
      "Time_End": 24.32,
      "Text": " I've been here for about eight months."
    },
    {
      "Time_Start": 24.32,
      "Time_End": 28.0,
      "Text": " Previous experience is both a penetration tester and a red teamer."
    },
    {
      "Time_Start": 28.0,
      "Time_End": 47.2,
      "Text": " Fun fact about me, I'm a very big impact fan boy and I love writing my tools in Python."
    },
    {
      "Time_Start": 47.2,
      "Time_End": 48.8,
      "Text": " Get that back in the podium."
    },
    {
      "Time_Start": 48.8,
      "Time_End": 49.8,
      "Text": " My name is Adam Brown."
    },
    {
      "Time_Start": 49.8,
      "Time_End": 53.18,
      "Text": " I am currently in the public sector."
    },
    {
      "Time_Start": 53.18,
      "Time_End": 57.84,
      "Text": " My title is Chief of Offensive Cyber Capabilities, which means mostly nothing."
    },
    {
      "Time_Start": 58.68000000000001,
      "Time_End": 63.14,
      "Text": " I am working on offensive automation and management at scale."
    },
    {
      "Time_Start": 63.14,
      "Time_End": 68.60000000000001,
      "Text": " In the past, I've been Director of Offensive R&D for a private consultancy and done a lot"
    },
    {
      "Time_Start": 68.60000000000001,
      "Time_End": 72.46000000000001,
      "Text": " of red teaming, pen testing."
    },
    {
      "Time_Start": 72.46000000000001,
      "Time_End": 73.46000000000001,
      "Text": " That's me."
    },
    {
      "Time_Start": 73.46000000000001,
      "Time_End": 78.78,
      "Text": " Today, we're going to be talking about, obviously, enumerating active directory with buffhound."
    },
    {
      "Time_Start": 78.78,
      "Time_End": 84.62,
      "Text": " So we'll get to the background, which is why do we even need to have this talk?"
    },
    {
      "Time_Start": 84.62,
      "Time_End": 88.74000000000001,
      "Text": " What did we experience that made us build this tool?"
    },
    {
      "Time_Start": 88.74000000000001,
      "Time_End": 89.98,
      "Text": " Talk about our approach."
    },
    {
      "Time_Start": 89.98,
      "Time_End": 93.62,
      "Text": " Talk about some things you want to keep in mind as you're using our tool or the techniques"
    },
    {
      "Time_Start": 93.62,
      "Time_End": 95.58000000000001,
      "Text": " that we're going to be talking about."
    },
    {
      "Time_Start": 95.58000000000001,
      "Time_End": 101.30000000000001,
      "Text": " And then talk about some of the, I guess, the newer features of buffhound, current pitfalls"
    },
    {
      "Time_Start": 101.30000000000001,
      "Time_End": 110.58000000000001,
      "Text": " and where we're going with the tool."
    },
    {
      "Time_Start": 111.1,
      "Time_End": 115.1,
      "Text": " In the beginning, we were all really cool doing the living off the land thing because"
    },
    {
      "Time_Start": 115.1,
      "Time_End": 116.34,
      "Text": " there was nothing else to do."
    },
    {
      "Time_Start": 116.34,
      "Time_End": 120.9,
      "Text": " Nobody had made any tools yet to make our jobs easier."
    },
    {
      "Time_Start": 120.9,
      "Time_End": 126.2,
      "Text": " Using a lot of, quote-unquote, crude tools like NetXE and DSQuery and trying to piece"
    },
    {
      "Time_Start": 126.2,
      "Time_End": 130.57999999999998,
      "Text": " together this big picture of active directory, which the larger the organization is, the"
    },
    {
      "Time_Start": 130.57999999999998,
      "Time_End": 133.42,
      "Text": " more you start to look like this guy in the picture when you're looking at all the logs"
    },
    {
      "Time_Start": 133.42,
      "Time_End": 137.42,
      "Text": " and trying to correlate what I've already queried, what information do I have, who's"
    },
    {
      "Time_Start": 137.42,
      "Time_End": 140.06,
      "Text": " who, what's what."
    },
    {
      "Time_Start": 140.06,
      "Time_End": 143.94,
      "Text": " That was a pretty brutal time to be in active directory testing."
    },
    {
      "Time_Start": 143.94,
      "Time_End": 146.94,
      "Text": " I was not in it yet, so I'm thankful I missed it."
    },
    {
      "Time_Start": 146.94,
      "Time_End": 151.98,
      "Text": " I came in right around the time when people started really building out some cool tools"
    },
    {
      "Time_Start": 151.98,
      "Time_End": 156.7,
      "Text": " and moving on from NetXE and DSQuery."
    },
    {
      "Time_Start": 156.7,
      "Time_End": 162.42000000000002,
      "Text": " Early on, the things people were using was AD Explorer, which came out in the early 2000s."
    },
    {
      "Time_Start": 162.42000000000002,
      "Time_End": 168.34,
      "Text": " PowerView eventually came onto the scene in 2015, which made life a little bit easier,"
    },
    {
      "Time_Start": 168.34,
      "Time_End": 173.14000000000001,
      "Text": " breaking down some Windows API calls that you could use to enumerate active directory"
    },
    {
      "Time_Start": 173.14000000000001,
      "Time_End": 176.86,
      "Text": " and do some more targeted recon functions."
    },
    {
      "Time_Start": 176.86,
      "Time_End": 182.5,
      "Text": " Then we entered this Age of Enlightenment, Bloodhound, came out in 2016."
    },
    {
      "Time_Start": 182.5,
      "Time_End": 189.58,
      "Text": " This is an amazing tool, really simplified the workflow, taking it leaps and bounds further"
    },
    {
      "Time_Start": 189.58,
      "Time_End": 190.58,
      "Text": " than it was."
    },
    {
      "Time_Start": 190.58,
      "Time_End": 195.42000000000002,
      "Text": " The efficiency for doing active directory tests increased significantly."
    },
    {
      "Time_Start": 195.42000000000002,
      "Time_End": 199.62,
      "Text": " This is a screenshot just replicating an assessment I did not too long ago."
    },
    {
      "Time_Start": 199.62,
      "Time_End": 207.3,
      "Text": " All these intricate attack paths, users owning other users who are members of groups, GP"
    },
    {
      "Time_Start": 207.3,
      "Time_End": 211.66000000000003,
      "Text": " links to OUs, following these massive attack paths that we never would have been able to"
    },
    {
      "Time_Start": 211.66000000000003,
      "Time_End": 213.70000000000002,
      "Text": " find."
    },
    {
      "Time_Start": 213.70000000000002,
      "Time_End": 219.62,
      "Text": " Maybe I could not have found an attack path like this doing manual enumeration."
    },
    {
      "Time_Start": 219.62,
      "Time_End": 225.9,
      "Text": " Bloodhound made life a lot easier in 2016 to 2021, which was a great time to be doing"
    },
    {
      "Time_Start": 225.9,
      "Time_End": 227.9,
      "Text": " these kind of assessments."
    },
    {
      "Time_Start": 227.9,
      "Time_End": 231.94,
      "Text": " Then we went from Enlightenment to this Age of EDR and detection engineering that we are"
    },
    {
      "Time_Start": 231.94,
      "Time_End": 232.94,
      "Text": " in now."
    },
    {
      "Time_Start": 232.94,
      "Time_End": 237.70000000000002,
      "Text": " Mid-assessment, your tools could just flip on you, CrowdStrike could change everything"
    },
    {
      "Time_Start": 237.70000000000002,
      "Time_End": 240.58,
      "Text": " that it is detecting and start burning stuff."
    },
    {
      "Time_Start": 240.58,
      "Time_End": 244.18,
      "Text": " We had to start being a little bit more careful with how we were enumerating the tools we"
    },
    {
      "Time_Start": 244.18,
      "Time_End": 247.1,
      "Text": " were using."
    },
    {
      "Time_Start": 247.1,
      "Time_End": 253.34,
      "Text": " Bloodhound became, or SharpHound specifically, became a fun thing to look back on, but not"
    },
    {
      "Time_Start": 253.34,
      "Time_End": 257.74,
      "Text": " so practical, in at least my assessments that I was doing."
    },
    {
      "Time_Start": 257.74,
      "Time_End": 262.02,
      "Text": " We needed some stuff to fall back on so that we could keep doing our operations, keep staying"
    },
    {
      "Time_Start": 262.02,
      "Time_End": 263.02,
      "Text": " undetected."
    },
    {
      "Time_Start": 263.02,
      "Time_End": 269.78000000000003,
      "Text": " Luckily, the community had been building for a while and really came behind this part of"
    },
    {
      "Time_Start": 269.78000000000003,
      "Time_End": 270.78000000000003,
      "Text": " the effort."
    },
    {
      "Time_Start": 270.78000000000003,
      "Time_End": 275.54,
      "Text": " We had tools like ADExplorer, Snapshot, Companion to ADExplorer to allow us to use Python to"
    },
    {
      "Time_Start": 275.54,
      "Time_End": 280.78000000000003,
      "Text": " convert those dumps into Bloodhound-compatible JSON files."
    },
    {
      "Time_Start": 280.78000000000003,
      "Time_End": 286.74,
      "Text": " Tools like SharpView, EDD, Stand-in, also providing some control and some granularity"
    },
    {
      "Time_Start": 286.74,
      "Time_End": 291.54,
      "Text": " to what we want to enumerate and some information that we need to get, just other methods of"
    },
    {
      "Time_Start": 291.54,
      "Time_End": 292.54,
      "Text": " doing so."
    },
    {
      "Time_Start": 292.54,
      "Time_End": 298.06000000000006,
      "Text": " Then, finally, some manual tools like the LDAP Search Bot from TrustedSec, Linux built-in"
    },
    {
      "Time_Start": 298.06,
      "Time_End": 302.66,
      "Text": " LDAP Search utility, and a lot of people I saw, at least on Twitter, falling back to"
    },
    {
      "Time_Start": 302.66,
      "Time_End": 308.38,
      "Text": " tools like DSQuery to do their Active Directory enumeration, which brought us back to that"
    },
    {
      "Time_Start": 308.38,
      "Time_End": 311.42,
      "Text": " point in time where we're looking through a ton of logs and trying to piece together"
    },
    {
      "Time_Start": 311.42,
      "Time_End": 313.46,
      "Text": " the big picture manually."
    },
    {
      "Time_Start": 313.46,
      "Time_End": 319.78,
      "Text": " It's not somewhere that I personally wanted to go back to, but at the time it was just"
    },
    {
      "Time_Start": 319.78,
      "Time_End": 325.5,
      "Text": " kind of necessary, came with the territory."
    },
    {
      "Time_Start": 325.5,
      "Time_End": 330.5,
      "Text": " I say all of that to say if you can use tools like SharpPound that automate the collection"
    },
    {
      "Time_Start": 330.5,
      "Time_End": 332.94,
      "Text": " of Active Directory objects, then you should."
    },
    {
      "Time_Start": 332.94,
      "Time_End": 338.86,
      "Text": " This talk is not meant to say that BoffHound is a preferred method."
    },
    {
      "Time_Start": 338.86,
      "Time_End": 342.86,
      "Text": " BoffHound is just an additional tool to add to your arsenal."
    },
    {
      "Time_Start": 342.86,
      "Time_End": 346.34,
      "Text": " SharpPound will always be more efficient and quicker than you could do it manually, so"
    },
    {
      "Time_Start": 346.34,
      "Time_End": 350.06,
      "Text": " if you can use it, you should."
    },
    {
      "Time_Start": 350.06,
      "Time_End": 353.7,
      "Text": " Basically we were faced with this problem when we were doing red team assessments specifically"
    },
    {
      "Time_Start": 353.7,
      "Time_End": 355.44,
      "Text": " and trying to stay under the radar."
    },
    {
      "Time_Start": 356.38,
      "Time_End": 361.0,
      "Text": " We wanted to be able to collect all that information on Active Directory objects, but we did not"
    },
    {
      "Time_Start": 361.0,
      "Time_End": 365.56,
      "Text": " want to be tied to specific .NET tooling or .NET tooling in general, which was the main"
    },
    {
      "Time_Start": 365.56,
      "Time_End": 369.52,
      "Text": " way we were collecting AD data in bulk."
    },
    {
      "Time_Start": 369.52,
      "Time_End": 373.15999999999997,
      "Text": " We wanted to be able to see session logged on local group data without blasting the network"
    },
    {
      "Time_Start": 373.15999999999997,
      "Time_End": 375.08,
      "Text": " with a ton of SMB connections."
    },
    {
      "Time_Start": 375.08,
      "Time_End": 381.84,
      "Text": " We wanted to, in that same vein, control the speed and the granularity of the data that"
    },
    {
      "Time_Start": 381.84000000000003,
      "Time_End": 386.32000000000005,
      "Text": " we were collecting instead of collecting everything all at once, because ultimately"
    },
    {
      "Time_Start": 386.32000000000005,
      "Time_End": 390.32000000000005,
      "Text": " we wanted to get back to that phase where we were able to use Bloodhound's interface"
    },
    {
      "Time_Start": 390.32000000000005,
      "Time_End": 394.68,
      "Text": " to make our lives a little bit easier."
    },
    {
      "Time_Start": 394.68,
      "Time_End": 399.84000000000003,
      "Text": " In doing so, we did not want to have to risk tripping detections or burning our operation"
    },
    {
      "Time_Start": 399.84000000000003,
      "Time_End": 404.08000000000004,
      "Text": " just to get the GUI functionality back, because that's not really worth it, right?"
    },
    {
      "Time_Start": 404.08000000000004,
      "Time_End": 407.56000000000006,
      "Text": " We had this problem statement, and I guess to understand this problem statement further,"
    },
    {
      "Time_Start": 407.56000000000006,
      "Time_End": 410.24,
      "Text": " we need to understand what are the methods of detection."
    },
    {
      "Time_Start": 410.24,
      "Time_End": 414.72,
      "Text": " So I'll pass it back to Matt for that."
    },
    {
      "Time_Start": 414.72,
      "Time_End": 419.84000000000003,
      "Text": " So both from a perspective of if you're in a situation where you find yourself unable"
    },
    {
      "Time_Start": 419.84000000000003,
      "Time_End": 425.08,
      "Text": " or unwilling to take the risk of running SharPound out of fear of burning your operation, triggering"
    },
    {
      "Time_Start": 425.08,
      "Time_End": 429.2,
      "Text": " your detection, what are some detection strategies that the blue team can employ that can put"
    },
    {
      "Time_Start": 429.2,
      "Time_End": 434.52,
      "Text": " you in this situation, but also that you might need to consider when performing your LDAP"
    },
    {
      "Time_Start": 434.52,
      "Time_End": 437.48,
      "Text": " enumeration routines manually?"
    },
    {
      "Time_Start": 437.48,
      "Time_End": 440.64000000000004,
      "Text": " So we're going to take a look at four different detection strategies."
    },
    {
      "Time_Start": 440.64000000000004,
      "Time_End": 445.28000000000003,
      "Text": " We can kind of break these down between client-side and server-side detections."
    },
    {
      "Time_Start": 445.28000000000003,
      "Time_End": 448.92,
      "Text": " The three of the four that we're going to take a look at today are outlined in a Falcon"
    },
    {
      "Time_Start": 448.92,
      "Time_End": 452.92,
      "Text": " Forest blog from late 2022, so there'll be a link or a reference on the bottom of one"
    },
    {
      "Time_Start": 452.92,
      "Time_End": 453.92,
      "Text": " of the slides."
    },
    {
      "Time_Start": 453.92,
      "Time_End": 456.6,
      "Text": " I would highly recommend checking that out."
    },
    {
      "Time_Start": 456.6,
      "Time_End": 459.84000000000003,
      "Text": " Some of these are going to revolve around just query logging and taking a look at the"
    },
    {
      "Time_Start": 459.84000000000003,
      "Time_End": 464.40000000000003,
      "Text": " specific LDAP filters that are being passed through to the query."
    },
    {
      "Time_Start": 464.40000000000003,
      "Time_End": 468.36,
      "Text": " On the client-side, don't really want to spend too much time talking about the client-side"
    },
    {
      "Time_Start": 468.36,
      "Time_End": 471.64000000000004,
      "Text": " detections because these are a little bit less reliable."
    },
    {
      "Time_Start": 471.64000000000004,
      "Time_End": 476.08000000000004,
      "Text": " On the client, these are typically going to revolve around telemetry gathering techniques"
    },
    {
      "Time_Start": 476.08000000000004,
      "Time_End": 482.64000000000004,
      "Text": " that rely on ETW or API hooking, and these could obviously be unhooked or bypassed."
    },
    {
      "Time_Start": 482.64000000000004,
      "Time_End": 486.36,
      "Text": " We could talk about proxying or tooling in so that we're not generating like that same"
    },
    {
      "Time_Start": 486.36,
      "Time_End": 490.74,
      "Text": " on-host telemetry, or even some new tradecraft that has come out revolving around Active"
    },
    {
      "Time_Start": 490.74,
      "Time_End": 492.98,
      "Text": " Directory web services."
    },
    {
      "Time_Start": 493.22,
      "Time_End": 495.22,
      "Text": " Falcon Forest, again, they put out a tool called Sopound."
    },
    {
      "Time_Start": 495.22,
      "Time_End": 496.22,
      "Text": " It uses ADWS."
    },
    {
      "Time_Start": 496.22,
      "Time_End": 501.86,
      "Text": " You're essentially making an LDAP request, but it's wrapped in a HTTP request, so it"
    },
    {
      "Time_Start": 501.86,
      "Time_End": 506.5,
      "Text": " kind of changes your point of where the LDAP query is initiated to that server-side, so"
    },
    {
      "Time_Start": 506.5,
      "Time_End": 511.18,
      "Text": " you won't get that same ETW telemetry, for instance, that you would on the client-side."
    },
    {
      "Time_Start": 511.18,
      "Time_End": 515.02,
      "Text": " Server-side kind of opens up a little bit more reliability and also some more interesting"
    },
    {
      "Time_Start": 515.02,
      "Time_End": 519.14,
      "Text": " detections such as the SACLs and audit policies and the expensive LDAP queries that we'll"
    },
    {
      "Time_Start": 519.14,
      "Time_End": 522.98,
      "Text": " talk about."
    },
    {
      "Time_Start": 522.98,
      "Time_End": 528.18,
      "Text": " So on the client-side, most of these slides are going to follow kind of a data source"
    },
    {
      "Time_Start": 528.18,
      "Time_End": 534.5,
      "Text": " and telemetry on the left side and our detection query or our strategy on the right side."
    },
    {
      "Time_Start": 534.5,
      "Time_End": 538.54,
      "Text": " So for our client-side logging, our data source is going to be ETW."
    },
    {
      "Time_Start": 538.54,
      "Time_End": 542.9399999999999,
      "Text": " There's a specific ETW provider there on the screen, Microsoft Windows LDAP Client, that"
    },
    {
      "Time_Start": 542.9399999999999,
      "Time_End": 544.1,
      "Text": " you can subscribe to."
    },
    {
      "Time_Start": 544.1,
      "Time_End": 548.18,
      "Text": " MDE will do this automatically, but if you don't have MDE, this is something that you"
    },
    {
      "Time_Start": 548.1800000000001,
      "Time_End": 550.5000000000001,
      "Text": " can subscribe to manually yourself."
    },
    {
      "Time_Start": 550.5000000000001,
      "Time_End": 554.7800000000001,
      "Text": " This will provide you access to those query filter strings that we're interested in."
    },
    {
      "Time_Start": 554.7800000000001,
      "Time_End": 559.22,
      "Text": " The detection strategy for this is going to be a little bit more static, a little bit"
    },
    {
      "Time_Start": 559.22,
      "Time_End": 562.34,
      "Text": " more precise, where we're essentially going to be taking those query filters that we see"
    },
    {
      "Time_Start": 562.34,
      "Time_End": 568.0200000000001,
      "Text": " being passed through the telemetry and comparing it to known query filters that are used by"
    },
    {
      "Time_Start": 568.0200000000001,
      "Time_End": 570.98,
      "Text": " offensive tooling."
    },
    {
      "Time_Start": 570.98,
      "Time_End": 576.74,
      "Text": " For example, here, so this is Silk ETW, I'm running this in my lab, subscribing to that"
    },
    {
      "Time_Start": 576.74,
      "Time_End": 581.78,
      "Text": " ETW provider that we caught on the last slide, and we're just simply forwarding the telemetry"
    },
    {
      "Time_Start": 581.78,
      "Time_End": 584.82,
      "Text": " caught by ETW to the event log."
    },
    {
      "Time_Start": 584.82,
      "Time_End": 588.82,
      "Text": " And down here's a screenshot of one of the query filters that pops up in one of those"
    },
    {
      "Time_Start": 588.82,
      "Time_End": 592.14,
      "Text": " event logs that's being collected by Silk ETW."
    },
    {
      "Time_Start": 592.14,
      "Time_End": 596.58,
      "Text": " This query filter here is specific to the new version of SharPound that runs some ADCS"
    },
    {
      "Time_Start": 596.58,
      "Time_End": 601.5,
      "Text": " enumeration, so that query filter there is maybe a high-fidelity indicator that SharPound"
    },
    {
      "Time_Start": 601.5,
      "Time_End": 605.66,
      "Text": " is performing an ADCS enumeration routine in your environment."
    },
    {
      "Time_Start": 605.66,
      "Time_End": 611.4,
      "Text": " On the right side, FalconForce has provided some example CUSTO queries that could be used"
    },
    {
      "Time_Start": 611.4,
      "Time_End": 614.14,
      "Text": " to trigger alerts."
    },
    {
      "Time_Start": 614.14,
      "Time_End": 617.02,
      "Text": " So essentially right here, we've got, it might be a little bit hard to see, but we've got"
    },
    {
      "Time_Start": 617.02,
      "Time_End": 621.2199999999999,
      "Text": " a block of known static query filter strings."
    },
    {
      "Time_Start": 621.2199999999999,
      "Time_End": 624.42,
      "Text": " Some of these are going to be related to AD Explorer, some of them to SharPound, and simply"
    },
    {
      "Time_Start": 624.42,
      "Time_End": 630.8199999999999,
      "Text": " just taking a look and see, does this incoming query filter match one of our predefined known"
    },
    {
      "Time_Start": 630.8199999999999,
      "Time_End": 633.06,
      "Text": " bad rules from an offensive tool?"
    },
    {
      "Time_Start": 633.0600000000001,
      "Time_End": 636.1800000000001,
      "Text": " And we can trigger an alert on that."
    },
    {
      "Time_Start": 636.1800000000001,
      "Time_End": 640.5600000000001,
      "Text": " So moving to the server side, we can take a very similar approach, but we don't have"
    },
    {
      "Time_Start": 640.5600000000001,
      "Time_End": 644.48,
      "Text": " to worry about the reliability issues that could be caused by relying on API hooking"
    },
    {
      "Time_Start": 644.48,
      "Time_End": 645.94,
      "Text": " or ETW on the client."
    },
    {
      "Time_Start": 645.94,
      "Time_End": 651.74,
      "Text": " So same idea here, we could log these or subscribe to these events with ETW."
    },
    {
      "Time_Start": 651.74,
      "Time_End": 655.46,
      "Text": " Another option that we have on the server side is to set up some field engineering registry"
    },
    {
      "Time_Start": 655.46,
      "Time_End": 659.34,
      "Text": " keys to collect event ID 1644."
    },
    {
      "Time_Start": 659.34,
      "Time_End": 664.5,
      "Text": " Filters look like this, and over here, again, boxed in, we have a query filter."
    },
    {
      "Time_Start": 664.5,
      "Time_End": 669.86,
      "Text": " This one I specifically took from Impact's findDelegation.py script."
    },
    {
      "Time_Start": 669.86,
      "Time_End": 675.46,
      "Text": " I know for a fact that CrowdStrike or CrowdStrike identity on domain controller is subscribing"
    },
    {
      "Time_Start": 675.46,
      "Time_End": 679.1800000000001,
      "Text": " to some sort of telemetry that grabs these filters because I've triggered a very high"
    },
    {
      "Time_Start": 679.1800000000001,
      "Time_End": 683.7,
      "Text": " fidelity alert against CrowdStrike with this exact tool."
    },
    {
      "Time_Start": 683.7,
      "Time_End": 687.1600000000001,
      "Text": " So it's sitting there looking for known bad query strings."
    },
    {
      "Time_Start": 687.16,
      "Time_End": 691.48,
      "Text": " Detection on the right side, again, provided by FalconForce is very similar, a couple smaller"
    },
    {
      "Time_Start": 691.48,
      "Time_End": 694.4599999999999,
      "Text": " where clause because we're doing this on the server side now, but we're just taking those"
    },
    {
      "Time_Start": 694.4599999999999,
      "Time_End": 701.64,
      "Text": " query filters, seeing if they match anything that's known to be commonly malicious."
    },
    {
      "Time_Start": 701.64,
      "Time_End": 705.9599999999999,
      "Text": " Getting into some of the more interesting or behavioral-based detections."
    },
    {
      "Time_Start": 705.9599999999999,
      "Time_End": 708.12,
      "Text": " So SACLs and audit policies."
    },
    {
      "Time_Start": 708.12,
      "Time_End": 713.4399999999999,
      "Text": " If we actually go ahead and set SACLs on user group and computer objects that are descendants"
    },
    {
      "Time_Start": 713.44,
      "Time_End": 719.8800000000001,
      "Text": " of the domain, we can collect events that get generated each time those objects in LDAP"
    },
    {
      "Time_Start": 719.8800000000001,
      "Time_End": 720.8800000000001,
      "Text": " are read."
    },
    {
      "Time_Start": 720.8800000000001,
      "Time_End": 724.6800000000001,
      "Text": " So that will generate LDAP event, I believe, 4662."
    },
    {
      "Time_Start": 724.6800000000001,
      "Time_End": 727.5600000000001,
      "Text": " Our detection strategy here is going to be a little bit more complex, but it's going"
    },
    {
      "Time_Start": 727.5600000000001,
      "Time_End": 734.36,
      "Text": " to involve essentially taking a baseline of every user in the environment, how many objects"
    },
    {
      "Time_Start": 734.36,
      "Time_End": 739.96,
      "Text": " they're querying over a look-back period, and then raising an alert if they exceed that"
    },
    {
      "Time_Start": 739.96,
      "Time_End": 747.64,
      "Text": " previous maximum by like a set factor, so maybe 50x, and over a minimum threshold."
    },
    {
      "Time_Start": 747.64,
      "Time_End": 750.7,
      "Text": " So here's one of those 4662 events on the left side."
    },
    {
      "Time_Start": 750.7,
      "Time_End": 757.24,
      "Text": " This is for a read property access triggered on a user object, and that GUID matches this"
    },
    {
      "Time_Start": 757.24,
      "Time_End": 761.64,
      "Text": " part of the custom query for a user object being read."
    },
    {
      "Time_Start": 761.64,
      "Time_End": 765.3000000000001,
      "Text": " It might be a little bit hard to see, but at the top, they're defining some constants."
    },
    {
      "Time_Start": 765.3000000000001,
      "Time_End": 771.2600000000001,
      "Text": " So we're looking back 14 days to calculate that previous daily maximum number of objects"
    },
    {
      "Time_Start": 771.2600000000001,
      "Time_End": 776.5400000000001,
      "Text": " read, and then within one single day, we're looking to see if they exceed that by a set"
    },
    {
      "Time_Start": 776.5400000000001,
      "Time_End": 781.6600000000001,
      "Text": " static factor of 50, and it's over like a minimum suspicious count of 20,000."
    },
    {
      "Time_Start": 781.6600000000001,
      "Time_End": 785.6600000000001,
      "Text": " So obviously those constants could be played around with per environment, but an interesting"
    },
    {
      "Time_Start": 785.6600000000001,
      "Time_End": 791.6600000000001,
      "Text": " detection that doesn't rely on those very precise static strings, basically."
    },
    {
      "Time_Start": 791.6600000000001,
      "Time_End": 794.2600000000001,
      "Text": " Last one we want to talk about is expensive LDAP query logging."
    },
    {
      "Time_Start": 794.26,
      "Time_End": 798.54,
      "Text": " This is one of the conditions that Bofound was actually developed under."
    },
    {
      "Time_Start": 798.54,
      "Time_End": 804.98,
      "Text": " So this goes back to those 1644 event IDs, and when you set those up on your domain controllers,"
    },
    {
      "Time_Start": 804.98,
      "Time_End": 810.62,
      "Text": " there's three registry keys that kind of control how those events get generated, and logs will"
    },
    {
      "Time_Start": 810.62,
      "Time_End": 812.62,
      "Text": " get generated for one of three conditions."
    },
    {
      "Time_Start": 812.62,
      "Time_End": 815.9399999999999,
      "Text": " You've got long-running queries, which is essentially just queries that take more than"
    },
    {
      "Time_Start": 815.9399999999999,
      "Time_End": 818.86,
      "Text": " n number of milliseconds to process."
    },
    {
      "Time_Start": 818.86,
      "Time_End": 824.66,
      "Text": " You've got inefficient queries, which are essentially queries that visit a high number"
    },
    {
      "Time_Start": 824.66,
      "Time_End": 829.34,
      "Text": " of objects over a threshold and return less than 10% of those."
    },
    {
      "Time_Start": 829.34,
      "Time_End": 832.82,
      "Text": " And what's termed expensive LDAP queries, which is simply an LDAP query that returns"
    },
    {
      "Time_Start": 832.82,
      "Time_End": 835.46,
      "Text": " a very high number of results."
    },
    {
      "Time_Start": 835.46,
      "Time_End": 839.46,
      "Text": " So detection strategy could be similar to something on the last slide where we talk"
    },
    {
      "Time_Start": 839.46,
      "Time_End": 844.82,
      "Text": " about taking baselines in your environment and simply firing an alert if those get exceeded"
    },
    {
      "Time_Start": 844.82,
      "Time_End": 847.86,
      "Text": " or exceeded by a specific factor."
    },
    {
      "Time_Start": 847.86,
      "Time_End": 853.34,
      "Text": " Here's another one of those 1644 events, and this is actually a query filter from a"
    },
    {
      "Time_Start": 853.34,
      "Time_End": 854.7,
      "Text": " Sharpound DC-only run."
    },
    {
      "Time_Start": 854.7,
      "Time_End": 857.78,
      "Text": " This would definitely trigger some of the previous static string detections that we"
    },
    {
      "Time_Start": 857.78,
      "Time_End": 858.86,
      "Text": " talked about."
    },
    {
      "Time_Start": 858.86,
      "Time_End": 863.42,
      "Text": " And down here you can see your visited entries and returned entries count."
    },
    {
      "Time_Start": 863.42,
      "Time_End": 867.54,
      "Text": " Those are like 501 and 500 in this case, so probably part of a page query."
    },
    {
      "Time_Start": 867.54,
      "Time_End": 871.7,
      "Text": " Shipping these off to Elastic, we can run some analytics on them."
    },
    {
      "Time_Start": 871.7,
      "Time_End": 876.7,
      "Text": " This is showing a big spike in visited object counts per 30 minutes here, and each of those"
    },
    {
      "Time_Start": 876.74,
      "Time_End": 880.7,
      "Text": " big spikes in the environments corresponds with a different Sharpound DC-only run."
    },
    {
      "Time_Start": 880.7,
      "Time_End": 887.7,
      "Text": " So another way we can get some visibility into potential LDAP enumeration spikes."
    },
    {
      "Time_Start": 887.7,
      "Time_End": 891.62,
      "Text": " Awesome."
    },
    {
      "Time_Start": 891.62,
      "Time_End": 898.62,
      "Text": " So as Matt and I were doing red teams together and just looking through the different ways"
    },
    {
      "Time_Start": 900.38,
      "Time_End": 906.0200000000001,
      "Text": " that we were potentially getting tagged or definitely getting tagged, some of the clients"
    },
    {
      "Time_Start": 906.02,
      "Time_End": 912.8199999999999,
      "Text": " out there that we interacted with are definitely doing either one of those things or all of"
    },
    {
      "Time_Start": 912.8199999999999,
      "Time_End": 917.6999999999999,
      "Text": " those things, which made doing a red team assessment pretty tough because we're not"
    },
    {
      "Time_Start": 917.6999999999999,
      "Time_End": 924.5,
      "Text": " able to do really any querying of Active Directory except for very tiny granular queries and"
    },
    {
      "Time_Start": 924.5,
      "Time_End": 929.48,
      "Text": " spreading that out over a few weeks or a month or two months, and then having to correlate"
    },
    {
      "Time_Start": 929.48,
      "Time_End": 934.3,
      "Text": " all of that through manual log parsing, looking back, have we already queried this object?"
    },
    {
      "Time_Start": 934.3,
      "Time_End": 935.74,
      "Text": " Have we already queried this group?"
    },
    {
      "Time_Start": 935.74,
      "Time_End": 938.82,
      "Text": " What do we need to know to move forward with the op?"
    },
    {
      "Time_Start": 938.82,
      "Time_End": 945.82,
      "Text": " So to minimize our risk of detection, understanding these detection capabilities, we did move"
    },
    {
      "Time_Start": 947.02,
      "Time_End": 954.02,
      "Text": " into kind of just using LDAP search buff from TrustedSec as the majority of our LDAP recon"
    },
    {
      "Time_Start": 955.3,
      "Time_End": 956.6,
      "Text": " while we're on red team."
    },
    {
      "Time_Start": 956.6,
      "Time_End": 961.38,
      "Text": " So that let us control what objects we wanted to look at, the attributes that we wanted"
    },
    {
      "Time_Start": 961.42,
      "Time_End": 966.9,
      "Text": " from them, the scope of the search, so whether we wanted to search at our search base, which"
    },
    {
      "Time_Start": 966.9,
      "Time_End": 970.82,
      "Text": " is just a distinguished name, or if we wanted to go one level down from that or just see"
    },
    {
      "Time_Start": 970.82,
      "Time_End": 976.58,
      "Text": " the whole subtree, and typically we would do pretty targeted queries to only bring back"
    },
    {
      "Time_Start": 976.58,
      "Time_End": 981.1,
      "Text": " less than, I don't know, less than at least 100 objects, but sometimes most of the time"
    },
    {
      "Time_Start": 981.1,
      "Time_End": 987.54,
      "Text": " a lot fewer, and it was just kind of tedious, and some of the environments we were looking"
    },
    {
      "Time_Start": 987.5400000000001,
      "Time_End": 994.0200000000001,
      "Text": " at were multinational, so there's tens of thousands of objects that we need to see,"
    },
    {
      "Time_Start": 994.0200000000001,
      "Time_End": 997.7,
      "Text": " at least in the traditional sense, or we thought we needed to see, and it just, you know, one"
    },
    {
      "Time_Start": 997.7,
      "Time_End": 1002.5400000000001,
      "Text": " night just scrolling back through, you know, Cobalt Strike log, looking up, going into"
    },
    {
      "Time_Start": 1002.5400000000001,
      "Time_End": 1008.1,
      "Text": " the actual logs, looking at those, issuing another query, I'd be scrolling up in the"
    },
    {
      "Time_Start": 1008.1,
      "Time_End": 1010.9800000000001,
      "Text": " Cobalt Strike window, and then someone would browse a file, and it would knock me back"
    },
    {
      "Time_Start": 1010.9800000000001,
      "Time_End": 1014.9800000000001,
      "Text": " to the bottom of the window, super frustrating, and I just, you know, thought there's got"
    },
    {
      "Time_Start": 1014.98,
      "Time_End": 1018.66,
      "Text": " to be a better way for us to do this, and I said we've already got all the information"
    },
    {
      "Time_Start": 1018.66,
      "Time_End": 1024.14,
      "Text": " from LDAP, we just need to structure it, and surely we can just sling this into Bloodhound"
    },
    {
      "Time_Start": 1024.14,
      "Time_End": 1032.42,
      "Text": " and get the GUI back, so Bothound was born pretty crude at first, just computers, objects"
    },
    {
      "Time_Start": 1032.42,
      "Time_End": 1038.7,
      "Text": " and groups, no ACLs, no anything, and then Matt came on and did some pretty amazing things"
    },
    {
      "Time_Start": 1038.7,
      "Time_End": 1046.26,
      "Text": " with the tool, and made it what it is today, but it is a offline parser that looks at your"
    },
    {
      "Time_Start": 1046.26,
      "Time_End": 1052.38,
      "Text": " C2 logs, or whatever tool you're using to collect LDAP information, parses that information,"
    },
    {
      "Time_Start": 1052.38,
      "Time_End": 1057.5800000000002,
      "Text": " converts it to a Bloodhound compatible JSON file, and then lets you upload it into Bloodhound,"
    },
    {
      "Time_Start": 1057.5800000000002,
      "Time_End": 1064.3400000000001,
      "Text": " so it is not a BOF that runs Bloodhound, it is an offline tool written in Python, probably"
    },
    {
      "Time_Start": 1064.3400000000001,
      "Time_End": 1068.1000000000001,
      "Text": " could have named it something better to convey what it actually is a little bit, but we were"
    },
    {
      "Time_Start": 1068.1,
      "Time_End": 1073.58,
      "Text": " using it in the context of BOFs, so that's just what we came up with, originally built"
    },
    {
      "Time_Start": 1073.58,
      "Time_End": 1081.02,
      "Text": " to bypass mainly that expensive LDAP query detection point, and built with compatibility"
    },
    {
      "Time_Start": 1081.02,
      "Time_End": 1085.8999999999999,
      "Text": " in mind with the LDAP search BOF initially, and Matt's expanded that over the last year"
    },
    {
      "Time_Start": 1085.8999999999999,
      "Time_End": 1091.5,
      "Text": " or so, so now we support a few more tools now that we'll get to in a bit, but the way"
    },
    {
      "Time_Start": 1091.5,
      "Time_End": 1097.78,
      "Text": " you would use Bothound is this type of workflow, so you probably land in the environment in"
    },
    {
      "Time_Start": 1097.78,
      "Time_End": 1102.62,
      "Text": " some space, you're curious about your immediate surroundings, you issue specific LDAP queries"
    },
    {
      "Time_Start": 1102.62,
      "Time_End": 1107.54,
      "Text": " to look at the objects that you either control or are adjacent to, or that you're interested"
    },
    {
      "Time_Start": 1107.54,
      "Time_End": 1108.74,
      "Text": " in, right?"
    },
    {
      "Time_Start": 1108.74,
      "Time_End": 1112.98,
      "Text": " And then once you get that information back, you would kick off Bothound, it would read"
    },
    {
      "Time_Start": 1112.98,
      "Time_End": 1118.98,
      "Text": " all those logs, and you would ingest those into Bloodhound, start doing some pathfinding,"
    },
    {
      "Time_Start": 1118.98,
      "Time_End": 1123.46,
      "Text": " and then once you run into an object or a path that you don't have full details on,"
    },
    {
      "Time_Start": 1123.46,
      "Time_End": 1129.22,
      "Text": " whether that's, you know, probably is gonna look like a path to a SID, you would then"
    },
    {
      "Time_Start": 1129.22,
      "Time_End": 1134.7,
      "Text": " go back and re-query for that specific object or related objects to continually build out"
    },
    {
      "Time_Start": 1134.7,
      "Time_End": 1138.78,
      "Text": " your Bloodhound dataset without having to do so all at the same time, so it gives you"
    },
    {
      "Time_Start": 1138.78,
      "Time_End": 1144.06,
      "Text": " really granular control, I mean, I say Bothound does, really all these other tools give you"
    },
    {
      "Time_Start": 1144.06,
      "Time_End": 1148.66,
      "Text": " granular control, Bothound just makes it so that you can use that granularity in the context"
    },
    {
      "Time_Start": 1148.66,
      "Time_End": 1156.3400000000001,
      "Text": " of Bloodhound, which is pretty cool."
    },
    {
      "Time_Start": 1156.3400000000001,
      "Time_End": 1161.22,
      "Text": " So we have a couple of demos, not brave enough to do live demos, so we've got them pre-recorded,"
    },
    {
      "Time_Start": 1161.22,
      "Time_End": 1165.1000000000001,
      "Text": " I'm gonna try and hook this back up so I can hopefully zoom in, but we're gonna take a"
    },
    {
      "Time_Start": 1165.1000000000001,
      "Time_End": 1169.1000000000001,
      "Text": " look at kind of like a contrived example, going through a couple of those enumeration"
    },
    {
      "Time_Start": 1169.1000000000001,
      "Time_End": 1174.38,
      "Text": " cycles that Adam just talked about."
    },
    {
      "Time_Start": 1174.38,
      "Time_End": 1179.42,
      "Text": " So we're in our Cobalt Strike beacon and we've got a singular beacon here as a low-privileged"
    },
    {
      "Time_Start": 1179.42,
      "Time_End": 1184.24,
      "Text": " user in the domain, we've loaded up the LDAP search buff and we're gonna start with a couple"
    },
    {
      "Time_Start": 1184.24,
      "Time_End": 1188.0200000000002,
      "Text": " really simple queries just for our target object, so, you know, say we're interested"
    },
    {
      "Time_Start": 1188.0200000000002,
      "Time_End": 1192.7,
      "Text": " in enumerating how we can get control over the domain, so we'll issue one query here"
    },
    {
      "Time_Start": 1192.7,
      "Time_End": 1197.96,
      "Text": " for the domain object and we're specifying that we want the NT security descriptor attribute"
    },
    {
      "Time_Start": 1197.96,
      "Time_End": 1201.7,
      "Text": " back so that we can process that ACL data, so that's gonna be the big base 64 blob that"
    },
    {
      "Time_Start": 1201.7,
      "Time_End": 1205.54,
      "Text": " you see more towards the top of the query, and then the second object that we're gonna"
    },
    {
      "Time_Start": 1205.54,
      "Time_End": 1209.6200000000001,
      "Text": " query is just the domain admins group, so we can get really granular with this, we can"
    },
    {
      "Time_Start": 1209.6200000000001,
      "Time_End": 1214.32,
      "Text": " query just one or two objects and then process that with boff found and load it into Bloodhound,"
    },
    {
      "Time_Start": 1214.32,
      "Time_End": 1222.06,
      "Text": " so that's what we're gonna do here, try and keep this on the action, so you can see there"
    },
    {
      "Time_Start": 1222.06,
      "Time_End": 1225.3400000000001,
      "Text": " we've processed those beacon log files, so those are just, you know, your unstructured"
    },
    {
      "Time_Start": 1225.3400000000001,
      "Time_End": 1229.9,
      "Text": " logs basically mirror what you see in the console, boff found parses out those two LDAP"
    },
    {
      "Time_Start": 1230.1000000000001,
      "Time_End": 1237.42,
      "Text": " objects, we can take that up here and, oh no, load it into the BHC interface and I'll skip"
    },
    {
      "Time_Start": 1237.42,
      "Time_End": 1245.8600000000001,
      "Text": " around a little bit, okay, and if we go, so we've loaded up just the domain and the domain"
    },
    {
      "Time_Start": 1245.8600000000001,
      "Time_End": 1249.18,
      "Text": " admins group and if we take a look at the inbound controllers on the domain, we can"
    },
    {
      "Time_Start": 1249.18,
      "Time_End": 1253.8600000000001,
      "Text": " see that we're missing some data, so we've got several different principles with control"
    },
    {
      "Time_Start": 1253.8600000000001,
      "Time_End": 1257.94,
      "Text": " over the domain, the domain admins group is filled in there and you can see that some"
    },
    {
      "Time_Start": 1257.94,
      "Time_End": 1261.98,
      "Text": " of these other ones are, you know, just basically a SIDS, like this 516 is your domain controllers"
    },
    {
      "Time_Start": 1261.98,
      "Time_End": 1265.9,
      "Text": " group and that's an object that Bloodhound does not actually recognize yet, we haven't"
    },
    {
      "Time_Start": 1265.9,
      "Time_End": 1270.22,
      "Text": " queried it, so this is kind of like that starting point for walking back our ACL attack paths"
    },
    {
      "Time_Start": 1270.22,
      "Time_End": 1275.8600000000001,
      "Text": " from a target object, so SIDS that, you know, show up here, you know, undefined, basically"
    },
    {
      "Time_Start": 1275.8600000000001,
      "Time_End": 1281.74,
      "Text": " unqueried are a good piece as well as the member attribute of groups, so we queried"
    },
    {
      "Time_Start": 1281.74,
      "Time_End": 1286.54,
      "Text": " the domain admins group, we don't actually have data on the members yet but when we ran"
    },
    {
      "Time_Start": 1286.54,
      "Time_End": 1290.54,
      "Text": " that query, we got back the member attribute which contains the distinguished name of every"
    },
    {
      "Time_Start": 1290.54,
      "Time_End": 1294.34,
      "Text": " user or nested group in there and so we've added that to like the common properties that"
    },
    {
      "Time_Start": 1294.34,
      "Time_End": 1298.54,
      "Text": " show up over here on the right side, so we've got SIDS of other controllers that we can"
    },
    {
      "Time_Start": 1298.54,
      "Time_End": 1304.6599999999999,
      "Text": " kind of walk back as well as distinguished names of group members that we might be interested"
    },
    {
      "Time_Start": 1304.6599999999999,
      "Time_End": 1310.18,
      "Text": " in, so we're going to go back, I think I'm going to grab a SID here for the domain controllers"
    },
    {
      "Time_Start": 1310.18,
      "Time_End": 1315.8200000000002,
      "Text": " group that 516, yeah, so I'll copy that out, we'll go back to our beacon, try and zoom"
    },
    {
      "Time_Start": 1315.8200000000002,
      "Time_End": 1320.3400000000001,
      "Text": " back in here, we'll issue, so we're going to start kind of like filling in that graph"
    },
    {
      "Time_Start": 1320.3400000000001,
      "Time_End": 1324.18,
      "Text": " kind of piece by piece and so obviously this is extremely granular, if you're going to"
    },
    {
      "Time_Start": 1324.18,
      "Time_End": 1328.1000000000001,
      "Text": " query an entire domain, you know, object by object, you're going to be around for quite"
    },
    {
      "Time_Start": 1328.1000000000001,
      "Time_End": 1331.3400000000001,
      "Text": " a long time, so the sweet spot is going to be, you know, issuing queries that return"
    },
    {
      "Time_Start": 1331.3400000000001,
      "Time_End": 1338.64,
      "Text": " 10s, 20s, maybe even 100s if you're comfortable with that, you know, objects, so we grab one"
    },
    {
      "Time_Start": 1338.64,
      "Time_End": 1345.1200000000001,
      "Text": " user in the domain items group and the domain controllers group there, we parse that out,"
    },
    {
      "Time_Start": 1345.1200000000001,
      "Time_End": 1349.92,
      "Text": " so now we've got four objects that were pulled from our log files, slightly more ACL relationships"
    },
    {
      "Time_Start": 1349.92,
      "Time_End": 1355.72,
      "Text": " recognized and we can come back, it's going to happen to me every time, we can come back"
    },
    {
      "Time_Start": 1355.72,
      "Time_End": 1362.2800000000002,
      "Text": " to Bloodhound, upload that second set of data and if we just kind of refresh this graph"
    },
    {
      "Time_Start": 1362.2800000000002,
      "Time_End": 1366.5800000000002,
      "Text": " that we were looking at before, we can see we've added a little bit more to the picture"
    },
    {
      "Time_Start": 1366.74,
      "Time_End": 1370.1,
      "Text": " based on the context we looked at previously, so you can see up in like the top left, we've"
    },
    {
      "Time_Start": 1370.1,
      "Time_End": 1374.78,
      "Text": " got that user, Gerald is a member of the domain admins group which grants him, you know, permissions"
    },
    {
      "Time_Start": 1374.78,
      "Time_End": 1379.06,
      "Text": " to control the domain and I think I'm looking around for the domain controllers group, it's"
    },
    {
      "Time_Start": 1379.06,
      "Time_End": 1384.3799999999999,
      "Text": " actually one to the right of what I'm looking at, but yeah, there's, you know, that domain"
    },
    {
      "Time_Start": 1384.3799999999999,
      "Time_End": 1388.78,
      "Text": " controllers group at the 516 SID that we know, it's got its properties filled in, we can"
    },
    {
      "Time_Start": 1388.78,
      "Time_End": 1391.8999999999999,
      "Text": " see more about it and so we can kind of keep walking back, you know, if we take a look"
    },
    {
      "Time_Start": 1391.8999999999999,
      "Time_End": 1395.6599999999999,
      "Text": " at one of the objects we just queried, we can see what its inbound controllers look"
    },
    {
      "Time_Start": 1395.74,
      "Time_End": 1400.94,
      "Text": " like and kind of, you know, add to that picture, so that's obviously at kind of its most granular"
    },
    {
      "Time_Start": 1400.94,
      "Time_End": 1404.8600000000001,
      "Text": " querying just a handful of objects, we can go the other way and issue an object class"
    },
    {
      "Time_Start": 1404.8600000000001,
      "Time_End": 1410.72,
      "Text": " equals star here, we can pull back almost all the information from the domain, 851 results,"
    },
    {
      "Time_Start": 1410.72,
      "Time_End": 1414.74,
      "Text": " this kind of defeats the purpose of running a tool like this, right, we're trying to avoid"
    },
    {
      "Time_Start": 1414.74,
      "Time_End": 1419.26,
      "Text": " those expensive queries that return a lot of results, but just for the sake of the demonstration,"
    },
    {
      "Time_Start": 1419.26,
      "Time_End": 1425.82,
      "Text": " you know, we can take that full run, parse out, you know, 855 LDAP objects from the logs"
    },
    {
      "Time_Start": 1425.82,
      "Time_End": 1429.82,
      "Text": " and if we load that back into Bloodhound, this should in theory be equivalent to like"
    },
    {
      "Time_Start": 1429.82,
      "Time_End": 1437.02,
      "Text": " a Sharphound DC only pull, so we should have complete data based on all that processing"
    },
    {
      "Time_Start": 1437.02,
      "Time_End": 1440.8,
      "Text": " there and if we do a little refresh and look again at our domains inbound controllers,"
    },
    {
      "Time_Start": 1440.8,
      "Time_End": 1445.54,
      "Text": " we should see a much more complete picture, we won't be missing any of the SIDs in there,"
    },
    {
      "Time_Start": 1445.54,
      "Time_End": 1448.34,
      "Text": " you can see there, you know, there's a couple more objects that we, you know, hadn't worked"
    },
    {
      "Time_Start": 1448.4199999999998,
      "Time_End": 1452.4199999999998,
      "Text": " back to quite yet, so that's kind of, you know, what that cyclical workflow that Adam"
    },
    {
      "Time_Start": 1452.4199999999998,
      "Time_End": 1457.4199999999998,
      "Text": " was talking about looks like."
    },
    {
      "Time_Start": 1457.4199999999998,
      "Time_End": 1466.02,
      "Text": " Before we move on from that, I just want to point out, you know, he said it kind of defeats"
    },
    {
      "Time_Start": 1466.02,
      "Time_End": 1470.82,
      "Text": " the purpose if you're going to just do an object star pull, have spoken with some teams"
    },
    {
      "Time_Start": 1470.82,
      "Time_End": 1477.1399999999999,
      "Text": " who did not want to risk detection with any .NET or .NET tooling, I guess, and so they"
    },
    {
      "Time_Start": 1477.18,
      "Time_End": 1482.74,
      "Text": " have ran this to get the full picture of Active Directory and, you know, it took, it's a large"
    },
    {
      "Time_Start": 1482.74,
      "Time_End": 1488.1000000000001,
      "Text": " organization so it took like 30 something hours to process all the logs that came back,"
    },
    {
      "Time_Start": 1488.1000000000001,
      "Time_End": 1492.94,
      "Text": " but it can be that for, you know, for you if that's what you need to do, but the intended"
    },
    {
      "Time_Start": 1492.94,
      "Time_End": 1498.66,
      "Text": " purpose like Matt said was, you know, do granular queries, build out your attack path piece"
    },
    {
      "Time_Start": 1498.66,
      "Time_End": 1504.66,
      "Text": " by piece and as we're doing that, you know, linking back to some of the detection methods,"
    },
    {
      "Time_Start": 1504.66,
      "Time_End": 1508.7,
      "Text": " we want to keep a few things in mind when we're doing these LDAP queries because it"
    },
    {
      "Time_Start": 1508.7,
      "Time_End": 1515.74,
      "Text": " can really, can easily trip a detection if you're not paying really close attention to"
    },
    {
      "Time_Start": 1515.74,
      "Time_End": 1518.78,
      "Text": " what types of queries you're running."
    },
    {
      "Time_Start": 1518.78,
      "Time_End": 1522.6200000000001,
      "Text": " So we want to look at search scopes and base names, so base name being the distinguished"
    },
    {
      "Time_Start": 1522.6200000000001,
      "Time_End": 1527.5400000000002,
      "Text": " name from which you want to search and the scope being, you know, that base level only,"
    },
    {
      "Time_Start": 1527.5400000000002,
      "Time_End": 1532.26,
      "Text": " the base plus one, so one level beneath it or the whole subtree."
    },
    {
      "Time_Start": 1532.26,
      "Time_End": 1536.66,
      "Text": " We want to be really careful with wildcards and I'll, in the next slide, I'll talk more"
    },
    {
      "Time_Start": 1536.66,
      "Time_End": 1538.66,
      "Text": " to that."
    },
    {
      "Time_Start": 1538.66,
      "Time_End": 1543.14,
      "Text": " One thing to note is attribute presence filters make a really efficient use of the indices"
    },
    {
      "Time_Start": 1543.14,
      "Time_End": 1547.5,
      "Text": " in LDAP, so if you're doing a query and you're just checking that an attribute exists on"
    },
    {
      "Time_Start": 1547.5,
      "Time_End": 1552.58,
      "Text": " an object, that's usually a pretty safe query, but in all of your queries, you want to really"
    },
    {
      "Time_Start": 1552.58,
      "Time_End": 1557.78,
      "Text": " be taking advantage of indexed attributes so that you can make as efficient use of those"
    },
    {
      "Time_Start": 1557.78,
      "Time_End": 1562.94,
      "Text": " indices as possible and I've included a link here that describes all the attributes that"
    },
    {
      "Time_Start": 1562.94,
      "Time_End": 1565.58,
      "Text": " are indexed by default."
    },
    {
      "Time_Start": 1565.58,
      "Time_End": 1572.02,
      "Text": " But on the wildcard topic, there's a lot going on in this slide, but on the left side of"
    },
    {
      "Time_Start": 1572.02,
      "Time_End": 1579.1399999999999,
      "Text": " the graph, the labels over there, the smaller label is the index that is used on the query."
    },
    {
      "Time_Start": 1579.1399999999999,
      "Time_End": 1583.74,
      "Text": " The larger text beneath that is the actual LDAP query filter that we used."
    },
    {
      "Time_Start": 1584.22,
      "Time_End": 1591.9,
      "Text": " This is a wildcard case study, very similar query, object class equals user and same account"
    },
    {
      "Time_Start": 1591.9,
      "Time_End": 1597.7,
      "Text": " name equals, on the top it's star A, on the bottom it's A star, so we're just changing"
    },
    {
      "Time_Start": 1597.7,
      "Time_End": 1604.3,
      "Text": " the placement of the asterisk and we can see, I guess before we get to the actual results,"
    },
    {
      "Time_Start": 1604.3,
      "Time_End": 1607.06,
      "Text": " the indices name is a little bit weird."
    },
    {
      "Time_Start": 1607.06,
      "Time_End": 1612.78,
      "Text": " We can see on the left it's IDX underscore object class colon 1677 colon N, so the way"
    },
    {
      "Time_Start": 1612.82,
      "Time_End": 1619.02,
      "Text": " you would read that index, which comes back in the 1644 event ID log."
    },
    {
      "Time_Start": 1619.02,
      "Time_End": 1624.78,
      "Text": " The first field, IDX underscore object class, is just the index name that's being used."
    },
    {
      "Time_Start": 1624.78,
      "Time_End": 1630.42,
      "Text": " The second field, 1677, represents the number of entries or the size of that index and then"
    },
    {
      "Time_Start": 1630.42,
      "Time_End": 1637.66,
      "Text": " the N, in this case, represents it's a normal index, it's not a custom index that was implemented."
    },
    {
      "Time_Start": 1637.66,
      "Time_End": 1643.5,
      "Text": " If we look back at the graph, if we query with a wildcard in front of our search criteria,"
    },
    {
      "Time_Start": 1643.5,
      "Time_End": 1650.5400000000002,
      "Text": " it throws the number of visited entries up drastically, around the 1300 mark, and returns"
    },
    {
      "Time_Start": 1650.5400000000002,
      "Time_End": 1656.6200000000001,
      "Text": " just under 100 entries, so it's going to trip a couple of things, but mainly that inefficient"
    },
    {
      "Time_Start": 1656.6200000000001,
      "Time_End": 1661.38,
      "Text": " query because our result set is less than 10% of our number of visited entries."
    },
    {
      "Time_Start": 1662.18,
      "Time_End": 1667.9,
      "Text": " However, if we do the asterisk after our search criteria, the number of visited entries gets"
    },
    {
      "Time_Start": 1667.9,
      "Time_End": 1673.7,
      "Text": " drastically reduced, it's a much tighter correlation, and therefore we at least bypass that inefficient"
    },
    {
      "Time_Start": 1673.7,
      "Time_End": 1678.3200000000002,
      "Text": " query based on visited entries."
    },
    {
      "Time_Start": 1678.3200000000002,
      "Time_End": 1684.5800000000002,
      "Text": " Something interesting to note is just that the index name that is used on these two queries"
    },
    {
      "Time_Start": 1684.5800000000002,
      "Time_End": 1687.0200000000002,
      "Text": " is different."
    },
    {
      "Time_Start": 1687.02,
      "Time_End": 1691.5,
      "Text": " It's going to be really important as you're exploring this to lab it out, because there's"
    },
    {
      "Time_Start": 1691.5,
      "Time_End": 1696.46,
      "Text": " not a set criteria that I know of, at least, that talks in detail about what index is going"
    },
    {
      "Time_Start": 1696.46,
      "Time_End": 1701.26,
      "Text": " to be selected when, it all depends on your attributes and your search criteria, but on"
    },
    {
      "Time_Start": 1701.26,
      "Time_End": 1706.58,
      "Text": " the top one, when we put the asterisk in front, it used the object class index, when we put"
    },
    {
      "Time_Start": 1706.58,
      "Time_End": 1711.18,
      "Text": " the asterisk behind, it used the same account name index, which I guess is much more efficient,"
    },
    {
      "Time_Start": 1711.18,
      "Time_End": 1715.04,
      "Text": " so it was pretty interesting to see that."
    },
    {
      "Time_Start": 1715.04,
      "Time_End": 1720.6399999999999,
      "Text": " The next query we're going to look at was even more interesting and not intuitive, to"
    },
    {
      "Time_Start": 1720.6399999999999,
      "Time_End": 1722.48,
      "Text": " me, at least."
    },
    {
      "Time_Start": 1722.48,
      "Time_End": 1730.2,
      "Text": " The same setup for all three of these queries, we used the filter object class equals user,"
    },
    {
      "Time_Start": 1730.2,
      "Time_End": 1734.36,
      "Text": " but we had different starting nodes or base names and scopes for each of these queries."
    },
    {
      "Time_Start": 1734.36,
      "Time_End": 1740.56,
      "Text": " The top search is the full domain as a distinguished name with the subtree scope."
    },
    {
      "Time_Start": 1740.56,
      "Time_End": 1746.56,
      "Text": " Second query is a specific OU, the admin OU, with a subtree scope, and the last query"
    },
    {
      "Time_Start": 1746.56,
      "Time_End": 1753.12,
      "Text": " is the OU, again, with a one-level scope."
    },
    {
      "Time_Start": 1753.12,
      "Time_End": 1760.1599999999999,
      "Text": " If I were to just have thought of this, I would assume that the tighter your base for"
    },
    {
      "Time_Start": 1760.1599999999999,
      "Time_End": 1765.84,
      "Text": " your search, the more efficient the query is going to be, so I would have assumed that"
    },
    {
      "Time_Start": 1765.84,
      "Time_End": 1770.12,
      "Text": " searching directly within an OU with the subtree scope is going to be more efficient than searching"
    },
    {
      "Time_Start": 1770.1200000000001,
      "Time_End": 1775.8000000000002,
      "Text": " the whole domain with the subtree scope, and that wound up not being the case."
    },
    {
      "Time_Start": 1775.8000000000002,
      "Time_End": 1782.1200000000001,
      "Text": " We can see that the object class index was, again, used for that domain subtree scope,"
    },
    {
      "Time_Start": 1782.1200000000001,
      "Time_End": 1786.2800000000002,
      "Text": " and when we switched to the OU subtree, it switched to a different index, which has a"
    },
    {
      "Time_Start": 1786.2800000000002,
      "Time_End": 1793.24,
      "Text": " smaller size but then had a little bit more visited entries versus returned entries than"
    },
    {
      "Time_Start": 1793.24,
      "Time_End": 1798.5200000000002,
      "Text": " the domain search did, so that was something that was interesting to me."
    },
    {
      "Time_Start": 1798.52,
      "Time_End": 1806.36,
      "Text": " Obviously if you get down to a one-level scope with a tighter base, your results are"
    },
    {
      "Time_Start": 1806.36,
      "Time_End": 1810.12,
      "Text": " much smaller number of visited entries, obviously a smaller number of returned entries because"
    },
    {
      "Time_Start": 1810.12,
      "Time_End": 1816.28,
      "Text": " it's got less to search within, but pretty tightly correlated."
    },
    {
      "Time_Start": 1816.28,
      "Time_End": 1822.26,
      "Text": " I guess the point of this slide is just it's not always super intuitive based on your filter"
    },
    {
      "Time_Start": 1822.26,
      "Time_End": 1826.2,
      "Text": " and your query what's actually going to happen under the hood, so having a lab, at least"
    },
    {
      "Time_Start": 1826.2,
      "Time_End": 1831.68,
      "Text": " in my experience, is very important for understanding how efficient your queries are going to be"
    },
    {
      "Time_Start": 1831.68,
      "Time_End": 1839.72,
      "Text": " and what kind of results you're going to see from that."
    },
    {
      "Time_Start": 1839.72,
      "Time_End": 1844.72,
      "Text": " Last thing from me, we just wanted to throw up a couple of helpful queries, and then I'll"
    },
    {
      "Time_Start": 1844.72,
      "Time_End": 1853.76,
      "Text": " pass it back to Matt for some more demos and some talk of where we're going with the tool."
    },
    {
      "Time_Start": 1853.8,
      "Time_End": 1855.8,
      "Text": " You're always going to want to get the NTSecurityDescriptor."
    },
    {
      "Time_Start": 1855.8,
      "Time_End": 1859.8,
      "Text": " If you use LDAP Search Buff, you can get all the attributes with star, but always include"
    },
    {
      "Time_Start": 1859.8,
      "Time_End": 1865.0,
      "Text": " that NTSecurityDescriptor so that you have ACLs on the objects that you're looking at."
    },
    {
      "Time_Start": 1865.0,
      "Time_End": 1871.16,
      "Text": " OUWalking is something that was mentioned in a recent blog by MDSec, got it footnoted"
    },
    {
      "Time_Start": 1871.16,
      "Time_End": 1877.52,
      "Text": " at the bottom, definitely recommend checking it out, but that's a query filter for how"
    },
    {
      "Time_Start": 1877.52,
      "Time_End": 1879.28,
      "Text": " you could do that."
    },
    {
      "Time_Start": 1879.28,
      "Time_End": 1883.4,
      "Text": " Using search bases, just again another example of how you would assign a search base to your"
    },
    {
      "Time_Start": 1883.5600000000002,
      "Time_End": 1886.16,
      "Text": " query if you're using the LDAP Search Buff."
    },
    {
      "Time_Start": 1886.16,
      "Time_End": 1890.2800000000002,
      "Text": " Unrolling group memberships is actually a pretty interesting one."
    },
    {
      "Time_Start": 1890.2800000000002,
      "Time_End": 1893.1200000000001,
      "Text": " You can see that we're filtering, maybe you can't see from where you're sitting, but on"
    },
    {
      "Time_Start": 1893.1200000000001,
      "Time_End": 1900.4,
      "Text": " the slide, filtering based on member of and providing an OID that basically allows you"
    },
    {
      "Time_Start": 1900.4,
      "Time_End": 1904.96,
      "Text": " to do an in-chain search match."
    },
    {
      "Time_Start": 1904.96,
      "Time_End": 1906.88,
      "Text": " There's three OIDs that I know of."
    },
    {
      "Time_Start": 1906.88,
      "Time_End": 1913.4,
      "Text": " You can do bitwise and, bitwise or, or an in-chain rule, and that's going to recursively"
    },
    {
      "Time_Start": 1913.4,
      "Time_End": 1918.24,
      "Text": " unroll the group membership for the object that you're querying."
    },
    {
      "Time_Start": 1918.24,
      "Time_End": 1926.0,
      "Text": " Similarly, the query below that, you can use a different OID with the bitwise operations."
    },
    {
      "Time_Start": 1926.0,
      "Time_End": 1932.0800000000002,
      "Text": " I think that's a bitwise and there, looking for user account control set equal to trusted"
    },
    {
      "Time_Start": 1932.0800000000002,
      "Time_End": 1936.64,
      "Text": " for delegation, so you just give it whatever decimal value you want for the UAC of the"
    },
    {
      "Time_Start": 1937.4,
      "Time_End": 1941.76,
      "Text": " users or the objects you're looking at, and you can use that to do some bitwise operations"
    },
    {
      "Time_Start": 1941.76,
      "Time_End": 1946.16,
      "Text": " and really granularly specify what types of accounts you're looking for."
    },
    {
      "Time_Start": 1946.16,
      "Time_End": 1949.4,
      "Text": " And then finally, if you need LAPS information, there's an example down there to pull all"
    },
    {
      "Time_Start": 1949.4,
      "Time_End": 1958.44,
      "Text": " the schema information that you need to see LAPS in Bloodhound as well."
    },
    {
      "Time_Start": 1958.44,
      "Time_End": 1963.72,
      "Text": " So up until this point, we've been talking exclusively about LDAP data and ACL based"
    },
    {
      "Time_Start": 1963.72,
      "Time_End": 1967.04,
      "Text": " attack paths, and if you're familiar with Bloodhound, you know that a large component"
    },
    {
      "Time_Start": 1967.04,
      "Time_End": 1973.28,
      "Text": " of the attack path mapping revolves around local computer data, so group memberships"
    },
    {
      "Time_Start": 1973.28,
      "Time_End": 1981.2,
      "Text": " for who has admin to what computers, RDP edges, and your has session, where is a particular"
    },
    {
      "Time_Start": 1981.2,
      "Time_End": 1986.3600000000001,
      "Text": " user logged in and what accounts do I need to compromise to gain access to the machines"
    },
    {
      "Time_Start": 1986.3600000000001,
      "Time_End": 1989.3,
      "Text": " where they might be logged in with."
    },
    {
      "Time_Start": 1989.3,
      "Time_End": 1998.06,
      "Text": " So we do have this capability built into Boffhound as well, we'll take a look at that."
    },
    {
      "Time_Start": 1998.06,
      "Time_End": 2005.1399999999999,
      "Text": " So you could use this with the LDAP search Boff and some of the enumeration routines"
    },
    {
      "Time_Start": 2005.1399999999999,
      "Time_End": 2006.68,
      "Text": " that we've talked about."
    },
    {
      "Time_Start": 2006.68,
      "Time_End": 2011.06,
      "Text": " Another interesting option that this opens up is the potential to collect a DC only run"
    },
    {
      "Time_Start": 2011.06,
      "Time_End": 2015.26,
      "Text": " with Sharpound if that's something you have the capability to do, but maybe you don't"
    },
    {
      "Time_Start": 2015.26,
      "Time_End": 2020.74,
      "Text": " want to go spray an SAB connection to every machine in the entire domain, that's significantly"
    },
    {
      "Time_Start": 2020.74,
      "Time_End": 2025.76,
      "Text": " more risky than just pulling LDAP data with Sharpound."
    },
    {
      "Time_Start": 2025.76,
      "Time_End": 2030.26,
      "Text": " So if that's something that you, if that's a scenario that you find yourself in, it is"
    },
    {
      "Time_Start": 2030.26,
      "Time_End": 2036.18,
      "Text": " possible to manually collect that local group and session data with Boffs and then parse"
    },
    {
      "Time_Start": 2036.18,
      "Time_End": 2039.62,
      "Text": " that data out with Boffhound and kind of supplement a DC only pool."
    },
    {
      "Time_Start": 2039.62,
      "Time_End": 2044.54,
      "Text": " This is very similar to using the computers file flag with the Sharpound collector, just"
    },
    {
      "Time_Start": 2044.54,
      "Time_End": 2051.14,
      "Text": " kind of specifying specific machines that you would want to collect that data from."
    },
    {
      "Time_Start": 2051.14,
      "Time_End": 2056.1,
      "Text": " So we've got a full DC only run, I've cleared out my LDAP search results from our beacon"
    },
    {
      "Time_Start": 2056.1,
      "Time_End": 2058.56,
      "Text": " logs here, so we've got like a clean slate."
    },
    {
      "Time_Start": 2058.56,
      "Time_End": 2063.34,
      "Text": " We've uploaded a full DC only pool, so no sessions, no local group data or anything"
    },
    {
      "Time_Start": 2063.34,
      "Time_End": 2066.14,
      "Text": " like that in our Bloodhound database."
    },
    {
      "Time_Start": 2066.14,
      "Time_End": 2071.38,
      "Text": " And there's a couple other Boffs included in the trusted sex situational awareness Boff"
    },
    {
      "Time_Start": 2071.38,
      "Time_End": 2074.18,
      "Text": " set that will let us enumerate this data that we're looking for."
    },
    {
      "Time_Start": 2074.8199999999997,
      "Time_End": 2078.1,
      "Text": " So we've added a couple secondary, you can see like the one here being run as net local"
    },
    {
      "Time_Start": 2078.1,
      "Time_End": 2083.94,
      "Text": " group list members too, but that will allow us to pull out group data for the four groups"
    },
    {
      "Time_Start": 2083.94,
      "Time_End": 2088.18,
      "Text": " that, the four local groups from a computer that Bloodhound cares about."
    },
    {
      "Time_Start": 2088.18,
      "Time_End": 2092.94,
      "Text": " So you can see here we can pull out the administrators for a machine and we've got that SID."
    },
    {
      "Time_Start": 2092.94,
      "Time_End": 2098.18,
      "Text": " Most of these local group relationships and session relationships in Bloodhound are comprised"
    },
    {
      "Time_Start": 2098.18,
      "Time_End": 2103.8199999999997,
      "Text": " of one half computer SID and one half user SID."
    },
    {
      "Time_Start": 2103.82,
      "Time_End": 2107.1000000000004,
      "Text": " Another piece that we're going to be looking for is who's logged into our target computer"
    },
    {
      "Time_Start": 2107.1000000000004,
      "Time_End": 2108.1000000000004,
      "Text": " Oxenfurt."
    },
    {
      "Time_Start": 2108.1000000000004,
      "Time_End": 2110.1400000000003,
      "Text": " So there's a couple Boffs that can do this."
    },
    {
      "Time_Start": 2110.1400000000003,
      "Time_End": 2114.34,
      "Text": " One of them is net logged on too, which is providing, you can see SQL service account"
    },
    {
      "Time_Start": 2114.34,
      "Time_End": 2116.6200000000003,
      "Text": " is logged into this target host."
    },
    {
      "Time_Start": 2116.6200000000003,
      "Time_End": 2117.9,
      "Text": " We can do this through net logged on too."
    },
    {
      "Time_Start": 2117.9,
      "Time_End": 2121.9,
      "Text": " We can do this through net session too, and also the reg session Boff."
    },
    {
      "Time_Start": 2121.9,
      "Time_End": 2126.5800000000004,
      "Text": " And these are just basically using different Win32 API calls to enumerate who's logged"
    },
    {
      "Time_Start": 2126.5800000000004,
      "Time_End": 2127.5800000000004,
      "Text": " into the target machine."
    },
    {
      "Time_Start": 2127.5800000000004,
      "Time_End": 2131.42,
      "Text": " Most of the time these are going to require administrative rights over the target, just"
    },
    {
      "Time_Start": 2131.42,
      "Time_End": 2136.3,
      "Text": " like if you were running, just like if you were running SharPound."
    },
    {
      "Time_Start": 2136.3,
      "Time_End": 2142.82,
      "Text": " So one of the nice things about the reg session Boff is that it's going to pull back, trying"
    },
    {
      "Time_Start": 2142.82,
      "Time_End": 2147.5,
      "Text": " to zoom out real quick, the reg session Boff will pull back."
    },
    {
      "Time_Start": 2147.5,
      "Time_End": 2151.34,
      "Text": " It's not as quite as aesthetically pleasing, you know, you don't actually see the username"
    },
    {
      "Time_Start": 2151.34,
      "Time_End": 2155.4,
      "Text": " of who's logged in, but you get the SID, which is a little bit easier for Boff found to parse."
    },
    {
      "Time_Start": 2155.4,
      "Time_End": 2159.82,
      "Text": " So with that, if we're going to try and take this data that we've enumerated so far and"
    },
    {
      "Time_Start": 2159.82,
      "Time_End": 2163.94,
      "Text": " augment our DC only pull, a little bit of data we're going to need from LDAP is just"
    },
    {
      "Time_Start": 2163.94,
      "Time_End": 2165.5800000000004,
      "Text": " the domain SID."
    },
    {
      "Time_Start": 2165.5800000000004,
      "Time_End": 2170.02,
      "Text": " So I'll issue an LDAP query for the domain there, just grab that SID."
    },
    {
      "Time_Start": 2170.02,
      "Time_End": 2173.38,
      "Text": " And then the computer SID to make up those other half of the relationships."
    },
    {
      "Time_Start": 2173.38,
      "Time_End": 2179.86,
      "Text": " So we'll query that computer and we can again, take this over to Boff found and we'll see"
    },
    {
      "Time_Start": 2179.86,
      "Time_End": 2185.5,
      "Text": " only two, only two LDAP objects found in the logs, but we'll see a bunch of local session"
    },
    {
      "Time_Start": 2185.5,
      "Time_End": 2186.5,
      "Text": " or local objects."
    },
    {
      "Time_Start": 2186.5,
      "Time_End": 2189.54,
      "Text": " So we've got like three registry sessions, a couple of group memberships, a couple of"
    },
    {
      "Time_Start": 2189.54,
      "Time_End": 2191.42,
      "Text": " local group memberships."
    },
    {
      "Time_Start": 2191.42,
      "Time_End": 2196.3,
      "Text": " And if we go back to our BHC interface, I think this is just verifying that our current"
    },
    {
      "Time_Start": 2196.3,
      "Time_End": 2200.78,
      "Text": " DC only pull includes no session data, but you can see we've got a pretty clear picture"
    },
    {
      "Time_Start": 2200.78,
      "Time_End": 2202.66,
      "Text": " of the rest of the domain."
    },
    {
      "Time_Start": 2202.66,
      "Time_End": 2207.62,
      "Text": " If we take a look at that one target computer that we were running some of the local object"
    },
    {
      "Time_Start": 2207.62,
      "Time_End": 2211.7,
      "Text": " Boffs against, we don't see any sessions or administrators there."
    },
    {
      "Time_Start": 2212.0200000000004,
      "Time_End": 2219.3,
      "Text": " If we go ahead and upload the output from our most recent run, so we can see we've got"
    },
    {
      "Time_Start": 2219.3,
      "Time_End": 2220.9800000000005,
      "Text": " three sessions now in the database."
    },
    {
      "Time_Start": 2220.9800000000005,
      "Time_End": 2223.7000000000003,
      "Text": " There's three SIDs that we, that came back in the red session Boff."
    },
    {
      "Time_Start": 2223.7000000000003,
      "Time_End": 2230.6600000000003,
      "Text": " If we take a look at one of those, I think we get a little bit of a web error here."
    },
    {
      "Time_Start": 2230.6600000000003,
      "Time_End": 2234.82,
      "Text": " But taking a look at that SQL service account that we know was logged into that target machine,"
    },
    {
      "Time_Start": 2234.82,
      "Time_End": 2239.1400000000003,
      "Text": " we can see, you know, we've successfully added this data to our DC only pull."
    },
    {
      "Time_Start": 2239.14,
      "Time_End": 2243.18,
      "Text": " So we've got a hash session edge there, and we can take a look at that computer object"
    },
    {
      "Time_Start": 2243.18,
      "Time_End": 2246.98,
      "Text": " and kind of rotate that around, see, you know, we've got three sessions, and we've also got"
    },
    {
      "Time_Start": 2246.98,
      "Time_End": 2253.02,
      "Text": " some local admins to this box, two explicit, five nested via the domain admins group."
    },
    {
      "Time_Start": 2253.02,
      "Time_End": 2254.62,
      "Text": " So this is another possibility as well."
    },
    {
      "Time_Start": 2254.62,
      "Time_End": 2258.94,
      "Text": " You know, you could, again, like I said before, you could run this with your normal LDAP search"
    },
    {
      "Time_Start": 2258.94,
      "Time_End": 2267.66,
      "Text": " enumeration routine, but also potentially supplement a DC only pull."
    },
    {
      "Time_Start": 2267.66,
      "Time_End": 2269.7,
      "Text": " So that's it for the demos."
    },
    {
      "Time_Start": 2269.7,
      "Time_End": 2274.98,
      "Text": " A little bit about, you know, the current state of the tool as well as some future ideas."
    },
    {
      "Time_Start": 2274.98,
      "Time_End": 2277.42,
      "Text": " So what all can we parse with Boff found?"
    },
    {
      "Time_Start": 2277.42,
      "Time_End": 2283.06,
      "Text": " So it's kind of categorized into session and local group objects and LDAP objects."
    },
    {
      "Time_Start": 2283.06,
      "Time_End": 2287.22,
      "Text": " So on the LDAP side, we've been talking exclusively about the LDAP search Boff."
    },
    {
      "Time_Start": 2287.22,
      "Time_End": 2292.22,
      "Text": " Obviously, there's a lot of tools that can make LDAP queries and spit out raw text data."
    },
    {
      "Time_Start": 2292.22,
      "Time_End": 2295.94,
      "Text": " A couple that are very similar to the LDAP search Boff are going to be PyLDAP search"
    },
    {
      "Time_Start": 2295.98,
      "Time_End": 2298.06,
      "Text": " and Bruteroot tells LDAP Sentinel."
    },
    {
      "Time_Start": 2298.06,
      "Time_End": 2300.18,
      "Text": " Both of these can be parsed by Boff found."
    },
    {
      "Time_Start": 2300.18,
      "Time_End": 2301.9,
      "Text": " A really interesting one is Aced."
    },
    {
      "Time_Start": 2301.9,
      "Time_End": 2304.42,
      "Text": " This is a tool by Garrett Foster."
    },
    {
      "Time_Start": 2304.42,
      "Time_End": 2308.06,
      "Text": " There's a link to it on the final reference slide if you're interested, but it provides"
    },
    {
      "Time_Start": 2308.06,
      "Time_End": 2313.9,
      "Text": " kind of like an interactive command line to perform that ACL attack path mapping,"
    },
    {
      "Time_Start": 2313.9,
      "Time_End": 2315.58,
      "Text": " like walking back from a target object."
    },
    {
      "Time_Start": 2315.58,
      "Time_End": 2320.78,
      "Text": " So in your interactive show, you can input like a same account name of an object to query,"
    },
    {
      "Time_Start": 2320.78,
      "Time_End": 2327.0600000000004,
      "Text": " get a quick listing of the inbound controllers and which ACL or which right they have granted"
    },
    {
      "Time_Start": 2327.0600000000004,
      "Time_End": 2331.5800000000004,
      "Text": " over your target object, and then quickly issue queries for those objects and kind of"
    },
    {
      "Time_Start": 2331.5800000000004,
      "Time_End": 2333.6600000000003,
      "Text": " walk those back."
    },
    {
      "Time_Start": 2333.6600000000003,
      "Time_End": 2338.86,
      "Text": " And this outputs the same logs as PyLDAP search, so you can scoop those up with Boff found"
    },
    {
      "Time_Start": 2338.86,
      "Time_End": 2345.0600000000004,
      "Text": " and turn them into something that you can view in the Bloodhound community edition interface."
    },
    {
      "Time_Start": 2345.0600000000004,
      "Time_End": 2348.82,
      "Text": " For session and local group objects, this is a newer feature that we've added support"
    },
    {
      "Time_Start": 2348.82,
      "Time_End": 2352.9,
      "Text": " for, so this is only going to be supported with the Boffs there that we already talked"
    },
    {
      "Time_Start": 2352.9,
      "Time_End": 2357.6200000000003,
      "Text": " about a little bit ago."
    },
    {
      "Time_Start": 2357.6200000000003,
      "Time_End": 2363.78,
      "Text": " So some pitfalls of Boff found and kind of this approach, kind of hand in hand, niche"
    },
    {
      "Time_Start": 2363.78,
      "Time_End": 2365.7400000000002,
      "Text": " use case and time and labor intensity."
    },
    {
      "Time_Start": 2365.7400000000002,
      "Time_End": 2371.6200000000003,
      "Text": " So there's going to be a lot of scenarios in which you don't have to worry about stealth"
    },
    {
      "Time_Start": 2371.6200000000003,
      "Time_End": 2373.2200000000003,
      "Text": " when performing LDAP enumeration."
    },
    {
      "Time_Start": 2373.2200000000003,
      "Time_End": 2376.2200000000003,
      "Text": " If you're doing a pen test, this is probably something you don't have to worry about."
    },
    {
      "Time_Start": 2376.2200000000003,
      "Time_End": 2379.9800000000005,
      "Text": " Even on a red team, you're oftentimes not privy to what type of detections the blue"
    },
    {
      "Time_Start": 2379.9800000000005,
      "Time_End": 2384.9,
      "Text": " team has in place for LDAP reconnaissance, so this may be something that you want to"
    },
    {
      "Time_Start": 2384.9,
      "Time_End": 2390.26,
      "Text": " use at first, taking precaution, but later in the engagement, you might have to take"
    },
    {
      "Time_Start": 2390.26,
      "Time_End": 2391.26,
      "Text": " some more risks."
    },
    {
      "Time_Start": 2391.26,
      "Time_End": 2398.78,
      "Text": " This is obviously a lot more manually intensive than just running SharPound and looking at"
    },
    {
      "Time_Start": 2398.78,
      "Time_End": 2400.78,
      "Text": " your attack paths in Bloodhound."
    },
    {
      "Time_Start": 2400.78,
      "Time_End": 2403.0200000000004,
      "Text": " And then on the more technical side, memory consumption."
    },
    {
      "Time_Start": 2403.02,
      "Time_End": 2409.78,
      "Text": " So Adam made reference to a fairly large LDAP search Boff pull that pulled back tens"
    },
    {
      "Time_Start": 2409.78,
      "Time_End": 2412.1,
      "Text": " or even hundreds of thousands of objects."
    },
    {
      "Time_Start": 2412.1,
      "Time_End": 2417.02,
      "Text": " Right now, Boff found does all this processing, kind of like the correlation between objects"
    },
    {
      "Time_Start": 2417.02,
      "Time_End": 2418.02,
      "Text": " and memory."
    },
    {
      "Time_Start": 2418.02,
      "Time_End": 2423.78,
      "Text": " And so if you have a lot, a lot of LDAP objects in your logs, you can either cause Python"
    },
    {
      "Time_Start": 2423.78,
      "Time_End": 2429.3,
      "Text": " to run out of memory, just kind of crash, or you'll end up with one of those pulls that"
    },
    {
      "Time_Start": 2429.3,
      "Time_End": 2436.2200000000003,
      "Text": " takes 35 hours to process."
    },
    {
      "Time_Start": 2436.2200000000003,
      "Time_End": 2438.02,
      "Text": " Some stuff that we'd like to do in the future."
    },
    {
      "Time_Start": 2438.02,
      "Time_End": 2442.0800000000004,
      "Text": " So Andy and Jonas had a great talk today about some of the new Active Directory certificate"
    },
    {
      "Time_Start": 2442.0800000000004,
      "Time_End": 2446.38,
      "Text": " services data and attack path mapping that has been added into the newest version of"
    },
    {
      "Time_Start": 2446.38,
      "Time_End": 2448.42,
      "Text": " Bloodhound."
    },
    {
      "Time_Start": 2448.42,
      "Time_End": 2453.9,
      "Text": " Right now, Boff found does not support ADCS data parsing and edges."
    },
    {
      "Time_Start": 2453.9,
      "Time_End": 2456.98,
      "Text": " Got a couple new object types to map there, but this is something that we'd like to add"
    },
    {
      "Time_Start": 2456.98,
      "Time_End": 2459.34,
      "Text": " in the future."
    },
    {
      "Time_Start": 2459.34,
      "Time_End": 2463.42,
      "Text": " Kind of along that memory consumption pitfall, we'd like to reduce this in the future by"
    },
    {
      "Time_Start": 2463.42,
      "Time_End": 2468.38,
      "Text": " using either like a temporary on-disk database or potentially direct interaction with the"
    },
    {
      "Time_Start": 2468.38,
      "Time_End": 2469.94,
      "Text": " BHCE API."
    },
    {
      "Time_Start": 2469.94,
      "Time_End": 2472.86,
      "Text": " This opens up some interesting possibilities."
    },
    {
      "Time_Start": 2472.86,
      "Time_End": 2476.98,
      "Text": " We already have code for near real-time log monitoring."
    },
    {
      "Time_Start": 2476.98,
      "Time_End": 2482.18,
      "Text": " So as you're querying objects via your C2, you're populating those beacon logs, just"
    },
    {
      "Time_Start": 2482.18,
      "Time_End": 2485.66,
      "Text": " having those scooped up every five minutes, every 10 minutes."
    },
    {
      "Time_Start": 2485.66,
      "Time_End": 2489.02,
      "Text": " And if we were able to get this integrated with the BHCE API, this could allow for some"
    },
    {
      "Time_Start": 2489.02,
      "Time_End": 2494.24,
      "Text": " pretty seamless transition between you just making a query in your C2 and then just popping"
    },
    {
      "Time_Start": 2494.24,
      "Time_End": 2502.8599999999997,
      "Text": " over to your BHCE web interface and already having that data and those relationships populated."
    },
    {
      "Time_Start": 2502.8599999999997,
      "Time_End": 2504.2999999999997,
      "Text": " And that is all we have."
    },
    {
      "Time_Start": 2504.2999999999997,
      "Time_End": 2507.62,
      "Text": " There's a reference slide here with a lot of the tools that we talked about throughout"
    },
    {
      "Time_Start": 2507.62,
      "Time_End": 2508.62,
      "Text": " this presentation."
    },
    {
      "Time_Start": 2508.62,
      "Time_End": 2511.94,
      "Text": " Too many to just put at the bottom of footnotes, so if you're interested in anything that we"
    },
    {
      "Time_Start": 2511.94,
      "Time_End": 2514.8599999999997,
      "Text": " mentioned, links should be here."
    },
    {
      "Time_Start": 2514.86,
      "Time_End": 2519.46,
      "Text": " And with that, thank you for coming, and if you have any questions, we'd be happy to"
    },
    {
      "Time_Start": 2519.46,
      "Time_End": 2520.46,
      "Text": " answer."
    },
    {
      "Time_Start": 2520.46,
      "Time_End": 2521.46,
      "Text": " Sure."
    },
    {
      "Time_Start": 2521.46,
      "Time_End": 2532.46,
      "Text": " So I was really happy to hear you talk about, like, I didn't even know Bloodhound, Unity"
    },
    {
      "Time_Start": 2532.46,
      "Time_End": 2533.46,
      "Text": " Edition, had an API."
    },
    {
      "Time_Start": 2533.46,
      "Time_End": 2534.46,
      "Text": " So that was news to me, right?"
    },
    {
      "Time_Start": 2534.46,
      "Time_End": 2535.46,
      "Text": " So from my understanding, it sounds like we could upload data, like, whether your Python"
    },
    {
      "Time_Start": 2535.46,
      "Time_End": 2536.46,
      "Text": " script is working."
    },
    {
      "Time_Start": 2536.46,
      "Time_End": 2537.46,
      "Text": " We'll update that."
    },
    {
      "Time_Start": 2537.46,
      "Time_End": 2538.46,
      "Text": " You can do that, like, on a time interval, and that would be pretty seamless."
    },
    {
      "Time_Start": 2538.46,
      "Time_End": 2539.46,
      "Text": " But have you put any thought into potentially making, like, an aggressive script?"
    },
    {
      "Time_Start": 2539.46,
      "Time_End": 2563.46,
      "Text": " That on the output of, like, your boss, like, the LDEF boss, it automatically calls your"
    },
    {
      "Time_Start": 2563.46,
      "Time_End": 2564.46,
      "Text": " Python script so that every time you get data back, it automatically and instantly gets"
    },
    {
      "Time_Start": 2564.46,
      "Time_End": 2565.46,
      "Text": " uploaded."
    },
    {
      "Time_Start": 2565.46,
      "Time_End": 2566.46,
      "Text": " Granted, if you have the API with you."
    },
    {
      "Time_Start": 2566.46,
      "Time_End": 2567.46,
      "Text": " Yeah."
    },
    {
      "Time_Start": 2567.46,
      "Time_End": 2575.7400000000002,
      "Text": " So a question there is, with the addition of the API to Bloodhound Community Edition,"
    },
    {
      "Time_Start": 2575.7400000000002,
      "Time_End": 2579.54,
      "Text": " have we considered creating, like, an aggressor script for Beacon so that when we issue an"
    },
    {
      "Time_Start": 2579.54,
      "Time_End": 2583.82,
      "Text": " LDAP query, just the aggressor script will automatically run both on the back end and"
    },
    {
      "Time_Start": 2583.82,
      "Time_End": 2587.9,
      "Text": " can make that, you know, can process that data and upload it straight to your Bloodhound"
    },
    {
      "Time_Start": 2587.9,
      "Time_End": 2590.7400000000002,
      "Text": " web interface?"
    },
    {
      "Time_Start": 2590.7400000000002,
      "Time_End": 2595.94,
      "Text": " We haven't necessarily thought about an aggressor script to do that."
    },
    {
      "Time_Start": 2595.94,
      "Time_End": 2603.1800000000003,
      "Text": " The line of reasoning being that especially as your pool of LDAP objects grows, it can"
    },
    {
      "Time_Start": 2603.1800000000003,
      "Time_End": 2608.4,
      "Text": " be very time consuming to run that ACL parsing over and over and over again."
    },
    {
      "Time_Start": 2608.4,
      "Time_End": 2612.98,
      "Text": " And so while it would be pretty seamless and it shouldn't be an issue with a smaller number"
    },
    {
      "Time_Start": 2612.98,
      "Time_End": 2618.3,
      "Text": " of LDAP objects, it just doesn't scale very well to be repeatedly doing that parsing."
    },
    {
      "Time_Start": 2618.3,
      "Time_End": 2629.7000000000003,
      "Text": " So, you know, with the CE API, the ability to, like, granularly pull back data from it"
    },
    {
      "Time_Start": 2629.7000000000003,
      "Time_End": 2634.38,
      "Text": " so that you kind of build those relationships potentially still in memory and then upload"
    },
    {
      "Time_Start": 2634.38,
      "Time_End": 2638.0600000000004,
      "Text": " that JSON, that's kind of more of the route I think we're, you know, we'd potentially"
    },
    {
      "Time_Start": 2638.0600000000004,
      "Time_End": 2639.0600000000004,
      "Text": " take."
    },
    {
      "Time_Start": 2639.0600000000004,
      "Time_End": 2640.0600000000004,
      "Text": " Anything to add there?"
    },
    {
      "Time_Start": 2640.0600000000004,
      "Time_End": 2641.0600000000004,
      "Text": " Okay."
    },
    {
      "Time_Start": 2641.0600000000004,
      "Time_End": 2642.0600000000004,
      "Text": " Thank you."
    },
    {
      "Time_Start": 2642.0600000000004,
      "Time_End": 2643.0600000000004,
      "Text": " Good question."
    },
    {
      "Time_Start": 2643.06,
      "Time_End": 2644.06,
      "Text": " Okay."
    },
    {
      "Time_Start": 2644.06,
      "Time_End": 2645.06,
      "Text": " Well, thank you again."
    },
    {
      "Time_Start": 2645.06,
      "Time_End": 2650.06,
      "Text": " Transcribed by https://otter.ai"
    }
  ]
}