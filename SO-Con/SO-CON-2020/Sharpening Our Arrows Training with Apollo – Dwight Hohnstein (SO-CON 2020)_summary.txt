- **Introduction**: Dwight Hohnstein introduces Apollo, a Windows-based command-and-control framework designed for training and integrated with the Mythic framework.
- **Mythic Framework**: Mythic is an open-source C2 framework with modularity, consisting of profiles, payloads, and taskings. It offers an API, a documentation server, and payload containers for managing agent source code and interactions with Mythic.
- **Apollo's Design**: Apollo is a .NET framework agent, facilitating SpecterOps training classes. It is open-source, with transparent attack techniques, and is designed for training, offering quality-of-life improvements and non-evasive functionality.
- **Notable Features**: Apollo supports third-party tool execution, PowerShell script tracking, automated payload compilation, lateral movement, and SOCKS5 support. It includes operator-specific command history, token impersonation tracking, and verbose command output.
- **Demo**: Hohnstein demonstrates building and deploying Apollo, creating payloads, wrappers, and managing commands. He showcases basic taskings, quality-of-life improvements, unmanaged commands, and lateral movement.
- **Command Execution**: Apollo supports managed and unmanaged commands. Managed commands are executed directly, while unmanaged commands are sent as DLLs, converted to shellcode, and injected into a remote process.
- **Third-Party Assembly and PowerShell Execution**: Apollo can execute third-party .NET assemblies and PowerShell scripts using reflective loading, allowing multiple scripts to be imported simultaneously.
- **Payload Building and Tracking**: Apollo enables fine-grained artifact tracking and offers payload wrappers for lateral movement, privilege escalation, and initial access.
- **Conclusion**: Apollo provides a stable core set of functionality, is open-source, and is highly documented. It covers main components for Red Team operations and will be included in SpecterOps training.